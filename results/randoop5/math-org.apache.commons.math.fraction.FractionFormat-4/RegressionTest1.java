import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat2.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat28);
        java.text.NumberFormat numberFormat30 = null;
        java.text.NumberFormat numberFormat31 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat31);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        fractionFormat32.setNumeratorFormat(numberFormat38);
        java.lang.Object obj40 = numberFormat38.clone();
        java.lang.String str42 = numberFormat38.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat43 = null;
        java.text.NumberFormat numberFormat44 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        java.text.NumberFormat numberFormat47 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        fractionFormat45.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat62);
        java.lang.Object obj75 = fractionFormat74.clone();
        java.lang.Object obj76 = fractionFormat74.clone();
        java.lang.String str78 = fractionFormat74.format((java.lang.Object) (byte) 0);
        org.apache.commons.math.fraction.Fraction fraction80 = fractionFormat74.parse("100");
        java.lang.StringBuffer stringBuffer81 = null;
        java.text.FieldPosition fieldPosition82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer83 = fractionFormat2.format(fraction80, stringBuffer81, fieldPosition82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "10" + "'", str42, "10");
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNull(numberFormat47);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "0 / 1" + "'", str78, "0 / 1");
        org.junit.Assert.assertNotNull(fraction80);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction22 = fractionFormat20.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        fractionFormat20.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat20.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer35 = null;
        java.text.FieldPosition fieldPosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer37 = fractionFormat0.format((java.lang.Object) fractionFormat20, stringBuffer35, fieldPosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat51);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat27.formatToCharacterIterator((java.lang.Object) numberFormat34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = fractionFormat0.parseObject("", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat3.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat39);
        java.lang.Object obj42 = numberFormat39.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj64 = fractionFormat62.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.lang.Object obj71 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat67.getNumeratorFormat();
        fractionFormat66.setDenominatorFormat(numberFormat72);
        java.lang.Object obj74 = numberFormat72.clone();
        fractionFormat55.setNumeratorFormat(numberFormat72);
        java.lang.Object obj76 = numberFormat72.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat72);
        java.text.NumberFormat numberFormat78 = fractionFormat77.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction80 = fractionFormat77.parse("10 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = fractionFormat44.format((java.lang.Object) fractionFormat77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fraction80);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = fractionFormat2.parseObject("100", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat30);
        java.lang.Object obj39 = numberFormat22.parseObject("100");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 100L + "'", obj39, 100L);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction46 = fractionFormat44.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat56);
        java.text.NumberFormat numberFormat58 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat58);
        fractionFormat0.setDenominatorFormat(numberFormat43);
        java.lang.Class<?> wildcardClass61 = numberFormat43.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat18 = null;
        java.text.NumberFormat numberFormat19 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat19);
        java.lang.Object obj21 = fractionFormat20.clone();
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        fractionFormat24.setNumeratorFormat(numberFormat30);
        java.lang.Object obj32 = numberFormat30.clone();
        java.lang.String str34 = numberFormat30.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat38);
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.lang.Object obj46 = numberFormat30.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = fractionFormat0.format((java.lang.Object) numberFormat30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "10" + "'", str34, "10");
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction5 = fractionFormat0.parse("10", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        java.text.NumberFormat numberFormat30 = null;
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat44);
        java.text.NumberFormat numberFormat47 = null;
        java.text.NumberFormat numberFormat48 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat48);
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        fractionFormat49.setNumeratorFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        fractionFormat57.setDenominatorFormat(numberFormat61);
        fractionFormat29.setDenominatorFormat(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat2.parse("10");
        java.lang.StringBuffer stringBuffer42 = null;
        java.text.FieldPosition fieldPosition43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer44 = fractionFormat2.format((java.lang.Object) (-1L), stringBuffer42, fieldPosition43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(fraction40);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        java.lang.Object obj16 = numberFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.lang.Object obj29 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat40);
        fractionFormat19.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.lang.Object obj59 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat55.getNumeratorFormat();
        fractionFormat54.setDenominatorFormat(numberFormat60);
        java.lang.Object obj62 = numberFormat60.clone();
        fractionFormat19.setDenominatorFormat(numberFormat60);
        java.text.NumberFormat numberFormat64 = fractionFormat19.getNumeratorFormat();
        java.lang.Object obj65 = numberFormat64.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator66 = numberFormat13.formatToCharacterIterator(obj65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0L + "'", obj16, 0L);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction9 = fractionFormat2.parse("10 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat28.getNumeratorFormat();
        fractionFormat24.setDenominatorFormat(numberFormat35);
        java.lang.Object obj37 = fractionFormat24.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = numberFormat5.format((java.lang.Object) fractionFormat24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat5.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        fractionFormat5.setDenominatorFormat(numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat19);
        java.text.ParsePosition parsePosition22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction23 = fractionFormat20.parse("-1 / 1", parsePosition22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        fractionFormat30.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat47 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.lang.Object obj55 = numberFormat54.clone();
        java.lang.StringBuffer stringBuffer56 = null;
        java.text.FieldPosition fieldPosition57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer58 = fractionFormat30.format(obj55, stringBuffer56, fieldPosition57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = numberFormat7.format((java.lang.Object) numberFormat14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.Fraction fraction23 = fractionFormat11.parse("0 / 1");
        java.lang.Class<?> wildcardClass24 = fraction23.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat30);
        fractionFormat21.setDenominatorFormat(numberFormat30);
        java.text.NumberFormat numberFormat33 = null;
        java.text.NumberFormat numberFormat34 = null;
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        fractionFormat36.setNumeratorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat44.getNumeratorFormat();
        fractionFormat36.setNumeratorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat47);
        java.text.NumberFormat numberFormat50 = null;
        java.text.NumberFormat numberFormat51 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        fractionFormat52.setNumeratorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator62 = numberFormat30.formatToCharacterIterator((java.lang.Object) fractionFormat61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45);
        java.text.NumberFormat numberFormat47 = null;
        java.text.NumberFormat numberFormat48 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat48);
        java.lang.Object obj50 = fractionFormat49.clone();
        java.lang.Object obj51 = fractionFormat49.clone();
        java.text.NumberFormat numberFormat52 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = null;
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat55.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        fractionFormat55.setNumeratorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator79 = fractionFormat77.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat80 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat76, numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat72);
        fractionFormat49.setDenominatorFormat(numberFormat62);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = fractionFormat46.format((java.lang.Object) fractionFormat49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(attributedCharacterIterator79);
        org.junit.Assert.assertNotNull(numberFormat80);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat28 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        fractionFormat40.setNumeratorFormat(numberFormat44);
        fractionFormat2.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        fractionFormat32.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat38);
        java.lang.Object obj41 = numberFormat38.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57);
        fractionFormat50.setNumeratorFormat(numberFormat57);
        java.text.NumberFormat numberFormat61 = null;
        java.text.NumberFormat numberFormat62 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat62);
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = numberFormat71.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat63.setDenominatorFormat(numberFormat71);
        java.lang.Object obj80 = numberFormat71.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = numberFormat38.format((java.lang.Object) numberFormat71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNull(numberFormat64);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        java.lang.Object obj11 = numberFormat8.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.lang.Object obj46 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        fractionFormat52.setDenominatorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat58);
        fractionFormat33.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator63 = numberFormat8.formatToCharacterIterator((java.lang.Object) fractionFormat62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        java.lang.Object obj29 = numberFormat22.clone();
        java.lang.Object obj31 = numberFormat22.parseObject("-1 / 1");
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = numberFormat22.format((java.lang.Object) numberFormat39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (-1L) + "'", obj31, (-1L));
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat39);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat38);
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = numberFormat38.formatToCharacterIterator((java.lang.Object) 100L);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = fractionFormat0.format((java.lang.Object) numberFormat38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat23);
        fractionFormat0.setNumeratorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat26.setNumeratorFormat(numberFormat43);
        java.text.NumberFormat numberFormat47 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        fractionFormat26.setNumeratorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.lang.Object obj61 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat57.getNumeratorFormat();
        java.text.NumberFormat numberFormat63 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63);
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        java.lang.Object obj71 = numberFormat70.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat70);
        java.text.ParsePosition parsePosition75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = fractionFormat73.parseObject("10 / 1", parsePosition75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        fractionFormat10.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        fractionFormat10.setNumeratorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat21);
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat32);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat2.formatToCharacterIterator((java.lang.Object) numberFormat32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        fractionFormat7.setNumeratorFormat(numberFormat14);
        java.lang.Object obj18 = fractionFormat7.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction21 = fractionFormat19.parse("0 / 1");
        java.lang.String str22 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction21);
        java.lang.String str23 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction21);
        java.lang.String str24 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction21);
        java.lang.String str25 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction21);
        java.lang.String str26 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction21);
        java.lang.String str27 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction21);
        java.lang.String str28 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction21);
        java.lang.String str29 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction21);
        java.lang.StringBuffer stringBuffer30 = null;
        java.text.FieldPosition fieldPosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer32 = fractionFormat7.format(fraction21, stringBuffer30, fieldPosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0 / 1" + "'", str22, "0 / 1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "0 / 1" + "'", str23, "0 / 1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "0 / 1" + "'", str24, "0 / 1");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0 / 1" + "'", str25, "0 / 1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0 / 1" + "'", str26, "0 / 1");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "0 / 1" + "'", str27, "0 / 1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "0 / 1" + "'", str28, "0 / 1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "0 / 1" + "'", str29, "0 / 1");
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        java.lang.Object obj19 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        fractionFormat22.setNumeratorFormat(numberFormat28);
        java.lang.Object obj30 = numberFormat28.clone();
        java.lang.String str32 = numberFormat28.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat33 = null;
        java.text.NumberFormat numberFormat34 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat34);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        fractionFormat35.setNumeratorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat52);
        java.lang.Object obj65 = fractionFormat64.clone();
        java.lang.Object obj66 = fractionFormat64.clone();
        java.lang.String str68 = fractionFormat64.format((java.lang.Object) (byte) 0);
        org.apache.commons.math.fraction.Fraction fraction70 = fractionFormat64.parse("100");
        java.lang.String str71 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction70);
        java.lang.StringBuffer stringBuffer72 = null;
        java.text.FieldPosition fieldPosition73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer74 = fractionFormat0.format((java.lang.Object) str71, stringBuffer72, fieldPosition73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "10" + "'", str32, "10");
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "0 / 1" + "'", str68, "0 / 1");
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "100 / 1" + "'", str71, "100 / 1");
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction22 = fractionFormat20.parse("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat20.getNumeratorFormat();
        java.lang.Object obj25 = numberFormat23.parseObject("10 / 1");
        java.lang.String str26 = numberFormat10.format(obj25);
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        fractionFormat29.setNumeratorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = fractionFormat38.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "10" + "'", str26, "10");
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = fractionFormat35.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction29 = fractionFormat0.parse("100 / 1", parsePosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = null;
        java.text.NumberFormat numberFormat34 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat34);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        java.lang.Object obj45 = numberFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat56);
        fractionFormat35.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat71.getNumeratorFormat();
        fractionFormat70.setDenominatorFormat(numberFormat76);
        java.lang.Object obj78 = numberFormat76.clone();
        fractionFormat35.setDenominatorFormat(numberFormat76);
        java.lang.Object obj80 = numberFormat76.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat76);
        org.apache.commons.math.fraction.Fraction fraction83 = fractionFormat81.parse("-1 / 1");
        java.text.ParsePosition parsePosition85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction86 = fractionFormat81.parse("", parsePosition85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(fraction83);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat55);
        java.text.NumberFormat numberFormat58 = null;
        java.text.NumberFormat numberFormat59 = null;
        java.text.NumberFormat numberFormat60 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat60);
        java.lang.Object obj62 = fractionFormat61.clone();
        java.text.NumberFormat numberFormat63 = null;
        java.text.NumberFormat numberFormat64 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat64);
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        java.text.NumberFormat numberFormat67 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        fractionFormat65.setNumeratorFormat(numberFormat71);
        java.lang.Object obj73 = numberFormat71.clone();
        java.lang.String str75 = numberFormat71.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = fractionFormat76.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat79 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator82 = fractionFormat80.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat83 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79, numberFormat83);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat79);
        fractionFormat61.setDenominatorFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat58);
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat35.setDenominatorFormat(numberFormat58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNull(numberFormat66);
        org.junit.Assert.assertNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "10" + "'", str75, "10");
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(attributedCharacterIterator82);
        org.junit.Assert.assertNotNull(numberFormat83);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction35 = fractionFormat32.parse("10 / 1");
        java.lang.String str36 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction35);
        java.lang.String str37 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction35);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "10 / 1" + "'", str36, "10 / 1");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "10 / 1" + "'", str37, "10 / 1");
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        fractionFormat7.setDenominatorFormat(numberFormat39);
        fractionFormat2.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.lang.Object obj68 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat64.getNumeratorFormat();
        fractionFormat63.setDenominatorFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = fractionFormat79.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat82 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78, numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator86 = fractionFormat84.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat87 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator90 = fractionFormat88.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat91 = fractionFormat88.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat87, numberFormat91);
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78, numberFormat91);
        java.text.NumberFormat numberFormat94 = fractionFormat93.getDenominatorFormat();
        java.lang.Object obj96 = numberFormat94.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat97 = new org.apache.commons.math.fraction.FractionFormat(numberFormat94);
        org.apache.commons.math.fraction.FractionFormat fractionFormat98 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat94);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator99 = numberFormat39.formatToCharacterIterator((java.lang.Object) numberFormat94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(attributedCharacterIterator86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(fractionFormat88);
        org.junit.Assert.assertNotNull(attributedCharacterIterator90);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(numberFormat94);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + (-1L) + "'", obj96, (-1L));
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        java.lang.Object obj49 = numberFormat42.clone();
        java.lang.StringBuffer stringBuffer50 = null;
        java.text.FieldPosition fieldPosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer52 = fractionFormat34.format((java.lang.Object) numberFormat42, stringBuffer50, fieldPosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        fractionFormat11.setNumeratorFormat(numberFormat22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction26 = fractionFormat11.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat17.parse("10 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator20 = numberFormat5.formatToCharacterIterator((java.lang.Object) fractionFormat17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fraction19);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.Fraction fraction9 = null;
        java.lang.StringBuffer stringBuffer10 = null;
        java.text.FieldPosition fieldPosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer12 = fractionFormat0.format(fraction9, stringBuffer10, fieldPosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) 1.0d);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34);
        fractionFormat25.setDenominatorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        java.text.ParsePosition parsePosition39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = fractionFormat2.parseObject("10 / 1", parsePosition39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) 1.0d);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40);
        fractionFormat31.setDenominatorFormat(numberFormat40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = numberFormat22.format((java.lang.Object) fractionFormat31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat48.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat70.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat73 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat73);
        fractionFormat65.setNumeratorFormat(numberFormat69);
        fractionFormat45.setDenominatorFormat(numberFormat69);
        java.text.ParsePosition parsePosition78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction79 = fractionFormat45.parse("100", parsePosition78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(numberFormat73);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        fractionFormat7.setNumeratorFormat(numberFormat14);
        java.text.ParsePosition parsePosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = fractionFormat7.parseObject("0 / 1", parsePosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.lang.Object obj29 = fractionFormat28.clone();
        java.lang.StringBuffer stringBuffer30 = null;
        java.text.FieldPosition fieldPosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer32 = fractionFormat0.format((java.lang.Object) fractionFormat28, stringBuffer30, fieldPosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setDenominatorFormat(numberFormat43);
        java.lang.Object obj47 = fractionFormat2.clone();
        java.text.ParsePosition parsePosition49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = fractionFormat2.parseObject("100 / 1", parsePosition49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat18);
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat29);
        java.text.ParsePosition parsePosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = fractionFormat34.parseObject("", parsePosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat0.parse("", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        fractionFormat32.setDenominatorFormat(numberFormat38);
        java.lang.Object obj40 = numberFormat38.clone();
        fractionFormat21.setNumeratorFormat(numberFormat38);
        java.lang.Object obj42 = numberFormat38.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat38);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction46 = fractionFormat43.parse("10 / 1");
        java.lang.StringBuffer stringBuffer47 = null;
        java.text.FieldPosition fieldPosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer49 = fractionFormat10.format((java.lang.Object) fraction46, stringBuffer47, fieldPosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fraction46);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30);
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat33);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat34.parse("0 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat30);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        java.text.NumberFormat numberFormat46 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat65.getNumeratorFormat();
        fractionFormat64.setDenominatorFormat(numberFormat70);
        java.lang.Object obj72 = numberFormat70.clone();
        fractionFormat53.setNumeratorFormat(numberFormat70);
        java.lang.Object obj74 = numberFormat70.clone();
        java.lang.Object obj75 = numberFormat70.clone();
        fractionFormat48.setDenominatorFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70);
        fractionFormat47.setNumeratorFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat70);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator80 = numberFormat45.formatToCharacterIterator((java.lang.Object) fractionFormat79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        fractionFormat7.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        fractionFormat2.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction48 = fractionFormat46.parse("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat46.getNumeratorFormat();
        java.lang.Object obj51 = numberFormat49.parseObject("10 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = numberFormat39.format((java.lang.Object) "10 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10L + "'", obj51, 10L);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34);
        java.text.ParsePosition parsePosition41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = fractionFormat39.parseObject("", parsePosition41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.lang.Object obj30 = fractionFormat29.clone();
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        java.lang.String str43 = numberFormat39.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat47);
        fractionFormat29.setDenominatorFormat(numberFormat39);
        fractionFormat26.setDenominatorFormat(numberFormat39);
        fractionFormat2.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat57 = null;
        java.text.NumberFormat numberFormat58 = null;
        java.text.NumberFormat numberFormat59 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat59);
        java.text.NumberFormat numberFormat61 = fractionFormat60.getDenominatorFormat();
        java.text.NumberFormat numberFormat62 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        fractionFormat60.setNumeratorFormat(numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat68.getNumeratorFormat();
        fractionFormat60.setNumeratorFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat71);
        java.text.NumberFormat numberFormat74 = null;
        java.text.NumberFormat numberFormat75 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74, numberFormat75);
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = fractionFormat79.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat82 = fractionFormat79.getDenominatorFormat();
        fractionFormat76.setNumeratorFormat(numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator87 = fractionFormat85.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat88 = fractionFormat85.getDenominatorFormat();
        fractionFormat84.setDenominatorFormat(numberFormat88);
        fractionFormat2.setNumeratorFormat(numberFormat88);
        java.text.ParsePosition parsePosition92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj93 = fractionFormat2.parseObject("", parsePosition92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "10" + "'", str43, "10");
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNull(numberFormat61);
        org.junit.Assert.assertNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNull(numberFormat77);
        org.junit.Assert.assertNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(attributedCharacterIterator87);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        fractionFormat7.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat18 = null;
        java.text.NumberFormat numberFormat19 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = numberFormat28.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat20.setDenominatorFormat(numberFormat28);
        java.lang.Object obj37 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat28);
        java.text.NumberFormat numberFormat39 = null;
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        fractionFormat41.setNumeratorFormat(numberFormat47);
        java.lang.Object obj49 = numberFormat47.clone();
        java.lang.StringBuffer stringBuffer50 = null;
        java.text.FieldPosition fieldPosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer52 = fractionFormat38.format((java.lang.Object) numberFormat47, stringBuffer50, fieldPosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat51);
        java.lang.Object obj53 = numberFormat51.clone();
        fractionFormat34.setNumeratorFormat(numberFormat51);
        java.lang.Object obj55 = numberFormat51.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat51);
        fractionFormat23.setDenominatorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat70.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat73 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77);
        fractionFormat23.setDenominatorFormat(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = fractionFormat11.getNumeratorFormat();
        java.lang.Object obj14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat11.formatToCharacterIterator(obj14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        java.lang.Class<?> wildcardClass46 = numberFormat8.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        fractionFormat28.setNumeratorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21);
        org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat58.parse("100");
        java.text.NumberFormat numberFormat61 = null;
        java.text.NumberFormat numberFormat62 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat62);
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = numberFormat71.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat63.setDenominatorFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71);
        fractionFormat58.setDenominatorFormat(numberFormat71);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator82 = fractionFormat12.formatToCharacterIterator((java.lang.Object) numberFormat71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNull(numberFormat64);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat19 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat20.getNumeratorFormat();
        java.lang.Object obj29 = fractionFormat20.parseObject("-1 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = numberFormat19.format(obj29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat37.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat37.getNumeratorFormat();
        fractionFormat36.setNumeratorFormat(numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat53);
        java.lang.Object obj55 = numberFormat11.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        fractionFormat18.setNumeratorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        java.lang.String str28 = numberFormat24.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        fractionFormat31.setNumeratorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat48);
        java.lang.Object obj61 = fractionFormat60.clone();
        java.lang.Object obj62 = fractionFormat60.clone();
        java.lang.String str64 = fractionFormat60.format((java.lang.Object) (byte) 0);
        org.apache.commons.math.fraction.Fraction fraction66 = fractionFormat60.parse("100");
        java.lang.String str67 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction66);
        java.lang.StringBuffer stringBuffer68 = null;
        java.text.FieldPosition fieldPosition69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer70 = fractionFormat2.format(fraction66, stringBuffer68, fieldPosition69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "10" + "'", str28, "10");
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "0 / 1" + "'", str64, "0 / 1");
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "100 / 1" + "'", str67, "100 / 1");
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat8 = null;
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        fractionFormat10.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        fractionFormat10.setDenominatorFormat(numberFormat23);
        fractionFormat5.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        fractionFormat42.setDenominatorFormat(numberFormat48);
        java.lang.Object obj50 = numberFormat48.clone();
        fractionFormat31.setNumeratorFormat(numberFormat48);
        java.lang.Object obj52 = numberFormat48.clone();
        java.lang.Object obj53 = numberFormat48.clone();
        fractionFormat26.setDenominatorFormat(numberFormat48);
        java.lang.Object obj55 = numberFormat48.clone();
        fractionFormat5.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        java.text.NumberFormat numberFormat77 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat77);
        java.text.NumberFormat numberFormat79 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj82 = fractionFormat80.parseObject("0 / 1");
        java.lang.Object obj84 = fractionFormat80.parseObject("0 / 1");
        java.text.NumberFormat numberFormat85 = fractionFormat80.getNumeratorFormat();
        java.text.NumberFormat numberFormat86 = fractionFormat80.getNumeratorFormat();
        java.text.NumberFormat numberFormat87 = fractionFormat80.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79, numberFormat87);
        fractionFormat78.setDenominatorFormat(numberFormat87);
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat87);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str91 = fractionFormat0.format((java.lang.Object) numberFormat87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat18);
        fractionFormat2.setDenominatorFormat(numberFormat18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = fractionFormat2.parseObject("10 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.ParsePosition parsePosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = fractionFormat13.parseObject("100", parsePosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        fractionFormat7.setNumeratorFormat(numberFormat24);
        java.lang.Object obj28 = numberFormat24.clone();
        java.lang.Object obj29 = numberFormat24.clone();
        fractionFormat2.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        fractionFormat1.setNumeratorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat24);
        java.lang.Object obj40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = fractionFormat39.format(obj40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = numberFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.lang.StringBuffer stringBuffer21 = null;
        java.text.FieldPosition fieldPosition22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer23 = fractionFormat10.format((java.lang.Object) attributedCharacterIterator20, stringBuffer21, fieldPosition22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        fractionFormat21.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat55);
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat66);
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = numberFormat66.formatToCharacterIterator((java.lang.Object) 100L);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat78 = fractionFormat77.getNumeratorFormat();
        java.text.NumberFormat numberFormat79 = fractionFormat77.getDenominatorFormat();
        java.lang.StringBuffer stringBuffer80 = null;
        java.text.FieldPosition fieldPosition81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer82 = fractionFormat76.format((java.lang.Object) numberFormat79, stringBuffer80, fieldPosition81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat23.clone();
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        fractionFormat29.setNumeratorFormat(numberFormat36);
        java.lang.Object obj43 = fractionFormat29.clone();
        org.apache.commons.math.fraction.Fraction fraction45 = fractionFormat29.parse("10");
        java.lang.StringBuffer stringBuffer46 = null;
        java.text.FieldPosition fieldPosition47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer48 = fractionFormat23.format(fraction45, stringBuffer46, fieldPosition47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(fraction45);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat0.getDenominatorFormat();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = fractionFormat0.parseObject("0 / 1", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        fractionFormat2.setNumeratorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.lang.String str25 = numberFormat19.format((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        fractionFormat28.setNumeratorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.lang.Object obj59 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat55.getNumeratorFormat();
        fractionFormat54.setDenominatorFormat(numberFormat60);
        java.lang.Object obj62 = numberFormat60.clone();
        fractionFormat43.setNumeratorFormat(numberFormat60);
        fractionFormat28.setDenominatorFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator66 = numberFormat19.formatToCharacterIterator((java.lang.Object) numberFormat60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "100" + "'", str25, "100");
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        fractionFormat5.setNumeratorFormat(numberFormat11);
        java.lang.Object obj13 = numberFormat11.clone();
        java.lang.String str15 = numberFormat11.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        fractionFormat18.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat35);
        java.lang.Object obj48 = fractionFormat47.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        fractionFormat47.setDenominatorFormat(numberFormat55);
        fractionFormat2.setNumeratorFormat(numberFormat55);
        java.text.NumberFormat numberFormat60 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat61 = null;
        java.text.NumberFormat numberFormat62 = null;
        java.text.NumberFormat numberFormat63 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        java.text.NumberFormat numberFormat66 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        fractionFormat64.setNumeratorFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat72.getNumeratorFormat();
        fractionFormat64.setNumeratorFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat75);
        java.text.NumberFormat numberFormat78 = null;
        java.text.NumberFormat numberFormat79 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78, numberFormat79);
        java.text.NumberFormat numberFormat81 = fractionFormat80.getDenominatorFormat();
        java.text.NumberFormat numberFormat82 = fractionFormat80.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator85 = fractionFormat83.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat86 = fractionFormat83.getDenominatorFormat();
        fractionFormat80.setNumeratorFormat(numberFormat86);
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat86);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat86);
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat86);
        java.lang.StringBuffer stringBuffer91 = null;
        java.text.FieldPosition fieldPosition92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer93 = fractionFormat2.format((java.lang.Object) numberFormat86, stringBuffer91, fieldPosition92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "10" + "'", str15, "10");
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNull(numberFormat60);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNull(numberFormat81);
        org.junit.Assert.assertNull(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(attributedCharacterIterator85);
        org.junit.Assert.assertNotNull(numberFormat86);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.lang.Object obj10 = fractionFormat8.clone();
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        java.lang.Class<?> wildcardClass12 = fractionFormat8.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat36);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        fractionFormat38.setNumeratorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        java.text.NumberFormat numberFormat59 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat72);
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator82 = fractionFormat80.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat83 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator86 = fractionFormat84.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat87 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat83, numberFormat87);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79, numberFormat83);
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat83);
        java.text.AttributedCharacterIterator attributedCharacterIterator92 = numberFormat83.formatToCharacterIterator((java.lang.Object) 100L);
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat83);
        java.lang.Object obj94 = fractionFormat93.clone();
        java.lang.StringBuffer stringBuffer95 = null;
        java.text.FieldPosition fieldPosition96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer97 = fractionFormat0.format((java.lang.Object) fractionFormat93, stringBuffer95, fieldPosition96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(attributedCharacterIterator82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(attributedCharacterIterator86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(attributedCharacterIterator92);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat9.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        java.text.NumberFormat numberFormat27 = fractionFormat2.getDenominatorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat27);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        fractionFormat7.setNumeratorFormat(numberFormat24);
        java.lang.Object obj28 = numberFormat24.clone();
        java.lang.Object obj29 = numberFormat24.clone();
        fractionFormat2.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        fractionFormat1.setNumeratorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat24);
        java.lang.Class<?> wildcardClass40 = fractionFormat39.getClass();
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        fractionFormat32.setDenominatorFormat(numberFormat38);
        java.lang.Object obj40 = numberFormat38.clone();
        fractionFormat21.setNumeratorFormat(numberFormat38);
        java.lang.Object obj42 = numberFormat38.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat38);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction46 = fractionFormat43.parse("10 / 1");
        java.lang.StringBuffer stringBuffer47 = null;
        java.text.FieldPosition fieldPosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer49 = fractionFormat10.format(fraction46, stringBuffer47, fieldPosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fraction46);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat11);
        java.text.ParsePosition parsePosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = fractionFormat2.parseObject("hi!", parsePosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat2.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = numberFormat7.clone();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        java.text.ParsePosition parsePosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat2.parse("10", parsePosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = fractionFormat10.format((java.lang.Object) numberFormat17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat8.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat31);
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat41);
        fractionFormat32.setDenominatorFormat(numberFormat41);
        java.lang.Object obj44 = numberFormat41.clone();
        fractionFormat8.setNumeratorFormat(numberFormat41);
        java.lang.Class<?> wildcardClass46 = numberFormat41.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat32);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getNumeratorFormat();
        java.lang.Object obj36 = fractionFormat34.clone();
        java.text.ParsePosition parsePosition38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat34.parse("10 / 1", parsePosition38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = numberFormat31.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat23.setDenominatorFormat(numberFormat31);
        java.lang.Object obj40 = numberFormat31.clone();
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.lang.Object obj53 = numberFormat52.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat64);
        fractionFormat43.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        java.lang.Object obj72 = fractionFormat70.parseObject("100");
        java.text.ParsePosition parsePosition74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction75 = fractionFormat70.parse("10 / 1", parsePosition74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        fractionFormat12.setNumeratorFormat(numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat28 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        fractionFormat29.setNumeratorFormat(numberFormat43);
        fractionFormat2.setDenominatorFormat(numberFormat43);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = null;
        java.text.NumberFormat numberFormat39 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        java.lang.Object obj50 = numberFormat49.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat61);
        fractionFormat40.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.Fraction fraction66 = fractionFormat40.parse("10");
        java.lang.String str67 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction66);
        java.lang.String str68 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction66);
        java.lang.StringBuffer stringBuffer69 = null;
        java.text.FieldPosition fieldPosition70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer71 = fractionFormat8.format(fraction66, stringBuffer69, fieldPosition70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "10 / 1" + "'", str67, "10 / 1");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "10 / 1" + "'", str68, "10 / 1");
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat43);
        fractionFormat22.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat31);
        org.apache.commons.math.fraction.Fraction fraction49 = fractionFormat47.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = numberFormat55.formatToCharacterIterator((java.lang.Object) (-1));
        java.lang.Class<?> wildcardClass63 = numberFormat55.getClass();
        java.lang.StringBuffer stringBuffer64 = null;
        java.text.FieldPosition fieldPosition65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer66 = fractionFormat47.format((java.lang.Object) wildcardClass63, stringBuffer64, fieldPosition65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.lang.Object obj39 = numberFormat38.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat50);
        fractionFormat29.setNumeratorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat65.getNumeratorFormat();
        fractionFormat64.setDenominatorFormat(numberFormat70);
        java.lang.Object obj72 = numberFormat70.clone();
        fractionFormat29.setDenominatorFormat(numberFormat70);
        java.text.NumberFormat numberFormat74 = fractionFormat29.getNumeratorFormat();
        java.lang.Object obj75 = numberFormat74.clone();
        java.lang.StringBuffer stringBuffer76 = null;
        java.text.FieldPosition fieldPosition77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer78 = fractionFormat24.format(obj75, stringBuffer76, fieldPosition77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat16);
        java.text.ParsePosition parsePosition24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = fractionFormat22.parseObject("", parsePosition24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        fractionFormat11.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat45);
        java.lang.Object obj48 = numberFormat45.parseObject("0 / 1");
        fractionFormat25.setNumeratorFormat(numberFormat45);
        java.text.NumberFormat numberFormat50 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        java.text.ParsePosition parsePosition54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction55 = fractionFormat52.parse("100 / 1", parsePosition54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0L + "'", obj48, 0L);
        org.junit.Assert.assertNotNull(numberFormat50);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        fractionFormat5.setNumeratorFormat(numberFormat11);
        java.lang.Object obj13 = numberFormat11.clone();
        java.lang.String str15 = numberFormat11.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        fractionFormat18.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat35);
        java.lang.Object obj48 = fractionFormat47.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        fractionFormat47.setDenominatorFormat(numberFormat55);
        fractionFormat2.setNumeratorFormat(numberFormat55);
        java.text.ParsePosition parsePosition61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction62 = fractionFormat2.parse("-1 / 1", parsePosition61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "10" + "'", str15, "10");
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.Fraction fraction4 = fractionFormat0.parse("100");
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.lang.Object obj17 = numberFormat16.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat28);
        fractionFormat7.setNumeratorFormat(numberFormat16);
        org.apache.commons.math.fraction.Fraction fraction33 = fractionFormat7.parse("10");
        java.lang.StringBuffer stringBuffer34 = null;
        java.text.FieldPosition fieldPosition35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer36 = fractionFormat0.format(fraction33, stringBuffer34, fieldPosition35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fraction33);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        fractionFormat22.setDenominatorFormat(numberFormat28);
        java.lang.Object obj30 = numberFormat28.clone();
        fractionFormat11.setNumeratorFormat(numberFormat28);
        java.lang.Object obj32 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat2.setNumeratorFormat(numberFormat28);
        java.text.NumberFormat numberFormat35 = null;
        java.text.NumberFormat numberFormat36 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        fractionFormat37.setNumeratorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat37.getDenominatorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59);
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) 1.0d);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj65 = fractionFormat63.parseObject("0 / 1");
        java.lang.Object obj67 = fractionFormat63.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat63.getNumeratorFormat();
        java.text.NumberFormat numberFormat69 = fractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69);
        fractionFormat60.setDenominatorFormat(numberFormat69);
        fractionFormat37.setDenominatorFormat(numberFormat69);
        fractionFormat2.setNumeratorFormat(numberFormat69);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction75 = fractionFormat2.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat69);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj15 = fractionFormat0.clone();
        java.text.ParsePosition parsePosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction18 = fractionFormat0.parse("0 / 1", parsePosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj15);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat18);
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        fractionFormat38.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        fractionFormat38.setDenominatorFormat(numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60);
        java.text.NumberFormat numberFormat63 = null;
        java.text.NumberFormat numberFormat64 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat64);
        java.lang.Object obj66 = fractionFormat65.clone();
        java.text.NumberFormat numberFormat67 = null;
        java.text.NumberFormat numberFormat68 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        java.text.NumberFormat numberFormat71 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        fractionFormat69.setNumeratorFormat(numberFormat75);
        java.lang.Object obj77 = numberFormat75.clone();
        java.lang.String str79 = numberFormat75.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator82 = fractionFormat80.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat83 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator86 = fractionFormat84.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat87 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat83, numberFormat87);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat83);
        fractionFormat65.setDenominatorFormat(numberFormat75);
        fractionFormat62.setDenominatorFormat(numberFormat75);
        fractionFormat38.setDenominatorFormat(numberFormat75);
        java.text.NumberFormat numberFormat93 = fractionFormat38.getDenominatorFormat();
        java.lang.StringBuffer stringBuffer94 = null;
        java.text.FieldPosition fieldPosition95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer96 = fractionFormat35.format((java.lang.Object) numberFormat93, stringBuffer94, fieldPosition95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNull(numberFormat70);
        org.junit.Assert.assertNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "10" + "'", str79, "10");
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(attributedCharacterIterator82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(attributedCharacterIterator86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat93);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction12 = fractionFormat10.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        fractionFormat34.setNumeratorFormat(numberFormat45);
        fractionFormat11.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat70);
        java.text.NumberFormat numberFormat72 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj75 = fractionFormat73.parseObject("0 / 1");
        java.lang.Object obj77 = fractionFormat73.parseObject("0 / 1");
        java.text.NumberFormat numberFormat78 = fractionFormat73.getNumeratorFormat();
        java.text.NumberFormat numberFormat79 = fractionFormat73.getNumeratorFormat();
        java.text.NumberFormat numberFormat80 = fractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat80);
        fractionFormat71.setDenominatorFormat(numberFormat80);
        java.lang.StringBuffer stringBuffer83 = null;
        java.text.FieldPosition fieldPosition84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer85 = fractionFormat49.format((java.lang.Object) numberFormat80, stringBuffer83, fieldPosition84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45);
        java.text.ParsePosition parsePosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction49 = fractionFormat46.parse("100 / 1", parsePosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.lang.Object obj23 = fractionFormat22.clone();
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat32);
        java.lang.Object obj34 = numberFormat32.clone();
        java.lang.String str36 = numberFormat32.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat40);
        fractionFormat22.setDenominatorFormat(numberFormat32);
        fractionFormat19.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat49 = fractionFormat19.getNumeratorFormat();
        fractionFormat10.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60);
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction64 = fractionFormat61.parse("10");
        java.lang.StringBuffer stringBuffer65 = null;
        java.text.FieldPosition fieldPosition66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer67 = fractionFormat10.format(fraction64, stringBuffer65, fieldPosition66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "10" + "'", str36, "10");
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fraction64);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.lang.Object obj10 = numberFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat21);
        fractionFormat0.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction26 = fractionFormat0.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat37.parse("10");
        java.lang.String str41 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction40);
        java.lang.String str42 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction40);
        java.lang.StringBuffer stringBuffer43 = null;
        java.text.FieldPosition fieldPosition44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer45 = fractionFormat0.format(fraction40, stringBuffer43, fieldPosition44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "10 / 1" + "'", str41, "10 / 1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "10 / 1" + "'", str42, "10 / 1");
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.text.ParsePosition parsePosition27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction28 = fractionFormat24.parse("hi!", parsePosition27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = fractionFormat2.parseObject("0 / 1", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        fractionFormat33.setNumeratorFormat(numberFormat37);
        fractionFormat11.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.lang.Object obj61 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat57.getNumeratorFormat();
        java.text.NumberFormat numberFormat63 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        fractionFormat56.setNumeratorFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj74 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = null;
        java.text.NumberFormat numberFormat78 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat78);
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        java.text.NumberFormat numberFormat81 = fractionFormat79.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator84 = fractionFormat82.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat85 = fractionFormat82.getDenominatorFormat();
        fractionFormat79.setNumeratorFormat(numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj89 = fractionFormat87.parseObject("0 / 1");
        java.text.NumberFormat numberFormat90 = fractionFormat87.getNumeratorFormat();
        fractionFormat79.setNumeratorFormat(numberFormat90);
        java.lang.Object obj93 = numberFormat90.parseObject("0 / 1");
        fractionFormat70.setNumeratorFormat(numberFormat90);
        java.text.NumberFormat numberFormat95 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat96 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat95);
        org.apache.commons.math.fraction.FractionFormat fractionFormat97 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator98 = fractionFormat11.formatToCharacterIterator((java.lang.Object) numberFormat67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNull(numberFormat80);
        org.junit.Assert.assertNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(attributedCharacterIterator84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 0L + "'", obj93, 0L);
        org.junit.Assert.assertNotNull(numberFormat95);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.lang.Object obj18 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat25.getNumeratorFormat();
        fractionFormat24.setDenominatorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat30);
        java.lang.Object obj33 = numberFormat30.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator34 = numberFormat7.formatToCharacterIterator(obj33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat32);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getNumeratorFormat();
        java.lang.Object obj36 = fractionFormat34.clone();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction38 = fractionFormat34.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.text.NumberFormat numberFormat19 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        fractionFormat22.setNumeratorFormat(numberFormat28);
        java.lang.Object obj30 = numberFormat28.clone();
        java.lang.String str32 = numberFormat28.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat33 = null;
        java.text.NumberFormat numberFormat34 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat34);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        fractionFormat35.setNumeratorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.Fraction fraction67 = fractionFormat65.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat68.getNumeratorFormat();
        java.text.NumberFormat numberFormat72 = fractionFormat68.getNumeratorFormat();
        fractionFormat65.setDenominatorFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat75 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.lang.Object obj80 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat81);
        java.text.NumberFormat numberFormat83 = fractionFormat82.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat83);
        fractionFormat65.setDenominatorFormat(numberFormat83);
        java.lang.StringBuffer stringBuffer86 = null;
        java.text.FieldPosition fieldPosition87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer88 = fractionFormat2.format((java.lang.Object) numberFormat83, stringBuffer86, fieldPosition87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "10" + "'", str32, "10");
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat83);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.lang.Object obj10 = fractionFormat8.clone();
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat32);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        fractionFormat34.setNumeratorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj64 = fractionFormat62.parseObject("0 / 1");
        java.lang.Object obj66 = fractionFormat62.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat62.getNumeratorFormat();
        fractionFormat61.setDenominatorFormat(numberFormat67);
        java.lang.Object obj69 = numberFormat67.clone();
        fractionFormat50.setNumeratorFormat(numberFormat67);
        java.text.NumberFormat numberFormat71 = fractionFormat50.getDenominatorFormat();
        fractionFormat49.setNumeratorFormat(numberFormat71);
        java.text.NumberFormat numberFormat73 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat73);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat37.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat37.getNumeratorFormat();
        fractionFormat36.setNumeratorFormat(numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = fractionFormat54.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat53);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat12.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction33 = fractionFormat31.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        fractionFormat31.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43);
        fractionFormat30.setDenominatorFormat(numberFormat43);
        java.text.ParsePosition parsePosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction49 = fractionFormat30.parse("0 / 1", parsePosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat43);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = numberFormat6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        java.lang.Object obj19 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        fractionFormat55.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat61);
        java.lang.Object obj64 = numberFormat61.clone();
        fractionFormat0.setNumeratorFormat(numberFormat61);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction67 = fractionFormat0.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj9 = numberFormat7.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat11.parse("100");
        java.lang.StringBuffer stringBuffer16 = null;
        java.text.FieldPosition fieldPosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer18 = fractionFormat10.format(fraction15, stringBuffer16, fieldPosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10L + "'", obj9, 10L);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(fraction15);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction28 = fractionFormat24.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat0.setNumeratorFormat(numberFormat28);
        java.lang.Object obj31 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        fractionFormat43.setDenominatorFormat(numberFormat49);
        java.lang.Object obj51 = numberFormat49.clone();
        fractionFormat32.setNumeratorFormat(numberFormat49);
        java.lang.Object obj53 = numberFormat49.clone();
        fractionFormat0.setNumeratorFormat(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        fractionFormat22.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.lang.Object obj57 = numberFormat56.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat68);
        java.text.NumberFormat numberFormat71 = fractionFormat70.getNumeratorFormat();
        fractionFormat50.setDenominatorFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat71);
        java.lang.Class<?> wildcardClass74 = fractionFormat73.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        fractionFormat19.setDenominatorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat32);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getNumeratorFormat();
        java.lang.Object obj36 = fractionFormat34.clone();
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        java.lang.Object obj38 = fractionFormat34.clone();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.lang.Object obj10 = numberFormat3.parseObject("10 / 1");
        java.lang.Class<?> wildcardClass11 = numberFormat3.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 10L + "'", obj10, 10L);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        fractionFormat43.setNumeratorFormat(numberFormat57);
        fractionFormat28.setDenominatorFormat(numberFormat57);
        java.lang.Object obj61 = numberFormat57.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.lang.Object obj68 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj77 = fractionFormat75.parseObject("0 / 1");
        java.lang.Object obj79 = fractionFormat75.parseObject("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat75.getNumeratorFormat();
        fractionFormat74.setDenominatorFormat(numberFormat80);
        java.lang.Object obj82 = numberFormat80.clone();
        fractionFormat63.setNumeratorFormat(numberFormat80);
        java.text.NumberFormat numberFormat84 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj87 = fractionFormat85.parseObject("0 / 1");
        java.lang.Object obj89 = fractionFormat85.parseObject("0 / 1");
        java.text.NumberFormat numberFormat90 = fractionFormat85.getNumeratorFormat();
        java.text.NumberFormat numberFormat91 = fractionFormat85.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat91);
        fractionFormat63.setNumeratorFormat(numberFormat91);
        java.lang.Object obj94 = fractionFormat63.clone();
        java.lang.StringBuffer stringBuffer95 = null;
        java.text.FieldPosition fieldPosition96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer97 = fractionFormat62.format((java.lang.Object) fractionFormat63, stringBuffer95, fieldPosition96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(numberFormat90);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.lang.Object obj46 = fractionFormat44.clone();
        java.lang.String str48 = fractionFormat44.format((java.lang.Object) (byte) 0);
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat44.parse("100");
        java.text.NumberFormat numberFormat51 = null;
        java.text.NumberFormat numberFormat52 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        fractionFormat53.setNumeratorFormat(numberFormat59);
        java.lang.Object obj61 = numberFormat59.clone();
        java.lang.String str63 = numberFormat59.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat64 = null;
        java.text.NumberFormat numberFormat65 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat65);
        java.text.NumberFormat numberFormat67 = fractionFormat66.getDenominatorFormat();
        java.text.NumberFormat numberFormat68 = fractionFormat66.getNumeratorFormat();
        java.text.NumberFormat numberFormat69 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat70.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat73 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        fractionFormat66.setNumeratorFormat(numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj82 = fractionFormat80.parseObject("0 / 1");
        java.text.NumberFormat numberFormat83 = fractionFormat80.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator86 = fractionFormat84.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat87 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator90 = fractionFormat88.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat91 = fractionFormat88.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat87, numberFormat91);
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat83, numberFormat87);
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat83);
        org.apache.commons.math.fraction.FractionFormat fractionFormat95 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat83);
        java.lang.StringBuffer stringBuffer96 = null;
        java.text.FieldPosition fieldPosition97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer98 = fractionFormat44.format((java.lang.Object) numberFormat59, stringBuffer96, fieldPosition97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "0 / 1" + "'", str48, "0 / 1");
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNull(numberFormat54);
        org.junit.Assert.assertNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "10" + "'", str63, "10");
        org.junit.Assert.assertNull(numberFormat67);
        org.junit.Assert.assertNull(numberFormat68);
        org.junit.Assert.assertNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(attributedCharacterIterator86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(fractionFormat88);
        org.junit.Assert.assertNotNull(attributedCharacterIterator90);
        org.junit.Assert.assertNotNull(numberFormat91);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        fractionFormat10.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        fractionFormat29.setNumeratorFormat(numberFormat33);
        java.text.NumberFormat numberFormat40 = fractionFormat29.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer41 = null;
        java.text.FieldPosition fieldPosition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer43 = fractionFormat10.format((java.lang.Object) fractionFormat29, stringBuffer41, fieldPosition42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat40);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        fractionFormat45.setNumeratorFormat(numberFormat54);
        java.text.NumberFormat numberFormat58 = null;
        java.text.NumberFormat numberFormat59 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat59);
        java.lang.Object obj61 = fractionFormat60.clone();
        java.text.NumberFormat numberFormat62 = null;
        java.text.NumberFormat numberFormat63 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        java.text.NumberFormat numberFormat66 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        fractionFormat64.setNumeratorFormat(numberFormat70);
        java.lang.Object obj72 = numberFormat70.clone();
        java.lang.String str74 = numberFormat70.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator77 = fractionFormat75.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat78 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = fractionFormat79.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat82 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78, numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70, numberFormat78);
        fractionFormat60.setDenominatorFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat70);
        java.lang.Object obj88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = fractionFormat87.format(obj88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "10" + "'", str74, "10");
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(attributedCharacterIterator77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(numberFormat82);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction8 = fractionFormat0.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = numberFormat15.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat7.setDenominatorFormat(numberFormat15);
        java.lang.Object obj24 = numberFormat15.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat2.formatToCharacterIterator(obj24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = numberFormat13.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat0.setNumeratorFormat(numberFormat28);
        java.lang.Object obj31 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        java.text.NumberFormat numberFormat34 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat34);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        fractionFormat35.setNumeratorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.lang.Object obj59 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        fractionFormat65.setDenominatorFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat71);
        java.lang.Object obj74 = numberFormat71.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator79 = fractionFormat77.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat80 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator83 = fractionFormat81.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat84 = fractionFormat81.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat80, numberFormat84);
        java.text.NumberFormat numberFormat86 = fractionFormat85.getDenominatorFormat();
        java.lang.Object obj87 = fractionFormat85.clone();
        java.text.NumberFormat numberFormat88 = fractionFormat85.getNumeratorFormat();
        fractionFormat76.setNumeratorFormat(numberFormat88);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str90 = fractionFormat0.format((java.lang.Object) numberFormat88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(attributedCharacterIterator79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(attributedCharacterIterator83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        fractionFormat10.setDenominatorFormat(numberFormat16);
        java.text.NumberFormat numberFormat18 = null;
        java.text.NumberFormat numberFormat19 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat19);
        java.lang.Object obj21 = fractionFormat20.clone();
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        fractionFormat24.setNumeratorFormat(numberFormat30);
        java.lang.Object obj32 = numberFormat30.clone();
        java.lang.String str34 = numberFormat30.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat38);
        fractionFormat20.setDenominatorFormat(numberFormat30);
        java.lang.Class<?> wildcardClass46 = fractionFormat20.getClass();
        java.lang.StringBuffer stringBuffer47 = null;
        java.text.FieldPosition fieldPosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer49 = fractionFormat10.format((java.lang.Object) fractionFormat20, stringBuffer47, fieldPosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "10" + "'", str34, "10");
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        fractionFormat31.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        fractionFormat31.setNumeratorFormat(numberFormat48);
        fractionFormat28.setNumeratorFormat(numberFormat48);
        java.text.NumberFormat numberFormat52 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62);
        java.lang.StringBuffer stringBuffer64 = null;
        java.text.FieldPosition fieldPosition65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer66 = fractionFormat28.format((java.lang.Object) numberFormat62, stringBuffer64, fieldPosition65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat62);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat2.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = numberFormat7.parseObject("-1 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat2.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        java.lang.Object obj29 = numberFormat26.parseObject("-1 / 1");
        java.lang.Object obj30 = numberFormat26.clone();
        fractionFormat2.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat50);
        java.text.NumberFormat numberFormat53 = null;
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        fractionFormat55.setNumeratorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat61);
        fractionFormat2.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        java.text.ParsePosition parsePosition70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction71 = fractionFormat68.parse("10 / 1", parsePosition70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (-1L) + "'", obj29, (-1L));
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        fractionFormat34.setDenominatorFormat(numberFormat40);
        java.lang.Object obj42 = numberFormat40.clone();
        fractionFormat23.setNumeratorFormat(numberFormat40);
        java.lang.Object obj44 = numberFormat40.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = numberFormat22.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        fractionFormat21.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat55);
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat66);
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = numberFormat66.formatToCharacterIterator((java.lang.Object) 100L);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.lang.Object obj15 = fractionFormat13.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        fractionFormat27.setNumeratorFormat(numberFormat31);
        java.text.NumberFormat numberFormat38 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat39 = null;
        java.text.NumberFormat numberFormat40 = null;
        java.text.NumberFormat numberFormat41 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        fractionFormat42.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat50.getNumeratorFormat();
        fractionFormat42.setNumeratorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat53);
        java.text.NumberFormat numberFormat56 = null;
        java.text.NumberFormat numberFormat57 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        fractionFormat58.setNumeratorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat64);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat13.formatToCharacterIterator((java.lang.Object) numberFormat38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNull(numberFormat59);
        org.junit.Assert.assertNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat0.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.lang.Object obj45 = numberFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat44);
        java.text.NumberFormat numberFormat47 = null;
        java.text.NumberFormat numberFormat48 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat48);
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        fractionFormat49.setNumeratorFormat(numberFormat55);
        java.lang.Object obj57 = numberFormat55.clone();
        java.lang.String str59 = numberFormat55.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat60 = null;
        java.text.NumberFormat numberFormat61 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat61);
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat62.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat70.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat73 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat73);
        fractionFormat62.setNumeratorFormat(numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator82 = fractionFormat80.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat83 = fractionFormat80.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator86 = fractionFormat84.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat87 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat83, numberFormat87);
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79, numberFormat83);
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat91 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat79);
        java.lang.Object obj92 = fractionFormat91.clone();
        java.lang.Object obj93 = fractionFormat91.clone();
        org.apache.commons.math.fraction.Fraction fraction95 = fractionFormat91.parse("100");
        java.lang.String str96 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction95);
        java.lang.StringBuffer stringBuffer97 = null;
        java.text.FieldPosition fieldPosition98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer99 = fractionFormat46.format(fraction95, stringBuffer97, fieldPosition98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "10" + "'", str59, "10");
        org.junit.Assert.assertNull(numberFormat63);
        org.junit.Assert.assertNull(numberFormat64);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(attributedCharacterIterator82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(attributedCharacterIterator86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(fraction95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "100 / 1" + "'", str96, "100 / 1");
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat12.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.Class<?> wildcardClass31 = fractionFormat30.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = fractionFormat29.format((java.lang.Object) wildcardClass31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat25.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        fractionFormat25.setDenominatorFormat(numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat25.getNumeratorFormat();
        fractionFormat24.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = fractionFormat71.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat74 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator77 = fractionFormat75.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat78 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74, numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj82 = fractionFormat80.parseObject("0 / 1");
        java.lang.Object obj84 = fractionFormat80.parseObject("0 / 1");
        java.text.NumberFormat numberFormat85 = fractionFormat80.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj88 = fractionFormat86.parseObject("0 / 1");
        java.text.NumberFormat numberFormat89 = fractionFormat86.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat85, numberFormat89);
        java.text.NumberFormat numberFormat91 = fractionFormat90.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74, numberFormat91);
        fractionFormat68.setNumeratorFormat(numberFormat91);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator94 = numberFormat39.formatToCharacterIterator((java.lang.Object) numberFormat91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(attributedCharacterIterator77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(numberFormat91);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        fractionFormat27.setNumeratorFormat(numberFormat34);
        java.lang.Object obj41 = fractionFormat27.clone();
        org.apache.commons.math.fraction.Fraction fraction43 = fractionFormat27.parse("10");
        java.lang.StringBuffer stringBuffer44 = null;
        java.text.FieldPosition fieldPosition45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer46 = fractionFormat0.format(fraction43, stringBuffer44, fieldPosition45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(fraction43);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj9 = numberFormat7.parseObject("-1 / 1");
        java.lang.Object obj11 = numberFormat7.parseObject("100");
        java.lang.Object obj12 = numberFormat7.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        fractionFormat31.setDenominatorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat59);
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        java.lang.Object obj64 = numberFormat62.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat62);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator67 = numberFormat7.formatToCharacterIterator((java.lang.Object) numberFormat37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (-1L) + "'", obj9, (-1L));
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (-1L) + "'", obj64, (-1L));
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.lang.Object obj10 = fractionFormat8.clone();
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = fractionFormat8.parseObject("10 / 1", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str35 = fractionFormat33.format((java.lang.Object) 0);
        java.lang.String str37 = fractionFormat33.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat33.parse("100");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator40 = numberFormat9.formatToCharacterIterator((java.lang.Object) fraction39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "0 / 1" + "'", str35, "0 / 1");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1 / 1" + "'", str37, "-1 / 1");
        org.junit.Assert.assertNotNull(fraction39);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        java.text.NumberFormat numberFormat28 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        fractionFormat30.setNumeratorFormat(numberFormat44);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat24.formatToCharacterIterator((java.lang.Object) fractionFormat30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat4.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        fractionFormat4.setDenominatorFormat(numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        fractionFormat19.setNumeratorFormat(numberFormat33);
        fractionFormat4.setDenominatorFormat(numberFormat33);
        java.lang.Object obj37 = numberFormat33.clone();
        java.lang.StringBuffer stringBuffer38 = null;
        java.text.FieldPosition fieldPosition39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer40 = fractionFormat0.format(obj37, stringBuffer38, fieldPosition39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.lang.Object obj10 = numberFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat21);
        fractionFormat0.setNumeratorFormat(numberFormat9);
        java.lang.StringBuffer stringBuffer26 = null;
        java.text.FieldPosition fieldPosition27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer28 = fractionFormat0.format((java.lang.Object) "hi!", stringBuffer26, fieldPosition27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7);
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction11 = fractionFormat8.parse("", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        java.text.ParsePosition parsePosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction18 = fractionFormat2.parse("10 / 1", parsePosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getNumeratorFormat();
        java.lang.Object obj23 = fractionFormat11.clone();
        java.text.ParsePosition parsePosition25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction26 = fractionFormat11.parse("10", parsePosition25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        fractionFormat43.setNumeratorFormat(numberFormat57);
        fractionFormat28.setDenominatorFormat(numberFormat57);
        java.lang.Object obj61 = numberFormat57.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat57);
        java.lang.Object obj64 = numberFormat12.parseObject("100");
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 100L + "'", obj64, 100L);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        fractionFormat32.setDenominatorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat38);
        java.lang.Object obj41 = numberFormat38.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat62);
        java.lang.StringBuffer stringBuffer65 = null;
        java.text.FieldPosition fieldPosition66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer67 = fractionFormat42.format((java.lang.Object) fractionFormat64, stringBuffer65, fieldPosition66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.lang.Object obj25 = numberFormat22.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = numberFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator36 = numberFormat22.formatToCharacterIterator((java.lang.Object) numberFormat31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat41.clone();
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat41.parse("0 / 1");
        java.lang.StringBuffer stringBuffer51 = null;
        java.text.FieldPosition fieldPosition52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer53 = fractionFormat40.format(fraction50, stringBuffer51, fieldPosition52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(fraction50);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat34.getNumeratorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat37);
        java.text.NumberFormat numberFormat40 = null;
        java.text.NumberFormat numberFormat41 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        fractionFormat42.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat48);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        java.text.NumberFormat numberFormat54 = null;
        java.text.NumberFormat numberFormat55 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat55);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        fractionFormat56.setNumeratorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.lang.Object obj68 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat64.getNumeratorFormat();
        fractionFormat56.setDenominatorFormat(numberFormat69);
        java.text.NumberFormat numberFormat71 = null;
        java.text.NumberFormat numberFormat72 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat72);
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        java.text.NumberFormat numberFormat75 = fractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = fractionFormat76.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat79 = fractionFormat76.getDenominatorFormat();
        fractionFormat73.setNumeratorFormat(numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj83 = fractionFormat81.parseObject("0 / 1");
        java.lang.Object obj85 = fractionFormat81.parseObject("0 / 1");
        java.text.NumberFormat numberFormat86 = fractionFormat81.getNumeratorFormat();
        fractionFormat73.setDenominatorFormat(numberFormat86);
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat86);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = numberFormat53.format((java.lang.Object) fractionFormat88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNull(numberFormat74);
        org.junit.Assert.assertNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(numberFormat86);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.lang.Object obj46 = fractionFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer51 = null;
        java.text.FieldPosition fieldPosition52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer53 = fractionFormat44.format((java.lang.Object) fractionFormat47, stringBuffer51, fieldPosition52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.text.NumberFormat numberFormat14 = null;
        java.text.NumberFormat numberFormat15 = null;
        java.text.NumberFormat numberFormat16 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat16);
        java.lang.Object obj18 = fractionFormat17.clone();
        java.text.NumberFormat numberFormat19 = null;
        java.text.NumberFormat numberFormat20 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        fractionFormat21.setNumeratorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        java.lang.String str31 = numberFormat27.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat35);
        fractionFormat17.setDenominatorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = numberFormat13.format((java.lang.Object) numberFormat14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "10" + "'", str31, "10");
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52);
        fractionFormat44.setDenominatorFormat(numberFormat52);
        java.lang.Class<?> wildcardClass56 = numberFormat52.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        fractionFormat34.setNumeratorFormat(numberFormat45);
        fractionFormat11.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat51 = fractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat50.getDenominatorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat50.getNumeratorFormat();
        fractionFormat49.setDenominatorFormat(numberFormat53);
        java.text.ParsePosition parsePosition56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction57 = fractionFormat49.parse("100 / 1", parsePosition56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getNumeratorFormat();
        java.lang.Object obj47 = fractionFormat44.parseObject("0 / 1");
        java.text.ParsePosition parsePosition49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat44.parse("100 / 1", parsePosition49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        fractionFormat7.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat18 = null;
        java.text.NumberFormat numberFormat19 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = numberFormat28.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat20.setDenominatorFormat(numberFormat28);
        java.lang.Object obj37 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat60);
        java.lang.Object obj64 = fractionFormat63.clone();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        fractionFormat34.setNumeratorFormat(numberFormat45);
        fractionFormat11.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = null;
        java.text.NumberFormat numberFormat57 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        fractionFormat58.setNumeratorFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat66.getNumeratorFormat();
        fractionFormat58.setNumeratorFormat(numberFormat69);
        java.lang.Object obj72 = numberFormat69.parseObject("0 / 1");
        fractionFormat49.setNumeratorFormat(numberFormat69);
        java.text.NumberFormat numberFormat74 = fractionFormat49.getDenominatorFormat();
        java.text.NumberFormat numberFormat75 = fractionFormat49.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = numberFormat45.format((java.lang.Object) fractionFormat49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNull(numberFormat59);
        org.junit.Assert.assertNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 0L + "'", obj72, 0L);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        java.lang.Object obj31 = numberFormat29.parseObject("-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (-1L) + "'", obj31, (-1L));
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = null;
        java.text.NumberFormat numberFormat7 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        fractionFormat8.setNumeratorFormat(numberFormat14);
        java.lang.Object obj16 = numberFormat14.clone();
        java.lang.String str18 = numberFormat14.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat19 = null;
        java.text.NumberFormat numberFormat20 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat21.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat38);
        java.lang.Object obj51 = fractionFormat50.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        fractionFormat50.setDenominatorFormat(numberFormat58);
        fractionFormat5.setNumeratorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj65 = fractionFormat63.parseObject("0 / 1");
        java.lang.Object obj67 = fractionFormat63.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat63.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = null;
        java.text.NumberFormat numberFormat71 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70, numberFormat71);
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        java.text.NumberFormat numberFormat74 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator77 = fractionFormat75.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat78 = fractionFormat75.getDenominatorFormat();
        fractionFormat72.setNumeratorFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj82 = fractionFormat80.parseObject("0 / 1");
        java.text.NumberFormat numberFormat83 = fractionFormat80.getNumeratorFormat();
        fractionFormat72.setNumeratorFormat(numberFormat83);
        java.lang.Object obj86 = numberFormat83.parseObject("0 / 1");
        fractionFormat63.setNumeratorFormat(numberFormat83);
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat83);
        fractionFormat0.setNumeratorFormat(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "10" + "'", str18, "10");
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNull(numberFormat73);
        org.junit.Assert.assertNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(attributedCharacterIterator77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 0L + "'", obj86, 0L);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        fractionFormat31.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        fractionFormat31.setNumeratorFormat(numberFormat48);
        fractionFormat28.setNumeratorFormat(numberFormat48);
        java.text.ParsePosition parsePosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction54 = fractionFormat28.parse("100 / 1", parsePosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.String str4 = fractionFormat0.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat0.parse("100");
        java.lang.String str7 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction6);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 / 1" + "'", str4, "-1 / 1");
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "100 / 1" + "'", str7, "100 / 1");
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat0.parse("10 / 1");
        java.lang.String str28 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction27);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "10 / 1" + "'", str28, "10 / 1");
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat14.setDenominatorFormat(numberFormat20);
        java.lang.Object obj22 = numberFormat20.clone();
        fractionFormat2.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj33 = numberFormat31.parseObject("10");
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = fractionFormat2.format((java.lang.Object) wildcardClass34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10L + "'", obj33, 10L);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction41 = fractionFormat39.parse("0 / 1");
        java.lang.String str42 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction41);
        java.lang.StringBuffer stringBuffer43 = null;
        java.text.FieldPosition fieldPosition44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer45 = fractionFormat8.format(fraction41, stringBuffer43, fieldPosition44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "0 / 1" + "'", str42, "0 / 1");
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat17.parse("0 / 1");
        java.lang.String str20 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction19);
        java.lang.String str21 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction19);
        java.lang.StringBuffer stringBuffer22 = null;
        java.text.FieldPosition fieldPosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer24 = fractionFormat16.format(fraction19, stringBuffer22, fieldPosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "0 / 1" + "'", str20, "0 / 1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "0 / 1" + "'", str21, "0 / 1");
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        java.lang.Object obj19 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        fractionFormat55.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat61);
        java.lang.Object obj64 = numberFormat61.clone();
        fractionFormat0.setNumeratorFormat(numberFormat61);
        java.text.ParsePosition parsePosition67 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction68 = fractionFormat0.parse("10 / 1", parsePosition67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat34.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        fractionFormat34.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        java.text.NumberFormat numberFormat59 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        fractionFormat49.setNumeratorFormat(numberFormat63);
        fractionFormat34.setDenominatorFormat(numberFormat63);
        fractionFormat32.setNumeratorFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        java.text.NumberFormat numberFormat77 = fractionFormat76.getDenominatorFormat();
        java.lang.Object obj78 = fractionFormat76.clone();
        java.text.NumberFormat numberFormat79 = fractionFormat76.getDenominatorFormat();
        java.lang.StringBuffer stringBuffer80 = null;
        java.text.FieldPosition fieldPosition81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer82 = fractionFormat32.format((java.lang.Object) fractionFormat76, stringBuffer80, fieldPosition81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = numberFormat21.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat21);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        java.lang.Object obj21 = null;
        java.lang.StringBuffer stringBuffer22 = null;
        java.text.FieldPosition fieldPosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer24 = fractionFormat19.format(obj21, stringBuffer22, fieldPosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.lang.Object obj20 = fractionFormat19.clone();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat29);
        java.lang.Object obj31 = numberFormat29.clone();
        java.lang.String str33 = numberFormat29.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat37);
        fractionFormat19.setDenominatorFormat(numberFormat29);
        fractionFormat16.setDenominatorFormat(numberFormat29);
        java.text.NumberFormat numberFormat46 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.lang.Object obj73 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = fractionFormat69.getNumeratorFormat();
        fractionFormat68.setDenominatorFormat(numberFormat74);
        java.lang.Object obj76 = numberFormat74.clone();
        fractionFormat57.setNumeratorFormat(numberFormat74);
        java.lang.Object obj78 = numberFormat74.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat74);
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        java.lang.Object obj82 = numberFormat80.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat80);
        fractionFormat7.setNumeratorFormat(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "10" + "'", str33, "10");
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (-1L) + "'", obj82, (-1L));
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        fractionFormat23.setNumeratorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = null;
        java.text.NumberFormat numberFormat45 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        fractionFormat46.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        fractionFormat46.setNumeratorFormat(numberFormat57);
        java.lang.Object obj60 = numberFormat57.parseObject("0 / 1");
        fractionFormat37.setNumeratorFormat(numberFormat57);
        java.text.NumberFormat numberFormat62 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat62);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str64 = fractionFormat11.format((java.lang.Object) fractionFormat63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(numberFormat47);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 0L + "'", obj60, 0L);
        org.junit.Assert.assertNotNull(numberFormat62);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.lang.Object obj23 = fractionFormat21.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat34.parse("10 / 1");
        java.lang.String str37 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction36);
        java.lang.String str38 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction36);
        java.lang.StringBuffer stringBuffer39 = null;
        java.text.FieldPosition fieldPosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer41 = fractionFormat21.format(fraction36, stringBuffer39, fieldPosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "10 / 1" + "'", str37, "10 / 1");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "10 / 1" + "'", str38, "10 / 1");
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat43);
        fractionFormat22.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = numberFormat31.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat12.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat26);
        java.lang.Object obj31 = numberFormat26.parseObject("100 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj5 = fractionFormat3.parseObject("0 / 1");
        java.lang.Object obj7 = fractionFormat3.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat3.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat3.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        fractionFormat3.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        fractionFormat34.setDenominatorFormat(numberFormat40);
        java.lang.Object obj42 = numberFormat40.clone();
        fractionFormat23.setNumeratorFormat(numberFormat40);
        fractionFormat3.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat2, numberFormat40);
        java.lang.Class<?> wildcardClass46 = fractionFormat45.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat23.getDenominatorFormat();
        fractionFormat21.setNumeratorFormat(numberFormat30);
        java.lang.Class<?> wildcardClass32 = fractionFormat21.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction46 = fractionFormat44.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat56);
        java.text.NumberFormat numberFormat58 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat58);
        fractionFormat0.setDenominatorFormat(numberFormat43);
        java.text.ParsePosition parsePosition62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction63 = fractionFormat0.parse("10", parsePosition62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat58);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction35 = fractionFormat32.parse("10 / 1");
        java.text.ParsePosition parsePosition37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction38 = fractionFormat32.parse("", parsePosition37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fraction35);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.lang.Object obj23 = fractionFormat22.clone();
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat32);
        java.lang.Object obj34 = numberFormat32.clone();
        java.lang.String str36 = numberFormat32.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat40);
        fractionFormat22.setDenominatorFormat(numberFormat32);
        fractionFormat19.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat49 = fractionFormat19.getNumeratorFormat();
        fractionFormat10.setNumeratorFormat(numberFormat49);
        java.text.NumberFormat numberFormat51 = null;
        java.text.NumberFormat numberFormat52 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat53.getNumeratorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        fractionFormat53.setNumeratorFormat(numberFormat60);
        java.lang.Object obj67 = fractionFormat53.clone();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat10.formatToCharacterIterator(obj67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "10" + "'", str36, "10");
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNull(numberFormat54);
        org.junit.Assert.assertNull(numberFormat55);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        java.lang.Object obj15 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat16 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        fractionFormat28.setNumeratorFormat(numberFormat39);
        fractionFormat11.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat39);
        java.lang.Object obj45 = numberFormat39.clone();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat0.parse("hi!", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat34 = null;
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        fractionFormat36.setNumeratorFormat(numberFormat42);
        java.lang.Object obj44 = numberFormat42.clone();
        java.lang.String str46 = numberFormat42.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat47 = null;
        java.text.NumberFormat numberFormat48 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat48);
        java.text.NumberFormat numberFormat50 = fractionFormat49.getDenominatorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        fractionFormat49.setNumeratorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj65 = fractionFormat63.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = fractionFormat71.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat74 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70, numberFormat74);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42);
        org.apache.commons.math.fraction.Fraction fraction81 = fractionFormat79.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj84 = fractionFormat82.parseObject("0 / 1");
        java.text.NumberFormat numberFormat85 = fractionFormat82.getNumeratorFormat();
        java.text.NumberFormat numberFormat86 = fractionFormat82.getNumeratorFormat();
        fractionFormat79.setDenominatorFormat(numberFormat86);
        java.text.NumberFormat numberFormat88 = fractionFormat79.getNumeratorFormat();
        java.text.NumberFormat numberFormat89 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat88, numberFormat89);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str91 = numberFormat9.format((java.lang.Object) numberFormat88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "10" + "'", str46, "10");
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat51);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fraction81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat88);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat32);
        java.lang.Object obj34 = numberFormat32.clone();
        java.lang.String str36 = numberFormat32.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat40);
        fractionFormat11.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat48 = null;
        java.text.NumberFormat numberFormat49 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        fractionFormat50.setNumeratorFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat11.formatToCharacterIterator((java.lang.Object) fractionFormat59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "10" + "'", str36, "10");
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat51);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        fractionFormat7.setNumeratorFormat(numberFormat24);
        java.lang.Object obj28 = numberFormat24.clone();
        java.lang.Object obj29 = numberFormat24.clone();
        fractionFormat2.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        fractionFormat1.setNumeratorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        java.lang.Object obj61 = numberFormat39.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction67 = fractionFormat63.parse("-1 / 1");
        java.lang.StringBuffer stringBuffer68 = null;
        java.text.FieldPosition fieldPosition69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer70 = fractionFormat62.format(fraction67, stringBuffer68, fieldPosition69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1L) + "'", obj61, (-1L));
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fraction67);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.lang.Object obj30 = fractionFormat29.clone();
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        java.lang.String str43 = numberFormat39.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat47);
        fractionFormat29.setDenominatorFormat(numberFormat39);
        fractionFormat26.setDenominatorFormat(numberFormat39);
        fractionFormat2.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat57 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction59 = fractionFormat2.parse("100");
        java.lang.Class<?> wildcardClass60 = fractionFormat2.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "10" + "'", str43, "10");
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getNumeratorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = fractionFormat21.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        fractionFormat12.setNumeratorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        fractionFormat12.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.lang.String str35 = numberFormat29.format((java.lang.Object) (byte) 100);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        fractionFormat47.setDenominatorFormat(numberFormat53);
        java.lang.Object obj55 = numberFormat53.clone();
        fractionFormat36.setNumeratorFormat(numberFormat53);
        java.lang.Object obj57 = numberFormat53.clone();
        java.lang.Object obj58 = numberFormat53.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction66 = fractionFormat64.parse("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat64.getNumeratorFormat();
        fractionFormat59.setNumeratorFormat(numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj74 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj83 = fractionFormat81.parseObject("0 / 1");
        java.lang.Object obj85 = fractionFormat81.parseObject("0 / 1");
        java.text.NumberFormat numberFormat86 = fractionFormat81.getNumeratorFormat();
        java.text.NumberFormat numberFormat87 = fractionFormat81.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator90 = fractionFormat88.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat91 = fractionFormat88.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat87, numberFormat91);
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat91);
        fractionFormat69.setDenominatorFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat95 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat75);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator96 = fractionFormat9.formatToCharacterIterator((java.lang.Object) numberFormat29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "100" + "'", str35, "100");
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(fractionFormat88);
        org.junit.Assert.assertNotNull(attributedCharacterIterator90);
        org.junit.Assert.assertNotNull(numberFormat91);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        fractionFormat5.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        fractionFormat5.setDenominatorFormat(numberFormat18);
        fractionFormat0.setDenominatorFormat(numberFormat18);
        java.lang.Class<?> wildcardClass21 = fractionFormat0.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj9 = numberFormat7.parseObject("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7);
        java.lang.Object obj11 = fractionFormat10.clone();
        java.text.NumberFormat numberFormat12 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10L + "'", obj9, 10L);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        fractionFormat46.setDenominatorFormat(numberFormat52);
        java.lang.Object obj54 = numberFormat52.clone();
        fractionFormat35.setNumeratorFormat(numberFormat52);
        java.lang.Object obj56 = numberFormat52.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat52);
        java.text.NumberFormat numberFormat58 = fractionFormat57.getNumeratorFormat();
        java.text.NumberFormat numberFormat59 = null;
        java.text.NumberFormat numberFormat60 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat60);
        java.text.NumberFormat numberFormat62 = fractionFormat61.getDenominatorFormat();
        java.text.NumberFormat numberFormat63 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        fractionFormat61.setNumeratorFormat(numberFormat67);
        java.lang.Object obj69 = numberFormat67.clone();
        java.lang.String str71 = numberFormat67.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = fractionFormat76.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat79 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat75);
        java.text.NumberFormat numberFormat82 = fractionFormat81.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat82);
        java.lang.StringBuffer stringBuffer84 = null;
        java.text.FieldPosition fieldPosition85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer86 = fractionFormat24.format((java.lang.Object) numberFormat58, stringBuffer84, fieldPosition85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNull(numberFormat62);
        org.junit.Assert.assertNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "10" + "'", str71, "10");
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat82);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = null;
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        fractionFormat36.setNumeratorFormat(numberFormat42);
        java.lang.Object obj44 = numberFormat42.clone();
        java.lang.String str46 = numberFormat42.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat50);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat57);
        org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat58.parse("10 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "10" + "'", str46, "10");
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat0.formatToCharacterIterator((java.lang.Object) fractionFormat41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.lang.Object obj12 = numberFormat9.parseObject("-1 / 1");
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (-1L) + "'", obj12, (-1L));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat7.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat0.formatToCharacterIterator((java.lang.Object) fractionFormat22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        java.lang.String str3 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.String str4 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.String str5 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.String str6 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.String str7 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.String str8 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.String str9 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.String str10 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.String str11 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        java.lang.String str12 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "0 / 1" + "'", str3, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0 / 1" + "'", str4, "0 / 1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "0 / 1" + "'", str5, "0 / 1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0 / 1" + "'", str6, "0 / 1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0 / 1" + "'", str7, "0 / 1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "0 / 1" + "'", str8, "0 / 1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0 / 1" + "'", str9, "0 / 1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "0 / 1" + "'", str10, "0 / 1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0 / 1" + "'", str11, "0 / 1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0 / 1" + "'", str12, "0 / 1");
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        java.lang.Object obj35 = numberFormat33.clone();
        java.lang.String str37 = numberFormat33.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat38 = null;
        java.text.NumberFormat numberFormat39 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        fractionFormat40.setNumeratorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat57);
        java.lang.Object obj70 = fractionFormat69.clone();
        java.lang.Object obj71 = fractionFormat69.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator72 = numberFormat20.formatToCharacterIterator(obj71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "10" + "'", str37, "10");
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.lang.Object obj30 = fractionFormat29.clone();
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        java.lang.String str43 = numberFormat39.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat47);
        fractionFormat29.setDenominatorFormat(numberFormat39);
        fractionFormat26.setDenominatorFormat(numberFormat39);
        fractionFormat2.setDenominatorFormat(numberFormat39);
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat2.parse("10 / 1");
        java.text.ParsePosition parsePosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction61 = fractionFormat2.parse("10 / 1", parsePosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "10" + "'", str43, "10");
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fraction58);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat18);
        fractionFormat2.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        org.apache.commons.math.fraction.Fraction fraction25 = fractionFormat21.parse("100");
        java.lang.StringBuffer stringBuffer26 = null;
        java.text.FieldPosition fieldPosition27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer28 = fractionFormat2.format(fraction25, stringBuffer26, fieldPosition27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(fraction25);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat43);
        fractionFormat22.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat31);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getNumeratorFormat();
        java.text.ParsePosition parsePosition50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction51 = fractionFormat47.parse("-1 / 1", parsePosition50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat48);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat2.parse("10");
        java.lang.String str41 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction40);
        java.lang.String str42 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction40);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "10 / 1" + "'", str41, "10 / 1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "10 / 1" + "'", str42, "10 / 1");
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        fractionFormat22.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.lang.Object obj57 = numberFormat56.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat68);
        java.text.NumberFormat numberFormat71 = fractionFormat70.getNumeratorFormat();
        fractionFormat50.setDenominatorFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = fractionFormat78.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat81 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77);
        java.text.NumberFormat numberFormat84 = fractionFormat83.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat84);
        java.text.ParsePosition parsePosition87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = fractionFormat85.parseObject("hi!", parsePosition87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat84);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.lang.Object obj30 = fractionFormat29.clone();
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        java.lang.String str43 = numberFormat39.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat47);
        fractionFormat29.setDenominatorFormat(numberFormat39);
        fractionFormat26.setDenominatorFormat(numberFormat39);
        fractionFormat2.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat57 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj59 = numberFormat57.parseObject("10");
        java.lang.Object obj61 = numberFormat57.parseObject("10");
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "10" + "'", str43, "10");
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10L + "'", obj59, 10L);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 10L + "'", obj61, 10L);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = numberFormat9.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat9);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        fractionFormat11.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat45);
        java.lang.Object obj48 = numberFormat45.parseObject("0 / 1");
        fractionFormat25.setNumeratorFormat(numberFormat45);
        java.text.NumberFormat numberFormat50 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.lang.Object obj73 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = fractionFormat69.getNumeratorFormat();
        fractionFormat68.setDenominatorFormat(numberFormat74);
        java.lang.Object obj76 = numberFormat74.clone();
        fractionFormat57.setNumeratorFormat(numberFormat74);
        java.lang.Object obj78 = numberFormat74.clone();
        java.lang.Object obj79 = numberFormat74.clone();
        fractionFormat52.setDenominatorFormat(numberFormat74);
        java.lang.Object obj81 = numberFormat74.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74);
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat83);
        java.text.ParsePosition parsePosition86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction87 = fractionFormat84.parse("", parsePosition86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0L + "'", obj48, 0L);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(numberFormat83);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = null;
        java.text.NumberFormat numberFormat34 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat34);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        java.lang.Object obj45 = numberFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat56);
        fractionFormat35.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat71.getNumeratorFormat();
        fractionFormat70.setDenominatorFormat(numberFormat76);
        java.lang.Object obj78 = numberFormat76.clone();
        fractionFormat35.setDenominatorFormat(numberFormat76);
        java.lang.Object obj80 = numberFormat76.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat76);
        java.text.NumberFormat numberFormat82 = fractionFormat81.getDenominatorFormat();
        java.text.NumberFormat numberFormat83 = null;
        java.text.NumberFormat numberFormat84 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat83, numberFormat84);
        java.text.NumberFormat numberFormat86 = fractionFormat85.getDenominatorFormat();
        java.lang.StringBuffer stringBuffer87 = null;
        java.text.FieldPosition fieldPosition88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer89 = fractionFormat81.format((java.lang.Object) fractionFormat85, stringBuffer87, fieldPosition88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNull(numberFormat86);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        java.lang.Object obj47 = fractionFormat44.parseObject("10 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        fractionFormat60.setDenominatorFormat(numberFormat66);
        java.lang.Object obj68 = numberFormat66.clone();
        fractionFormat49.setNumeratorFormat(numberFormat66);
        java.lang.Object obj70 = numberFormat66.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66);
        fractionFormat44.setDenominatorFormat(numberFormat66);
        java.text.ParsePosition parsePosition74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj75 = fractionFormat44.parseObject("10", parsePosition74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        fractionFormat2.setNumeratorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.lang.String str25 = numberFormat19.format((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        fractionFormat28.setNumeratorFormat(numberFormat34);
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        fractionFormat38.setNumeratorFormat(numberFormat46);
        fractionFormat28.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat54 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat54);
        java.text.ParsePosition parsePosition57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat55.parse("100", parsePosition57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "100" + "'", str25, "100");
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat54);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.lang.Object obj26 = fractionFormat25.clone();
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        fractionFormat29.setNumeratorFormat(numberFormat35);
        java.lang.Object obj37 = numberFormat35.clone();
        java.lang.String str39 = numberFormat35.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat43);
        fractionFormat25.setDenominatorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat22);
        java.lang.Class<?> wildcardClass54 = fractionFormat53.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "10" + "'", str39, "10");
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.lang.Object obj10 = fractionFormat8.clone();
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat8.parse("10", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        java.text.NumberFormat numberFormat50 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        java.text.NumberFormat numberFormat52 = null;
        java.text.NumberFormat numberFormat53 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        java.lang.Object obj64 = numberFormat63.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat65.getNumeratorFormat();
        java.text.NumberFormat numberFormat71 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat75);
        fractionFormat54.setNumeratorFormat(numberFormat63);
        org.apache.commons.math.fraction.Fraction fraction80 = fractionFormat54.parse("10");
        java.lang.StringBuffer stringBuffer81 = null;
        java.text.FieldPosition fieldPosition82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer83 = fractionFormat51.format(fraction80, stringBuffer81, fieldPosition82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat55);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fraction80);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat37);
        java.lang.Class<?> wildcardClass39 = numberFormat37.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        java.text.ParsePosition parsePosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction22 = fractionFormat0.parse("100", parsePosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        fractionFormat22.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        java.lang.Object obj57 = numberFormat56.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat68);
        java.text.NumberFormat numberFormat71 = fractionFormat70.getNumeratorFormat();
        fractionFormat50.setDenominatorFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = fractionFormat78.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat81 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77);
        java.text.NumberFormat numberFormat84 = fractionFormat83.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat84);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        java.lang.Class<?> wildcardClass87 = fractionFormat86.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.ParsePosition parsePosition2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj3 = fractionFormat0.parseObject("10", parsePosition2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        java.lang.Class<?> wildcardClass23 = fractionFormat22.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getNumeratorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat19);
        java.lang.Class<?> wildcardClass21 = fractionFormat0.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = null;
        java.text.NumberFormat numberFormat39 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        fractionFormat40.setNumeratorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        fractionFormat40.setNumeratorFormat(numberFormat51);
        java.lang.Object obj54 = numberFormat51.parseObject("0 / 1");
        fractionFormat31.setNumeratorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat57);
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat60);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0L + "'", obj54, 0L);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        java.text.ParsePosition parsePosition49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = fractionFormat45.parseObject("", parsePosition49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.lang.StringBuffer stringBuffer6 = null;
        java.text.FieldPosition fieldPosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer8 = fractionFormat0.format((java.lang.Object) numberFormat3, stringBuffer6, fieldPosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        fractionFormat58.setNumeratorFormat(numberFormat62);
        java.text.NumberFormat numberFormat69 = fractionFormat58.getDenominatorFormat();
        java.text.NumberFormat numberFormat70 = fractionFormat58.getDenominatorFormat();
        java.text.NumberFormat numberFormat71 = null;
        java.text.NumberFormat numberFormat72 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat72);
        java.text.NumberFormat numberFormat74 = fractionFormat73.getDenominatorFormat();
        java.text.NumberFormat numberFormat75 = fractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = fractionFormat76.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat79 = fractionFormat76.getDenominatorFormat();
        fractionFormat73.setNumeratorFormat(numberFormat79);
        java.lang.Object obj81 = numberFormat79.clone();
        java.lang.String str83 = numberFormat79.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator86 = fractionFormat84.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat87 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator90 = fractionFormat88.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat91 = fractionFormat88.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat87, numberFormat91);
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79, numberFormat87);
        fractionFormat58.setDenominatorFormat(numberFormat79);
        java.lang.StringBuffer stringBuffer95 = null;
        java.text.FieldPosition fieldPosition96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer97 = fractionFormat2.format((java.lang.Object) fractionFormat58, stringBuffer95, fieldPosition96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNull(numberFormat74);
        org.junit.Assert.assertNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "10" + "'", str83, "10");
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(attributedCharacterIterator86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(fractionFormat88);
        org.junit.Assert.assertNotNull(attributedCharacterIterator90);
        org.junit.Assert.assertNotNull(numberFormat91);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        fractionFormat11.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat45);
        java.lang.Object obj48 = numberFormat45.parseObject("0 / 1");
        fractionFormat25.setNumeratorFormat(numberFormat45);
        java.text.NumberFormat numberFormat50 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.lang.Object obj73 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = fractionFormat69.getNumeratorFormat();
        fractionFormat68.setDenominatorFormat(numberFormat74);
        java.lang.Object obj76 = numberFormat74.clone();
        fractionFormat57.setNumeratorFormat(numberFormat74);
        java.lang.Object obj78 = numberFormat74.clone();
        java.lang.Object obj79 = numberFormat74.clone();
        fractionFormat52.setDenominatorFormat(numberFormat74);
        java.lang.Object obj81 = numberFormat74.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74);
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat83);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction86 = fractionFormat84.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0L + "'", obj48, 0L);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(numberFormat83);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.lang.Object obj46 = fractionFormat44.clone();
        java.lang.String str48 = fractionFormat44.format((java.lang.Object) (byte) 0);
        java.text.ParsePosition parsePosition50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = fractionFormat44.parseObject("10", parsePosition50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "0 / 1" + "'", str48, "0 / 1");
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.lang.Object obj10 = numberFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat21);
        fractionFormat0.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction26 = fractionFormat0.parse("10");
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.lang.Object obj39 = numberFormat38.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat50);
        fractionFormat29.setNumeratorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat65.getNumeratorFormat();
        fractionFormat64.setDenominatorFormat(numberFormat70);
        java.lang.Object obj72 = numberFormat70.clone();
        fractionFormat29.setDenominatorFormat(numberFormat70);
        java.text.NumberFormat numberFormat74 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.lang.Object obj80 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj84 = fractionFormat82.parseObject("0 / 1");
        java.text.NumberFormat numberFormat85 = fractionFormat82.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat81, numberFormat85);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj89 = fractionFormat87.parseObject("0 / 1");
        java.lang.Object obj91 = fractionFormat87.parseObject("0 / 1");
        java.text.NumberFormat numberFormat92 = fractionFormat87.getNumeratorFormat();
        fractionFormat86.setDenominatorFormat(numberFormat92);
        java.lang.Object obj94 = numberFormat92.clone();
        fractionFormat75.setNumeratorFormat(numberFormat92);
        java.text.NumberFormat numberFormat96 = fractionFormat75.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat97 = new org.apache.commons.math.fraction.FractionFormat(numberFormat96);
        fractionFormat29.setNumeratorFormat(numberFormat96);
        fractionFormat0.setNumeratorFormat(numberFormat96);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(numberFormat96);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.lang.Object obj14 = numberFormat7.clone();
        java.text.NumberFormat numberFormat15 = null;
        java.text.NumberFormat numberFormat16 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        fractionFormat17.setNumeratorFormat(numberFormat23);
        java.lang.Object obj25 = numberFormat23.clone();
        java.lang.String str27 = numberFormat23.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat28 = null;
        java.text.NumberFormat numberFormat29 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat29);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat30.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        fractionFormat30.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat47);
        java.lang.Object obj60 = fractionFormat59.clone();
        java.lang.Object obj61 = fractionFormat59.clone();
        java.lang.String str63 = fractionFormat59.format((java.lang.Object) (byte) 0);
        org.apache.commons.math.fraction.Fraction fraction65 = fractionFormat59.parse("0 / 1");
        java.lang.String str66 = numberFormat7.format((java.lang.Object) fraction65);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "10" + "'", str27, "10");
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "0 / 1" + "'", str63, "0 / 1");
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "0" + "'", str66, "0");
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        fractionFormat17.setDenominatorFormat(numberFormat23);
        java.lang.Object obj25 = numberFormat23.clone();
        fractionFormat6.setNumeratorFormat(numberFormat23);
        java.lang.Object obj27 = numberFormat23.clone();
        java.lang.Object obj28 = numberFormat23.clone();
        fractionFormat1.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23);
        fractionFormat0.setNumeratorFormat(numberFormat23);
        java.text.ParsePosition parsePosition33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = fractionFormat0.parseObject("-1 / 1", parsePosition33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat9.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        fractionFormat11.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat45);
        java.lang.Object obj48 = numberFormat45.parseObject("0 / 1");
        fractionFormat25.setNumeratorFormat(numberFormat45);
        java.text.NumberFormat numberFormat50 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.lang.Object obj73 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = fractionFormat69.getNumeratorFormat();
        fractionFormat68.setDenominatorFormat(numberFormat74);
        java.lang.Object obj76 = numberFormat74.clone();
        fractionFormat57.setNumeratorFormat(numberFormat74);
        java.lang.Object obj78 = numberFormat74.clone();
        java.lang.Object obj79 = numberFormat74.clone();
        fractionFormat52.setDenominatorFormat(numberFormat74);
        java.lang.Object obj81 = numberFormat74.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74);
        java.text.NumberFormat numberFormat83 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat83);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj86 = numberFormat83.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0L + "'", obj48, 0L);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(numberFormat83);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getNumeratorFormat();
        java.text.ParsePosition parsePosition47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction48 = fractionFormat44.parse("0", parsePosition47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        java.lang.Object obj16 = numberFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat18 = null;
        java.text.NumberFormat numberFormat19 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        fractionFormat20.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        fractionFormat20.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        fractionFormat46.setDenominatorFormat(numberFormat52);
        java.lang.Object obj54 = numberFormat52.clone();
        fractionFormat35.setNumeratorFormat(numberFormat52);
        fractionFormat20.setDenominatorFormat(numberFormat52);
        fractionFormat17.setDenominatorFormat(numberFormat52);
        java.text.ParsePosition parsePosition59 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction60 = fractionFormat17.parse("100 / 1", parsePosition59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat30);
        org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat37.parse("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        fractionFormat51.setNumeratorFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj64 = fractionFormat62.parseObject("0 / 1");
        java.lang.Object obj66 = fractionFormat62.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat62.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = fractionFormat78.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat81 = fractionFormat78.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat81);
        fractionFormat73.setNumeratorFormat(numberFormat77);
        java.text.NumberFormat numberFormat84 = fractionFormat73.getNumeratorFormat();
        java.text.NumberFormat numberFormat85 = fractionFormat73.getNumeratorFormat();
        fractionFormat51.setDenominatorFormat(numberFormat85);
        fractionFormat37.setDenominatorFormat(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.lang.Object obj26 = numberFormat25.clone();
        fractionFormat11.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getNumeratorFormat();
        java.lang.Object obj41 = fractionFormat38.parseObject("-1 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator42 = numberFormat25.formatToCharacterIterator((java.lang.Object) "-1 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        java.lang.Object obj22 = fractionFormat21.clone();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        java.lang.Class<?> wildcardClass27 = fractionFormat26.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat48.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat52);
        java.text.ParsePosition parsePosition55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = fractionFormat45.parseObject("10 / 1", parsePosition55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        fractionFormat31.setNumeratorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        java.lang.Object obj66 = numberFormat65.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.lang.Object obj71 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat67.getNumeratorFormat();
        java.text.NumberFormat numberFormat73 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat77);
        java.text.NumberFormat numberFormat80 = fractionFormat79.getNumeratorFormat();
        fractionFormat59.setDenominatorFormat(numberFormat80);
        fractionFormat0.setNumeratorFormat(numberFormat80);
        java.lang.Class<?> wildcardClass83 = fractionFormat0.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = null;
        java.text.NumberFormat numberFormat34 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat34);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        java.lang.Object obj45 = numberFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat56);
        fractionFormat35.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat71.getNumeratorFormat();
        fractionFormat70.setDenominatorFormat(numberFormat76);
        java.lang.Object obj78 = numberFormat76.clone();
        fractionFormat35.setDenominatorFormat(numberFormat76);
        java.lang.Object obj80 = numberFormat76.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat76);
        java.text.NumberFormat numberFormat82 = fractionFormat81.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat82);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat14.setDenominatorFormat(numberFormat20);
        java.lang.Object obj22 = numberFormat20.clone();
        fractionFormat2.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getNumeratorFormat();
        java.lang.Object obj28 = fractionFormat26.clone();
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        fractionFormat31.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat39.getNumeratorFormat();
        fractionFormat31.setNumeratorFormat(numberFormat42);
        fractionFormat26.setDenominatorFormat(numberFormat42);
        fractionFormat2.setDenominatorFormat(numberFormat42);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = numberFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        java.text.NumberFormat numberFormat16 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        fractionFormat17.setNumeratorFormat(numberFormat24);
        java.text.NumberFormat numberFormat28 = fractionFormat17.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = numberFormat5.format((java.lang.Object) numberFormat28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat25);
        java.text.ParsePosition parsePosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat27.parse("hi!", parsePosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.Fraction fraction4 = fractionFormat0.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat5.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        fractionFormat5.setDenominatorFormat(numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        fractionFormat20.setNumeratorFormat(numberFormat34);
        fractionFormat5.setDenominatorFormat(numberFormat34);
        java.lang.Class<?> wildcardClass38 = numberFormat34.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat0.formatToCharacterIterator((java.lang.Object) wildcardClass38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        fractionFormat29.setNumeratorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat37.getNumeratorFormat();
        fractionFormat29.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        fractionFormat55.setDenominatorFormat(numberFormat61);
        java.lang.Object obj63 = numberFormat61.clone();
        fractionFormat44.setNumeratorFormat(numberFormat61);
        fractionFormat29.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.Fraction fraction67 = fractionFormat29.parse("-1 / 1");
        java.lang.StringBuffer stringBuffer68 = null;
        java.text.FieldPosition fieldPosition69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer70 = fractionFormat26.format(fraction67, stringBuffer68, fieldPosition69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(fraction67);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.lang.Object obj4 = fractionFormat3.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        java.lang.Object obj15 = numberFormat13.clone();
        java.lang.String str17 = numberFormat13.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat21);
        fractionFormat3.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat13);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51);
        fractionFormat34.setNumeratorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.lang.String str57 = numberFormat51.format((java.lang.Object) (byte) 100);
        fractionFormat30.setDenominatorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65);
        java.text.NumberFormat numberFormat68 = null;
        java.text.NumberFormat numberFormat69 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat69);
        java.lang.Object obj71 = fractionFormat70.clone();
        java.text.NumberFormat numberFormat72 = null;
        java.text.NumberFormat numberFormat73 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat73);
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        java.text.NumberFormat numberFormat76 = fractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator79 = fractionFormat77.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat80 = fractionFormat77.getDenominatorFormat();
        fractionFormat74.setNumeratorFormat(numberFormat80);
        java.lang.Object obj82 = numberFormat80.clone();
        java.lang.String str84 = numberFormat80.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator87 = fractionFormat85.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat88 = fractionFormat85.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator91 = fractionFormat89.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat92 = fractionFormat89.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat88, numberFormat92);
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat80, numberFormat88);
        fractionFormat70.setDenominatorFormat(numberFormat80);
        fractionFormat67.setDenominatorFormat(numberFormat80);
        java.text.NumberFormat numberFormat97 = fractionFormat67.getDenominatorFormat();
        fractionFormat30.setDenominatorFormat(numberFormat97);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10" + "'", str17, "10");
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "100" + "'", str57, "100");
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNull(numberFormat75);
        org.junit.Assert.assertNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(attributedCharacterIterator79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "10" + "'", str84, "10");
        org.junit.Assert.assertNotNull(fractionFormat85);
        org.junit.Assert.assertNotNull(attributedCharacterIterator87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(fractionFormat89);
        org.junit.Assert.assertNotNull(attributedCharacterIterator91);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(numberFormat97);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        fractionFormat12.setNumeratorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        fractionFormat12.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.lang.String str35 = numberFormat29.format((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        fractionFormat38.setNumeratorFormat(numberFormat44);
        java.text.NumberFormat numberFormat46 = null;
        java.text.NumberFormat numberFormat47 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat47);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        fractionFormat48.setNumeratorFormat(numberFormat56);
        fractionFormat38.setDenominatorFormat(numberFormat56);
        java.text.NumberFormat numberFormat64 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat64);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = fractionFormat66.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "100" + "'", str35, "100");
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat64);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        fractionFormat33.setNumeratorFormat(numberFormat37);
        java.text.NumberFormat numberFormat44 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat33.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat45);
        java.lang.Class<?> wildcardClass47 = fractionFormat11.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setDenominatorFormat(numberFormat43);
        java.text.NumberFormat numberFormat47 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat48 = null;
        java.text.NumberFormat numberFormat49 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.lang.Object obj60 = numberFormat59.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        java.text.NumberFormat numberFormat67 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat71);
        fractionFormat50.setNumeratorFormat(numberFormat59);
        org.apache.commons.math.fraction.Fraction fraction76 = fractionFormat50.parse("10");
        java.lang.StringBuffer stringBuffer77 = null;
        java.text.FieldPosition fieldPosition78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer79 = fractionFormat2.format(fraction76, stringBuffer77, fieldPosition78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNull(numberFormat51);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fraction76);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = null;
        java.text.NumberFormat numberFormat7 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat8.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat25);
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat38 = null;
        java.text.NumberFormat numberFormat39 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat40.getNumeratorFormat();
        java.lang.Object obj42 = fractionFormat40.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        java.text.NumberFormat numberFormat59 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat72);
        fractionFormat40.setDenominatorFormat(numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator78 = fractionFormat2.formatToCharacterIterator((java.lang.Object) fractionFormat77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        java.lang.Object obj19 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        fractionFormat47.setDenominatorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        java.text.NumberFormat numberFormat62 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat75);
        java.text.NumberFormat numberFormat78 = fractionFormat77.getDenominatorFormat();
        java.lang.Object obj80 = numberFormat78.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat78);
        fractionFormat28.setDenominatorFormat(numberFormat78);
        org.apache.commons.math.fraction.Fraction fraction85 = fractionFormat28.parse("-1 / 1");
        java.lang.StringBuffer stringBuffer86 = null;
        java.text.FieldPosition fieldPosition87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer88 = fractionFormat0.format(fraction85, stringBuffer86, fieldPosition87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (-1L) + "'", obj80, (-1L));
        org.junit.Assert.assertNotNull(fraction85);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.lang.Object obj10 = numberFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat21);
        fractionFormat0.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction26 = fractionFormat0.parse("10");
        org.apache.commons.math.fraction.Fraction fraction28 = fractionFormat0.parse("100");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction28);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat12.setNumeratorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26);
        java.lang.Object obj31 = fractionFormat30.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        java.text.NumberFormat numberFormat28 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat24.parse("10");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fraction30);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        fractionFormat23.setDenominatorFormat(numberFormat29);
        java.lang.Object obj31 = numberFormat29.clone();
        fractionFormat12.setNumeratorFormat(numberFormat29);
        java.lang.Object obj33 = numberFormat29.clone();
        java.lang.Object obj34 = numberFormat29.clone();
        fractionFormat7.setDenominatorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        fractionFormat6.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat29);
        java.lang.Object obj45 = numberFormat29.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = numberFormat4.format((java.lang.Object) numberFormat29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.lang.Object obj4 = fractionFormat3.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        java.lang.Object obj15 = numberFormat13.clone();
        java.lang.String str17 = numberFormat13.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat21);
        fractionFormat3.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat13);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        java.lang.Object obj42 = numberFormat40.clone();
        java.lang.String str44 = numberFormat40.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat45 = null;
        java.text.NumberFormat numberFormat46 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat58);
        fractionFormat47.setNumeratorFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40);
        org.apache.commons.math.fraction.Fraction fraction79 = fractionFormat77.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj82 = fractionFormat80.parseObject("0 / 1");
        java.text.NumberFormat numberFormat83 = fractionFormat80.getNumeratorFormat();
        java.text.NumberFormat numberFormat84 = fractionFormat80.getNumeratorFormat();
        fractionFormat77.setDenominatorFormat(numberFormat84);
        java.text.NumberFormat numberFormat86 = fractionFormat77.getNumeratorFormat();
        java.text.NumberFormat numberFormat87 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat86, numberFormat87);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator89 = numberFormat31.formatToCharacterIterator((java.lang.Object) numberFormat87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: formatToCharacterIterator must be passed non-null object");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10" + "'", str17, "10");
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "10" + "'", str44, "10");
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertNotNull(fractionFormat80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(numberFormat83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat86);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj8 = numberFormat7.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = fractionFormat0.format((java.lang.Object) numberFormat7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        fractionFormat17.setDenominatorFormat(numberFormat23);
        java.lang.Object obj25 = numberFormat23.clone();
        fractionFormat6.setNumeratorFormat(numberFormat23);
        java.lang.Object obj27 = numberFormat23.clone();
        java.lang.Object obj28 = numberFormat23.clone();
        fractionFormat1.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23);
        fractionFormat0.setNumeratorFormat(numberFormat23);
        java.lang.Object obj33 = fractionFormat0.parseObject("100");
        java.lang.Object obj34 = fractionFormat0.clone();
        java.lang.Object obj35 = fractionFormat0.clone();
        java.text.ParsePosition parsePosition37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction38 = fractionFormat0.parse("10 / 1", parsePosition37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat33);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat37.getNumeratorFormat();
        java.lang.Class<?> wildcardClass41 = numberFormat40.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator42 = numberFormat36.formatToCharacterIterator((java.lang.Object) wildcardClass41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getNumeratorFormat();
        java.lang.Object obj23 = fractionFormat11.clone();
        java.lang.Object obj24 = fractionFormat11.clone();
        java.lang.Object obj25 = fractionFormat11.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat18);
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction49 = fractionFormat46.parse("10");
        java.lang.String str50 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction49);
        java.lang.StringBuffer stringBuffer51 = null;
        java.text.FieldPosition fieldPosition52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer53 = fractionFormat35.format(fraction49, stringBuffer51, fieldPosition52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "10 / 1" + "'", str50, "10 / 1");
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        java.lang.Object obj51 = fractionFormat47.clone();
        java.text.NumberFormat numberFormat52 = fractionFormat47.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = numberFormat52.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        fractionFormat29.setDenominatorFormat(numberFormat35);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator37 = numberFormat18.formatToCharacterIterator((java.lang.Object) fractionFormat29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.text.ParsePosition parsePosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = fractionFormat8.parseObject("-1 / 1", parsePosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat9);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.lang.Object obj46 = fractionFormat44.clone();
        org.apache.commons.math.fraction.Fraction fraction48 = fractionFormat44.parse("100");
        java.lang.String str49 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction48);
        java.lang.String str50 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction48);
        java.lang.Class<?> wildcardClass51 = fraction48.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "100 / 1" + "'", str49, "100 / 1");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "100 / 1" + "'", str50, "100 / 1");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.lang.Class<?> wildcardClass20 = numberFormat5.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat5.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat16.getDenominatorFormat();
        fractionFormat5.setDenominatorFormat(numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        java.lang.Object obj23 = fractionFormat21.parseObject("0");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.lang.Object obj4 = fractionFormat3.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        java.lang.Object obj15 = numberFormat13.clone();
        java.lang.String str17 = numberFormat13.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat21);
        fractionFormat3.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat13);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = fractionFormat30.parseObject("10");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10" + "'", str17, "10");
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat31);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = null;
        java.text.NumberFormat numberFormat7 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat8.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat25);
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.ParsePosition parsePosition39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = fractionFormat2.parseObject("100", parsePosition39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        java.lang.Object obj35 = numberFormat33.parseObject("-1 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = numberFormat33.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (-1L) + "'", obj35, (-1L));
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat46);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.lang.Object obj51 = numberFormat49.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat65.getNumeratorFormat();
        fractionFormat64.setDenominatorFormat(numberFormat70);
        java.lang.Object obj72 = numberFormat70.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat70);
        org.apache.commons.math.fraction.Fraction fraction75 = fractionFormat73.parse("0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(fraction75);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        fractionFormat15.setDenominatorFormat(numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37);
        java.text.NumberFormat numberFormat40 = null;
        java.text.NumberFormat numberFormat41 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat41);
        java.lang.Object obj43 = fractionFormat42.clone();
        java.text.NumberFormat numberFormat44 = null;
        java.text.NumberFormat numberFormat45 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        fractionFormat46.setNumeratorFormat(numberFormat52);
        java.lang.Object obj54 = numberFormat52.clone();
        java.lang.String str56 = numberFormat52.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat60);
        fractionFormat42.setDenominatorFormat(numberFormat52);
        fractionFormat39.setDenominatorFormat(numberFormat52);
        fractionFormat15.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat70 = fractionFormat15.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction72 = fractionFormat15.parse("100");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator73 = fractionFormat11.formatToCharacterIterator((java.lang.Object) fractionFormat15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(numberFormat47);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "10" + "'", str56, "10");
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fraction72);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        fractionFormat34.setNumeratorFormat(numberFormat45);
        fractionFormat11.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat11.parse("10");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fraction50);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        java.text.NumberFormat numberFormat28 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat34.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        fractionFormat34.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        fractionFormat24.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction54 = fractionFormat52.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        fractionFormat52.setDenominatorFormat(numberFormat64);
        java.text.NumberFormat numberFormat66 = fractionFormat52.getNumeratorFormat();
        java.lang.Object obj67 = fractionFormat52.clone();
        org.apache.commons.math.fraction.Fraction fraction69 = fractionFormat52.parse("100");
        java.lang.String str70 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction69);
        java.lang.StringBuffer stringBuffer71 = null;
        java.text.FieldPosition fieldPosition72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer73 = fractionFormat24.format((java.lang.Object) str70, stringBuffer71, fieldPosition72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "100 / 1" + "'", str70, "100 / 1");
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        fractionFormat31.setDenominatorFormat(numberFormat37);
        java.lang.Object obj39 = numberFormat37.clone();
        fractionFormat20.setNumeratorFormat(numberFormat37);
        fractionFormat0.setNumeratorFormat(numberFormat37);
        java.lang.Object obj43 = fractionFormat0.parseObject("100");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj43);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        fractionFormat12.setNumeratorFormat(numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat28 = fractionFormat2.getNumeratorFormat();
        java.text.ParsePosition parsePosition30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = fractionFormat2.parseObject("-1 / 1", parsePosition30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.lang.Object obj30 = fractionFormat29.clone();
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        java.lang.String str43 = numberFormat39.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat47);
        fractionFormat29.setDenominatorFormat(numberFormat39);
        fractionFormat26.setDenominatorFormat(numberFormat39);
        fractionFormat2.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat57 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.lang.Object obj73 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = fractionFormat69.getNumeratorFormat();
        java.text.NumberFormat numberFormat75 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator78 = fractionFormat76.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat79 = fractionFormat76.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat79);
        java.lang.Object obj83 = fractionFormat81.parseObject("0 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator84 = fractionFormat2.formatToCharacterIterator((java.lang.Object) fractionFormat81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "10" + "'", str43, "10");
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(attributedCharacterIterator78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat25.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        fractionFormat25.setDenominatorFormat(numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat25.getNumeratorFormat();
        fractionFormat24.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat41.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = numberFormat39.format((java.lang.Object) fractionFormat41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        java.lang.Object obj56 = fractionFormat54.clone();
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat57);
        java.text.ParsePosition parsePosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction61 = fractionFormat44.parse("0 / 1", parsePosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat11.parse("-1 / 1");
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        fractionFormat18.setNumeratorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        java.lang.String str28 = numberFormat24.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat32);
        java.text.NumberFormat numberFormat39 = null;
        java.text.NumberFormat numberFormat40 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat41.getDenominatorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat41.getNumeratorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.lang.Object obj51 = numberFormat50.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        java.text.NumberFormat numberFormat58 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat62);
        fractionFormat41.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj79 = fractionFormat77.parseObject("0 / 1");
        java.lang.Object obj81 = fractionFormat77.parseObject("0 / 1");
        java.text.NumberFormat numberFormat82 = fractionFormat77.getNumeratorFormat();
        fractionFormat76.setDenominatorFormat(numberFormat82);
        java.lang.Object obj84 = numberFormat82.clone();
        fractionFormat41.setDenominatorFormat(numberFormat82);
        fractionFormat38.setDenominatorFormat(numberFormat82);
        fractionFormat11.setDenominatorFormat(numberFormat82);
        java.text.ParsePosition parsePosition89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction90 = fractionFormat11.parse("", parsePosition89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "10" + "'", str28, "10");
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction29 = fractionFormat2.parse("0");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat2.parse("10", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.Fraction fraction10 = fractionFormat8.parse("0 / 1");
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat8.parse("100 / 1", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fraction10);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        java.text.NumberFormat numberFormat38 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat17.parse("10 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat16.formatToCharacterIterator((java.lang.Object) fraction40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fraction40);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getNumeratorFormat();
        java.lang.Object obj10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = fractionFormat8.format(obj10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat9);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        fractionFormat12.setNumeratorFormat(numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat28 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj30 = numberFormat28.parseObject("-1 / 1");
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (-1L) + "'", obj30, (-1L));
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.lang.Object obj25 = numberFormat20.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = null;
        java.text.NumberFormat numberFormat34 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat34);
        java.text.NumberFormat numberFormat36 = fractionFormat35.getDenominatorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        java.lang.Object obj45 = numberFormat44.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat56);
        fractionFormat35.setNumeratorFormat(numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat71.getNumeratorFormat();
        fractionFormat70.setDenominatorFormat(numberFormat76);
        java.lang.Object obj78 = numberFormat76.clone();
        fractionFormat35.setDenominatorFormat(numberFormat76);
        java.lang.Object obj80 = numberFormat76.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat76);
        org.apache.commons.math.fraction.Fraction fraction83 = fractionFormat81.parse("-1 / 1");
        java.text.ParsePosition parsePosition85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction86 = fractionFormat81.parse("-1 / 1", parsePosition85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(fraction83);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        fractionFormat7.setDenominatorFormat(numberFormat39);
        fractionFormat2.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat45 = fractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = fractionFormat2.parseObject("0 / 1", parsePosition47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat45);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat2.parse("10");
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        fractionFormat43.setNumeratorFormat(numberFormat49);
        java.lang.Object obj51 = numberFormat49.clone();
        java.lang.String str53 = numberFormat49.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat57);
        fractionFormat2.setDenominatorFormat(numberFormat49);
        java.lang.Class<?> wildcardClass65 = numberFormat49.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "10" + "'", str53, "10");
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat26);
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        java.text.NumberFormat numberFormat31 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat31);
        java.lang.Object obj33 = fractionFormat32.clone();
        java.text.NumberFormat numberFormat34 = null;
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        fractionFormat36.setNumeratorFormat(numberFormat42);
        java.lang.Object obj44 = numberFormat42.clone();
        java.lang.String str46 = numberFormat42.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat50);
        fractionFormat32.setDenominatorFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat29);
        fractionFormat0.setDenominatorFormat(numberFormat26);
        java.text.ParsePosition parsePosition63 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction64 = fractionFormat0.parse("10 / 1", parsePosition63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNull(numberFormat37);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "10" + "'", str46, "10");
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        fractionFormat5.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        fractionFormat5.setDenominatorFormat(numberFormat18);
        fractionFormat0.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat26.setNumeratorFormat(numberFormat43);
        java.lang.Object obj47 = numberFormat43.clone();
        java.lang.Object obj48 = numberFormat43.clone();
        fractionFormat21.setDenominatorFormat(numberFormat43);
        java.lang.Object obj50 = numberFormat43.clone();
        fractionFormat0.setNumeratorFormat(numberFormat43);
        java.lang.Object obj52 = numberFormat43.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat40);
        java.text.NumberFormat numberFormat42 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        fractionFormat43.setNumeratorFormat(numberFormat57);
        fractionFormat28.setDenominatorFormat(numberFormat57);
        java.lang.Object obj61 = numberFormat57.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj65 = fractionFormat63.parseObject("0 / 1");
        java.lang.Object obj67 = fractionFormat63.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat63.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj76 = fractionFormat74.parseObject("0 / 1");
        java.lang.Object obj78 = fractionFormat74.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat74.getNumeratorFormat();
        java.text.NumberFormat numberFormat80 = fractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator83 = fractionFormat81.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat84 = fractionFormat81.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat80, numberFormat84);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat84);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator88 = numberFormat57.formatToCharacterIterator((java.lang.Object) numberFormat68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(attributedCharacterIterator83);
        org.junit.Assert.assertNotNull(numberFormat84);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat46);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.lang.Object obj51 = numberFormat49.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat49);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = numberFormat55.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat46);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.lang.Object obj51 = numberFormat49.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat49);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        java.lang.Object obj57 = null;
        java.lang.StringBuffer stringBuffer58 = null;
        java.text.FieldPosition fieldPosition59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer60 = fractionFormat56.format(obj57, stringBuffer58, fieldPosition59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.lang.Object obj23 = fractionFormat22.clone();
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat32);
        java.lang.Object obj34 = numberFormat32.clone();
        java.lang.String str36 = numberFormat32.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat40);
        fractionFormat22.setDenominatorFormat(numberFormat32);
        fractionFormat19.setDenominatorFormat(numberFormat32);
        java.text.NumberFormat numberFormat49 = fractionFormat19.getNumeratorFormat();
        fractionFormat10.setNumeratorFormat(numberFormat49);
        java.text.ParsePosition parsePosition52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = fractionFormat10.parseObject("100 / 1", parsePosition52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "10" + "'", str36, "10");
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat49);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29);
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.lang.Object obj35 = fractionFormat34.clone();
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        fractionFormat38.setNumeratorFormat(numberFormat44);
        java.lang.Object obj46 = numberFormat44.clone();
        java.lang.String str48 = numberFormat44.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat52);
        fractionFormat34.setDenominatorFormat(numberFormat44);
        fractionFormat31.setDenominatorFormat(numberFormat44);
        fractionFormat7.setDenominatorFormat(numberFormat44);
        org.apache.commons.math.fraction.Fraction fraction63 = fractionFormat7.parse("10 / 1");
        java.lang.StringBuffer stringBuffer64 = null;
        java.text.FieldPosition fieldPosition65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer66 = fractionFormat0.format(fraction63, stringBuffer64, fieldPosition65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "10" + "'", str48, "10");
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fraction63);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat0.getDenominatorFormat();
        java.text.ParsePosition parsePosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction29 = fractionFormat0.parse("-1 / 1", parsePosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat65.getNumeratorFormat();
        fractionFormat64.setDenominatorFormat(numberFormat70);
        java.lang.Object obj72 = numberFormat70.clone();
        fractionFormat53.setNumeratorFormat(numberFormat70);
        java.lang.Object obj74 = numberFormat70.clone();
        java.lang.Object obj75 = numberFormat70.clone();
        fractionFormat48.setDenominatorFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70);
        java.text.NumberFormat numberFormat78 = fractionFormat77.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat78);
        java.text.ParsePosition parsePosition81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj82 = fractionFormat45.parseObject("", parsePosition81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat78);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        fractionFormat11.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat45);
        java.lang.Object obj48 = numberFormat45.parseObject("0 / 1");
        fractionFormat25.setNumeratorFormat(numberFormat45);
        java.text.NumberFormat numberFormat50 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = numberFormat50.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0L + "'", obj48, 0L);
        org.junit.Assert.assertNotNull(numberFormat50);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.lang.Object obj26 = fractionFormat0.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        fractionFormat38.setDenominatorFormat(numberFormat44);
        java.lang.Object obj46 = numberFormat44.clone();
        fractionFormat27.setNumeratorFormat(numberFormat44);
        java.text.NumberFormat numberFormat48 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        fractionFormat27.setNumeratorFormat(numberFormat55);
        fractionFormat0.setDenominatorFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = null;
        java.text.NumberFormat numberFormat67 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat67);
        java.text.NumberFormat numberFormat69 = fractionFormat68.getDenominatorFormat();
        java.text.NumberFormat numberFormat70 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = fractionFormat71.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat74 = fractionFormat71.getDenominatorFormat();
        fractionFormat68.setNumeratorFormat(numberFormat74);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat76.getNumeratorFormat();
        fractionFormat68.setNumeratorFormat(numberFormat79);
        java.lang.Object obj82 = numberFormat79.parseObject("0 / 1");
        fractionFormat59.setNumeratorFormat(numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat85 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79, numberFormat85);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str87 = numberFormat55.format((java.lang.Object) numberFormat79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNull(numberFormat69);
        org.junit.Assert.assertNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 0L + "'", obj82, 0L);
        org.junit.Assert.assertNotNull(numberFormat85);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.Fraction fraction23 = fractionFormat11.parse("0 / 1");
        java.text.ParsePosition parsePosition25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction26 = fractionFormat11.parse("100", parsePosition25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fraction23);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        fractionFormat7.setNumeratorFormat(numberFormat14);
        java.lang.Object obj18 = fractionFormat7.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        java.lang.Object obj48 = numberFormat46.clone();
        fractionFormat29.setNumeratorFormat(numberFormat46);
        java.lang.Object obj50 = numberFormat46.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        java.lang.StringBuffer stringBuffer52 = null;
        java.text.FieldPosition fieldPosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer54 = fractionFormat7.format((java.lang.Object) numberFormat28, stringBuffer52, fieldPosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat23.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction8 = null;
        java.lang.StringBuffer stringBuffer9 = null;
        java.text.FieldPosition fieldPosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer11 = fractionFormat0.format(fraction8, stringBuffer9, fieldPosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj16 = fractionFormat0.parseObject("0 / 1");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction18 = fractionFormat0.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        java.lang.Object obj16 = numberFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat27.parse("10");
        java.lang.String str31 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction30);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator32 = numberFormat9.formatToCharacterIterator((java.lang.Object) str31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "10 / 1" + "'", str31, "10 / 1");
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat25);
        java.text.ParsePosition parsePosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat27.parse("-1 / 1", parsePosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.ParsePosition parsePosition3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = fractionFormat0.parseObject("0", parsePosition3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat25.getNumeratorFormat();
        java.lang.Object obj29 = fractionFormat25.clone();
        java.text.NumberFormat numberFormat30 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        fractionFormat42.setNumeratorFormat(numberFormat53);
        fractionFormat25.setNumeratorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat53);
        java.lang.Object obj59 = numberFormat53.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        fractionFormat17.setDenominatorFormat(numberFormat23);
        java.lang.Object obj25 = numberFormat23.clone();
        fractionFormat6.setNumeratorFormat(numberFormat23);
        java.lang.Object obj27 = numberFormat23.clone();
        java.lang.Object obj28 = numberFormat23.clone();
        fractionFormat1.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23);
        fractionFormat0.setNumeratorFormat(numberFormat23);
        java.lang.Object obj33 = fractionFormat0.parseObject("100");
        java.lang.Class<?> wildcardClass34 = fractionFormat0.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        java.text.ParsePosition parsePosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = fractionFormat29.parseObject("0", parsePosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj15 = fractionFormat0.clone();
        org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat0.parse("100");
        java.lang.Object obj18 = fractionFormat0.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(obj18);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        fractionFormat23.setDenominatorFormat(numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat23.parse("0 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator41 = numberFormat17.formatToCharacterIterator((java.lang.Object) fractionFormat23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fraction40);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.lang.Object obj46 = fractionFormat44.clone();
        java.lang.String str48 = fractionFormat44.format((java.lang.Object) (byte) 0);
        org.apache.commons.math.fraction.Fraction fraction50 = fractionFormat44.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.lang.Object obj55 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj64 = fractionFormat62.parseObject("0 / 1");
        java.lang.Object obj66 = fractionFormat62.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat62.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj77 = fractionFormat75.parseObject("0 / 1");
        java.lang.Object obj79 = fractionFormat75.parseObject("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat75.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj83 = fractionFormat81.parseObject("0 / 1");
        java.text.NumberFormat numberFormat84 = fractionFormat81.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat80, numberFormat84);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat84);
        fractionFormat44.setDenominatorFormat(numberFormat72);
        java.text.ParsePosition parsePosition89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj90 = fractionFormat44.parseObject("10 / 1", parsePosition89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "0 / 1" + "'", str48, "0 / 1");
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(numberFormat84);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        fractionFormat7.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat18 = null;
        java.text.NumberFormat numberFormat19 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = numberFormat28.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat20.setDenominatorFormat(numberFormat28);
        java.lang.Object obj37 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat28);
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat38.parse("100 / 1");
        java.lang.String str41 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction40);
        java.lang.Class<?> wildcardClass42 = fraction40.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "100 / 1" + "'", str41, "100 / 1");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj5 = fractionFormat3.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        fractionFormat3.setNumeratorFormat(numberFormat17);
        java.lang.Object obj20 = fractionFormat3.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat22 = fractionFormat21.getNumeratorFormat();
        fractionFormat3.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = numberFormat2.format((java.lang.Object) numberFormat22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(numberFormat22);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat2.setNumeratorFormat(numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        java.lang.Object obj29 = numberFormat26.parseObject("-1 / 1");
        java.lang.Object obj30 = numberFormat26.clone();
        fractionFormat2.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        java.text.NumberFormat numberFormat38 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat38);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        fractionFormat39.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat50);
        java.text.NumberFormat numberFormat53 = null;
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        java.text.NumberFormat numberFormat57 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        fractionFormat55.setNumeratorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat61);
        fractionFormat2.setDenominatorFormat(numberFormat61);
        java.text.NumberFormat numberFormat68 = fractionFormat2.getNumeratorFormat();
        java.lang.Class<?> wildcardClass69 = numberFormat68.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (-1L) + "'", obj29, (-1L));
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat40);
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNull(numberFormat56);
        org.junit.Assert.assertNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction55 = fractionFormat53.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        fractionFormat53.setDenominatorFormat(numberFormat65);
        java.text.NumberFormat numberFormat67 = fractionFormat53.getNumeratorFormat();
        fractionFormat52.setNumeratorFormat(numberFormat67);
        java.text.NumberFormat numberFormat69 = fractionFormat52.getDenominatorFormat();
        java.lang.Object obj70 = fractionFormat52.clone();
        java.lang.StringBuffer stringBuffer71 = null;
        java.text.FieldPosition fieldPosition72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer73 = fractionFormat27.format((java.lang.Object) fractionFormat52, stringBuffer71, fieldPosition72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(obj70);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat46);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.lang.Object obj51 = numberFormat49.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat49);
        java.text.NumberFormat numberFormat54 = fractionFormat53.getDenominatorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        java.lang.Object obj66 = numberFormat65.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = fractionFormat53.format((java.lang.Object) numberFormat65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = fractionFormat10.parseObject("", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = numberFormat5.formatToCharacterIterator((java.lang.Object) (-1));
        java.lang.Class<?> wildcardClass13 = attributedCharacterIterator12.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.Fraction fraction21 = fractionFormat0.parse("100");
        java.lang.String str22 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction21);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "100 / 1" + "'", str22, "100 / 1");
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getNumeratorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        java.lang.Object obj23 = numberFormat19.parseObject("10");
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat24);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat25.parse("-1 / 1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 10L + "'", obj23, 10L);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = null;
        java.text.NumberFormat numberFormat12 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat13.getDenominatorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        fractionFormat13.setNumeratorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        fractionFormat13.setDenominatorFormat(numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat38 = null;
        java.text.NumberFormat numberFormat39 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat39);
        java.lang.Object obj41 = fractionFormat40.clone();
        java.text.NumberFormat numberFormat42 = null;
        java.text.NumberFormat numberFormat43 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat43);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        fractionFormat44.setNumeratorFormat(numberFormat50);
        java.lang.Object obj52 = numberFormat50.clone();
        java.lang.String str54 = numberFormat50.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat58);
        fractionFormat40.setDenominatorFormat(numberFormat50);
        fractionFormat37.setDenominatorFormat(numberFormat50);
        fractionFormat13.setDenominatorFormat(numberFormat50);
        org.apache.commons.math.fraction.Fraction fraction69 = fractionFormat13.parse("10 / 1");
        java.lang.StringBuffer stringBuffer70 = null;
        java.text.FieldPosition fieldPosition71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer72 = fractionFormat10.format(fraction69, stringBuffer70, fieldPosition71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "10" + "'", str54, "10");
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fraction69);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        fractionFormat7.setNumeratorFormat(numberFormat24);
        java.lang.Object obj28 = numberFormat24.clone();
        java.lang.Object obj29 = numberFormat24.clone();
        fractionFormat2.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        fractionFormat1.setNumeratorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        java.lang.Object obj61 = numberFormat39.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat39);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction64 = fractionFormat62.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1L) + "'", obj61, (-1L));
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.lang.Object obj59 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.lang.Object obj70 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat66.getNumeratorFormat();
        fractionFormat65.setDenominatorFormat(numberFormat71);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat71);
        fractionFormat46.setNumeratorFormat(numberFormat53);
        java.text.NumberFormat numberFormat75 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75);
        fractionFormat24.setDenominatorFormat(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction20 = fractionFormat2.parse("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat43);
        fractionFormat22.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj80 = fractionFormat78.parseObject("0 / 1");
        java.text.NumberFormat numberFormat81 = fractionFormat78.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat69, numberFormat81);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat81);
        java.text.ParsePosition parsePosition86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction87 = fractionFormat84.parse("100", parsePosition86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(fractionFormat78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat81);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        java.lang.Object obj29 = numberFormat22.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction33 = fractionFormat30.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat31);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.lang.Object obj12 = numberFormat11.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat23);
        fractionFormat2.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        java.lang.Object obj51 = fractionFormat47.clone();
        java.text.NumberFormat numberFormat52 = fractionFormat47.getDenominatorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59);
        java.text.NumberFormat numberFormat61 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61);
        java.lang.Object obj63 = numberFormat61.clone();
        fractionFormat2.setDenominatorFormat(numberFormat61);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = fractionFormat0.parseObject("10", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        fractionFormat5.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        fractionFormat5.setDenominatorFormat(numberFormat18);
        fractionFormat0.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat26.setNumeratorFormat(numberFormat43);
        java.lang.Object obj47 = numberFormat43.clone();
        java.lang.Object obj48 = numberFormat43.clone();
        fractionFormat21.setDenominatorFormat(numberFormat43);
        java.lang.Object obj50 = numberFormat43.clone();
        fractionFormat0.setNumeratorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat72);
        java.text.NumberFormat numberFormat74 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj77 = fractionFormat75.parseObject("0 / 1");
        java.lang.Object obj79 = fractionFormat75.parseObject("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat75.getNumeratorFormat();
        java.text.NumberFormat numberFormat81 = fractionFormat75.getNumeratorFormat();
        java.text.NumberFormat numberFormat82 = fractionFormat75.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74, numberFormat82);
        fractionFormat73.setDenominatorFormat(numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat82);
        java.text.ParsePosition parsePosition87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = fractionFormat85.parseObject("hi!", parsePosition87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(numberFormat81);
        org.junit.Assert.assertNotNull(numberFormat82);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        fractionFormat5.setNumeratorFormat(numberFormat11);
        java.lang.Object obj13 = numberFormat11.clone();
        java.lang.String str15 = numberFormat11.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        fractionFormat18.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat35);
        java.lang.Object obj48 = fractionFormat47.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        fractionFormat47.setDenominatorFormat(numberFormat55);
        fractionFormat2.setNumeratorFormat(numberFormat55);
        java.lang.Class<?> wildcardClass60 = fractionFormat2.getClass();
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "10" + "'", str15, "10");
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        fractionFormat15.setDenominatorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        fractionFormat4.setNumeratorFormat(numberFormat21);
        java.text.NumberFormat numberFormat25 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32);
        fractionFormat4.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.lang.Object obj49 = numberFormat48.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj65 = fractionFormat63.parseObject("0 / 1");
        java.lang.Object obj67 = fractionFormat63.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat63.getNumeratorFormat();
        fractionFormat62.setDenominatorFormat(numberFormat68);
        java.lang.Object obj70 = numberFormat68.clone();
        fractionFormat51.setNumeratorFormat(numberFormat68);
        java.lang.Object obj72 = numberFormat68.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat48);
        java.text.NumberFormat numberFormat75 = null;
        java.text.NumberFormat numberFormat76 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat76);
        java.text.NumberFormat numberFormat78 = fractionFormat77.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator79 = fractionFormat74.formatToCharacterIterator((java.lang.Object) fractionFormat77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNull(numberFormat78);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = fractionFormat2.parseObject("10 / 1", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.lang.Object obj26 = fractionFormat0.parseObject("0 / 1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = fractionFormat0.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat46);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        java.text.NumberFormat numberFormat50 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator58 = fractionFormat56.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat59 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70, numberFormat74);
        java.text.NumberFormat numberFormat76 = fractionFormat75.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat76);
        fractionFormat53.setNumeratorFormat(numberFormat76);
        fractionFormat51.setNumeratorFormat(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat76);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat34.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        fractionFormat34.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        java.text.NumberFormat numberFormat59 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        fractionFormat49.setNumeratorFormat(numberFormat63);
        fractionFormat34.setDenominatorFormat(numberFormat63);
        fractionFormat32.setNumeratorFormat(numberFormat63);
        java.text.NumberFormat numberFormat68 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj79 = fractionFormat77.parseObject("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat77.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat76, numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj84 = fractionFormat82.parseObject("0 / 1");
        java.lang.Object obj86 = fractionFormat82.parseObject("0 / 1");
        java.text.NumberFormat numberFormat87 = fractionFormat82.getNumeratorFormat();
        fractionFormat81.setDenominatorFormat(numberFormat87);
        java.lang.Object obj89 = numberFormat87.clone();
        fractionFormat70.setNumeratorFormat(numberFormat87);
        java.text.NumberFormat numberFormat91 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction93 = fractionFormat70.parse("10 / 1");
        java.lang.StringBuffer stringBuffer94 = null;
        java.text.FieldPosition fieldPosition95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer96 = fractionFormat69.format(fraction93, stringBuffer94, fieldPosition95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(numberFormat91);
        org.junit.Assert.assertNotNull(fraction93);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        java.text.NumberFormat numberFormat13 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat17);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = numberFormat31.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat23.setDenominatorFormat(numberFormat31);
        java.lang.Object obj40 = numberFormat31.clone();
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        java.lang.Object obj53 = numberFormat52.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat64);
        fractionFormat43.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat52);
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat70);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        fractionFormat43.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction54 = fractionFormat52.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        fractionFormat52.setDenominatorFormat(numberFormat64);
        java.text.NumberFormat numberFormat66 = fractionFormat52.getNumeratorFormat();
        fractionFormat51.setNumeratorFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat68);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = numberFormat13.format((java.lang.Object) numberFormat26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction5 = fractionFormat0.parse("100", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat20);
        java.lang.Object obj23 = fractionFormat21.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat24.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat38.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        fractionFormat42.setDenominatorFormat(numberFormat48);
        java.lang.Object obj50 = numberFormat48.clone();
        fractionFormat31.setNumeratorFormat(numberFormat48);
        java.text.NumberFormat numberFormat52 = fractionFormat31.getDenominatorFormat();
        fractionFormat24.setDenominatorFormat(numberFormat52);
        java.lang.StringBuffer stringBuffer54 = null;
        java.text.FieldPosition fieldPosition55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer56 = fractionFormat21.format((java.lang.Object) fractionFormat24, stringBuffer54, fieldPosition55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat52);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat4 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        fractionFormat1.setNumeratorFormat(numberFormat15);
        java.lang.Object obj18 = fractionFormat1.clone();
        java.lang.Object obj20 = fractionFormat1.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        fractionFormat31.setDenominatorFormat(numberFormat37);
        fractionFormat1.setDenominatorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.lang.Object obj61 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat57.getNumeratorFormat();
        fractionFormat56.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat62);
        java.lang.Object obj65 = numberFormat62.clone();
        fractionFormat1.setNumeratorFormat(numberFormat62);
        fractionFormat0.setDenominatorFormat(numberFormat62);
        org.apache.commons.math.fraction.Fraction fraction69 = fractionFormat0.parse("10 / 1");
        java.lang.String str70 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction69);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "10 / 1" + "'", str70, "10 / 1");
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        fractionFormat5.setNumeratorFormat(numberFormat11);
        java.lang.Object obj13 = numberFormat11.clone();
        java.lang.String str15 = numberFormat11.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat16 = null;
        java.text.NumberFormat numberFormat17 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        fractionFormat18.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat35);
        java.lang.Object obj48 = fractionFormat47.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        fractionFormat47.setDenominatorFormat(numberFormat55);
        fractionFormat2.setNumeratorFormat(numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj66 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = null;
        java.text.NumberFormat numberFormat68 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67, numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        java.text.NumberFormat numberFormat71 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        fractionFormat69.setNumeratorFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj79 = fractionFormat77.parseObject("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat77.getNumeratorFormat();
        fractionFormat69.setNumeratorFormat(numberFormat80);
        java.lang.Object obj83 = numberFormat80.parseObject("0 / 1");
        fractionFormat60.setNumeratorFormat(numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat85 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat80);
        java.lang.Object obj86 = fractionFormat85.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj89 = fractionFormat87.parseObject("0 / 1");
        java.lang.Object obj91 = fractionFormat87.parseObject("0 / 1");
        java.text.NumberFormat numberFormat92 = fractionFormat87.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str93 = fractionFormat85.format((java.lang.Object) numberFormat92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "10" + "'", str15, "10");
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNull(numberFormat70);
        org.junit.Assert.assertNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 0L + "'", obj83, 0L);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(fractionFormat87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(numberFormat92);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator37 = fractionFormat35.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat38 = fractionFormat35.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        fractionFormat31.setNumeratorFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        java.lang.Object obj66 = numberFormat65.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.lang.Object obj71 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat67.getNumeratorFormat();
        java.text.NumberFormat numberFormat73 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat77);
        java.text.NumberFormat numberFormat80 = fractionFormat79.getNumeratorFormat();
        fractionFormat59.setDenominatorFormat(numberFormat80);
        fractionFormat0.setNumeratorFormat(numberFormat80);
        java.text.ParsePosition parsePosition84 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction85 = fractionFormat0.parse("hi!", parsePosition84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(attributedCharacterIterator37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat80);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        fractionFormat17.setNumeratorFormat(numberFormat28);
        fractionFormat0.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat38 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46);
        fractionFormat39.setNumeratorFormat(numberFormat46);
        java.text.NumberFormat numberFormat50 = null;
        java.text.NumberFormat numberFormat51 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.lang.Object obj59 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj63 = fractionFormat61.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat61.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = numberFormat60.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat52.setDenominatorFormat(numberFormat60);
        java.lang.Object obj69 = numberFormat60.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat71.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj79 = fractionFormat77.parseObject("0 / 1");
        java.text.NumberFormat numberFormat80 = fractionFormat77.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat76, numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj84 = fractionFormat82.parseObject("0 / 1");
        java.lang.Object obj86 = fractionFormat82.parseObject("0 / 1");
        java.text.NumberFormat numberFormat87 = fractionFormat82.getNumeratorFormat();
        java.text.NumberFormat numberFormat88 = fractionFormat82.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat89 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator91 = fractionFormat89.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat92 = fractionFormat89.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = new org.apache.commons.math.fraction.FractionFormat(numberFormat88, numberFormat92);
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat76, numberFormat92);
        org.apache.commons.math.fraction.FractionFormat fractionFormat95 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat92);
        fractionFormat0.setDenominatorFormat(numberFormat60);
        java.lang.Class<?> wildcardClass97 = fractionFormat0.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(fractionFormat89);
        org.junit.Assert.assertNotNull(attributedCharacterIterator91);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.lang.Object obj10 = numberFormat9.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat21);
        fractionFormat0.setNumeratorFormat(numberFormat9);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        fractionFormat28.setNumeratorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        fractionFormat28.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        fractionFormat58.setDenominatorFormat(numberFormat64);
        java.lang.Object obj66 = numberFormat64.clone();
        fractionFormat47.setNumeratorFormat(numberFormat64);
        java.text.NumberFormat numberFormat68 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.lang.Object obj73 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = fractionFormat69.getNumeratorFormat();
        java.text.NumberFormat numberFormat75 = fractionFormat69.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75);
        fractionFormat47.setNumeratorFormat(numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat46);
        fractionFormat0.setDenominatorFormat(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        fractionFormat7.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat18 = fractionFormat7.getDenominatorFormat();
        java.text.ParsePosition parsePosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = fractionFormat7.parseObject("0 / 1", parsePosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat18);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = null;
        java.text.NumberFormat numberFormat45 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getDenominatorFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        fractionFormat46.setNumeratorFormat(numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        fractionFormat46.setNumeratorFormat(numberFormat57);
        java.lang.Object obj60 = numberFormat57.parseObject("0 / 1");
        fractionFormat37.setNumeratorFormat(numberFormat57);
        fractionFormat36.setNumeratorFormat(numberFormat57);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat12.formatToCharacterIterator((java.lang.Object) numberFormat57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(numberFormat47);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 0L + "'", obj60, 0L);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction35 = fractionFormat32.parse("10 / 1");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction37 = fractionFormat32.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fraction35);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        java.text.ParsePosition parsePosition35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1", parsePosition35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat12);
        java.text.ParsePosition parsePosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = fractionFormat13.parseObject("hi!", parsePosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        fractionFormat11.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat45);
        java.lang.Object obj48 = numberFormat45.parseObject("0 / 1");
        fractionFormat25.setNumeratorFormat(numberFormat45);
        java.text.NumberFormat numberFormat50 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) 1.0d);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj64 = fractionFormat62.parseObject("0 / 1");
        java.lang.Object obj66 = fractionFormat62.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat62.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68);
        fractionFormat59.setDenominatorFormat(numberFormat68);
        java.text.NumberFormat numberFormat71 = fractionFormat59.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer72 = null;
        java.text.FieldPosition fieldPosition73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer74 = fractionFormat52.format((java.lang.Object) fractionFormat59, stringBuffer72, fieldPosition73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0L + "'", obj48, 0L);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat71);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getNumeratorFormat();
        java.lang.Object obj23 = fractionFormat11.clone();
        java.text.ParsePosition parsePosition25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = fractionFormat11.parseObject("", parsePosition25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        fractionFormat15.setDenominatorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        fractionFormat4.setNumeratorFormat(numberFormat21);
        java.text.NumberFormat numberFormat25 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32);
        fractionFormat4.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.lang.Object obj49 = numberFormat48.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj65 = fractionFormat63.parseObject("0 / 1");
        java.lang.Object obj67 = fractionFormat63.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat63.getNumeratorFormat();
        fractionFormat62.setDenominatorFormat(numberFormat68);
        java.lang.Object obj70 = numberFormat68.clone();
        fractionFormat51.setNumeratorFormat(numberFormat68);
        java.lang.Object obj72 = numberFormat68.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat48);
        java.text.ParsePosition parsePosition76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = fractionFormat74.parseObject("100", parsePosition76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj9 = numberFormat7.parseObject("-1 / 1");
        java.lang.Object obj11 = numberFormat7.parseObject("100");
        java.lang.Object obj12 = numberFormat7.clone();
        java.lang.Object obj13 = numberFormat7.clone();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (-1L) + "'", obj9, (-1L));
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat22);
        fractionFormat11.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat45);
        java.lang.Object obj48 = numberFormat45.parseObject("0 / 1");
        fractionFormat25.setNumeratorFormat(numberFormat45);
        java.text.NumberFormat numberFormat50 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        java.text.NumberFormat numberFormat63 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction67 = fractionFormat64.parse("10");
        org.apache.commons.math.fraction.Fraction fraction69 = fractionFormat64.parse("10");
        java.lang.String str70 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction69);
        java.lang.StringBuffer stringBuffer71 = null;
        java.text.FieldPosition fieldPosition72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer73 = fractionFormat53.format(fraction69, stringBuffer71, fieldPosition72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0L + "'", obj48, 0L);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "10 / 1" + "'", str70, "10 / 1");
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.lang.Object obj20 = fractionFormat19.clone();
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat29);
        java.lang.Object obj31 = numberFormat29.clone();
        java.lang.String str33 = numberFormat29.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat37);
        fractionFormat19.setDenominatorFormat(numberFormat29);
        fractionFormat16.setDenominatorFormat(numberFormat29);
        java.text.NumberFormat numberFormat46 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.lang.Object obj73 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat74 = fractionFormat69.getNumeratorFormat();
        fractionFormat68.setDenominatorFormat(numberFormat74);
        java.lang.Object obj76 = numberFormat74.clone();
        fractionFormat57.setNumeratorFormat(numberFormat74);
        java.lang.Object obj78 = numberFormat74.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat74);
        java.text.NumberFormat numberFormat80 = fractionFormat79.getDenominatorFormat();
        java.lang.Object obj82 = numberFormat80.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat80);
        java.text.NumberFormat numberFormat84 = fractionFormat83.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat84);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "10" + "'", str33, "10");
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (-1L) + "'", obj82, (-1L));
        org.junit.Assert.assertNotNull(numberFormat84);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        java.lang.Object obj24 = numberFormat22.clone();
        fractionFormat5.setNumeratorFormat(numberFormat22);
        java.lang.Object obj26 = numberFormat22.clone();
        java.lang.Object obj27 = numberFormat22.clone();
        fractionFormat0.setDenominatorFormat(numberFormat22);
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        fractionFormat31.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        fractionFormat31.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.lang.String str54 = numberFormat48.format((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = null;
        java.text.NumberFormat numberFormat56 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat56);
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        java.text.NumberFormat numberFormat59 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        fractionFormat57.setNumeratorFormat(numberFormat63);
        java.text.NumberFormat numberFormat65 = null;
        java.text.NumberFormat numberFormat66 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat66);
        java.text.NumberFormat numberFormat68 = fractionFormat67.getNumeratorFormat();
        java.text.NumberFormat numberFormat69 = fractionFormat67.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj74 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat76.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat75, numberFormat79);
        fractionFormat67.setNumeratorFormat(numberFormat75);
        fractionFormat57.setDenominatorFormat(numberFormat75);
        java.text.NumberFormat numberFormat83 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat83);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = fractionFormat0.format((java.lang.Object) fractionFormat84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "100" + "'", str54, "100");
        org.junit.Assert.assertNull(numberFormat58);
        org.junit.Assert.assertNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNull(numberFormat68);
        org.junit.Assert.assertNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat83);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12);
        java.text.NumberFormat numberFormat29 = null;
        java.text.NumberFormat numberFormat30 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat30);
        java.text.NumberFormat numberFormat32 = fractionFormat31.getDenominatorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        fractionFormat31.setNumeratorFormat(numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        fractionFormat31.setNumeratorFormat(numberFormat48);
        fractionFormat28.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat62);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj66 = fractionFormat64.parseObject("0 / 1");
        java.lang.Object obj68 = fractionFormat64.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat64.getNumeratorFormat();
        fractionFormat63.setDenominatorFormat(numberFormat69);
        java.lang.Object obj71 = numberFormat69.clone();
        fractionFormat52.setNumeratorFormat(numberFormat69);
        java.text.NumberFormat numberFormat73 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj76 = fractionFormat74.parseObject("0 / 1");
        java.lang.Object obj78 = fractionFormat74.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat74.getNumeratorFormat();
        java.text.NumberFormat numberFormat80 = fractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat80);
        fractionFormat52.setNumeratorFormat(numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj85 = fractionFormat83.parseObject("0 / 1");
        java.lang.Object obj87 = fractionFormat83.parseObject("0 / 1");
        java.text.NumberFormat numberFormat88 = fractionFormat83.getNumeratorFormat();
        java.text.NumberFormat numberFormat89 = fractionFormat83.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator92 = fractionFormat90.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat93 = fractionFormat90.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat89, numberFormat93);
        org.apache.commons.math.fraction.FractionFormat fractionFormat95 = new org.apache.commons.math.fraction.FractionFormat(numberFormat89);
        java.text.NumberFormat numberFormat96 = fractionFormat95.getDenominatorFormat();
        java.lang.Object obj97 = numberFormat96.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat98 = new org.apache.commons.math.fraction.FractionFormat(numberFormat80, numberFormat96);
        fractionFormat28.setNumeratorFormat(numberFormat80);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat32);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(fractionFormat90);
        org.junit.Assert.assertNotNull(attributedCharacterIterator92);
        org.junit.Assert.assertNotNull(numberFormat93);
        org.junit.Assert.assertNotNull(numberFormat96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction35 = fractionFormat32.parse("10 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat32.getDenominatorFormat();
        java.lang.Class<?> wildcardClass37 = numberFormat36.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = numberFormat32.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat24.setDenominatorFormat(numberFormat32);
        java.lang.Object obj41 = numberFormat32.clone();
        java.lang.Object obj42 = numberFormat32.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = numberFormat6.format((java.lang.Object) numberFormat32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction28 = fractionFormat26.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        fractionFormat22.setDenominatorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat28);
        java.lang.Object obj31 = numberFormat28.clone();
        java.lang.StringBuffer stringBuffer32 = null;
        java.text.FieldPosition fieldPosition33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer34 = fractionFormat2.format(obj31, stringBuffer32, fieldPosition33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        java.lang.Object obj16 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction56 = fractionFormat54.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        fractionFormat54.setDenominatorFormat(numberFormat66);
        java.text.NumberFormat numberFormat68 = fractionFormat54.getNumeratorFormat();
        fractionFormat53.setNumeratorFormat(numberFormat68);
        java.text.NumberFormat numberFormat70 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat70);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat2.formatToCharacterIterator((java.lang.Object) numberFormat70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat70);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.lang.Object obj10 = fractionFormat8.clone();
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator24 = numberFormat11.formatToCharacterIterator((java.lang.Object) fractionFormat22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(numberFormat23);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        fractionFormat10.setDenominatorFormat(numberFormat16);
        java.text.ParsePosition parsePosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = fractionFormat10.parseObject("10", parsePosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        fractionFormat17.setDenominatorFormat(numberFormat23);
        java.lang.Object obj25 = numberFormat23.clone();
        fractionFormat6.setNumeratorFormat(numberFormat23);
        java.lang.Object obj27 = numberFormat23.clone();
        java.lang.Object obj28 = numberFormat23.clone();
        fractionFormat1.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23);
        fractionFormat0.setNumeratorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat36);
        java.lang.Object obj38 = numberFormat23.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.lang.Object obj30 = fractionFormat29.clone();
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        java.lang.String str43 = numberFormat39.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat47);
        fractionFormat29.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat55 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        java.text.NumberFormat numberFormat62 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = fractionFormat68.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat71 = fractionFormat68.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator74 = fractionFormat72.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat75 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat71, numberFormat75);
        fractionFormat67.setNumeratorFormat(numberFormat71);
        fractionFormat29.setNumeratorFormat(numberFormat71);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator79 = fractionFormat24.formatToCharacterIterator((java.lang.Object) numberFormat71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "10" + "'", str43, "10");
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator74);
        org.junit.Assert.assertNotNull(numberFormat75);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        fractionFormat27.setDenominatorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        fractionFormat53.setDenominatorFormat(numberFormat59);
        java.lang.Object obj61 = numberFormat59.clone();
        fractionFormat42.setNumeratorFormat(numberFormat59);
        fractionFormat27.setDenominatorFormat(numberFormat59);
        org.apache.commons.math.fraction.Fraction fraction65 = fractionFormat27.parse("10");
        java.lang.StringBuffer stringBuffer66 = null;
        java.text.FieldPosition fieldPosition67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer68 = fractionFormat24.format((java.lang.Object) "10", stringBuffer66, fieldPosition67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(fraction65);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat17);
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        fractionFormat22.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat0.setDenominatorFormat(numberFormat32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction35 = fractionFormat32.parse("10 / 1");
        java.lang.Object obj37 = fractionFormat32.parseObject("0 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        fractionFormat17.setDenominatorFormat(numberFormat23);
        java.lang.Object obj25 = numberFormat23.clone();
        fractionFormat6.setNumeratorFormat(numberFormat23);
        java.lang.Object obj27 = numberFormat23.clone();
        java.lang.Object obj28 = numberFormat23.clone();
        fractionFormat1.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23);
        fractionFormat0.setNumeratorFormat(numberFormat23);
        java.lang.Object obj33 = fractionFormat0.parseObject("100");
        java.text.NumberFormat numberFormat34 = fractionFormat0.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) 1.0d);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15);
        fractionFormat6.setDenominatorFormat(numberFormat15);
        java.lang.Object obj19 = numberFormat15.parseObject("10 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 10L + "'", obj19, 10L);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        fractionFormat7.setDenominatorFormat(numberFormat39);
        fractionFormat2.setDenominatorFormat(numberFormat39);
        java.text.ParsePosition parsePosition46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat2.parse("10", parsePosition46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        fractionFormat12.setDenominatorFormat(numberFormat18);
        java.lang.Object obj20 = numberFormat18.clone();
        fractionFormat1.setNumeratorFormat(numberFormat18);
        java.lang.Object obj22 = numberFormat18.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat18);
        java.text.NumberFormat numberFormat24 = null;
        java.text.NumberFormat numberFormat25 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        fractionFormat26.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat26.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction43 = fractionFormat26.parse("0 / 1");
        java.lang.StringBuffer stringBuffer44 = null;
        java.text.FieldPosition fieldPosition45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer46 = fractionFormat23.format(fraction43, stringBuffer44, fieldPosition45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fraction43);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat30);
        org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat37.parse("100 / 1");
        java.text.ParsePosition parsePosition41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = fractionFormat37.parseObject("10 / 1", parsePosition41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fraction39);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        fractionFormat34.setNumeratorFormat(numberFormat45);
        fractionFormat11.setDenominatorFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = fractionFormat53.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat56 = fractionFormat53.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj73 = fractionFormat71.parseObject("0 / 1");
        java.lang.Object obj75 = fractionFormat71.parseObject("0 / 1");
        java.text.NumberFormat numberFormat76 = fractionFormat71.getNumeratorFormat();
        fractionFormat70.setDenominatorFormat(numberFormat76);
        java.lang.Object obj78 = numberFormat76.clone();
        fractionFormat59.setNumeratorFormat(numberFormat76);
        java.lang.Object obj80 = numberFormat76.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat76);
        java.text.NumberFormat numberFormat82 = fractionFormat81.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction84 = fractionFormat81.parse("10 / 1");
        java.lang.StringBuffer stringBuffer85 = null;
        java.text.FieldPosition fieldPosition86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer87 = fractionFormat11.format((java.lang.Object) "10 / 1", stringBuffer85, fieldPosition86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(fraction84);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.lang.Object obj26 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat0.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = fractionFormat0.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat2.parse("-1 / 1");
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat46 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        fractionFormat43.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat60 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60, numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        java.lang.Object obj78 = numberFormat77.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj81 = fractionFormat79.parseObject("0 / 1");
        java.lang.Object obj83 = fractionFormat79.parseObject("0 / 1");
        java.text.NumberFormat numberFormat84 = fractionFormat79.getNumeratorFormat();
        java.text.NumberFormat numberFormat85 = fractionFormat79.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator88 = fractionFormat86.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat89 = fractionFormat86.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat85, numberFormat89);
        org.apache.commons.math.fraction.FractionFormat fractionFormat91 = new org.apache.commons.math.fraction.FractionFormat(numberFormat77, numberFormat89);
        java.text.NumberFormat numberFormat92 = fractionFormat91.getNumeratorFormat();
        fractionFormat71.setDenominatorFormat(numberFormat92);
        fractionFormat2.setNumeratorFormat(numberFormat92);
        java.lang.Object obj95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator96 = numberFormat92.formatToCharacterIterator(obj95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: formatToCharacterIterator must be passed non-null object");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(numberFormat84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(attributedCharacterIterator88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(numberFormat92);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.lang.Object obj52 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat53 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat48.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54);
        fractionFormat45.setNumeratorFormat(numberFormat54);
        java.text.NumberFormat numberFormat58 = null;
        java.text.NumberFormat numberFormat59 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat59);
        java.lang.Object obj61 = fractionFormat60.clone();
        java.text.NumberFormat numberFormat62 = null;
        java.text.NumberFormat numberFormat63 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        java.text.NumberFormat numberFormat66 = fractionFormat64.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        fractionFormat64.setNumeratorFormat(numberFormat70);
        java.lang.Object obj72 = numberFormat70.clone();
        java.lang.String str74 = numberFormat70.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator77 = fractionFormat75.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat78 = fractionFormat75.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = fractionFormat79.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat82 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78, numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70, numberFormat78);
        fractionFormat60.setDenominatorFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat88 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70);
        org.apache.commons.math.fraction.Fraction fraction89 = null;
        java.lang.StringBuffer stringBuffer90 = null;
        java.text.FieldPosition fieldPosition91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer92 = fractionFormat88.format(fraction89, stringBuffer90, fieldPosition91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "10" + "'", str74, "10");
        org.junit.Assert.assertNotNull(fractionFormat75);
        org.junit.Assert.assertNotNull(attributedCharacterIterator77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(numberFormat82);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.lang.Object obj45 = fractionFormat44.clone();
        java.text.NumberFormat numberFormat46 = fractionFormat44.getDenominatorFormat();
        java.text.ParsePosition parsePosition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = fractionFormat44.parseObject("100 / 1", parsePosition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = null;
        java.text.NumberFormat numberFormat46 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        fractionFormat47.setNumeratorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat55.getNumeratorFormat();
        fractionFormat47.setNumeratorFormat(numberFormat58);
        java.lang.Object obj61 = numberFormat58.parseObject("0 / 1");
        fractionFormat38.setNumeratorFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat64);
        java.text.NumberFormat numberFormat66 = fractionFormat65.getDenominatorFormat();
        java.text.NumberFormat numberFormat67 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat67);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = fractionFormat8.format((java.lang.Object) fractionFormat68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNull(numberFormat48);
        org.junit.Assert.assertNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0L + "'", obj61, 0L);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat67);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        java.lang.Object obj11 = numberFormat8.clone();
        java.lang.Object obj13 = numberFormat8.parseObject("100");
        java.lang.Object obj15 = numberFormat8.parseObject("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        fractionFormat31.setDenominatorFormat(numberFormat37);
        java.lang.Object obj39 = numberFormat37.clone();
        fractionFormat20.setNumeratorFormat(numberFormat37);
        java.text.NumberFormat numberFormat41 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.lang.Object obj46 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat42.getNumeratorFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        fractionFormat20.setNumeratorFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat48);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator52 = numberFormat8.formatToCharacterIterator((java.lang.Object) numberFormat48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat46.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        java.text.NumberFormat numberFormat56 = fractionFormat50.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = fractionFormat57.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat60 = fractionFormat57.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat56, numberFormat60);
        fractionFormat46.setNumeratorFormat(numberFormat60);
        java.text.NumberFormat numberFormat63 = fractionFormat46.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str64 = fractionFormat44.format((java.lang.Object) fractionFormat46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat63);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        fractionFormat12.setNumeratorFormat(numberFormat18);
        java.lang.Object obj20 = numberFormat18.clone();
        java.lang.String str22 = numberFormat18.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat25.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        fractionFormat25.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat42);
        java.text.NumberFormat numberFormat55 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = numberFormat8.format((java.lang.Object) fractionFormat56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "10" + "'", str22, "10");
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat55);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat2.getDenominatorFormat();
        java.lang.Class<?> wildcardClass16 = fractionFormat2.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat28.getNumeratorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        fractionFormat28.setNumeratorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat45);
        java.lang.Object obj58 = fractionFormat57.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65);
        fractionFormat57.setDenominatorFormat(numberFormat65);
        fractionFormat12.setNumeratorFormat(numberFormat65);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = numberFormat9.format((java.lang.Object) fractionFormat12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator16 = fractionFormat14.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        java.text.NumberFormat numberFormat19 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.lang.Object obj36 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat32.getNumeratorFormat();
        fractionFormat31.setDenominatorFormat(numberFormat37);
        java.lang.Object obj39 = numberFormat37.clone();
        fractionFormat20.setNumeratorFormat(numberFormat37);
        java.lang.Object obj41 = numberFormat37.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat37);
        java.text.NumberFormat numberFormat43 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction45 = fractionFormat42.parse("10 / 1");
        java.lang.StringBuffer stringBuffer46 = null;
        java.text.FieldPosition fieldPosition47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer48 = fractionFormat8.format(fraction45, stringBuffer46, fieldPosition47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fraction45);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = numberFormat9.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat46);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getDenominatorFormat();
        java.lang.Object obj51 = numberFormat49.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat60);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj64 = fractionFormat62.parseObject("0 / 1");
        java.lang.Object obj66 = fractionFormat62.parseObject("0 / 1");
        java.text.NumberFormat numberFormat67 = fractionFormat62.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68);
        fractionFormat61.setNumeratorFormat(numberFormat68);
        java.text.NumberFormat numberFormat72 = null;
        java.text.NumberFormat numberFormat73 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat73);
        java.text.NumberFormat numberFormat75 = fractionFormat74.getDenominatorFormat();
        java.text.NumberFormat numberFormat76 = fractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj79 = fractionFormat77.parseObject("0 / 1");
        java.lang.Object obj81 = fractionFormat77.parseObject("0 / 1");
        java.text.NumberFormat numberFormat82 = fractionFormat77.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj85 = fractionFormat83.parseObject("0 / 1");
        java.text.NumberFormat numberFormat86 = fractionFormat83.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat87 = new org.apache.commons.math.fraction.FractionFormat(numberFormat82, numberFormat86);
        java.text.AttributedCharacterIterator attributedCharacterIterator89 = numberFormat82.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat74.setDenominatorFormat(numberFormat82);
        java.lang.Object obj91 = numberFormat82.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat82);
        org.apache.commons.math.fraction.Fraction fraction94 = fractionFormat92.parse("100 / 1");
        java.lang.String str95 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction94);
        java.lang.StringBuffer stringBuffer96 = null;
        java.text.FieldPosition fieldPosition97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer98 = fractionFormat53.format(fraction94, stringBuffer96, fieldPosition97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNull(numberFormat75);
        org.junit.Assert.assertNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat83);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(numberFormat86);
        org.junit.Assert.assertNotNull(attributedCharacterIterator89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(fraction94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "100 / 1" + "'", str95, "100 / 1");
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction35 = fractionFormat32.parse("10 / 1");
        java.lang.Object obj36 = fractionFormat32.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        java.lang.Object obj24 = fractionFormat23.clone();
        org.apache.commons.math.fraction.Fraction fraction26 = fractionFormat23.parse("10 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat23.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction29 = fractionFormat23.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(numberFormat27);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.String str4 = fractionFormat0.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        java.lang.Object obj32 = numberFormat27.clone();
        fractionFormat5.setDenominatorFormat(numberFormat27);
        fractionFormat0.setNumeratorFormat(numberFormat27);
        java.text.NumberFormat numberFormat35 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        java.text.NumberFormat numberFormat37 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat36.setNumeratorFormat(numberFormat37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 / 1" + "'", str4, "-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat35);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.lang.Object obj17 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat19 = fractionFormat18.getNumeratorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19);
        java.lang.Object obj23 = numberFormat19.parseObject("10");
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        java.text.ParsePosition parsePosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = fractionFormat25.parseObject("100 / 1", parsePosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 10L + "'", obj23, 10L);
        org.junit.Assert.assertNull(numberFormat26);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat46.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat51);
        java.lang.Object obj53 = numberFormat51.clone();
        fractionFormat34.setNumeratorFormat(numberFormat51);
        java.lang.Object obj55 = numberFormat51.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat51);
        fractionFormat23.setDenominatorFormat(numberFormat51);
        java.lang.Object obj58 = numberFormat51.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat50);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getNumeratorFormat();
        fractionFormat30.setNumeratorFormat(numberFormat53);
        java.text.NumberFormat numberFormat55 = null;
        java.text.NumberFormat numberFormat56 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat55, numberFormat56);
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        java.text.NumberFormat numberFormat59 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        fractionFormat57.setNumeratorFormat(numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.lang.Object obj69 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat70 = fractionFormat65.getNumeratorFormat();
        fractionFormat57.setDenominatorFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj75 = fractionFormat73.parseObject("0 / 1");
        java.lang.Object obj77 = fractionFormat73.parseObject("0 / 1");
        java.text.NumberFormat numberFormat78 = fractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj81 = fractionFormat79.parseObject("0 / 1");
        java.text.NumberFormat numberFormat82 = fractionFormat79.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78, numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj86 = fractionFormat84.parseObject("0 / 1");
        java.lang.Object obj88 = fractionFormat84.parseObject("0 / 1");
        java.text.NumberFormat numberFormat89 = fractionFormat84.getNumeratorFormat();
        fractionFormat83.setDenominatorFormat(numberFormat89);
        java.lang.Object obj91 = numberFormat89.clone();
        fractionFormat72.setNumeratorFormat(numberFormat89);
        fractionFormat57.setDenominatorFormat(numberFormat89);
        org.apache.commons.math.fraction.Fraction fraction95 = fractionFormat57.parse("-1 / 1");
        java.lang.StringBuffer stringBuffer96 = null;
        java.text.FieldPosition fieldPosition97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer98 = fractionFormat30.format((java.lang.Object) "-1 / 1", stringBuffer96, fieldPosition97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNull(numberFormat58);
        org.junit.Assert.assertNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(fractionFormat84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(fraction95);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        fractionFormat12.setDenominatorFormat(numberFormat18);
        java.lang.Object obj20 = numberFormat18.clone();
        fractionFormat1.setNumeratorFormat(numberFormat18);
        java.lang.Object obj22 = numberFormat18.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat18);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat16.getNumeratorFormat();
        fractionFormat15.setDenominatorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        fractionFormat4.setNumeratorFormat(numberFormat21);
        java.text.NumberFormat numberFormat25 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32);
        fractionFormat4.setNumeratorFormat(numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41);
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.lang.Object obj49 = numberFormat48.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj65 = fractionFormat63.parseObject("0 / 1");
        java.lang.Object obj67 = fractionFormat63.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat63.getNumeratorFormat();
        fractionFormat62.setDenominatorFormat(numberFormat68);
        java.lang.Object obj70 = numberFormat68.clone();
        fractionFormat51.setNumeratorFormat(numberFormat68);
        java.lang.Object obj72 = numberFormat68.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = null;
        java.text.NumberFormat numberFormat4 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat4);
        java.text.NumberFormat numberFormat6 = fractionFormat5.getDenominatorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        fractionFormat5.setNumeratorFormat(numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        fractionFormat5.setDenominatorFormat(numberFormat18);
        fractionFormat0.setDenominatorFormat(numberFormat18);
        java.lang.Object obj21 = numberFormat18.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat25.getNumeratorFormat();
        java.lang.Object obj29 = fractionFormat25.clone();
        java.text.NumberFormat numberFormat30 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        fractionFormat42.setNumeratorFormat(numberFormat53);
        fractionFormat25.setNumeratorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat53);
        java.text.NumberFormat numberFormat59 = fractionFormat58.getDenominatorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat58.getNumeratorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        java.lang.Class<?> wildcardClass48 = fraction47.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.Fraction fraction12 = fractionFormat10.parse("10 / 1");
        java.text.ParsePosition parsePosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat10.parse("0 / 1", parsePosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fraction12);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat10.parse("10");
        org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat10.parse("10");
        org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat10.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat18.clone();
        org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat18.parse("0 / 1");
        java.lang.String str28 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction27);
        java.lang.String str29 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction27);
        java.lang.StringBuffer stringBuffer30 = null;
        java.text.FieldPosition fieldPosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer32 = fractionFormat10.format(fraction27, stringBuffer30, fieldPosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "0 / 1" + "'", str28, "0 / 1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "0 / 1" + "'", str29, "0 / 1");
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        java.lang.Object obj31 = numberFormat9.clone();
        java.lang.Object obj32 = numberFormat9.clone();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21);
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat25.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        java.lang.Object obj35 = numberFormat34.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat46);
        fractionFormat25.setNumeratorFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction51 = fractionFormat25.parse("10");
        java.lang.StringBuffer stringBuffer52 = null;
        java.text.FieldPosition fieldPosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer54 = fractionFormat22.format(fraction51, stringBuffer52, fieldPosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fraction51);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        java.text.NumberFormat numberFormat20 = null;
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat0.setNumeratorFormat(numberFormat20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: numerator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        fractionFormat17.setDenominatorFormat(numberFormat23);
        java.lang.Object obj25 = numberFormat23.clone();
        fractionFormat6.setNumeratorFormat(numberFormat23);
        java.lang.Object obj27 = numberFormat23.clone();
        java.lang.Object obj28 = numberFormat23.clone();
        fractionFormat1.setDenominatorFormat(numberFormat23);
        java.lang.Object obj30 = numberFormat23.clone();
        java.lang.Object obj32 = numberFormat23.parseObject("-1 / 1");
        fractionFormat0.setDenominatorFormat(numberFormat23);
        java.text.NumberFormat numberFormat34 = null;
        java.text.NumberFormat numberFormat35 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat35);
        java.lang.Object obj37 = fractionFormat36.clone();
        java.lang.Object obj38 = fractionFormat36.clone();
        java.text.NumberFormat numberFormat39 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = null;
        java.text.NumberFormat numberFormat41 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat42.getDenominatorFormat();
        java.text.NumberFormat numberFormat44 = fractionFormat42.getNumeratorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        fractionFormat42.setNumeratorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat59);
        fractionFormat36.setDenominatorFormat(numberFormat49);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49);
        java.lang.StringBuffer stringBuffer73 = null;
        java.text.FieldPosition fieldPosition74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer75 = fractionFormat0.format((java.lang.Object) fractionFormat72, stringBuffer73, fieldPosition74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (-1L) + "'", obj32, (-1L));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat25.getNumeratorFormat();
        java.lang.Object obj29 = fractionFormat25.clone();
        java.text.NumberFormat numberFormat30 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat50.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat53 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat53);
        fractionFormat42.setNumeratorFormat(numberFormat53);
        fractionFormat25.setNumeratorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj65 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat66 = null;
        java.text.NumberFormat numberFormat67 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat67);
        java.text.NumberFormat numberFormat69 = fractionFormat68.getDenominatorFormat();
        java.text.NumberFormat numberFormat70 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = fractionFormat71.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat74 = fractionFormat71.getDenominatorFormat();
        fractionFormat68.setNumeratorFormat(numberFormat74);
        org.apache.commons.math.fraction.FractionFormat fractionFormat76 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj78 = fractionFormat76.parseObject("0 / 1");
        java.text.NumberFormat numberFormat79 = fractionFormat76.getNumeratorFormat();
        fractionFormat68.setNumeratorFormat(numberFormat79);
        java.lang.Object obj82 = numberFormat79.parseObject("0 / 1");
        fractionFormat59.setNumeratorFormat(numberFormat79);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat85 = fractionFormat84.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = new org.apache.commons.math.fraction.FractionFormat(numberFormat79, numberFormat85);
        java.text.NumberFormat numberFormat87 = fractionFormat86.getDenominatorFormat();
        java.text.NumberFormat numberFormat88 = null;
        java.text.NumberFormat numberFormat89 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat88, numberFormat89);
        java.text.NumberFormat numberFormat91 = fractionFormat90.getDenominatorFormat();
        java.text.NumberFormat numberFormat92 = fractionFormat90.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat93 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator95 = fractionFormat93.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat96 = fractionFormat93.getDenominatorFormat();
        fractionFormat90.setNumeratorFormat(numberFormat96);
        org.apache.commons.math.fraction.FractionFormat fractionFormat98 = new org.apache.commons.math.fraction.FractionFormat(numberFormat87, numberFormat96);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str99 = fractionFormat58.format((java.lang.Object) numberFormat87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNull(numberFormat69);
        org.junit.Assert.assertNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 0L + "'", obj82, 0L);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNull(numberFormat91);
        org.junit.Assert.assertNull(numberFormat92);
        org.junit.Assert.assertNotNull(fractionFormat93);
        org.junit.Assert.assertNotNull(attributedCharacterIterator95);
        org.junit.Assert.assertNotNull(numberFormat96);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction2 = fractionFormat0.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator5 = fractionFormat3.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat6 = fractionFormat3.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.text.NumberFormat numberFormat12 = fractionFormat11.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat12);
        java.text.NumberFormat numberFormat14 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        fractionFormat15.setNumeratorFormat(numberFormat29);
        fractionFormat0.setDenominatorFormat(numberFormat29);
        java.lang.Object obj33 = numberFormat29.clone();
        java.lang.Object obj34 = numberFormat29.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        fractionFormat46.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj59 = fractionFormat57.parseObject("0 / 1");
        java.lang.Object obj61 = fractionFormat57.parseObject("0 / 1");
        java.text.NumberFormat numberFormat62 = fractionFormat57.getNumeratorFormat();
        java.text.NumberFormat numberFormat63 = fractionFormat57.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator66 = fractionFormat64.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat67 = fractionFormat64.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat63, numberFormat67);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat76);
        fractionFormat68.setNumeratorFormat(numberFormat72);
        fractionFormat46.setNumeratorFormat(numberFormat72);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str80 = numberFormat29.format((java.lang.Object) numberFormat72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(attributedCharacterIterator5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(attributedCharacterIterator66);
        org.junit.Assert.assertNotNull(numberFormat67);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        java.lang.Object obj3 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator10 = fractionFormat8.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat11 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        fractionFormat25.setDenominatorFormat(numberFormat31);
        java.lang.Object obj33 = numberFormat31.clone();
        fractionFormat14.setNumeratorFormat(numberFormat31);
        java.lang.Object obj35 = numberFormat31.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat31);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction39 = fractionFormat36.parse("10 / 1");
        java.lang.StringBuffer stringBuffer40 = null;
        java.text.FieldPosition fieldPosition41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer42 = fractionFormat0.format(fraction39, stringBuffer40, fieldPosition41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(attributedCharacterIterator10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fraction39);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        java.text.NumberFormat numberFormat48 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat49 = null;
        java.text.NumberFormat numberFormat50 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        java.text.NumberFormat numberFormat53 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        fractionFormat51.setNumeratorFormat(numberFormat57);
        java.lang.Object obj59 = numberFormat57.clone();
        java.lang.String str61 = numberFormat57.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj74 = fractionFormat72.parseObject("0 / 1");
        java.lang.Object obj76 = fractionFormat72.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat72.getNumeratorFormat();
        java.text.NumberFormat numberFormat78 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator81 = fractionFormat79.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat82 = fractionFormat79.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78, numberFormat82);
        org.apache.commons.math.fraction.FractionFormat fractionFormat84 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78);
        fractionFormat71.setNumeratorFormat(numberFormat78);
        fractionFormat45.setNumeratorFormat(numberFormat78);
        java.text.ParsePosition parsePosition88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = fractionFormat45.parseObject("100 / 1", parsePosition88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNull(numberFormat52);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "10" + "'", str61, "10");
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(fractionFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator81);
        org.junit.Assert.assertNotNull(numberFormat82);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat27.getNumeratorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat27.getDenominatorFormat();
        java.lang.Object obj32 = fractionFormat27.clone();
        java.text.NumberFormat numberFormat33 = fractionFormat27.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat11.formatToCharacterIterator((java.lang.Object) fractionFormat27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNull(numberFormat33);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        fractionFormat7.setDenominatorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        fractionFormat7.setDenominatorFormat(numberFormat39);
        fractionFormat2.setDenominatorFormat(numberFormat39);
        java.text.NumberFormat numberFormat45 = fractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(numberFormat45);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21);
        java.lang.Class<?> wildcardClass23 = fractionFormat22.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat11);
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.lang.Object obj17 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat18 = fractionFormat13.getNumeratorFormat();
        fractionFormat12.setDenominatorFormat(numberFormat18);
        java.lang.Object obj20 = numberFormat18.clone();
        fractionFormat1.setNumeratorFormat(numberFormat18);
        java.lang.Object obj22 = numberFormat18.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat18);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = numberFormat24.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        fractionFormat7.setNumeratorFormat(numberFormat14);
        java.text.NumberFormat numberFormat18 = null;
        java.text.NumberFormat numberFormat19 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat18, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        java.text.NumberFormat numberFormat22 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = numberFormat28.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat20.setDenominatorFormat(numberFormat28);
        java.lang.Object obj37 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat28);
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat38.parse("100 / 1");
        java.lang.String str41 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction40);
        java.lang.String str42 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction40);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "100 / 1" + "'", str41, "100 / 1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "100 / 1" + "'", str42, "100 / 1");
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) 1.0d);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15);
        fractionFormat6.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat18 = fractionFormat6.getDenominatorFormat();
        java.lang.Object obj19 = fractionFormat6.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(obj19);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = numberFormat20.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat12.setDenominatorFormat(numberFormat20);
        java.lang.Object obj29 = numberFormat20.clone();
        java.lang.Object obj31 = numberFormat20.parseObject("0 / 1");
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = numberFormat9.formatToCharacterIterator(obj31);
        java.lang.Class<?> wildcardClass33 = numberFormat9.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0L + "'", obj31, 0L);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat23.clone();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction28 = fractionFormat23.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        java.lang.Object obj35 = numberFormat33.clone();
        java.lang.String str37 = numberFormat33.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat38 = null;
        java.text.NumberFormat numberFormat39 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat39);
        java.text.NumberFormat numberFormat41 = fractionFormat40.getDenominatorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat40.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator46 = fractionFormat44.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat47 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat51);
        fractionFormat40.setNumeratorFormat(numberFormat47);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat57);
        java.text.NumberFormat numberFormat70 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        java.text.NumberFormat numberFormat74 = fractionFormat72.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70, numberFormat74);
        fractionFormat11.setNumeratorFormat(numberFormat74);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "10" + "'", str37, "10");
        org.junit.Assert.assertNull(numberFormat41);
        org.junit.Assert.assertNull(numberFormat42);
        org.junit.Assert.assertNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(attributedCharacterIterator46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        fractionFormat0.setDenominatorFormat(numberFormat18);
        org.apache.commons.math.fraction.Fraction fraction21 = fractionFormat0.parse("100");
        java.text.NumberFormat numberFormat22 = null;
        java.text.NumberFormat numberFormat23 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        java.lang.Object obj34 = numberFormat33.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        java.text.NumberFormat numberFormat41 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat45);
        fractionFormat24.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj62 = fractionFormat60.parseObject("0 / 1");
        java.lang.Object obj64 = fractionFormat60.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat60.getNumeratorFormat();
        fractionFormat59.setDenominatorFormat(numberFormat65);
        java.lang.Object obj67 = numberFormat65.clone();
        fractionFormat24.setDenominatorFormat(numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj71 = fractionFormat69.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat69.getNumeratorFormat();
        java.lang.Object obj73 = fractionFormat69.clone();
        java.text.NumberFormat numberFormat74 = fractionFormat69.getDenominatorFormat();
        fractionFormat24.setDenominatorFormat(numberFormat74);
        java.lang.StringBuffer stringBuffer76 = null;
        java.text.FieldPosition fieldPosition77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer78 = fractionFormat0.format((java.lang.Object) numberFormat74, stringBuffer76, fieldPosition77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction25 = fractionFormat11.parse("100 / 1");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fraction25);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.lang.Object obj4 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = null;
        java.text.NumberFormat numberFormat7 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat8.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat29);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat25);
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj53 = fractionFormat51.parseObject("0 / 1");
        java.text.NumberFormat numberFormat54 = fractionFormat51.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        fractionFormat55.setDenominatorFormat(numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction66 = fractionFormat64.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = fractionFormat71.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat74 = fractionFormat71.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat70, numberFormat74);
        java.text.NumberFormat numberFormat76 = fractionFormat75.getDenominatorFormat();
        fractionFormat64.setDenominatorFormat(numberFormat76);
        java.text.NumberFormat numberFormat78 = fractionFormat64.getNumeratorFormat();
        fractionFormat63.setNumeratorFormat(numberFormat78);
        java.text.NumberFormat numberFormat80 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction82 = fractionFormat63.parse("100 / 1");
        java.lang.StringBuffer stringBuffer83 = null;
        java.text.FieldPosition fieldPosition84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer85 = fractionFormat38.format(fraction82, stringBuffer83, fieldPosition84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat64);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat71);
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertNotNull(numberFormat74);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fraction82);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        java.text.ParsePosition parsePosition52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = fractionFormat50.parseObject("100", parsePosition52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.lang.Object obj4 = fractionFormat3.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        java.lang.Object obj15 = numberFormat13.clone();
        java.lang.String str17 = numberFormat13.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat21);
        fractionFormat3.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat13);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = fractionFormat42.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat45 = fractionFormat42.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        java.text.NumberFormat numberFormat51 = fractionFormat50.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51);
        fractionFormat34.setNumeratorFormat(numberFormat51);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.lang.String str57 = numberFormat51.format((java.lang.Object) (byte) 100);
        fractionFormat30.setDenominatorFormat(numberFormat51);
        java.text.NumberFormat numberFormat59 = null;
        java.text.NumberFormat numberFormat60 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat60);
        java.text.NumberFormat numberFormat62 = fractionFormat61.getNumeratorFormat();
        java.lang.Class<?> wildcardClass63 = fractionFormat61.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str64 = numberFormat51.format((java.lang.Object) fractionFormat61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10" + "'", str17, "10");
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "100" + "'", str57, "100");
        org.junit.Assert.assertNull(numberFormat62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        java.text.NumberFormat numberFormat21 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        fractionFormat33.setDenominatorFormat(numberFormat39);
        java.lang.Object obj41 = numberFormat39.clone();
        fractionFormat22.setNumeratorFormat(numberFormat39);
        java.lang.Object obj43 = numberFormat39.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj48 = fractionFormat46.parseObject("0 / 1");
        java.lang.Object obj50 = fractionFormat46.parseObject("0 / 1");
        java.text.AttributedCharacterIterator attributedCharacterIterator52 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (-1));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = numberFormat6.format((java.lang.Object) fractionFormat46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(attributedCharacterIterator52);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        java.text.NumberFormat numberFormat45 = fractionFormat44.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat47.getDenominatorFormat();
        java.text.NumberFormat numberFormat49 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat45, numberFormat49);
        java.lang.Class<?> wildcardClass51 = numberFormat49.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getDenominatorFormat();
        java.lang.Class<?> wildcardClass11 = fractionFormat8.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.lang.Object obj27 = fractionFormat24.parseObject("10");
        java.text.NumberFormat numberFormat28 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        java.text.NumberFormat numberFormat30 = null;
        java.text.NumberFormat numberFormat31 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat31);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat34 = fractionFormat32.getNumeratorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = numberFormat28.format((java.lang.Object) fractionFormat32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.text.NumberFormat numberFormat21 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat0.setNumeratorFormat(numberFormat28);
        java.lang.Object obj31 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat45);
        java.lang.Object obj48 = numberFormat45.parseObject("0 / 1");
        java.lang.StringBuffer stringBuffer49 = null;
        java.text.FieldPosition fieldPosition50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer51 = fractionFormat0.format((java.lang.Object) "0 / 1", stringBuffer49, fieldPosition50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0L + "'", obj48, 0L);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.lang.Object obj9 = fractionFormat8.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        fractionFormat20.setDenominatorFormat(numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.lang.Object obj43 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat44 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj52 = fractionFormat50.parseObject("0 / 1");
        java.lang.Object obj54 = fractionFormat50.parseObject("0 / 1");
        java.text.NumberFormat numberFormat55 = fractionFormat50.getNumeratorFormat();
        fractionFormat49.setDenominatorFormat(numberFormat55);
        java.lang.Object obj57 = numberFormat55.clone();
        fractionFormat38.setNumeratorFormat(numberFormat55);
        java.lang.Object obj59 = numberFormat55.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat55);
        fractionFormat20.setDenominatorFormat(numberFormat55);
        fractionFormat8.setNumeratorFormat(numberFormat55);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.text.NumberFormat numberFormat4 = fractionFormat3.getDenominatorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat3.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        fractionFormat3.setNumeratorFormat(numberFormat14);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat14);
        java.text.NumberFormat numberFormat17 = null;
        java.text.NumberFormat numberFormat18 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat18);
        java.text.NumberFormat numberFormat20 = fractionFormat19.getDenominatorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat19.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        fractionFormat19.setNumeratorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25);
        java.lang.Object obj30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator(obj30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNull(numberFormat20);
        org.junit.Assert.assertNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str2 = fractionFormat0.format((java.lang.Object) 0);
        java.lang.String str4 = fractionFormat0.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        java.lang.Object obj32 = numberFormat27.clone();
        fractionFormat5.setDenominatorFormat(numberFormat27);
        fractionFormat0.setNumeratorFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.lang.Object obj41 = fractionFormat37.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj45 = fractionFormat43.parseObject("0 / 1");
        java.lang.Object obj47 = fractionFormat43.parseObject("0 / 1");
        java.text.NumberFormat numberFormat48 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj56 = fractionFormat54.parseObject("0 / 1");
        java.lang.Object obj58 = fractionFormat54.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat54.getNumeratorFormat();
        fractionFormat53.setDenominatorFormat(numberFormat59);
        java.lang.Object obj61 = numberFormat59.clone();
        fractionFormat42.setNumeratorFormat(numberFormat59);
        java.lang.Object obj63 = numberFormat59.clone();
        java.lang.Object obj64 = numberFormat59.clone();
        fractionFormat37.setDenominatorFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59);
        fractionFormat36.setNumeratorFormat(numberFormat59);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat71 = fractionFormat68.getNumeratorFormat();
        java.text.NumberFormat numberFormat72 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat72);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator74 = numberFormat27.formatToCharacterIterator((java.lang.Object) numberFormat72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "0 / 1" + "'", str2, "0 / 1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-1 / 1" + "'", str4, "-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(numberFormat71);
        org.junit.Assert.assertNotNull(numberFormat72);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat28.parse("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat28.getNumeratorFormat();
        fractionFormat23.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat31);
        org.apache.commons.math.fraction.Fraction fraction35 = fractionFormat33.parse("10 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj74 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat70.getNumeratorFormat();
        fractionFormat69.setDenominatorFormat(numberFormat75);
        java.lang.Object obj77 = numberFormat75.clone();
        fractionFormat58.setNumeratorFormat(numberFormat75);
        java.lang.Object obj79 = numberFormat75.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat75);
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat75);
        fractionFormat33.setNumeratorFormat(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.ParsePosition parsePosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat0.parse("100", parsePosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat8.getNumeratorFormat();
        java.lang.Object obj12 = fractionFormat8.clone();
        java.text.NumberFormat numberFormat13 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.lang.Object obj18 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat14.getNumeratorFormat();
        java.text.NumberFormat numberFormat20 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.text.NumberFormat numberFormat32 = fractionFormat26.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        fractionFormat25.setNumeratorFormat(numberFormat36);
        fractionFormat8.setNumeratorFormat(numberFormat36);
        java.lang.StringBuffer stringBuffer40 = null;
        java.text.FieldPosition fieldPosition41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer42 = fractionFormat7.format((java.lang.Object) fractionFormat8, stringBuffer40, fieldPosition41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj7 = fractionFormat0.clone();
        java.text.NumberFormat numberFormat8 = null;
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        fractionFormat10.setNumeratorFormat(numberFormat16);
        java.lang.Object obj18 = numberFormat16.clone();
        java.lang.String str20 = numberFormat16.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        fractionFormat23.setNumeratorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16);
        org.apache.commons.math.fraction.Fraction fraction55 = fractionFormat53.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat59 = fractionFormat56.getNumeratorFormat();
        java.text.NumberFormat numberFormat60 = fractionFormat56.getNumeratorFormat();
        fractionFormat53.setDenominatorFormat(numberFormat60);
        java.text.NumberFormat numberFormat62 = fractionFormat53.getNumeratorFormat();
        java.text.NumberFormat numberFormat63 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat63);
        // The following exception was thrown during execution in test generation
        try {
            fractionFormat0.setDenominatorFormat(numberFormat63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: denominator format can not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "10" + "'", str20, "10");
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(numberFormat60);
        org.junit.Assert.assertNotNull(numberFormat62);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj5 = fractionFormat2.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        java.text.NumberFormat numberFormat15 = fractionFormat14.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        fractionFormat27.setDenominatorFormat(numberFormat33);
        java.lang.Object obj35 = numberFormat33.clone();
        fractionFormat16.setNumeratorFormat(numberFormat33);
        java.lang.Object obj37 = numberFormat33.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat33);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction42 = fractionFormat40.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        java.text.NumberFormat numberFormat52 = fractionFormat51.getDenominatorFormat();
        fractionFormat40.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj57 = fractionFormat55.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat55.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj61 = fractionFormat59.parseObject("0 / 1");
        java.lang.Object obj63 = fractionFormat59.parseObject("0 / 1");
        java.text.NumberFormat numberFormat64 = fractionFormat59.getNumeratorFormat();
        java.text.NumberFormat numberFormat65 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator68 = fractionFormat66.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat69 = fractionFormat66.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat69);
        fractionFormat55.setNumeratorFormat(numberFormat69);
        fractionFormat40.setDenominatorFormat(numberFormat69);
        fractionFormat38.setNumeratorFormat(numberFormat69);
        java.text.NumberFormat numberFormat74 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat74);
        fractionFormat2.setDenominatorFormat(numberFormat74);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction78 = fractionFormat2.parse("0");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(attributedCharacterIterator68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.lang.Object obj11 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat12 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj15 = fractionFormat13.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat13.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        fractionFormat17.setDenominatorFormat(numberFormat23);
        java.lang.Object obj25 = numberFormat23.clone();
        fractionFormat6.setNumeratorFormat(numberFormat23);
        java.lang.Object obj27 = numberFormat23.clone();
        java.lang.Object obj28 = numberFormat23.clone();
        fractionFormat1.setDenominatorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23);
        fractionFormat0.setNumeratorFormat(numberFormat23);
        java.lang.Object obj33 = fractionFormat0.parseObject("100");
        java.lang.Object obj34 = fractionFormat0.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        fractionFormat51.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction62 = fractionFormat60.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        fractionFormat60.setDenominatorFormat(numberFormat72);
        java.text.NumberFormat numberFormat74 = fractionFormat60.getNumeratorFormat();
        fractionFormat59.setNumeratorFormat(numberFormat74);
        fractionFormat0.setNumeratorFormat(numberFormat74);
        java.text.ParsePosition parsePosition78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = fractionFormat0.parseObject("hi!", parsePosition78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(numberFormat74);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.Fraction fraction4 = fractionFormat0.parse("-1 / 1");
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction7 = fractionFormat0.parse("hi!", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fraction4);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = null;
        java.text.NumberFormat numberFormat26 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.NumberFormat numberFormat29 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        fractionFormat27.setNumeratorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getNumeratorFormat();
        java.lang.Object obj40 = numberFormat39.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj17 = fractionFormat15.parseObject("0 / 1");
        java.lang.Object obj19 = fractionFormat15.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat21 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat37 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat37);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat37);
        java.text.NumberFormat numberFormat40 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40);
        java.lang.StringBuffer stringBuffer42 = null;
        java.text.FieldPosition fieldPosition43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer44 = fractionFormat0.format((java.lang.Object) fractionFormat41, stringBuffer42, fieldPosition43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat40);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getDenominatorFormat();
        java.lang.Object obj7 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat8 = null;
        java.text.NumberFormat numberFormat9 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        java.text.NumberFormat numberFormat12 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat13 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator15 = fractionFormat13.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat16 = fractionFormat13.getDenominatorFormat();
        fractionFormat10.setNumeratorFormat(numberFormat16);
        java.lang.Object obj18 = numberFormat16.clone();
        java.lang.String str20 = numberFormat16.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat21 = null;
        java.text.NumberFormat numberFormat22 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat22);
        java.text.NumberFormat numberFormat24 = fractionFormat23.getDenominatorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat23.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator29 = fractionFormat27.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat30 = fractionFormat27.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat34);
        fractionFormat23.setNumeratorFormat(numberFormat30);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj39 = fractionFormat37.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = fractionFormat45.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat48 = fractionFormat45.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat44, numberFormat48);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat30, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat40);
        java.lang.Object obj53 = fractionFormat52.clone();
        java.lang.Object obj54 = fractionFormat52.clone();
        java.lang.String str56 = fractionFormat52.format((java.lang.Object) (byte) 0);
        org.apache.commons.math.fraction.Fraction fraction58 = fractionFormat52.parse("100");
        java.lang.StringBuffer stringBuffer59 = null;
        java.text.FieldPosition fieldPosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer61 = fractionFormat2.format(fraction58, stringBuffer59, fieldPosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNull(numberFormat12);
        org.junit.Assert.assertNotNull(fractionFormat13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "10" + "'", str20, "10");
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(attributedCharacterIterator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "0 / 1" + "'", str56, "0 / 1");
        org.junit.Assert.assertNotNull(fraction58);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat50);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getNumeratorFormat();
        fractionFormat30.setNumeratorFormat(numberFormat53);
        java.text.ParsePosition parsePosition56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = fractionFormat30.parseObject("0", parsePosition56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat53);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.text.NumberFormat numberFormat5 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator8 = fractionFormat6.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat9 = fractionFormat6.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat13);
        fractionFormat2.setNumeratorFormat(numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat16.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = fractionFormat24.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat27 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj33 = fractionFormat31.parseObject("0 / 1");
        java.lang.Object obj35 = fractionFormat31.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat31.getNumeratorFormat();
        java.text.NumberFormat numberFormat37 = fractionFormat31.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat50);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getNumeratorFormat();
        fractionFormat30.setNumeratorFormat(numberFormat53);
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj58 = fractionFormat56.parseObject("0 / 1");
        java.lang.Object obj60 = fractionFormat56.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat56.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj64 = fractionFormat62.parseObject("0 / 1");
        java.text.NumberFormat numberFormat65 = fractionFormat62.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = new org.apache.commons.math.fraction.FractionFormat(numberFormat61, numberFormat65);
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj69 = fractionFormat67.parseObject("0 / 1");
        java.lang.Object obj71 = fractionFormat67.parseObject("0 / 1");
        java.text.NumberFormat numberFormat72 = fractionFormat67.getNumeratorFormat();
        fractionFormat66.setDenominatorFormat(numberFormat72);
        java.lang.Object obj74 = numberFormat72.clone();
        fractionFormat55.setNumeratorFormat(numberFormat72);
        java.text.NumberFormat numberFormat76 = fractionFormat55.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator77 = fractionFormat30.formatToCharacterIterator((java.lang.Object) fractionFormat55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(attributedCharacterIterator8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat53);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(fractionFormat56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat76);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat48.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat55);
        java.text.NumberFormat numberFormat57 = fractionFormat56.getDenominatorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNull(numberFormat57);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = null;
        java.text.NumberFormat numberFormat10 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        fractionFormat15.setNumeratorFormat(numberFormat21);
        java.lang.Object obj23 = numberFormat21.clone();
        java.lang.String str25 = numberFormat21.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator28 = fractionFormat26.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat29 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator32 = fractionFormat30.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat33 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat29);
        fractionFormat11.setDenominatorFormat(numberFormat21);
        fractionFormat8.setDenominatorFormat(numberFormat21);
        java.text.NumberFormat numberFormat38 = fractionFormat8.getNumeratorFormat();
        java.lang.Object obj40 = numberFormat38.parseObject("100 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38);
        java.text.ParsePosition parsePosition43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction44 = fractionFormat41.parse("0", parsePosition43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "10" + "'", str25, "10");
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(attributedCharacterIterator28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = null;
        java.text.NumberFormat numberFormat27 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26, numberFormat27);
        java.text.NumberFormat numberFormat29 = fractionFormat28.getDenominatorFormat();
        java.text.NumberFormat numberFormat30 = fractionFormat28.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = fractionFormat31.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat34 = fractionFormat31.getDenominatorFormat();
        fractionFormat28.setNumeratorFormat(numberFormat34);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj46 = fractionFormat44.parseObject("0 / 1");
        java.lang.Object obj48 = fractionFormat44.parseObject("0 / 1");
        java.text.NumberFormat numberFormat49 = fractionFormat44.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        java.text.NumberFormat numberFormat53 = null;
        java.text.NumberFormat numberFormat54 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat53, numberFormat54);
        java.lang.Object obj56 = fractionFormat55.clone();
        java.text.NumberFormat numberFormat57 = null;
        java.text.NumberFormat numberFormat58 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat58);
        java.text.NumberFormat numberFormat60 = fractionFormat59.getDenominatorFormat();
        java.text.NumberFormat numberFormat61 = fractionFormat59.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = fractionFormat62.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat65 = fractionFormat62.getDenominatorFormat();
        fractionFormat59.setNumeratorFormat(numberFormat65);
        java.lang.Object obj67 = numberFormat65.clone();
        java.lang.String str69 = numberFormat65.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = fractionFormat70.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat73 = fractionFormat70.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator76 = fractionFormat74.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat77 = fractionFormat74.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat65, numberFormat73);
        fractionFormat55.setDenominatorFormat(numberFormat65);
        fractionFormat52.setDenominatorFormat(numberFormat65);
        fractionFormat28.setDenominatorFormat(numberFormat65);
        fractionFormat24.setNumeratorFormat(numberFormat65);
        java.text.ParsePosition parsePosition85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction86 = fractionFormat24.parse("-1 / 1", parsePosition85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat29);
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNotNull(fractionFormat31);
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(numberFormat60);
        org.junit.Assert.assertNull(numberFormat61);
        org.junit.Assert.assertNotNull(fractionFormat62);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "10" + "'", str69, "10");
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(attributedCharacterIterator76);
        org.junit.Assert.assertNotNull(numberFormat77);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat34.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator43 = fractionFormat41.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat44 = fractionFormat41.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat40, numberFormat44);
        java.text.NumberFormat numberFormat46 = fractionFormat45.getDenominatorFormat();
        fractionFormat34.setDenominatorFormat(numberFormat46);
        java.text.NumberFormat numberFormat48 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat49.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.lang.Object obj57 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat58 = fractionFormat53.getNumeratorFormat();
        java.text.NumberFormat numberFormat59 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = fractionFormat60.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat63 = fractionFormat60.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat59, numberFormat63);
        fractionFormat49.setNumeratorFormat(numberFormat63);
        fractionFormat34.setDenominatorFormat(numberFormat63);
        fractionFormat32.setNumeratorFormat(numberFormat63);
        java.text.ParsePosition parsePosition69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = fractionFormat32.parseObject("0 / 1", parsePosition69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(attributedCharacterIterator43);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat59);
        org.junit.Assert.assertNotNull(fractionFormat60);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertNotNull(numberFormat63);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction6 = fractionFormat2.parse("10 / 1", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.lang.Object obj4 = fractionFormat3.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        java.lang.Object obj15 = numberFormat13.clone();
        java.lang.String str17 = numberFormat13.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat21);
        fractionFormat3.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat13);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getNumeratorFormat();
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10" + "'", str17, "10");
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNull(numberFormat31);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.lang.Object obj18 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat14.getNumeratorFormat();
        java.lang.Object obj20 = numberFormat19.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj23 = fractionFormat21.parseObject("0 / 1");
        java.lang.Object obj25 = fractionFormat21.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat21.getNumeratorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat31);
        fractionFormat10.setNumeratorFormat(numberFormat19);
        org.apache.commons.math.fraction.Fraction fraction36 = fractionFormat10.parse("10");
        java.lang.StringBuffer stringBuffer37 = null;
        java.text.FieldPosition fieldPosition38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer39 = fractionFormat9.format((java.lang.Object) fractionFormat10, stringBuffer37, fieldPosition38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fraction36);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat48.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat54, numberFormat55);
        java.text.ParsePosition parsePosition58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction59 = fractionFormat56.parse("100 / 1", parsePosition58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj5 = fractionFormat2.clone();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = fractionFormat2.parseObject("10", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(obj5);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        java.text.NumberFormat numberFormat17 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat2.parse("0 / 1");
        java.lang.String str20 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction19);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "0 / 1" + "'", str20, "0 / 1");
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        java.text.NumberFormat numberFormat2 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = new org.apache.commons.math.fraction.FractionFormat(numberFormat1, numberFormat2);
        java.lang.Object obj4 = fractionFormat3.clone();
        java.text.NumberFormat numberFormat5 = null;
        java.text.NumberFormat numberFormat6 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat6);
        java.text.NumberFormat numberFormat8 = fractionFormat7.getDenominatorFormat();
        java.text.NumberFormat numberFormat9 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        fractionFormat7.setNumeratorFormat(numberFormat13);
        java.lang.Object obj15 = numberFormat13.clone();
        java.lang.String str17 = numberFormat13.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat21);
        fractionFormat3.setDenominatorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat13);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        java.text.ParsePosition parsePosition33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = fractionFormat30.parseObject("0 / 1", parsePosition33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10" + "'", str17, "10");
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat31);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat16, numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        fractionFormat21.setDenominatorFormat(numberFormat27);
        java.lang.Object obj29 = numberFormat27.clone();
        fractionFormat10.setNumeratorFormat(numberFormat27);
        java.lang.Object obj31 = numberFormat27.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9, numberFormat27);
        java.text.NumberFormat numberFormat33 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj43 = fractionFormat41.parseObject("0 / 1");
        java.lang.Object obj45 = fractionFormat41.parseObject("0 / 1");
        java.text.NumberFormat numberFormat46 = fractionFormat41.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat46, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        fractionFormat51.setDenominatorFormat(numberFormat57);
        java.lang.Object obj59 = numberFormat57.clone();
        fractionFormat40.setNumeratorFormat(numberFormat57);
        java.lang.Object obj61 = numberFormat57.clone();
        java.lang.Object obj62 = numberFormat57.clone();
        fractionFormat35.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57);
        fractionFormat34.setNumeratorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat66 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj68 = fractionFormat66.parseObject("0 / 1");
        java.text.NumberFormat numberFormat69 = fractionFormat66.getNumeratorFormat();
        java.text.NumberFormat numberFormat70 = fractionFormat66.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat70);
        fractionFormat32.setDenominatorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj75 = fractionFormat73.parseObject("0 / 1");
        java.lang.Object obj77 = fractionFormat73.parseObject("0 / 1");
        java.text.NumberFormat numberFormat78 = fractionFormat73.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj81 = fractionFormat79.parseObject("0 / 1");
        java.text.NumberFormat numberFormat82 = fractionFormat79.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat83 = new org.apache.commons.math.fraction.FractionFormat(numberFormat78, numberFormat82);
        java.text.AttributedCharacterIterator attributedCharacterIterator85 = numberFormat78.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat32.setDenominatorFormat(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(fractionFormat41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(fractionFormat66);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(numberFormat78);
        org.junit.Assert.assertNotNull(fractionFormat79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(attributedCharacterIterator85);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat48.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat52);
        org.apache.commons.math.fraction.Fraction fraction55 = fractionFormat45.parse("100");
        java.lang.Class<?> wildcardClass56 = fractionFormat45.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat0.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat28);
        java.text.NumberFormat numberFormat31 = fractionFormat30.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj34 = fractionFormat32.parseObject("0 / 1");
        java.text.NumberFormat numberFormat35 = fractionFormat32.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat39);
        java.text.NumberFormat numberFormat47 = fractionFormat46.getNumeratorFormat();
        java.lang.Object obj48 = numberFormat47.clone();
        java.lang.StringBuffer stringBuffer49 = null;
        java.text.FieldPosition fieldPosition50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer51 = fractionFormat0.format((java.lang.Object) numberFormat47, stringBuffer49, fieldPosition50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat24);
        java.lang.Class<?> wildcardClass27 = numberFormat24.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction46 = fractionFormat44.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat56);
        java.text.NumberFormat numberFormat58 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat58);
        fractionFormat0.setDenominatorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43);
        java.text.NumberFormat numberFormat62 = null;
        java.text.NumberFormat numberFormat63 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat64 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat63);
        java.text.NumberFormat numberFormat65 = fractionFormat64.getDenominatorFormat();
        java.text.NumberFormat numberFormat66 = fractionFormat64.getNumeratorFormat();
        java.text.NumberFormat numberFormat67 = fractionFormat64.getNumeratorFormat();
        java.text.NumberFormat numberFormat68 = fractionFormat64.getDenominatorFormat();
        java.lang.Object obj69 = fractionFormat64.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj72 = fractionFormat70.parseObject("0 / 1");
        java.lang.Object obj74 = fractionFormat70.parseObject("0 / 1");
        java.text.NumberFormat numberFormat75 = fractionFormat70.getNumeratorFormat();
        java.text.NumberFormat numberFormat76 = fractionFormat70.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator79 = fractionFormat77.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat80 = fractionFormat77.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat81 = new org.apache.commons.math.fraction.FractionFormat(numberFormat76, numberFormat80);
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator84 = fractionFormat82.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat85 = fractionFormat82.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat86 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator88 = fractionFormat86.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat89 = fractionFormat86.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat85, numberFormat89);
        org.apache.commons.math.fraction.FractionFormat fractionFormat91 = new org.apache.commons.math.fraction.FractionFormat(numberFormat76, numberFormat89);
        java.text.NumberFormat numberFormat92 = fractionFormat91.getDenominatorFormat();
        fractionFormat64.setDenominatorFormat(numberFormat92);
        org.apache.commons.math.fraction.FractionFormat fractionFormat94 = new org.apache.commons.math.fraction.FractionFormat(numberFormat92);
        java.lang.Object obj96 = numberFormat92.parseObject("100 / 1");
        java.lang.StringBuffer stringBuffer97 = null;
        java.text.FieldPosition fieldPosition98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer99 = fractionFormat61.format((java.lang.Object) numberFormat92, stringBuffer97, fieldPosition98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNull(numberFormat65);
        org.junit.Assert.assertNull(numberFormat66);
        org.junit.Assert.assertNull(numberFormat67);
        org.junit.Assert.assertNull(numberFormat68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(fractionFormat70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(numberFormat75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(fractionFormat77);
        org.junit.Assert.assertNotNull(attributedCharacterIterator79);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(attributedCharacterIterator84);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertNotNull(fractionFormat86);
        org.junit.Assert.assertNotNull(attributedCharacterIterator88);
        org.junit.Assert.assertNotNull(numberFormat89);
        org.junit.Assert.assertNotNull(numberFormat92);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + 100L + "'", obj96, 100L);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.lang.Object obj26 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat28 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = fractionFormat34.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat37 = fractionFormat34.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator40 = fractionFormat38.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat41 = fractionFormat38.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat37, numberFormat41);
        fractionFormat33.setNumeratorFormat(numberFormat37);
        java.text.NumberFormat numberFormat44 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat33.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat45);
        java.text.NumberFormat numberFormat47 = fractionFormat11.getDenominatorFormat();
        java.text.NumberFormat numberFormat48 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat47, numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(attributedCharacterIterator40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(numberFormat47);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getDenominatorFormat();
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = fractionFormat8.parseObject("0", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        java.text.NumberFormat numberFormat20 = null;
        java.text.NumberFormat numberFormat21 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat21);
        java.text.NumberFormat numberFormat23 = fractionFormat22.getDenominatorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat22.getNumeratorFormat();
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj28 = fractionFormat26.parseObject("0 / 1");
        java.lang.Object obj30 = fractionFormat26.parseObject("0 / 1");
        java.text.NumberFormat numberFormat31 = fractionFormat26.getNumeratorFormat();
        java.lang.Object obj32 = numberFormat31.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.lang.Object obj37 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat33.getNumeratorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat43);
        fractionFormat22.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat31);
        java.lang.Class<?> wildcardClass48 = fractionFormat47.getClass();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.lang.Object obj3 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat4 = null;
        java.text.NumberFormat numberFormat5 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat4, numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator11 = fractionFormat9.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat12 = fractionFormat9.getDenominatorFormat();
        fractionFormat6.setNumeratorFormat(numberFormat12);
        java.lang.Object obj14 = numberFormat12.clone();
        java.lang.String str16 = numberFormat12.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator19 = fractionFormat17.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat20 = fractionFormat17.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator23 = fractionFormat21.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat24 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat12, numberFormat20);
        fractionFormat2.setDenominatorFormat(numberFormat12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = fractionFormat2.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNull(numberFormat7);
        org.junit.Assert.assertNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(attributedCharacterIterator11);
        org.junit.Assert.assertNotNull(numberFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "10" + "'", str16, "10");
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(attributedCharacterIterator19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertNotNull(fractionFormat21);
        org.junit.Assert.assertNotNull(attributedCharacterIterator23);
        org.junit.Assert.assertNotNull(numberFormat24);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.lang.Object obj6 = numberFormat5.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = null;
        java.text.NumberFormat numberFormat11 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat11);
        java.text.NumberFormat numberFormat13 = fractionFormat12.getDenominatorFormat();
        java.text.NumberFormat numberFormat14 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = fractionFormat15.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat18 = fractionFormat15.getDenominatorFormat();
        fractionFormat12.setNumeratorFormat(numberFormat18);
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.lang.Object obj24 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat20.getNumeratorFormat();
        fractionFormat12.setDenominatorFormat(numberFormat25);
        fractionFormat7.setDenominatorFormat(numberFormat25);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat50);
        java.lang.Object obj52 = numberFormat50.clone();
        fractionFormat33.setNumeratorFormat(numberFormat50);
        java.lang.Object obj54 = numberFormat50.clone();
        java.lang.Object obj55 = numberFormat50.clone();
        fractionFormat28.setDenominatorFormat(numberFormat50);
        java.lang.Object obj57 = numberFormat50.clone();
        fractionFormat7.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator61 = fractionFormat59.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat62 = fractionFormat59.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat66);
        org.apache.commons.math.fraction.FractionFormat fractionFormat68 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj70 = fractionFormat68.parseObject("0 / 1");
        java.lang.Object obj72 = fractionFormat68.parseObject("0 / 1");
        java.text.NumberFormat numberFormat73 = fractionFormat68.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj76 = fractionFormat74.parseObject("0 / 1");
        java.text.NumberFormat numberFormat77 = fractionFormat74.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73, numberFormat77);
        java.text.NumberFormat numberFormat79 = fractionFormat78.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat80 = new org.apache.commons.math.fraction.FractionFormat(numberFormat62, numberFormat79);
        java.text.NumberFormat numberFormat81 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat82 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj84 = fractionFormat82.parseObject("0 / 1");
        java.lang.Object obj86 = fractionFormat82.parseObject("0 / 1");
        java.text.NumberFormat numberFormat87 = fractionFormat82.getNumeratorFormat();
        java.text.NumberFormat numberFormat88 = fractionFormat82.getNumeratorFormat();
        java.text.NumberFormat numberFormat89 = fractionFormat82.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat90 = new org.apache.commons.math.fraction.FractionFormat(numberFormat81, numberFormat89);
        fractionFormat80.setDenominatorFormat(numberFormat89);
        org.apache.commons.math.fraction.FractionFormat fractionFormat92 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat89);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator93 = numberFormat5.formatToCharacterIterator((java.lang.Object) fractionFormat92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat14);
        org.junit.Assert.assertNotNull(fractionFormat15);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(fractionFormat59);
        org.junit.Assert.assertNotNull(attributedCharacterIterator61);
        org.junit.Assert.assertNotNull(numberFormat62);
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(numberFormat73);
        org.junit.Assert.assertNotNull(fractionFormat74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(fractionFormat82);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(numberFormat87);
        org.junit.Assert.assertNotNull(numberFormat88);
        org.junit.Assert.assertNotNull(numberFormat89);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj18 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat12.getNumeratorFormat();
        java.lang.Object obj21 = numberFormat19.parseObject("-1 / 1");
        java.lang.Object obj23 = numberFormat19.parseObject("100");
        java.lang.Object obj24 = numberFormat19.clone();
        java.lang.Object obj25 = numberFormat19.clone();
        fractionFormat10.setNumeratorFormat(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1L) + "'", obj21, (-1L));
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj5 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat6 = null;
        java.text.NumberFormat numberFormat7 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        fractionFormat8.setNumeratorFormat(numberFormat14);
        java.lang.Object obj16 = numberFormat14.clone();
        java.lang.String str18 = numberFormat14.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat19 = null;
        java.text.NumberFormat numberFormat20 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat20);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat21.getNumeratorFormat();
        java.text.NumberFormat numberFormat24 = fractionFormat21.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = fractionFormat25.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat28 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = fractionFormat29.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat32 = fractionFormat29.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat32);
        fractionFormat21.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator41 = fractionFormat39.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat42 = fractionFormat39.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat38, numberFormat42);
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14);
        org.apache.commons.math.fraction.Fraction fraction53 = fractionFormat51.parse("100");
        java.lang.StringBuffer stringBuffer54 = null;
        java.text.FieldPosition fieldPosition55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer56 = fractionFormat2.format(fraction53, stringBuffer54, fieldPosition55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNull(numberFormat9);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "10" + "'", str18, "10");
        org.junit.Assert.assertNull(numberFormat22);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNull(numberFormat24);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(attributedCharacterIterator41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fraction53);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.lang.Object obj14 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setDenominatorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat27 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat27);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        fractionFormat28.setDenominatorFormat(numberFormat34);
        java.lang.Object obj36 = numberFormat34.clone();
        fractionFormat17.setNumeratorFormat(numberFormat34);
        fractionFormat2.setDenominatorFormat(numberFormat34);
        org.apache.commons.math.fraction.Fraction fraction40 = fractionFormat2.parse("10");
        java.text.NumberFormat numberFormat41 = null;
        java.text.NumberFormat numberFormat42 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat41, numberFormat42);
        java.text.NumberFormat numberFormat44 = fractionFormat43.getDenominatorFormat();
        java.text.NumberFormat numberFormat45 = fractionFormat43.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat46 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator48 = fractionFormat46.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat49 = fractionFormat46.getDenominatorFormat();
        fractionFormat43.setNumeratorFormat(numberFormat49);
        java.lang.Object obj51 = numberFormat49.clone();
        java.lang.String str53 = numberFormat49.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat57);
        fractionFormat2.setDenominatorFormat(numberFormat49);
        java.lang.Object obj65 = null;
        java.lang.StringBuffer stringBuffer66 = null;
        java.text.FieldPosition fieldPosition67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer68 = fractionFormat2.format(obj65, stringBuffer66, fieldPosition67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNull(numberFormat44);
        org.junit.Assert.assertNull(numberFormat45);
        org.junit.Assert.assertNotNull(fractionFormat46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator48);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "10" + "'", str53, "10");
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        fractionFormat0.setDenominatorFormat(numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj41 = fractionFormat39.parseObject("0 / 1");
        java.text.NumberFormat numberFormat42 = fractionFormat39.getNumeratorFormat();
        java.text.NumberFormat numberFormat43 = fractionFormat39.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction46 = fractionFormat44.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator49 = fractionFormat47.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat50 = fractionFormat47.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat51 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = fractionFormat51.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat54 = fractionFormat51.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat54);
        java.text.NumberFormat numberFormat56 = fractionFormat55.getDenominatorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat56);
        java.text.NumberFormat numberFormat58 = fractionFormat44.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat58);
        fractionFormat0.setDenominatorFormat(numberFormat43);
        java.text.NumberFormat numberFormat61 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat62 = fractionFormat0.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat44);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(attributedCharacterIterator49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(fractionFormat51);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat62);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5);
        java.text.NumberFormat numberFormat7 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7);
        java.lang.Object obj10 = numberFormat7.parseObject("100");
        java.lang.Object obj11 = numberFormat7.clone();
        java.lang.Object obj13 = numberFormat7.parseObject("0");
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 100L + "'", obj10, 100L);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0L + "'", obj13, 0L);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        org.apache.commons.math.fraction.FractionFormat fractionFormat21 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat19);
        java.text.NumberFormat numberFormat22 = fractionFormat21.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.lang.Object obj39 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat40 = fractionFormat35.getNumeratorFormat();
        fractionFormat34.setDenominatorFormat(numberFormat40);
        java.lang.Object obj42 = numberFormat40.clone();
        fractionFormat23.setNumeratorFormat(numberFormat40);
        java.lang.Object obj44 = numberFormat40.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat40);
        java.text.ParsePosition parsePosition47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = fractionFormat45.parseObject("0 / 1", parsePosition47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat26.setNumeratorFormat(numberFormat43);
        java.lang.Object obj47 = numberFormat43.clone();
        java.lang.Object obj48 = numberFormat43.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj51 = fractionFormat49.parseObject("0 / 1");
        java.lang.Object obj53 = fractionFormat49.parseObject("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction56 = fractionFormat54.parse("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat54.getNumeratorFormat();
        fractionFormat49.setNumeratorFormat(numberFormat57);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat43, numberFormat57);
        java.lang.StringBuffer stringBuffer60 = null;
        java.text.FieldPosition fieldPosition61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer62 = fractionFormat23.format((java.lang.Object) fractionFormat59, stringBuffer60, fieldPosition61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(numberFormat57);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat7 = fractionFormat1.getNumeratorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator12 = fractionFormat10.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat13 = fractionFormat10.getDenominatorFormat();
        java.text.NumberFormat numberFormat14 = null;
        java.text.NumberFormat numberFormat15 = null;
        java.text.NumberFormat numberFormat16 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat16);
        java.text.NumberFormat numberFormat18 = fractionFormat17.getDenominatorFormat();
        java.text.NumberFormat numberFormat19 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        fractionFormat17.setNumeratorFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat25.getNumeratorFormat();
        fractionFormat17.setNumeratorFormat(numberFormat28);
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat28);
        java.text.NumberFormat numberFormat31 = null;
        java.text.NumberFormat numberFormat32 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat32);
        java.text.NumberFormat numberFormat34 = fractionFormat33.getDenominatorFormat();
        java.text.NumberFormat numberFormat35 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = fractionFormat36.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat39 = fractionFormat36.getDenominatorFormat();
        fractionFormat33.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat14, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat39);
        java.lang.Object obj46 = numberFormat39.parseObject("10 / 1");
        fractionFormat9.setNumeratorFormat(numberFormat39);
        java.text.ParsePosition parsePosition49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = fractionFormat9.parseObject("10", parsePosition49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(attributedCharacterIterator12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNull(numberFormat34);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10L + "'", obj46, 10L);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat10.parse("10");
        org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat10.parse("10");
        org.apache.commons.math.fraction.Fraction fraction17 = fractionFormat10.parse("10");
        java.lang.Object obj18 = fractionFormat10.clone();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(obj18);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj7 = fractionFormat5.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat5.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat5.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = numberFormat10.formatToCharacterIterator((java.lang.Object) (-1));
        fractionFormat2.setDenominatorFormat(numberFormat10);
        java.lang.Object obj19 = numberFormat10.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction22 = fractionFormat20.parse("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat20.getNumeratorFormat();
        java.lang.Object obj25 = numberFormat23.parseObject("10 / 1");
        java.lang.String str26 = numberFormat10.format(obj25);
        java.text.NumberFormat numberFormat27 = null;
        java.text.NumberFormat numberFormat28 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat28);
        java.text.NumberFormat numberFormat30 = fractionFormat29.getDenominatorFormat();
        java.text.NumberFormat numberFormat31 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        fractionFormat29.setNumeratorFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat35);
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10L + "'", obj25, 10L);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "10" + "'", str26, "10");
        org.junit.Assert.assertNull(numberFormat30);
        org.junit.Assert.assertNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat11 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat15 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat11, numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        fractionFormat16.setDenominatorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.Fraction fraction27 = fractionFormat25.parse("0 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat32 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator34 = fractionFormat32.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat35 = fractionFormat32.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = new org.apache.commons.math.fraction.FractionFormat(numberFormat31, numberFormat35);
        java.text.NumberFormat numberFormat37 = fractionFormat36.getDenominatorFormat();
        fractionFormat25.setDenominatorFormat(numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat25.getNumeratorFormat();
        fractionFormat24.setNumeratorFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.lang.Object obj46 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat47 = fractionFormat42.getNumeratorFormat();
        java.text.NumberFormat numberFormat48 = fractionFormat42.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat49 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator51 = fractionFormat49.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat52 = fractionFormat49.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat52);
        org.apache.commons.math.fraction.FractionFormat fractionFormat54 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator56 = fractionFormat54.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat57 = fractionFormat54.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator60 = fractionFormat58.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat61 = fractionFormat58.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = new org.apache.commons.math.fraction.FractionFormat(numberFormat48, numberFormat61);
        java.text.NumberFormat numberFormat64 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj67 = fractionFormat65.parseObject("0 / 1");
        java.text.NumberFormat numberFormat68 = fractionFormat65.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator71 = fractionFormat69.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat72 = fractionFormat69.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat73 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator75 = fractionFormat73.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat76 = fractionFormat73.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat77 = new org.apache.commons.math.fraction.FractionFormat(numberFormat72, numberFormat76);
        org.apache.commons.math.fraction.FractionFormat fractionFormat78 = new org.apache.commons.math.fraction.FractionFormat(numberFormat68, numberFormat72);
        org.apache.commons.math.fraction.FractionFormat fractionFormat79 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat72);
        java.text.NumberFormat numberFormat80 = fractionFormat79.getNumeratorFormat();
        java.lang.Object obj81 = numberFormat80.clone();
        fractionFormat41.setDenominatorFormat(numberFormat80);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj84 = fractionFormat41.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat32);
        org.junit.Assert.assertNotNull(attributedCharacterIterator34);
        org.junit.Assert.assertNotNull(numberFormat35);
        org.junit.Assert.assertNotNull(numberFormat37);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(numberFormat47);
        org.junit.Assert.assertNotNull(numberFormat48);
        org.junit.Assert.assertNotNull(fractionFormat49);
        org.junit.Assert.assertNotNull(attributedCharacterIterator51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat54);
        org.junit.Assert.assertNotNull(attributedCharacterIterator56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(attributedCharacterIterator60);
        org.junit.Assert.assertNotNull(numberFormat61);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(fractionFormat69);
        org.junit.Assert.assertNotNull(attributedCharacterIterator71);
        org.junit.Assert.assertNotNull(numberFormat72);
        org.junit.Assert.assertNotNull(fractionFormat73);
        org.junit.Assert.assertNotNull(attributedCharacterIterator75);
        org.junit.Assert.assertNotNull(numberFormat76);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        java.text.NumberFormat numberFormat0 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj4 = fractionFormat2.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat2.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj10 = fractionFormat8.parseObject("0 / 1");
        java.lang.Object obj12 = fractionFormat8.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat8.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat17);
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj21 = fractionFormat19.parseObject("0 / 1");
        java.lang.Object obj23 = fractionFormat19.parseObject("0 / 1");
        java.text.NumberFormat numberFormat24 = fractionFormat19.getNumeratorFormat();
        fractionFormat18.setDenominatorFormat(numberFormat24);
        java.lang.Object obj26 = numberFormat24.clone();
        fractionFormat7.setNumeratorFormat(numberFormat24);
        java.lang.Object obj28 = numberFormat24.clone();
        java.lang.Object obj29 = numberFormat24.clone();
        fractionFormat2.setDenominatorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat31 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24);
        fractionFormat1.setNumeratorFormat(numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat24);
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat45.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39);
        java.lang.Object obj61 = numberFormat39.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat24, numberFormat39);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        fractionFormat62.setNumeratorFormat(numberFormat70);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(fractionFormat2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(fractionFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1L) + "'", obj61, (-1L));
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        java.text.NumberFormat numberFormat25 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat26);
        java.lang.Class<?> wildcardClass28 = numberFormat26.getClass();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = null;
        java.text.NumberFormat numberFormat8 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = new org.apache.commons.math.fraction.FractionFormat(numberFormat7, numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat9.getDenominatorFormat();
        java.text.NumberFormat numberFormat11 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat20 = fractionFormat17.getNumeratorFormat();
        fractionFormat9.setNumeratorFormat(numberFormat20);
        java.lang.Object obj23 = numberFormat20.parseObject("0 / 1");
        fractionFormat0.setNumeratorFormat(numberFormat20);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat20, numberFormat26);
        java.text.NumberFormat numberFormat28 = fractionFormat27.getDenominatorFormat();
        java.text.ParsePosition parsePosition30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction31 = fractionFormat27.parse("10", parsePosition30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNull(numberFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(numberFormat20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0L + "'", obj23, 0L);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(numberFormat28);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = new org.apache.commons.math.fraction.FractionFormat();
        java.text.NumberFormat numberFormat1 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat2 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat3 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj5 = fractionFormat3.parseObject("0 / 1");
        java.lang.Object obj7 = fractionFormat3.parseObject("0 / 1");
        java.lang.Object obj9 = fractionFormat3.parseObject("0 / 1");
        java.lang.Object obj10 = fractionFormat3.clone();
        org.apache.commons.math.fraction.Fraction fraction12 = fractionFormat3.parse("0 / 1");
        java.lang.String str13 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction12);
        java.lang.String str14 = org.apache.commons.math.fraction.FractionFormat.formatFraction(fraction12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = fractionFormat0.format((java.lang.Object) str14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertNotNull(fractionFormat3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0 / 1" + "'", str13, "0 / 1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0 / 1" + "'", str14, "0 / 1");
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj26 = fractionFormat24.parseObject("0 / 1");
        java.lang.Object obj28 = fractionFormat24.parseObject("0 / 1");
        java.text.NumberFormat numberFormat29 = fractionFormat24.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat30 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj32 = fractionFormat30.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat30.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat29, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat33);
        java.text.NumberFormat numberFormat36 = null;
        java.text.NumberFormat numberFormat37 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat37);
        java.text.NumberFormat numberFormat39 = fractionFormat38.getNumeratorFormat();
        java.text.NumberFormat numberFormat40 = fractionFormat38.getNumeratorFormat();
        java.lang.StringBuffer stringBuffer41 = null;
        java.text.FieldPosition fieldPosition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer43 = fractionFormat35.format((java.lang.Object) numberFormat40, stringBuffer41, fieldPosition42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(numberFormat29);
        org.junit.Assert.assertNotNull(fractionFormat30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNull(numberFormat40);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        org.apache.commons.math.fraction.FractionFormat fractionFormat9 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj11 = fractionFormat9.parseObject("0 / 1");
        java.lang.Object obj13 = fractionFormat9.parseObject("0 / 1");
        java.text.NumberFormat numberFormat14 = fractionFormat9.getNumeratorFormat();
        java.text.NumberFormat numberFormat15 = fractionFormat9.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15);
        org.apache.commons.math.fraction.FractionFormat fractionFormat17 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj19 = fractionFormat17.parseObject("0 / 1");
        java.lang.Object obj21 = fractionFormat17.parseObject("0 / 1");
        java.text.NumberFormat numberFormat22 = fractionFormat17.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat26 = fractionFormat23.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("0 / 1");
        java.text.NumberFormat numberFormat33 = fractionFormat28.getNumeratorFormat();
        fractionFormat27.setDenominatorFormat(numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat33);
        org.apache.commons.math.fraction.FractionFormat fractionFormat36 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj38 = fractionFormat36.parseObject("0 / 1");
        java.lang.Object obj40 = fractionFormat36.parseObject("0 / 1");
        java.text.NumberFormat numberFormat41 = fractionFormat36.getNumeratorFormat();
        java.text.NumberFormat numberFormat42 = fractionFormat36.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator45 = fractionFormat43.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat46 = fractionFormat43.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat46);
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator50 = fractionFormat48.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat51 = fractionFormat48.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator54 = fractionFormat52.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat55 = fractionFormat52.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat56 = new org.apache.commons.math.fraction.FractionFormat(numberFormat51, numberFormat55);
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat42, numberFormat55);
        java.text.NumberFormat numberFormat58 = fractionFormat57.getDenominatorFormat();
        java.lang.Object obj60 = numberFormat58.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58);
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat33, numberFormat58);
        fractionFormat8.setDenominatorFormat(numberFormat58);
        java.text.ParsePosition parsePosition65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = fractionFormat8.parseObject("0 / 1", parsePosition65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(fractionFormat9);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(numberFormat14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(numberFormat33);
        org.junit.Assert.assertNotNull(fractionFormat36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat42);
        org.junit.Assert.assertNotNull(fractionFormat43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator45);
        org.junit.Assert.assertNotNull(numberFormat46);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(attributedCharacterIterator50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator54);
        org.junit.Assert.assertNotNull(numberFormat55);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (-1L) + "'", obj60, (-1L));
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        java.lang.Object obj22 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str25 = fractionFormat23.format((java.lang.Object) 0);
        java.lang.String str27 = fractionFormat23.format((java.lang.Object) (-1));
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj30 = fractionFormat28.parseObject("0 / 1");
        java.lang.Object obj32 = fractionFormat28.parseObject("-1 / 1");
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj36 = fractionFormat34.parseObject("0 / 1");
        java.lang.Object obj38 = fractionFormat34.parseObject("0 / 1");
        java.text.NumberFormat numberFormat39 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat40.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat39, numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj47 = fractionFormat45.parseObject("0 / 1");
        java.lang.Object obj49 = fractionFormat45.parseObject("0 / 1");
        java.text.NumberFormat numberFormat50 = fractionFormat45.getNumeratorFormat();
        fractionFormat44.setDenominatorFormat(numberFormat50);
        java.lang.Object obj52 = numberFormat50.clone();
        fractionFormat33.setNumeratorFormat(numberFormat50);
        java.lang.Object obj54 = numberFormat50.clone();
        java.lang.Object obj55 = numberFormat50.clone();
        fractionFormat28.setDenominatorFormat(numberFormat50);
        fractionFormat23.setNumeratorFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat59 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat60 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat50);
        org.apache.commons.math.fraction.FractionFormat fractionFormat61 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator63 = fractionFormat61.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat64 = fractionFormat61.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat65 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator67 = fractionFormat65.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat68 = fractionFormat65.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat69 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64, numberFormat68);
        org.apache.commons.math.fraction.FractionFormat fractionFormat70 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64);
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat64);
        java.text.NumberFormat numberFormat72 = fractionFormat71.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = fractionFormat60.format((java.lang.Object) fractionFormat71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "0 / 1" + "'", str25, "0 / 1");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1 / 1" + "'", str27, "-1 / 1");
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(fractionFormat34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(fractionFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(fractionFormat61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator63);
        org.junit.Assert.assertNotNull(numberFormat64);
        org.junit.Assert.assertNotNull(fractionFormat65);
        org.junit.Assert.assertNotNull(attributedCharacterIterator67);
        org.junit.Assert.assertNotNull(numberFormat68);
        org.junit.Assert.assertNotNull(numberFormat72);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = fractionFormat12.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat15 = fractionFormat12.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = new org.apache.commons.math.fraction.FractionFormat(numberFormat15, numberFormat19);
        fractionFormat11.setNumeratorFormat(numberFormat15);
        java.text.NumberFormat numberFormat22 = fractionFormat11.getNumeratorFormat();
        java.text.NumberFormat numberFormat23 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23);
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj27 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj29 = fractionFormat25.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat25.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = null;
        java.text.NumberFormat numberFormat33 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat34 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat33);
        java.text.NumberFormat numberFormat35 = fractionFormat34.getDenominatorFormat();
        java.text.NumberFormat numberFormat36 = fractionFormat34.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj44 = fractionFormat42.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat42.getNumeratorFormat();
        fractionFormat34.setNumeratorFormat(numberFormat45);
        java.lang.Object obj48 = numberFormat45.parseObject("0 / 1");
        fractionFormat25.setNumeratorFormat(numberFormat45);
        java.text.NumberFormat numberFormat50 = fractionFormat25.getDenominatorFormat();
        java.text.NumberFormat numberFormat51 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj54 = fractionFormat52.parseObject("0 / 1");
        java.lang.Object obj56 = fractionFormat52.parseObject("0 / 1");
        java.text.NumberFormat numberFormat57 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat61 = fractionFormat58.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat62 = new org.apache.commons.math.fraction.FractionFormat(numberFormat57, numberFormat61);
        fractionFormat25.setDenominatorFormat(numberFormat61);
        java.lang.StringBuffer stringBuffer64 = null;
        java.text.FieldPosition fieldPosition65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer66 = fractionFormat24.format((java.lang.Object) fractionFormat25, stringBuffer64, fieldPosition65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNotNull(numberFormat15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(fractionFormat25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNull(numberFormat35);
        org.junit.Assert.assertNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fractionFormat42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0L + "'", obj48, 0L);
        org.junit.Assert.assertNotNull(numberFormat50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(fractionFormat52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(numberFormat57);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(numberFormat61);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.NumberFormat numberFormat6 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator9 = fractionFormat7.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat10 = fractionFormat7.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        java.lang.Object obj12 = fractionFormat11.clone();
        java.text.NumberFormat numberFormat13 = fractionFormat11.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj16 = fractionFormat14.parseObject("0 / 1");
        java.lang.Object obj18 = fractionFormat14.parseObject("0 / 1");
        java.text.NumberFormat numberFormat19 = fractionFormat14.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj22 = fractionFormat20.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = fractionFormat20.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getNumeratorFormat();
        java.text.NumberFormat numberFormat26 = fractionFormat24.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat26);
        java.text.ParsePosition parsePosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction30 = fractionFormat11.parse("100", parsePosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(attributedCharacterIterator9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat26);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        java.lang.Object obj5 = fractionFormat2.clone();
        java.text.NumberFormat numberFormat6 = fractionFormat2.getNumeratorFormat();
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNull(numberFormat6);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat3 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj6 = fractionFormat4.parseObject("0 / 1");
        java.lang.Object obj8 = fractionFormat4.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat4.getNumeratorFormat();
        java.text.NumberFormat numberFormat10 = fractionFormat4.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = fractionFormat11.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat14 = fractionFormat11.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat10, numberFormat14);
        fractionFormat0.setNumeratorFormat(numberFormat14);
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction19 = fractionFormat0.parse("0", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(numberFormat14);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.lang.Object obj10 = numberFormat8.clone();
        java.lang.String str12 = numberFormat8.format((java.lang.Object) (short) 10);
        java.text.NumberFormat numberFormat13 = null;
        java.text.NumberFormat numberFormat14 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13, numberFormat14);
        java.text.NumberFormat numberFormat16 = fractionFormat15.getDenominatorFormat();
        java.text.NumberFormat numberFormat17 = fractionFormat15.getNumeratorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat15.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat19 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = fractionFormat19.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat22 = fractionFormat19.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator25 = fractionFormat23.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat26 = fractionFormat23.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat26);
        fractionFormat15.setNumeratorFormat(numberFormat22);
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator35 = fractionFormat33.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat36 = fractionFormat33.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator39 = fractionFormat37.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat40 = fractionFormat37.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat41 = new org.apache.commons.math.fraction.FractionFormat(numberFormat36, numberFormat40);
        org.apache.commons.math.fraction.FractionFormat fractionFormat42 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat43 = new org.apache.commons.math.fraction.FractionFormat(numberFormat22, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat44 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8, numberFormat32);
        org.apache.commons.math.fraction.FractionFormat fractionFormat45 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        org.apache.commons.math.fraction.Fraction fraction47 = fractionFormat45.parse("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj50 = fractionFormat48.parseObject("0 / 1");
        java.text.NumberFormat numberFormat51 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat52 = fractionFormat48.getNumeratorFormat();
        fractionFormat45.setDenominatorFormat(numberFormat52);
        java.text.NumberFormat numberFormat54 = fractionFormat45.getNumeratorFormat();
        java.text.NumberFormat numberFormat55 = fractionFormat45.getDenominatorFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction57 = fractionFormat45.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Unparseable fraction number: \"hi!\"");
        } catch (java.text.ParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10" + "'", str12, "10");
        org.junit.Assert.assertNull(numberFormat16);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNull(numberFormat18);
        org.junit.Assert.assertNotNull(fractionFormat19);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertNotNull(numberFormat22);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(attributedCharacterIterator25);
        org.junit.Assert.assertNotNull(numberFormat26);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(attributedCharacterIterator35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator39);
        org.junit.Assert.assertNotNull(numberFormat40);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fractionFormat48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(numberFormat51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(numberFormat54);
        org.junit.Assert.assertNotNull(numberFormat55);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat8);
        java.lang.Object obj11 = numberFormat8.clone();
        java.lang.Object obj13 = numberFormat8.parseObject("100");
        org.apache.commons.math.fraction.FractionFormat fractionFormat14 = new org.apache.commons.math.fraction.FractionFormat();
        java.lang.String str16 = fractionFormat14.format((java.lang.Object) 0);
        java.text.NumberFormat numberFormat17 = fractionFormat14.getDenominatorFormat();
        java.text.NumberFormat numberFormat18 = fractionFormat14.getNumeratorFormat();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = numberFormat8.format((java.lang.Object) numberFormat18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0 / 1" + "'", str16, "0 / 1");
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(numberFormat18);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj6 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat7 = fractionFormat0.getDenominatorFormat();
        java.text.NumberFormat numberFormat8 = fractionFormat0.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat8);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat6 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj8 = fractionFormat6.parseObject("0 / 1");
        java.text.NumberFormat numberFormat9 = fractionFormat6.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat5, numberFormat9);
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj13 = fractionFormat11.parseObject("0 / 1");
        java.lang.Object obj15 = fractionFormat11.parseObject("0 / 1");
        java.text.NumberFormat numberFormat16 = fractionFormat11.getNumeratorFormat();
        fractionFormat10.setDenominatorFormat(numberFormat16);
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator20 = fractionFormat18.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat21 = fractionFormat18.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator24 = fractionFormat22.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat25 = fractionFormat22.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = new org.apache.commons.math.fraction.FractionFormat(numberFormat21, numberFormat25);
        java.text.NumberFormat numberFormat27 = fractionFormat26.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat29 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj31 = fractionFormat29.parseObject("0 / 1");
        java.lang.Object obj33 = fractionFormat29.parseObject("0 / 1");
        java.text.NumberFormat numberFormat34 = fractionFormat29.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat35 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj37 = fractionFormat35.parseObject("0 / 1");
        java.text.NumberFormat numberFormat38 = fractionFormat35.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat39 = new org.apache.commons.math.fraction.FractionFormat(numberFormat34, numberFormat38);
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj42 = fractionFormat40.parseObject("0 / 1");
        java.lang.Object obj44 = fractionFormat40.parseObject("0 / 1");
        java.text.NumberFormat numberFormat45 = fractionFormat40.getNumeratorFormat();
        fractionFormat39.setDenominatorFormat(numberFormat45);
        java.lang.Object obj47 = numberFormat45.clone();
        fractionFormat28.setNumeratorFormat(numberFormat45);
        java.lang.Object obj49 = numberFormat45.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat50 = new org.apache.commons.math.fraction.FractionFormat(numberFormat27, numberFormat45);
        fractionFormat10.setDenominatorFormat(numberFormat45);
        java.text.ParsePosition parsePosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = fractionFormat10.parseObject("", parsePosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
        org.junit.Assert.assertNotNull(fractionFormat6);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(numberFormat16);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(attributedCharacterIterator20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(attributedCharacterIterator24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(fractionFormat29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(numberFormat34);
        org.junit.Assert.assertNotNull(fractionFormat35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(numberFormat38);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(numberFormat45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat1 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj3 = fractionFormat1.parseObject("0 / 1");
        java.lang.Object obj5 = fractionFormat1.parseObject("0 / 1");
        java.text.NumberFormat numberFormat6 = fractionFormat1.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat7 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj9 = fractionFormat7.parseObject("0 / 1");
        java.text.NumberFormat numberFormat10 = fractionFormat7.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = new org.apache.commons.math.fraction.FractionFormat(numberFormat6, numberFormat10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        fractionFormat11.setDenominatorFormat(numberFormat17);
        java.lang.Object obj19 = numberFormat17.clone();
        fractionFormat0.setNumeratorFormat(numberFormat17);
        java.lang.Object obj21 = numberFormat17.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj24 = fractionFormat22.parseObject("0 / 1");
        java.text.NumberFormat numberFormat25 = fractionFormat22.getNumeratorFormat();
        java.lang.Object obj26 = fractionFormat22.clone();
        java.text.NumberFormat numberFormat27 = fractionFormat22.getDenominatorFormat();
        java.lang.Object obj29 = fractionFormat22.parseObject("0 / 1");
        java.lang.String str30 = numberFormat17.format(obj29);
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(fractionFormat1);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat6);
        org.junit.Assert.assertNotNull(fractionFormat7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(fractionFormat22);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(numberFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "0" + "'", str30, "0");
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj2 = fractionFormat0.parseObject("0 / 1");
        java.lang.Object obj4 = fractionFormat0.parseObject("0 / 1");
        java.text.NumberFormat numberFormat5 = fractionFormat0.getNumeratorFormat();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction8 = fractionFormat0.parse("0", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(numberFormat5);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj12 = fractionFormat10.parseObject("0 / 1");
        java.text.NumberFormat numberFormat13 = fractionFormat10.getNumeratorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat15 = new org.apache.commons.math.fraction.FractionFormat(numberFormat13);
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator18 = fractionFormat16.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat19 = fractionFormat16.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat20 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator22 = fractionFormat20.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat23 = fractionFormat20.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat24 = new org.apache.commons.math.fraction.FractionFormat(numberFormat19, numberFormat23);
        java.text.NumberFormat numberFormat25 = fractionFormat24.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat26 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat27 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj29 = fractionFormat27.parseObject("0 / 1");
        java.lang.Object obj31 = fractionFormat27.parseObject("0 / 1");
        java.text.NumberFormat numberFormat32 = fractionFormat27.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat32, numberFormat36);
        org.apache.commons.math.fraction.FractionFormat fractionFormat38 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj40 = fractionFormat38.parseObject("0 / 1");
        java.lang.Object obj42 = fractionFormat38.parseObject("0 / 1");
        java.text.NumberFormat numberFormat43 = fractionFormat38.getNumeratorFormat();
        fractionFormat37.setDenominatorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat26.setNumeratorFormat(numberFormat43);
        java.lang.Object obj47 = numberFormat43.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat48 = new org.apache.commons.math.fraction.FractionFormat(numberFormat25, numberFormat43);
        java.text.NumberFormat numberFormat49 = fractionFormat48.getNumeratorFormat();
        java.text.NumberFormat numberFormat50 = null;
        java.text.NumberFormat numberFormat51 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat52 = new org.apache.commons.math.fraction.FractionFormat(numberFormat50, numberFormat51);
        java.text.NumberFormat numberFormat53 = fractionFormat52.getDenominatorFormat();
        java.text.NumberFormat numberFormat54 = fractionFormat52.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat55 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = fractionFormat55.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat58 = fractionFormat55.getDenominatorFormat();
        fractionFormat52.setNumeratorFormat(numberFormat58);
        java.lang.Object obj60 = numberFormat58.clone();
        java.lang.String str62 = numberFormat58.format((java.lang.Object) (short) 10);
        org.apache.commons.math.fraction.FractionFormat fractionFormat63 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator65 = fractionFormat63.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat66 = fractionFormat63.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat67 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator69 = fractionFormat67.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat70 = fractionFormat67.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat71 = new org.apache.commons.math.fraction.FractionFormat(numberFormat66, numberFormat70);
        org.apache.commons.math.fraction.FractionFormat fractionFormat72 = new org.apache.commons.math.fraction.FractionFormat(numberFormat58, numberFormat66);
        java.text.NumberFormat numberFormat73 = fractionFormat72.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat74 = new org.apache.commons.math.fraction.FractionFormat(numberFormat49, numberFormat73);
        org.apache.commons.math.fraction.FractionFormat fractionFormat75 = new org.apache.commons.math.fraction.FractionFormat(numberFormat73);
        fractionFormat15.setDenominatorFormat(numberFormat73);
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNotNull(fractionFormat10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(numberFormat13);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(attributedCharacterIterator18);
        org.junit.Assert.assertNotNull(numberFormat19);
        org.junit.Assert.assertNotNull(fractionFormat20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator22);
        org.junit.Assert.assertNotNull(numberFormat23);
        org.junit.Assert.assertNotNull(numberFormat25);
        org.junit.Assert.assertNotNull(fractionFormat26);
        org.junit.Assert.assertNotNull(fractionFormat27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertNotNull(fractionFormat38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(numberFormat49);
        org.junit.Assert.assertNull(numberFormat53);
        org.junit.Assert.assertNull(numberFormat54);
        org.junit.Assert.assertNotNull(fractionFormat55);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(numberFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "10" + "'", str62, "10");
        org.junit.Assert.assertNotNull(fractionFormat63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator65);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(fractionFormat67);
        org.junit.Assert.assertNotNull(attributedCharacterIterator69);
        org.junit.Assert.assertNotNull(numberFormat70);
        org.junit.Assert.assertNotNull(numberFormat73);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat10.parse("10");
        org.apache.commons.math.fraction.Fraction fraction15 = fractionFormat10.parse("10");
        org.apache.commons.math.fraction.FractionFormat fractionFormat16 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj18 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj20 = fractionFormat16.parseObject("0 / 1");
        java.lang.Object obj22 = fractionFormat16.parseObject("0 / 1");
        java.text.NumberFormat numberFormat23 = null;
        java.text.NumberFormat numberFormat24 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat25 = new org.apache.commons.math.fraction.FractionFormat(numberFormat23, numberFormat24);
        java.text.NumberFormat numberFormat26 = fractionFormat25.getDenominatorFormat();
        java.text.NumberFormat numberFormat27 = fractionFormat25.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat28 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = fractionFormat28.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat31 = fractionFormat28.getDenominatorFormat();
        fractionFormat25.setNumeratorFormat(numberFormat31);
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj35 = fractionFormat33.parseObject("0 / 1");
        java.text.NumberFormat numberFormat36 = fractionFormat33.getNumeratorFormat();
        fractionFormat25.setNumeratorFormat(numberFormat36);
        java.lang.Object obj39 = numberFormat36.parseObject("0 / 1");
        fractionFormat16.setNumeratorFormat(numberFormat36);
        java.text.NumberFormat numberFormat41 = fractionFormat16.getDenominatorFormat();
        fractionFormat10.setDenominatorFormat(numberFormat41);
        java.text.NumberFormat numberFormat43 = fractionFormat10.getDenominatorFormat();
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fractionFormat16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNull(numberFormat26);
        org.junit.Assert.assertNull(numberFormat27);
        org.junit.Assert.assertNotNull(fractionFormat28);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
        org.junit.Assert.assertNotNull(numberFormat31);
        org.junit.Assert.assertNotNull(fractionFormat33);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(numberFormat36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0L + "'", obj39, 0L);
        org.junit.Assert.assertNotNull(numberFormat41);
        org.junit.Assert.assertNotNull(numberFormat43);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.apache.commons.math.fraction.FractionFormat fractionFormat0 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator2 = fractionFormat0.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat3 = fractionFormat0.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat4 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator6 = fractionFormat4.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat7 = fractionFormat4.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat8 = new org.apache.commons.math.fraction.FractionFormat(numberFormat3, numberFormat7);
        java.text.NumberFormat numberFormat9 = fractionFormat8.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat10 = new org.apache.commons.math.fraction.FractionFormat(numberFormat9);
        java.text.NumberFormat numberFormat11 = fractionFormat10.getDenominatorFormat();
        org.apache.commons.math.fraction.Fraction fraction13 = fractionFormat10.parse("0");
        java.text.ParsePosition parsePosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction16 = fractionFormat10.parse("0", parsePosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fractionFormat0);
        org.junit.Assert.assertNotNull(attributedCharacterIterator2);
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(fractionFormat4);
        org.junit.Assert.assertNotNull(attributedCharacterIterator6);
        org.junit.Assert.assertNotNull(numberFormat7);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat11);
        org.junit.Assert.assertNotNull(fraction13);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        fractionFormat22.setDenominatorFormat(numberFormat28);
        java.lang.Object obj30 = numberFormat28.clone();
        fractionFormat11.setNumeratorFormat(numberFormat28);
        java.lang.Object obj32 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat2.setNumeratorFormat(numberFormat28);
        java.text.ParsePosition parsePosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.fraction.Fraction fraction37 = fractionFormat2.parse("", parsePosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        java.text.NumberFormat numberFormat0 = null;
        java.text.NumberFormat numberFormat1 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat2 = new org.apache.commons.math.fraction.FractionFormat(numberFormat0, numberFormat1);
        java.text.NumberFormat numberFormat3 = fractionFormat2.getDenominatorFormat();
        java.text.NumberFormat numberFormat4 = fractionFormat2.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat5 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator7 = fractionFormat5.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat8 = fractionFormat5.getDenominatorFormat();
        fractionFormat2.setNumeratorFormat(numberFormat8);
        java.text.NumberFormat numberFormat10 = fractionFormat2.getDenominatorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat11 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        org.apache.commons.math.fraction.FractionFormat fractionFormat12 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj14 = fractionFormat12.parseObject("0 / 1");
        java.lang.Object obj16 = fractionFormat12.parseObject("0 / 1");
        java.text.NumberFormat numberFormat17 = fractionFormat12.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat18 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj20 = fractionFormat18.parseObject("0 / 1");
        java.text.NumberFormat numberFormat21 = fractionFormat18.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat22 = new org.apache.commons.math.fraction.FractionFormat(numberFormat17, numberFormat21);
        org.apache.commons.math.fraction.FractionFormat fractionFormat23 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj25 = fractionFormat23.parseObject("0 / 1");
        java.lang.Object obj27 = fractionFormat23.parseObject("0 / 1");
        java.text.NumberFormat numberFormat28 = fractionFormat23.getNumeratorFormat();
        fractionFormat22.setDenominatorFormat(numberFormat28);
        java.lang.Object obj30 = numberFormat28.clone();
        fractionFormat11.setNumeratorFormat(numberFormat28);
        java.lang.Object obj32 = numberFormat28.clone();
        org.apache.commons.math.fraction.FractionFormat fractionFormat33 = new org.apache.commons.math.fraction.FractionFormat(numberFormat28);
        fractionFormat2.setNumeratorFormat(numberFormat28);
        java.text.NumberFormat numberFormat35 = null;
        java.text.NumberFormat numberFormat36 = null;
        org.apache.commons.math.fraction.FractionFormat fractionFormat37 = new org.apache.commons.math.fraction.FractionFormat(numberFormat35, numberFormat36);
        java.text.NumberFormat numberFormat38 = fractionFormat37.getDenominatorFormat();
        java.text.NumberFormat numberFormat39 = fractionFormat37.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat40 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.text.AttributedCharacterIterator attributedCharacterIterator42 = fractionFormat40.formatToCharacterIterator((java.lang.Object) (byte) 100);
        java.text.NumberFormat numberFormat43 = fractionFormat40.getDenominatorFormat();
        fractionFormat37.setNumeratorFormat(numberFormat43);
        java.lang.Object obj45 = numberFormat43.clone();
        fractionFormat2.setNumeratorFormat(numberFormat43);
        org.apache.commons.math.fraction.FractionFormat fractionFormat47 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj49 = fractionFormat47.parseObject("0 / 1");
        java.lang.Object obj51 = fractionFormat47.parseObject("0 / 1");
        java.text.NumberFormat numberFormat52 = fractionFormat47.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat53 = org.apache.commons.math.fraction.FractionFormat.getImproperInstance();
        java.lang.Object obj55 = fractionFormat53.parseObject("0 / 1");
        java.text.NumberFormat numberFormat56 = fractionFormat53.getNumeratorFormat();
        org.apache.commons.math.fraction.FractionFormat fractionFormat57 = new org.apache.commons.math.fraction.FractionFormat(numberFormat52, numberFormat56);
        org.apache.commons.math.fraction.FractionFormat fractionFormat58 = org.apache.commons.math.fraction.FractionFormat.getProperInstance();
        java.lang.Object obj60 = fractionFormat58.parseObject("0 / 1");
        java.lang.Object obj62 = fractionFormat58.parseObject("0 / 1");
        java.text.NumberFormat numberFormat63 = fractionFormat58.getNumeratorFormat();
        fractionFormat57.setDenominatorFormat(numberFormat63);
        java.lang.StringBuffer stringBuffer65 = null;
        java.text.FieldPosition fieldPosition66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer67 = fractionFormat2.format((java.lang.Object) numberFormat63, stringBuffer65, fieldPosition66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given object as a fraction");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(numberFormat3);
        org.junit.Assert.assertNull(numberFormat4);
        org.junit.Assert.assertNotNull(fractionFormat5);
        org.junit.Assert.assertNotNull(attributedCharacterIterator7);
        org.junit.Assert.assertNotNull(numberFormat8);
        org.junit.Assert.assertNull(numberFormat10);
        org.junit.Assert.assertNotNull(fractionFormat11);
        org.junit.Assert.assertNotNull(fractionFormat12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(numberFormat17);
        org.junit.Assert.assertNotNull(fractionFormat18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertNotNull(fractionFormat23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(numberFormat28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNull(numberFormat38);
        org.junit.Assert.assertNull(numberFormat39);
        org.junit.Assert.assertNotNull(fractionFormat40);
        org.junit.Assert.assertNotNull(attributedCharacterIterator42);
        org.junit.Assert.assertNotNull(numberFormat43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(fractionFormat47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(numberFormat52);
        org.junit.Assert.assertNotNull(fractionFormat53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(numberFormat56);
        org.junit.Assert.assertNotNull(fractionFormat58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(numberFormat63);
    }
}

