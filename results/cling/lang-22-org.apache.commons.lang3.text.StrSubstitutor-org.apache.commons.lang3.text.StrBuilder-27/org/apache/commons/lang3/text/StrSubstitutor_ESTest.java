/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 21:24:59 GMT 2019
 */

package org.apache.commons.lang3.text;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.Properties;
import java.util.function.BiFunction;
import org.apache.commons.lang3.text.StrBuilder;
import org.apache.commons.lang3.text.StrLookup;
import org.apache.commons.lang3.text.StrMatcher;
import org.apache.commons.lang3.text.StrSubstitutor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class StrSubstitutor_ESTest extends StrSubstitutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setLength(0);
      assertEquals(32, strBuilder1.capacity());
      assertTrue(strBuilder1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<String, StrLookup<Object>> hashMap0 = new HashMap<String, StrLookup<Object>>();
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang3.text.StrSubstitutor");
      strBuilder0.insert(25, (char[]) null);
      Properties properties0 = new Properties();
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      properties0.merge("${", hashMap0, biFunction0);
      String string0 = StrSubstitutor.replace((Object) null, properties0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.commons.lang3.text.StrMatcher");
      strSubstitutor0.replaceIn(stringBuffer0);
      StrBuilder strBuilder0 = new StrBuilder(25);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1306));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1306
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0);
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setLength(101);
      strBuilder1.lastIndexOf(strSubstitutor0.DEFAULT_PREFIX);
      boolean boolean0 = strSubstitutor0.replaceIn(strBuilder0);
      assertEquals(101, strBuilder0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0);
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setLength(101);
      strBuilder1.lastIndexOf(strSubstitutor0.DEFAULT_PREFIX);
      assertEquals(202, strBuilder0.capacity());
      
      StringBuffer stringBuffer0 = new StringBuffer(101);
      strSubstitutor0.replaceIn(stringBuffer0);
      assertEquals('$', strSubstitutor0.getEscapeChar());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, ?>) hashMap0);
      strSubstitutor0.replaceIn((StrBuilder) null);
      StrBuilder strBuilder0 = new StrBuilder("u");
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(2338, 10);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0);
      StringBuffer stringBuffer0 = new StringBuffer(": ");
      strSubstitutor0.replaceIn(stringBuffer0);
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.validateRange('$', '$');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("u");
      StrBuilder strBuilder1 = strBuilder0.appendSeparator('o', (-906));
      // Undeclared exception!
      try { 
        strBuilder1.toCharArray(2338, 10);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang3.text.StrSubstitutor");
      strBuilder0.deleteFirst("");
      StrBuilder strBuilder1 = strBuilder0.insert(25, (char[]) null);
      assertEquals(44, strBuilder1.length());
      assertEquals(76, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, ?>) hashMap0, "", "", 'w');
      StrSubstitutor.replace((Object) strSubstitutor0, (Properties) null);
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.appendSeparator("<", "org.apache.commons.lang3.text.StrSubstitutor@3f79ac68");
      char[] charArray0 = new char[4];
      strBuilder1.insert(1, charArray0);
      assertEquals(57, strBuilder0.size());
      assertEquals(106, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, ?>) hashMap0, "", "");
      Properties properties0 = new Properties();
      StrSubstitutor.replace((Object) strSubstitutor0, properties0);
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring((int) '$');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StrLookup<String> strLookup0 = StrLookup.systemPropertiesLookup();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang3.text.StrMatcher");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'M');
      StringBuffer stringBuffer0 = new StringBuffer("+w,6#5Eg7Mt}{[GVmz");
      strSubstitutor0.replace(stringBuffer0);
      StrBuilder strBuilder0 = new StrBuilder(25);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1306));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1306
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StrLookup<String> strLookup0 = StrLookup.systemPropertiesLookup();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang3.text.StrMatcher");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'M');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.commons.lang3.text.StrMatcher");
      strSubstitutor0.replaceIn(stringBuffer0);
      StrBuilder strBuilder0 = new StrBuilder(25);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1306));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1306
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0);
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefix('i');
      strSubstitutor1.replace("org.apache.commons.lang3.text.StrSubstitutor");
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append(true);
      strBuilder0.lastIndexOf(strSubstitutor0.DEFAULT_SUFFIX);
      assertFalse(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StrLookup<String> strLookup0 = StrLookup.systemPropertiesLookup();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang3.text.StrMatcher");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'w');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.commons.lang3.text.StrMatcher");
      strSubstitutor0.replaceIn(stringBuffer0);
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring(34);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      strBuilder0.append(true);
      StrMatcher strMatcher0 = StrMatcher.stringMatcher("7");
      strBuilder0.lastIndexOf(strMatcher0);
      StrMatcher strMatcher1 = StrMatcher.doubleQuoteMatcher();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((StrLookup<?>) null, strMatcher1, strMatcher0, 'q');
      // Undeclared exception!
      try { 
        strSubstitutor0.replace("", (-1), 399);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0);
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setLength('$');
      strBuilder1.lastIndexOf(strSubstitutor0.DEFAULT_PREFIX);
      // Undeclared exception!
      try { 
        strSubstitutor0.replace("", 0, 101);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, ?>) hashMap0);
      strSubstitutor0.replace((StringBuffer) null);
      StrBuilder strBuilder0 = new StrBuilder("u");
      // Undeclared exception!
      try { 
        strBuilder0.toCharArray(2338, 10);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      StringBuffer stringBuffer0 = new StringBuffer(9);
      strSubstitutor0.replace(stringBuffer0);
      StrBuilder strBuilder0 = new StrBuilder(411);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(20, 411);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      char[] charArray0 = new char[6];
      charArray0[3] = '$';
      charArray0[4] = '{';
      strSubstitutor0.replace(charArray0);
      StrBuilder strBuilder0 = new StrBuilder(411);
      // Undeclared exception!
      try { 
        strBuilder0.validateRange(20, 411);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang3.text.StrSubstitutor");
      StrBuilder strBuilder1 = strBuilder0.insert(25, (char[]) null);
      assertEquals(44, strBuilder0.length());
      assertEquals(76, strBuilder1.capacity());
      
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      strSubstitutor0.replace((StringBuffer) null);
      assertEquals('$', strSubstitutor0.getEscapeChar());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang3.text.StrSubstitutor");
      strBuilder0.insert(19, (char[]) null);
      StringBuffer stringBuffer0 = new StringBuffer(strBuilder0);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Integer>) hashMap0);
      String string0 = strSubstitutor0.replace(stringBuffer0);
      assertEquals("org.apache.commons.lang3.text.StrSubstitutor", string0);
      assertEquals(44, strBuilder0.size());
      assertEquals(76, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StrLookup<String> strLookup0 = StrLookup.systemPropertiesLookup();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang3.text.StrMatcher");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'w');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.commons.lang3.text.StrMatcher");
      strSubstitutor0.replaceIn(stringBuffer0);
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang3.text.StrMatcher");
      char[] charArray0 = new char[4];
      strBuilder0.insert(1, charArray0);
      assertEquals(44, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang3.text.StrSubstitutor");
      strBuilder0.insert(19, (char[]) null);
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) null);
      // Undeclared exception!
      try { 
        strSubstitutor0.replace("vuafp=P^CB(?.MbwOK", 32, 44);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0);
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setLength('$');
      strBuilder1.insert((int) '$', 0L);
      // Undeclared exception!
      try { 
        strSubstitutor0.replace("", 0, 101);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StrLookup<String> strLookup0 = StrLookup.systemPropertiesLookup();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang3.text.StrMatcher");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'w');
      strSubstitutor0.setEnableSubstitutionInVariables(true);
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang3.text.StrMatcher");
      StrBuilder strBuilder1 = strBuilder0.appendSeparator('$', 3714);
      char[] charArray0 = new char[4];
      strSubstitutor0.replace(strBuilder1);
      strBuilder1.insert(1, charArray0);
      assertEquals(45, strBuilder1.length());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("Windows 9");
      // Undeclared exception!
      try { 
        strBuilder0.deleteCharAt((-1053));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1053
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("");
      // Undeclared exception!
      try { 
        strBuilder0.charAt((-4626));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4626
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("org.apache.commons.lang3.text.StrMatcher");
      strBuilder0.appendSeparator("f", "f");
      assertEquals(41, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StrLookup<String> strLookup0 = StrLookup.systemPropertiesLookup();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang3.text.StrMatcher");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'M');
      strSubstitutor0.setEnableSubstitutionInVariables(true);
      StrBuilder strBuilder0 = new StrBuilder("+w,6#5Eg7Mt}{[GVmz");
      strSubstitutor0.replaceIn(strBuilder0);
      int int0 = strBuilder0.lastIndexOf(strSubstitutor0.DEFAULT_SUFFIX);
      assertTrue(strSubstitutor0.isEnableSubstitutionInVariables());
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test30()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0);
      StrBuilder strBuilder0 = new StrBuilder("");
      StrBuilder strBuilder1 = strBuilder0.setLength(101);
      strBuilder1.lastIndexOf(strSubstitutor0.DEFAULT_PREFIX);
      assertEquals(202, strBuilder0.capacity());
      
      String string0 = StrSubstitutor.replace((Object) "", (Map<String, Locale.FilteringMode>) null, "", "NacaMd3X");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StrLookup<String> strLookup0 = StrLookup.systemPropertiesLookup();
      StrMatcher strMatcher0 = StrMatcher.charSetMatcher("org.apache.commons.lang3.text.StrMatcher");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'M');
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.commons.lang3.text.StrMatcher");
      strSubstitutor0.replaceIn(stringBuffer0);
      assertEquals(39, stringBuffer0.length());
      
      StrBuilder strBuilder0 = new StrBuilder("+w,6#5Eg7Mt}{[GVmz");
      int int0 = strBuilder0.lastIndexOf(strSubstitutor0.DEFAULT_SUFFIX);
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Properties properties0 = new Properties();
      StrSubstitutor.replace((Object) locale_FilteringMode0, properties0);
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2911));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2911
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }
}
