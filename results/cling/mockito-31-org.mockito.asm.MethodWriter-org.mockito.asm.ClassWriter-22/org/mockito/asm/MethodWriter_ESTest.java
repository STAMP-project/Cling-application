/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 09:34:09 GMT 2019
 */

package org.mockito.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mockito.asm.ClassReader;
import org.mockito.asm.ClassVisitor;
import org.mockito.asm.ClassWriter;
import org.mockito.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-4416);
      MethodWriter.getNewOffset(intArray0, intArray0, (-2393), (-4416));
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn((-4416), 3, (-2393), 0, 67).when(classWriter0).newClass(anyString());
      doReturn((-4416), (-5018)).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[6];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 131072, "fC@*\u0007v", "1B7>Z*ec){#S^", "fC@*\u0007v", stringArray0, true, false);
      methodWriter0.visitVarInsn(42, 684);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4481));
      classWriter0.newFloat(0.0F);
      ClassReader classReader0 = new ClassReader("java/lang/Class");
      // Undeclared exception!
      classReader0.accept((ClassVisitor) classWriter0, 4);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4416));
      ClassReader classReader0 = new ClassReader("java/lang/Class");
      // Undeclared exception!
      classReader0.accept((ClassVisitor) classWriter0, (-1012));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4416));
      ClassReader classReader0 = new ClassReader("java/lang/Class");
      // Undeclared exception!
      classReader0.accept((ClassVisitor) classWriter0, 554);
  }
}
