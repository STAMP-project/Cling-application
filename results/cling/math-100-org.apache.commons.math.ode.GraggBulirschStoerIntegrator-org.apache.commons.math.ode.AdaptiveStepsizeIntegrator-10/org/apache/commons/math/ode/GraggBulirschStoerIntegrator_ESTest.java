/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 23:05:20 GMT 2019
 */

package org.apache.commons.math.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.FirstOrderConverter;
import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math.ode.GraggBulirschStoerIntegrator;
import org.apache.commons.math.ode.IntegratorException;
import org.apache.commons.math.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math.ode.StepHandler;
import org.apache.commons.math.ode.SwitchingFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1854.0, 0.3111643669578199, 1854.0, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(7, 7).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 7, 7, 0.3111643669578199);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) (-7);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-7), doubleArray0, (-74.85333742726), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // minimal step size (1,854) reached, integration needs 0.578
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(385.8983129441, 385.8983129441, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 23, 1072, 385.8983129441);
      double double0 = graggBulirschStoerIntegrator0.filterStep(192, true);
      assertEquals(385.8983129441, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(385.8983129441, double0, 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1854.0, 0.3111643669578199, 1854.0, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(7, 7).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 7, 7, 0.3111643669578199);
      double[] doubleArray0 = new double[7];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 7, doubleArray0, 1623.285551289, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // minimal step size (1,854) reached, integration needs 0.578
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1854.0, 0.3111643669578199, 1854.0, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(35, 35).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 35, 35, 0.3111643669578199);
      double[] doubleArray0 = new double[7];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 2895.014120751638, doubleArray0, 999.9, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 35, initial state vector has dimension 7
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1854.0, 0.3111643669578199, 1854.0, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(7, (-225), 2374).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 7, 7, 0.3111643669578199);
      double[] doubleArray0 = new double[7];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 7, doubleArray0, 0.001, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 2,374, final state vector has dimension 7
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1.0), (-4.436036387594894), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInitialStepSize(11.0);
      assertEquals(2.106190016972565, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-136.536796198802), (-136.536796198802), 4487.77, 978.64773);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 4487.77;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(838.77031194, 4, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 4270.77898606, doubleArray0, 678.95270200936, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(385.8983129441, 385.8983129441, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInitialStepSize(385.8983129441);
      assertEquals(385.8983129441, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1251.1242924606), (-1251.1242924606), 0.0, 0.0);
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.0, (-1816.7), doubleArray0, doubleArray0);
      assertEquals((-1816.7), graggBulirschStoerIntegrator1.getMaxStep(), 0.01);
      
      graggBulirschStoerIntegrator0.setInitialStepSize((-3969.2517768337843));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1251.1242924606, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(838.77031194, 4487.77, (-136.536796198802), (-1460.247));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(838.77031194, 4, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 4270.77898606, doubleArray0, 678.95270200936, doubleArray0);
      assertEquals((-1.1368683772161603E-13), graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(144.956260778, 144.956260778, 6328.497, 144.956260778);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(11.0, 1598.4433410737367, doubleArray0, doubleArray0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-89.56753167), doubleArray0, 4.000001, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1854.0, 1854.0, 1854.0, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(7, 7).when(firstOrderDifferentialEquations0).getDimension();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1854.0, 1623.285551289, (double[]) null, (double[]) null);
      double[] doubleArray0 = new double[1];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 7, doubleArray0, 0.0, (double[]) null);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 7, initial state vector has dimension 1
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 17, 1879051547, 1879051547);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 978.64773, doubleArray0, 860.5330072646335, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(385.8983129441, 385.8983129441, doubleArray0, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.filterStep((-1103.7973), true);
      assertEquals((-385.8983129441), double0, 0.01);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-375), 9, 0.0);
      assertEquals(385.8983129441, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(838.77031194, 4487.77, 0.0, (-1460.247));
      graggBulirschStoerIntegrator0.setStepsizeControl(2.0, (-3863.415971930152), 0.0, (-611.42055483923));
      graggBulirschStoerIntegrator1.setInitialStepSize(1444.0);
      assertEquals(1940.1567572788995, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      graggBulirschStoerIntegrator0.setStepsizeControl(2.0, (-3863.415971930152), 0.0, (-611.42055483923));
      graggBulirschStoerIntegrator0.setInitialStepSize(1444.0);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1251.1242924606), (-1251.1242924606), 0.0, 0.0);
      graggBulirschStoerIntegrator0.setStepsizeControl(4.0, 0.30545274794128174, 0.0, (-1251.1242924606));
      graggBulirschStoerIntegrator0.setInitialStepSize((-3969.2517768337843));
      assertEquals(1251.1242924606, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1112, 1427.510903, 1112.0, (-286.334083793931));
      double double0 = graggBulirschStoerIntegrator0.filterStep((-286.334083793931), true);
      assertEquals((-1112.0), double0, 0.01);
      
      graggBulirschStoerIntegrator0.setStepsizeControl(1112.0, 1112, (-286.334083793931), (-1784.0));
      assertEquals(1259.9175068773352, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      graggBulirschStoerIntegrator0.setStepsizeControl(2.0, (-3891.129), 0.0, (-611.42055483923));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 860.5330072646335;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-283.3902205266), (-3891.129), doubleArray0, doubleArray0);
      // Undeclared exception!
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 635.486719198, doubleArray0, 2.0, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      graggBulirschStoerIntegrator0.setStepsizeControl(2.0, (-3891.129), 0.0, (-611.42055483923));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-283.3902205266), (-3891.129), doubleArray0, doubleArray0);
      // Undeclared exception!
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 635.486719198, doubleArray0, 2.0, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(385.8983129441, 385.8983129441, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStepsizeControl(385.8983129441, 385.8983129441, 388.146727, 385.8983129441);
      double double0 = graggBulirschStoerIntegrator0.filterStep((-1103.7973), true);
      assertEquals(385.8983129441, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals((-385.8983129441), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      double[] doubleArray0 = new double[6];
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = doubleArray0;
      graggBulirschStoerIntegrator0.setStepsizeControl(2.0, (-3891.129), 0.7103657974060588, (-611.42055483923));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 0.7103657974060588, graggBulirschStoerIntegrator0.vecAbsoluteTolerance, 1.0E-6, graggBulirschStoerIntegrator0.vecAbsoluteTolerance);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 8, initial state vector has dimension 6
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2444.053, 2444.053, doubleArray0, doubleArray0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray1 = new double[0];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 2444.053, doubleArray1, 2343.69438, doubleArray1);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: state vector has dimension 0, absolute tolerance vector has dimension 3
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(838.77031194, 4487.77, 0.0, (-1460.247));
      graggBulirschStoerIntegrator0.setInitialStepSize(1444.0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 4, 2756, 4);
      assertEquals(1940.1567572788995, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 860.5330072646335;
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 4, 2756, 4);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 978.64773, doubleArray0, 1.7976931348623157E308, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      graggBulirschStoerIntegrator0.setInitialStepSize(1444.0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 4, 2756, 4);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1854.0, 0.3111643669578199, 1854.0, 0.0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 35, 35, 0.3111643669578199);
      graggBulirschStoerIntegrator0.setInitialStepSize(0.0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(24.018716375772417, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(526.728466873865, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 1727, 14, 860.5330072646335);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, (-611.42055483923), doubleArray0, (-611.42055483923), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(838.77031194, 4487.77, (-136.536796198802), (-1460.247));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 2750, 6, 838.77031194);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-1784.0), doubleArray0, 4, doubleArray0);
      assertEquals(949.22968806, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      double[] doubleArray0 = new double[6];
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = doubleArray0;
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 794, 794, 860.5330072646335);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 0.7103657974060588, graggBulirschStoerIntegrator0.vecAbsoluteTolerance, 1.0E-6, graggBulirschStoerIntegrator0.vecAbsoluteTolerance);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 8, initial state vector has dimension 6
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0001, 1.0001, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 10, 10, 1.0001);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray1 = new double[8];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 1623.285551289, doubleArray0, 0.30545274794128174, doubleArray1);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, final state vector has dimension 8
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      StepHandler stepHandler0 = mock(StepHandler.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(stepHandler0).requiresDenseOutput();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 4, 2756, 4);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 978.64773, doubleArray0, 1.7976931348623157E308, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(838.77031194, 4487.77, 0.0, (-1460.247));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 4, (-2789), 2750);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 3058.5193716, doubleArray0, (-1460.247), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-136.536796198802), (-136.536796198802), 4487.77, 978.64773);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(838.77031194, 4487.77, (-136.536796198802), (-1460.247));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 201.2827622729, (-1460.247), 6);
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, (-1784.0), doubleArray0, 4, doubleArray0);
      assertEquals(949.22968806, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setStepsizeControl(0.9, (-1), (-1), (-3905.74306446834));
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(838.77031194, 4487.77, 0.0, (-1460.247));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 860.5330072646335;
      doubleArray0[1] = (-611.42055483923);
      doubleArray0[2] = (-1460.247);
      doubleArray0[3] = 2.0;
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 155.11534281, doubleArray0, 4487.77, doubleArray0);
      assertEquals(3493.8843452500005, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.setStepsizeControl(3705.4477, 0.94, (-1460.247), (-611.42055483923));
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      StepHandler stepHandler0 = mock(StepHandler.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(stepHandler0).requiresDenseOutput();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(838.77031194, 4487.77, 0.0, (-1460.247));
      graggBulirschStoerIntegrator1.setStepsizeControl(838.77031194, (-1460.247), (-1872.494840131), 2276.25569258033);
      graggBulirschStoerIntegrator0.setStepsizeControl(2.0, (-3891.129), 0.0, (-611.42055483923));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 860.5330072646335;
      doubleArray0[1] = (-611.42055483923);
      doubleArray0[2] = (-1460.247);
      doubleArray0[3] = 2.0;
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 978.64773, doubleArray0, 860.5330072646335, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 976.5133403900625);
      StepHandler stepHandler0 = mock(StepHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.setStepsizeControl(2.0, (-3891.129), 1.2857314207012085, (-611.42055483923));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-611.42055483923), doubleArray0, 296.5197037796, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(839.0204238671779, 4487.77, 0.0, (-1460.247));
      graggBulirschStoerIntegrator0.setStepsizeControl(2.0, (-3891.129), 0.7103657974060588, (-611.42055483923));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      // Undeclared exception!
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, (-611.42055483923), doubleArray0, 296.5197037796, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(2.0, 296.5197037796, 296.5197037796, 10.0);
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, (-611.42055483923), doubleArray0, 296.5197037796, doubleArray0);
      assertEquals(205.59759585967203, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.setStepsizeControl(0.0, 860.5330072646335, (-1460.247), 839.0204238671779);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(2.0, 296.5197037796, 296.5197037796, 10.0);
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, (-611.42055483923), doubleArray0, 296.5197037796, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(794, 1.0E-6, 794);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-136.536796198802), (-136.536796198802), 4487.77, 978.64773);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 201.2827622729, (-1460.247), 6);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-1784.0), doubleArray0, 4, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(526.728466873865, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(7, 7, 7);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, (-611.42055483923), doubleArray0, (-611.42055483923), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1854.0, 0.3111643669578199, 1854.0, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(7, 7).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setOrderControl(7, (-258.3714009987381), 1623.285551289);
      double[] doubleArray0 = new double[7];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-7), doubleArray0, (-74.85333742726), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // minimal step size (1,854) reached, integration needs 0.578
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(385.8983129441, 385.8983129441, doubleArray0, doubleArray0);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 385.8983129441, 385.8983129441, 11);
      double double0 = graggBulirschStoerIntegrator0.filterStep(192, true);
      assertEquals(385.8983129441, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(385.8983129441, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-136.536796198802), (-136.536796198802), 4487.77, 978.64773);
      StepHandler stepHandler0 = mock(StepHandler.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(stepHandler0).requiresDenseOutput();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(838.77031194, 4487.77, (-136.536796198802), (-1460.247));
      assertEquals(1940.1567572788995, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 4270.77898606, doubleArray0, 678.95270200936, doubleArray0);
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      assertEquals(136.536796198802, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      StepHandler stepHandler0 = mock(StepHandler.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(stepHandler0).requiresDenseOutput();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 978.64773, doubleArray0, 1.7976931348623157E308, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      StepHandler stepHandler0 = mock(StepHandler.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(stepHandler0).requiresDenseOutput();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      graggBulirschStoerIntegrator0.setOrderControl(49526886, 0.0, 1968.38121001);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 1756.43636486406, doubleArray0, 1.0E-6, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 4487.77, 978.64773);
      StepHandler stepHandler0 = mock(StepHandler.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(stepHandler0).requiresDenseOutput();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(838.77031194, 4487.77, 0.0, (-1460.247));
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, (-698.94), 978.64773, (-2187));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      // Undeclared exception!
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 3058.5193716, doubleArray0, (-1460.247), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(526.728466873865, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(7, 7, 7);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-9.35292435884448), (-465.1973), 0.9999, (-465.1973));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      // Undeclared exception!
      graggBulirschStoerIntegrator1.integrate(firstOrderConverter0, 526.728466873865, doubleArray0, 35.81684148639408, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(838.77031194, 4487.77, 0.0, (-1460.247));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.setOrderControl(2146002624, 0.30545274794128174, 1.0E-4);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-1619.4843233), doubleArray0, 0.30545274794128174, doubleArray0);
  }
}
