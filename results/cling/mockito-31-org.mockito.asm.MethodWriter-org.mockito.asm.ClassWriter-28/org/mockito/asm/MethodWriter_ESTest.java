/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 09:32:48 GMT 2019
 */

package org.mockito.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mockito.asm.ByteVector;
import org.mockito.asm.ClassWriter;
import org.mockito.asm.Item;
import org.mockito.asm.Label;
import org.mockito.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{K", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitVarInsn(15, (-2));
      int[] intArray0 = new int[3];
      intArray0[0] = 15;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {15, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "|w*z7<%PyTKX(@<";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "|w*z7<%PyTKX(@<";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "|w*z7<%PyTKX(@<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      methodWriter0.visitVarInsn(8, 285212676);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{K", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(23, label0);
      methodWriter0.visitVarInsn(1, 127);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{K", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitLineNumber(187, label0);
      methodWriter0.visitLineNumber(7, label0);
      methodWriter0.visitVarInsn(49, 49);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "h`;J&z)-L<--Uqq)n";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "h`;J&z)-L<--Uqq)n";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "org.mockito.asm.ClassWriter";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      methodWriter0.visitFieldInsn(1, "h`;J&z)-L<--Uqq)n", "EnclosingMethod", "w4M0-)K|");
      Label label0 = new Label();
      methodWriter0.visitLineNumber(1, label0);
      methodWriter0.visitLineNumber(2, label0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "h`;J&z)-L<--Uqq)n";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "h`;J&z)-L<--Uqq)n";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "org.mockito.asm.ClassWriter";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      methodWriter0.visitVarInsn(2, (-1397));
      Label label0 = new Label();
      methodWriter0.visitLineNumber(1, label0);
      methodWriter0.visitLineNumber(2, label0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2932));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2932), "VqGJji", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, false, true);
      methodWriter0.visitVarInsn(1, 1325);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(33554432, (-1200));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{K", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitVarInsn(15, (-2));
      methodWriter0.visitLocalVariable("ZU2_?99E", "y0l~{lS\"SZ)baNHK>", "{K", label0, label0, 1241);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "|w*z7<%PyTKX(@<";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "|w*z7<%PyTKX(@<";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "|w*z7<%PyTKX(@<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitVarInsn(2, 1);
      methodWriter0.visitLocalVariable("`,L'71xfz,gbf", "Z_OnEpZ9(ayBv&P8GpB", "h`;J&z)-L<--Uqq)n", label0, label0, 2);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2932));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2932), "VqGJji", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, false, true);
      methodWriter0.visitVarInsn(1, 1326);
      ByteVector byteVector0 = new ByteVector(1);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "{Yt-WwFXL", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, false, true);
      methodWriter1.put(byteVector0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{K", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, true, true);
      classWriter0.newLong(0L);
      methodWriter0.visitVarInsn(23, 2);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{K", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, true, true);
      Item[] itemArray0 = new Item[4];
      classWriter0.typeTable = itemArray0;
      methodWriter0.visitTypeInsn((-2), "y0l~{lS\"SZ)baNHK>");
      methodWriter0.visitVarInsn(23, 2);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "|w*z7<%PyTKX(@<";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      classWriter0.newLong(573L);
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "|w*z7<%PyTKX(@<";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "|w*z7<%PyTKX(@<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      methodWriter0.visitFieldInsn(38, "aO*`EV-QY$VB$h>nY", "|w*z7<%PyTKX(@<", "e");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{K", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, true, true);
      classWriter0.newLong(0L);
      methodWriter0.visitVarInsn(1, 127);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2932));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2932), "VqGJji", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, false, true);
      methodWriter0.visitMultiANewArrayInsn("y0l~{lS\"SZ)baNHK>", (-2932));
      methodWriter0.visitVarInsn(1, 1325);
      methodWriter0.visitTypeInsn((-1200), "{Yt-WwFXL");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2932));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2932), "VqGJji", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, false, true);
      classWriter0.newConstItem("y0l~{lS\"SZ)baNHK>");
      methodWriter0.visitVarInsn(1, 1325);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "|w*z7<%PyTKX(@<";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "|w*z7<%PyTKX(@<";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "|w*z7<%PyTKX(@<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      methodWriter0.visitLdcInsn("h`;J&z)-L<--Uqq)n");
      methodWriter0.visitFieldInsn(1, "h`;J&z)-L<--Uqq)n", ";'H7-XAGAzj", "w4M0-)K|");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "|w*z7<%PyTKX(@<";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "|w*z7<%PyTKX(@<";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "|w*z7<%PyTKX(@<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      methodWriter0.visitLdcInsn("h`;J&z)-L<--Uqq)n");
      methodWriter0.visitFieldInsn(1, "org.mockito.asm.ClassReader", "'6Tvx^8/", "DQy/{x%Y>");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "|w*z7<%PyTKX(@<";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "|w*z7<%PyTKX(@<";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "|w*z7<%PyTKX(@<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      methodWriter0.visitLdcInsn("h`;J&z)-L<--Uqq)n");
      methodWriter0.visitVarInsn(5, (-1390));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{K", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, true, true);
      classWriter0.newInteger((-2));
      methodWriter0.visitVarInsn(23, 2);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{K", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, true, true);
      classWriter0.newInteger((-2));
      methodWriter0.visitVarInsn(1, 127);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{K", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, true, true);
      methodWriter0.visitVarInsn(15, (-2));
      Item item0 = classWriter0.newFloat((-1595));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{K", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, true, true);
      methodWriter0.visitVarInsn(15, (-2));
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "|w*z7<%PyTKX(@<";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "|w*z7<%PyTKX(@<";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "|w*z7<%PyTKX(@<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      methodWriter0.visitVarInsn(5, (-1390));
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(205, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2932));
      classWriter0.newDouble(1);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "VqGJ1i", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, false, true);
      methodWriter0.visitVarInsn(8, 1281);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2228));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "yl~{lC\"SZ)baNHK>";
      stringArray0[1] = "yl~{lC\"SZ)baNHK>";
      stringArray0[2] = "Class not found";
      stringArray0[3] = "Class not found";
      stringArray0[4] = "yl~{lC\"SZ)baNHK>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "D&ZaQ6Y_fy(", "6,r'ccR'G34ZUNq0t", "XcSRvG`Co)", stringArray0, false, false);
      methodWriter0.visitMaxs((-3446), 13);
      methodWriter0.visitVarInsn((-128), 1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2228));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "yl~{lC\"SZ)baNHK>";
      stringArray0[1] = "yl~{lC\"SZ)baNHK>";
      stringArray0[2] = "Class not found";
      stringArray0[3] = "Class not found";
      stringArray0[4] = "yl~{lC\"SZ)baNHK>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "D&ZaQ6Y_fy(", "6,r'ccR'G34ZUNq0t", "XcSRvG`Co)", stringArray0, false, false);
      methodWriter0.visitMaxs((-3446), 13);
      methodWriter0.visitVarInsn((-128), 2505);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "|w*z7<%PyTKX(@<";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "|w*z7<%PyTKX(@<";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "org.mockito.asm.ClassWriter";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      methodWriter0.visitFieldInsn((-2219), "h`;J&z)-L<--Uqq)n", "|w*z7<%PyTKX(@<", "C3");
      methodWriter0.visitMaxs((-2219), (-268435456));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "|w*z7<%PyTKX(@<";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "|w*z7<%PyTKX(@<";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "|w*z7<%PyTKX(@<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-650), "OWNffmtBXrA;mQ%#q r", "h`;J&z)-L<--Uqq)n", "|w*z7<%PyTKX(@<", stringArray0, false, true);
      methodWriter1.visitTypeInsn((-650), "Ljava/lang/Synthetic;");
      methodWriter0.visitMaxs(1163, (-1839));
      assertFalse(methodWriter0.equals((Object)methodWriter1));
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "|w*z7<%PyTKX(@<";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "|w*z7<%PyTKX(@<";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "|w*z7<%PyTKX(@<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(1, label0);
      methodWriter0.visitVarInsn(2, 1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4, "T4", "T4", "JxK^OdyQl*.Qqt0q", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(2, label0);
      methodWriter0.visitFieldInsn(33, "java/lang/Throwable", "java/lang/Throwable", "java/lang/Throwable");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(68);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 68, "Q*;wc1H$wZ_", "|e),p_Y", "|e),p_Y", stringArray0, false, false);
      Label label0 = mock(Label.class, new ViolatedAssumptionAnswer());
      methodWriter0.visitLabel(label0);
      methodWriter0.visitFieldInsn(68, "@p9[7_^5%rgF/l\"6H", "Q*;wc1H$wZ_", "|e),p_Y");
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(23, label0);
      methodWriter0.visitFieldInsn((-121), "X:_MTHC2:V*.cP3+Ly", "y0l~{lS\"SZ)baNHK>", "mWCHUoij8lS.w");
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "|w*z7<%PyTKX(@<";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "|w*z7<%PyTKX(@<";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "org.mockito.asm.ClassWriter";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      methodWriter0.visitTypeInsn((-1839), "|w*z7<%PyTKX(@<");
      methodWriter0.visitMaxs((-2219), (-268435456));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3616);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1879, "y0l~{S\"SZaNHK>", "y0l~{S\"SZaNHK>", "org.mockito.asm.ClassWriter", (String[]) null, false, false);
      methodWriter0.visitTypeInsn(1, "y0l~{S\"SZaNHK>");
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "|w*z7<%PyTKX(@<";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "|w*z7<%PyTKX(@<";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "|w*z7<%PyTKX(@<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "org.mockito.asm.ClassWriter", stringArray0, true, false);
      methodWriter0.visitMultiANewArrayInsn("h`;J&z)-L<--Uqq)n", 96);
      methodWriter0.visitVarInsn(2, 1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(693, 1848, 74, 1848, 1848).when(classWriter0).newClass(anyString());
      doReturn(5, 693).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[7];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", stringArray0, true, true);
      methodWriter0.visitVarInsn(101, 1);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "h`;J&z)-L<--Uqq)n";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "h`;J&z)-L<--Uqq)n";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "org.mockito.asm.ClassWriter";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ";SR|8C;Mx'C[NU(", "w4M0-)K|", "[]", stringArray0, false, false);
      methodWriter0.visitVarInsn(3220, 1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(693, 1848, 74, 2590, 2590).when(classWriter0).newClass(anyString());
      doReturn(5, 693).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[7];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", stringArray0, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitIntInsn(2590, 74);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "|w*z7<%PyTKX(@<";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "|w*z7<%PyTKX(@<";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "|w*z7<%PyTKX(@<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      methodWriter0.visitIntInsn(1, 2);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{K", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, true, true);
      methodWriter0.visitMethodInsn(1396, "Exceptions", "y0l~{lS\"SZ)baNHK>", "RuntimeInvisibleParameterAnnotations");
      methodWriter0.visitVarInsn(3, (-2));
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "h`;J&z)-L<--Uqq)n";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "h`;J&z)-L<--Uqq)n";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "org.mockito.asm.ClassWriter";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      methodWriter0.visitFieldInsn(1, "h`;J&z)-L<--Uqq)n", "EnclosingMethod", "w4M0-)K|");
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(2, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "org.mockito.asm.ClassWriter");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "|w*z7<%PyTKX(@<";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "|w*z7<%PyTKX(@<";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "|w*z7<%PyTKX(@<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(1, label0);
      methodWriter0.visitFieldInsn(41, "cq{u2ZuPxp<AdQFD86", "|w*z7<%PyTKX(@<", "|w*z7<%PyTKX(@<");
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2932));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2932), "VqGJji", "y0l~{lS\"S)baNH>", "y0l~{lS\"S)baNH>", (String[]) null, false, true);
      methodWriter0.visitVarInsn(1, 1325);
      methodWriter0.visitMethodInsn((-1025), "Q>9oWPw]", "k&2HMJD+v07hSiS^:", "k&2HMJD+v07hSiS^:");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "h`;J&z)-L<--Uqq)n";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "h`;J&z)-L<--Uqq)n";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "org.mockito.asm.ClassWriter";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      methodWriter0.visitVarInsn(2, (-1397));
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(2, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "org.mockito.asm.ClassWriter");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "|w*z7<%PyTKX(@<";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "|w*z7<%PyTKX(@<";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "|w*z7<%PyTKX(@<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      methodWriter0.visitVarInsn(5, (-1390));
      methodWriter0.visitFieldInsn(1, "h`;J&z)-L<--Uqq)n", ";'H7-XAGAzj", "w4M0-)K|");
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "{K", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(15, label0);
      methodWriter0.visitVarInsn(15, (-2));
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "h`;J&z)-L<--Uqq)n";
      stringArray0[1] = "|w*z7<%PyTKX(@<";
      stringArray0[2] = "h`;J&z)-L<--Uqq)n";
      stringArray0[3] = "h`;J&z)-L<--Uqq)n";
      stringArray0[4] = "|w*z7<%PyTKX(@<";
      stringArray0[5] = "h`;J&z)-L<--Uqq)n";
      stringArray0[6] = "|w*z7<%PyTKX(@<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16, "org.mockito.asm.ClassWriter", "h`;J&z)-L<--Uqq)n", "EnclosingMethod", stringArray0, true, false);
      methodWriter0.visitFieldInsn(1, "h`;J&z)-L<--Uqq)n", ";'H7-XAGAzj", "w4M0-)K|");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(242, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2932));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2932), "VqGJji", "y0l~{lS\"SZ)baNHK>", "y0l~{lS\"SZ)baNHK>", (String[]) null, false, true);
      methodWriter0.visitVarInsn(1, 1325);
      methodWriter0.visitAnnotation("y0l~{lS\"SZ)baNHK>", true);
      ByteVector byteVector0 = new ByteVector(1);
      methodWriter0.put(byteVector0);
  }
}
