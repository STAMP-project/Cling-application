/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 15:01:28 GMT 2019
 */

package org.apache.commons.math.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.DummyStepHandler;
import org.apache.commons.math.ode.FirstOrderConverter;
import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math.ode.FixedStepHandler;
import org.apache.commons.math.ode.GraggBulirschStoerIntegrator;
import org.apache.commons.math.ode.IntegratorException;
import org.apache.commons.math.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math.ode.StepHandler;
import org.apache.commons.math.ode.StepNormalizer;
import org.apache.commons.math.ode.SwitchingFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1095.0662088683805), 1350.49505988, (-1271.77039703), (-1095.0662088683805));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1927), 6, Double.NaN);
      double double0 = graggBulirschStoerIntegrator0.filterStep(1350.49505988, false);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1350.49505988, double0, 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.13095238095238096, 0.0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2040, (-13), 1379.094793448);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn((-13), (-13)).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[5];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 3719.278669107376, doubleArray0, 0.13095238095238096, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension -13, initial state vector has dimension 5
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(748.6107, 748.6107, doubleArray0, doubleArray0);
      int int0 = 4152;
      graggBulirschStoerIntegrator0.setOrderControl(4152, (-5346.620674030127), (-5346.620674030127));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(4152, 4152, (-5346.620674030127), 4152);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator(748.6107, 2663.05145, doubleArray0, doubleArray0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator3 = new GraggBulirschStoerIntegrator((-5346.620674030127), 4152, 748.6107, 6.8812326946963);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 4152, doubleArray0, 748.6107, doubleArray0);
      double double0 = (-2559.151518);
      double double1 = 2429.5658154538773;
      graggBulirschStoerIntegrator0.setStepsizeControl(int0, double0, double0, double1);
      double double2 = (-2038.6875105);
      double double3 = 1849.023168397;
      graggBulirschStoerIntegrator2.setStepsizeControl(double0, double2, double0, double3);
      double double4 = 488.44;
      graggBulirschStoerIntegrator0.setOrderControl(int0, double4, double3);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations1 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      double double5 = 0.0;
      graggBulirschStoerIntegrator3.integrate(firstOrderDifferentialEquations1, double5, doubleArray0, double2, doubleArray0);
      boolean boolean0 = false;
      graggBulirschStoerIntegrator1.setInterpolationControl(boolean0, int0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new GraggBulirschStoerIntegrator(int0, int0, doubleArray0, doubleArray0);
      double double6 = 352.098;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator5 = new GraggBulirschStoerIntegrator(double4, double6, doubleArray0, doubleArray0);
      double double7 = (-2369.404);
      double double8 = (-919.6334763102274);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-927.946594), 4.0, 926.0, 4.0);
      graggBulirschStoerIntegrator0.setInitialStepSize(29.8402934266605);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-1220.6690296), (-329.32), doubleArray0, doubleArray0);
      assertEquals(634.0273849195096, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-927.946594), (-927.946594), doubleArray0, doubleArray0);
      assertEquals(927.946594, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.0, 0.0, 3046.756209, (-927.946594));
      graggBulirschStoerIntegrator1.setInitialStepSize((-927.946594));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(Double.NaN, Double.NaN, doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray1 = new double[0];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 1.0E15, doubleArray1, Double.NaN, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, final state vector has dimension 1
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1271.77039703), 776.6106341848315, 2062.3123824, 2062.3123824);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 0.0, 0.6, 18);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(2062.3123824, 0.9999, doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 776.6106341848315, doubleArray0, (-38.738), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (-3429.700706877038);
      doubleArray1[1] = 0.0;
      double double0 = (-1484884.0476820127);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1484884.0476820127), 0.0, doubleArray1, doubleArray1);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(2728.5550966597184, (-3429.700706877038), (-3429.700706877038), 2728.5550966597184);
      graggBulirschStoerIntegrator1.integrate(firstOrderConverter0, (-1498432.1986645132), doubleArray0, 0.0, doubleArray0);
      int int0 = 7;
      int int1 = 3;
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      int int2 = (-911);
      graggBulirschStoerIntegrator1.addSwitchingFunction(switchingFunction0, double0, doubleArray1[0], int2);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2709.6301965), (-2709.6301965), (-1107.509711014384), 135.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2, 477, 2443.464);
      assertEquals(2709.6301965, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals((-2709.6301965), graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1.0, doubleArray0, (-1107.509711014384), doubleArray0);
      assertEquals((-2709.6301965), graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-927.946594), 4.0, 926.0, 4.0);
      graggBulirschStoerIntegrator0.setInitialStepSize(29.8402934266605);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2128026422, 2128026422, 4.0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.13095238095238096, 0.0);
      graggBulirschStoerIntegrator0.setInitialStepSize((-3185.161892614608));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 4, 4, 0.0);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-927.946594), 4.0, 926.0, 4.0);
      graggBulirschStoerIntegrator0.setInitialStepSize(29.8402934266605);
      graggBulirschStoerIntegrator0.setStepsizeControl(1909.3688659608, 1690.06, 2062.3123824, (-927.946594));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals((-927.946594), graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2709.6301965), (-2709.6301965), (-1119.384), 135.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 135.0;
      graggBulirschStoerIntegrator0.setStepsizeControl(388.8366, 0.01, 329.31763928841, 821.787446404);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-6.7), doubleArray0, 0.01, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2709.6301965), (-2709.6301965), (-1119.384), 135.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 2);
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.setStepsizeControl(388.8366, 0.01, 329.31763928841, 821.787446404);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(821.787446404, 4003.5589, (double)2, 1.0, 1931.80324).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 758.255, (-1119.384), 2);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-6.7), doubleArray0, 0.01, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(Double.NaN, Double.NaN, Double.NaN, Double.NaN);
      graggBulirschStoerIntegrator0.setInitialStepSize(Double.NaN);
      graggBulirschStoerIntegrator0.setStepsizeControl(Double.NaN, 4.450312892752409, 0.9, 0.94);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.01, 687.73285682826, (-6030.2254199517), (-6.7));
      graggBulirschStoerIntegrator0.setStepsizeControl(388.8366, 0.13095238095238096, (-6.7), 687.73285682826);
      graggBulirschStoerIntegrator0.setInitialStepSize((-6030.2254199517));
      assertEquals(2.6224661233813107, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1494.56189934, 0.30545274794128174, doubleArray0, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.filterStep(1172.5376933, true);
      assertEquals(0.30545274794128174, double0, 0.01);
      
      graggBulirschStoerIntegrator0.setStepsizeControl(801.3334849641, 1004.77219672144, 0.30545274794128174, 490.63);
      assertEquals(21.366282763310615, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(461.47019707971, 461.47019707971, 461.47019707971, 461.47019707971);
      graggBulirschStoerIntegrator0.setStepsizeControl(461.47019707971, 0.0, (-1769.20062), 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[0];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-1769.20062), doubleArray0, 461.47019707971, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2709.6301965), (-2709.6301965), (-1119.384), 135.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.setStepsizeControl(388.8366, 0.01, 329.31763928841, 821.787446404);
      assertEquals(2709.6301965, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals((-2709.6301965), graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 135.0, doubleArray0, 0.01, doubleArray0);
      assertEquals((-2709.6301965), graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(461.47019707971, 461.47019707971, 461.47019707971, 461.47019707971);
      graggBulirschStoerIntegrator0.setStepsizeControl(461.47019707971, 0.0, (-1769.20062), 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn((-1048766432), (-1048766432)).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[0];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-1769.20062), doubleArray0, 461.47019707971, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension -1,048,766,432, initial state vector has dimension 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2709.6301965), (-2709.6301965), (-1119.384), 135.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.setStepsizeControl(388.8366, 0.01, 329.31763928841, 821.787446404);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 758.255, (-1119.384), 2);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-6.7), doubleArray0, 0.01, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-830.8113389734), (-2334.19001967693), (-830.8113389734), (-2334.19001967693));
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 2240.0, 765.966, 18);
      graggBulirschStoerIntegrator0.setStepsizeControl(1391.519330688063, 162.3, (-2334.19001967693), 18);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-2334.19001967693), doubleArray0, 0.0, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-512.700039830081), (-512.700039830081), 147.535906578, (-1.0006050966910838));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 106, 3, 3);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[0];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 4.0, doubleArray0, 4.0, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-4152.0), 100.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInitialStepSize(100.0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 3732, (-2327), (-5.801203960010585));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(279.4763, 279.4763, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 1, 1, (-1.0006050966910838));
      try { 
        graggBulirschStoerIntegrator0.filterStep(1.0E-6, false);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // minimal step size (279.476) reached, integration needs 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2709.6301965), (-2709.6301965), (-1119.384), 135.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 135.0;
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2, 477, 2443.464);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1.0, doubleArray0, (-1119.384), doubleArray0);
      assertArrayEquals(new double[] {135.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray1);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-3429.700706877038), doubleArray0, 747.7319, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: state vector has dimension 0, relative tolerance vector has dimension 2
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.13095238095238096, 0.0);
      graggBulirschStoerIntegrator0.setInitialStepSize((-3185.161892614608));
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2040, (-13), 1379.094793448);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-1258.3636252292417), 0.0, (-1258.3636252292417));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1682.9058439228, (-1258.3636252292417), 1682.9058439228, 1.0001);
      double double0 = graggBulirschStoerIntegrator1.filterStep(1.0001, true);
      assertEquals((-1258.3636252292417), double0, 0.01);
      assertEquals(1682.9058439228, graggBulirschStoerIntegrator1.getMinStep(), 0.01);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 4, 865, 1682.9058439228);
      assertEquals(-0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-512.700039830081), (-512.700039830081), 147.535906578, (-1.0006050966910838));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 106, 3, 3);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(106, 1658.3, 1.0E-10, (-313.80314788538465));
      double double0 = graggBulirschStoerIntegrator1.filterStep(1296.566, true);
      assertEquals(419.2610165517419, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      assertEquals(1296.566, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1494.56189934, 714.407966841, doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(12).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 12, 12, (-114.13306397));
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 3503.263974646, doubleArray0, 1232.431, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 24, initial state vector has dimension 9
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2709.6301965), (-2709.6301965), (-1119.384), 135.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2, 477, 2443.464);
      double[] doubleArray1 = new double[5];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 135.0, doubleArray0, (-119.3), doubleArray1);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, final state vector has dimension 5
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(461.47019707971, 461.47019707971, 461.47019707971, 461.47019707971);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[0];
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn((-220.15), 4002.0, (-0.04432804463693693), 461.47019707971, 2.2404374302607883).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, (-690.1365525866), 461.47019707971, 410);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 0.0, doubleArray0, 54.0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Function values at endpoints do not have different signs.  Endpoints: [0.0,NaN]  Values: [2.2404374302607883,2.2404374302607883]
         //
         verifyException("org.apache.commons.math.analysis.BrentSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2709.6301965), (-2709.6301965), (-1119.384), 135.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2, (-1170), (-1119.384));
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-6.7), doubleArray0, 0.01, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2709.6301965), (-2709.6301965), (-1119.384), 135.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2, 2, (-2015.50515098101));
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, (-2334.0)).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 758.255, (-1119.384), 2);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-6.7), doubleArray0, (-2709.6301965), doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Endpoints do not specify an interval: [-6.7,-1801.8165491250002]
         //
         verifyException("org.apache.commons.math.analysis.UnivariateRealSolverImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1095.0662088683805), 1350.49505988, (-1271.77039703), (-1095.0662088683805));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1927), 6, Double.NaN);
      double[] doubleArray0 = new double[2];
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, (-1271.77039703), doubleArray0, (-1271.77039703), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, initial state vector has dimension 2
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3423.3169452198, 3423.3169452198, 3423.3169452198, 0.1521609496625161);
      double double0 = graggBulirschStoerIntegrator0.filterStep(0.9, true);
      assertEquals(3423.3169452198, double0, 0.01);
      
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 3423.3169452198, 3423.3169452198, 1633);
      assertEquals(3423.3169452198, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3423.3169452198, 3423.3169452198, 3423.3169452198, 0.1521609496625161);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[0];
      graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 4.0, doubleArray0, 3423.3169452198, doubleArray0);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, (-3763.712030030629), 3, 3);
      assertEquals(3423.3169452198, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3423.3169452198, 3423.3169452198, 3423.3169452198, 0.1521609496625161);
      graggBulirschStoerIntegrator0.setStepsizeControl(0.1521609496625161, 0.1521609496625161, 388.8366, 0.9);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.1521609496625161, 2, doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator1.integrate(firstOrderConverter0, 4.450312892752409, doubleArray0, 388.8366, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math.ode.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1271.77039703), 776.6106341848315, (-3290.62308634), (-3290.62308634));
      graggBulirschStoerIntegrator0.setStepsizeControl((-1038.6835), (-1271.77039703), (-794.3419322074288), 1077.91767947);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[0];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 135.0, doubleArray0, Double.NaN, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-946.1789830472), (-946.1789830472), (-946.1789830472), (-946.1789830472));
      StepHandler stepHandler0 = mock(StepHandler.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(stepHandler0).requiresDenseOutput();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      double double0 = graggBulirschStoerIntegrator0.filterStep((-3374.0), true);
      assertEquals(946.1789830472, double0, 0.01);
      assertEquals(946.1789830472, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3429.700706877038), 11.71875, doubleArray0, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.filterStep(0.0, false);
      assertEquals(0.0, double0, 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl((-2669), (-2669), 11.71875);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      StepHandler stepHandler0 = mock(StepHandler.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(stepHandler0).requiresDenseOutput();
      graggBulirschStoerIntegrator0.filterStep(0.0, true);
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E15, 0.0, doubleArray0, doubleArray0);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 1.0E15, 0.0, 6);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 4.0, doubleArray0, 4.0, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1682.9058439228, (-1258.3636252292417), 1682.9058439228, 1.0001);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      double double0 = graggBulirschStoerIntegrator0.filterStep(1.0001, true);
      assertEquals((-1258.3636252292417), double0, 0.01);
      
      StepNormalizer stepNormalizer0 = new StepNormalizer(1.0001, fixedStepHandler0);
      graggBulirschStoerIntegrator0.setStepHandler(stepNormalizer0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1494.56189934, 0.30545274794128174, doubleArray0, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.filterStep(1172.5376933, true);
      assertEquals(0.30545274794128174, double0, 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl((-4029), 0.30545274794128174, 1.8915178993145003);
      assertEquals(21.366282763310615, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 1097.0, doubleArray0, doubleArray1);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.setStepHandler(dummyStepHandler0);
      assertEquals(1097.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(6205.9, 492.329348780885, 0.65, 1914.066700810422);
      double double0 = graggBulirschStoerIntegrator1.filterStep((-3429.700706877038), true);
      assertEquals(1747.9550067433927, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentStepStart(), 0.01);
      assertEquals((-492.329348780885), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 1097.0, doubleArray0, doubleArray1);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 1097.0, 1157.9025430818, 0);
      assertEquals(1097.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(6205.9, 492.329348780885, 0.65, 1914.066700810422);
      double double0 = graggBulirschStoerIntegrator1.filterStep((-3429.700706877038), true);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentStepStart(), 0.01);
      assertEquals((-492.329348780885), double0, 0.01);
      assertEquals(1747.9550067433927, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3423.3169452198, 3423.3169452198, 3423.3169452198, 0.1521609496625161);
      StepNormalizer stepNormalizer0 = new StepNormalizer(256.2283464725, (FixedStepHandler) null);
      graggBulirschStoerIntegrator0.setStepHandler(stepNormalizer0);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 3423.3169452198, 3423.3169452198, 0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(3423.3169452198, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(461.47019707971, 461.47019707971, 461.47019707971, 461.47019707971);
      graggBulirschStoerIntegrator0.setOrderControl((-169), 461.47019707971, 0.9999);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[0];
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, (-690.1365525866), 461.47019707971, 410);
      graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 0.0, doubleArray0, 54.0, doubleArray0);
      assertEquals(54.0, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }
}
