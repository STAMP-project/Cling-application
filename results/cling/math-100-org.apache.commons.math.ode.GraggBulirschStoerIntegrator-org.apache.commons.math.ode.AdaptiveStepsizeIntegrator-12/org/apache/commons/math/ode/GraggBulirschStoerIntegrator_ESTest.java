/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 15:03:12 GMT 2019
 */

package org.apache.commons.math.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.ContinuousOutputModel;
import org.apache.commons.math.ode.DummyStepHandler;
import org.apache.commons.math.ode.FirstOrderConverter;
import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math.ode.FixedStepHandler;
import org.apache.commons.math.ode.GraggBulirschStoerIntegrator;
import org.apache.commons.math.ode.IntegratorException;
import org.apache.commons.math.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math.ode.StepHandler;
import org.apache.commons.math.ode.StepNormalizer;
import org.apache.commons.math.ode.SwitchingFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.3502943980708925, 0.0, (-1232.646));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 4, 0, 0.3502943980708925);
      double double0 = graggBulirschStoerIntegrator0.filterStep(0.0, false);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 348.485001);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[6];
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 3, 3, 348.485001);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-657), doubleArray0, 3, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 3, initial state vector has dimension 6
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3209.5635107987264);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1761, doubleArray0, 0.8, doubleArray0);
      assertEquals(0.8, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-2131.5729420818), 3350.39403, doubleArray0, doubleArray0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(10.0, 348.485001, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInitialStepSize(3235.4049590863706);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(59.03261818689732, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3235.4049590863706);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.setInitialStepSize(348.485001);
      assertEquals(348.485001, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-4771.1613), doubleArray0, (-429.3178944390215), doubleArray0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-1733.23), 348.485001, doubleArray0, doubleArray0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3209.5635107987264);
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.setInitialStepSize(60.38302);
      assertEquals(348.485001, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-2131.5729420818), 3350.39403, doubleArray0, doubleArray0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(898.3, 1524.75027841, doubleArray0, doubleArray0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1, 1).when(firstOrderDifferentialEquations0).getDimension();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-1393.940004), 0.0018737681664791894, 0.5, (-2122.0));
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 898.3, doubleArray0, (-4.422011983080043), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3209.5635107987264);
      double[] doubleArray0 = new double[3];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-2131.5729420818), 3350.39403, doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 9.99999999783233E14, doubleArray0, 2597.634, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, initial state vector has dimension 3
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, (-1232.646));
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(1.0E-10, 0.0, 3051.2899233122, 0.0, 0.001000000001).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 0.0, (-1232.646), 0);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.001, (-4847.2148), doubleArray0, (double[]) null);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 3604.0482847213993, doubleArray0, 0.001, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3209.5635107987264);
      graggBulirschStoerIntegrator0.setInitialStepSize(348.485001);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 3, 2135669988, 1947.6665731205);
      assertEquals(348.485001, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 0.01, (-1681.1048286), 348.485001);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 3, 2135669988, 1947.6665731205);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-741.7015821898896), doubleArray0, 2.0, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // minimal step size (348.485) reached, integration needs 0.019
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-576.64547211), 2860.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, (-3292), 2860.0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray1 = new double[0];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, (-576.64547211), doubleArray1, 868.58397, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, final state vector has dimension 2
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3903.5498202048025, (-167.7578570517), (-826.3322214), (-167.7578570517));
      graggBulirschStoerIntegrator0.setInitialStepSize(1014.024688681);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 117, 97, (-1206.0025388241));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-12, 1.0E-12, 0, 1.0E-12);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, 29, 1913.765954);
      graggBulirschStoerIntegrator0.vecRelativeTolerance = doubleArray0;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, (-1641.646524611), doubleArray0, (-1641.646524611), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-12, 1.0E-12, 0, 1.0E-12);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, 29, 1913.765954);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 0.001, doubleArray0, 0, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.001, 0.001, (-576.64547211), Double.NaN);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2144406891, 2144406891, Double.NaN);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1921).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 104.0996495089623, doubleArray0, (-576.64547211), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 3,842, initial state vector has dimension 2
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 348.485001);
      graggBulirschStoerIntegrator0.setInitialStepSize(348.485001);
      graggBulirschStoerIntegrator0.setStepsizeControl(2.0, 167.537126, (-26.041666666666668), 167.537126);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(348.485001, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 348.485001;
      doubleArray0[1] = 3235.4049590863706;
      doubleArray0[2] = 348.485001;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1476.456699, 3, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStepsizeControl(1142.0, 1142.0, 2118.84958, 1603.14090779046);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 2118.84958, doubleArray0, 3235.4049590863706, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // minimal step size (1,476.457) reached, integration needs 5.571
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.001, 0.001, (-576.64547211), Double.NaN);
      graggBulirschStoerIntegrator0.setInitialStepSize(2720.2225896198);
      graggBulirschStoerIntegrator0.setStepsizeControl(1629.3986169048871, (-11.573902539959631), 999.9, (-2492.3857982));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.001, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3209.5635107987264);
      graggBulirschStoerIntegrator0.setStepsizeControl(527.8081592054236, 527.8081592054236, 3, 0.8);
      graggBulirschStoerIntegrator0.setInitialStepSize(60.38302);
      assertEquals(348.485001, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3235.4049590863706);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.setStepsizeControl(3235.4049590863706, 3, 348.485001, 348.485001);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 0.9, doubleArray0, 2497.145387, doubleArray0);
      assertEquals(56.85037999999986, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3235.4049590863706);
      graggBulirschStoerIntegrator0.setStepsizeControl(348.485001, (-1545.4), 1.0E-4, 348.485001);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[0];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-2160.582885), doubleArray0, (-1663.37781), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 3, initial state vector has dimension 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(898.3, 1524.75027841, doubleArray0, doubleArray0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1, (-2144864445), 2).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setStepsizeControl(1746.91, 898.3, (-30.674084731089398), 760.2892);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-0.3125), doubleArray0, 771.301494818, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 2, final state vector has dimension 1
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3209.5635107987264);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 3, 3, (-657));
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-741.7015821898896), doubleArray0, 2.0, doubleArray0);
      assertEquals(46.73158018988954, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(571.5869406662, 571.5869406662, doubleArray0, doubleArray0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray1 = new double[0];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 0.0, doubleArray1, 0.0, doubleArray1);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: state vector has dimension 0, absolute tolerance vector has dimension 4
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 348.485001);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = doubleArray0;
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 3, 3, 348.485001);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-657), doubleArray0, 3, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.001, 0.001, (-576.64547211), Double.NaN);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2144406924, 2144406924, Double.NaN);
      graggBulirschStoerIntegrator0.setInitialStepSize(2720.2225896198);
      assertEquals(0.001, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 348.485001);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 3, 3, 348.485001);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 3, doubleArray0, 0.04471061572777259, doubleArray0);
      assertEquals(348.485001, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3235.4049590863706);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 3, 3, 348.485001);
      assertEquals(348.485001, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 348.485001;
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 348.485001, doubleArray0, (-2271.68972268699), doubleArray0);
      assertArrayEquals(new double[] {348.485001, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1476.456699, 3, doubleArray0, doubleArray0);
      double[] doubleArray1 = new double[8];
      graggBulirschStoerIntegrator0.vecRelativeTolerance = doubleArray1;
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-25.69393346270375), doubleArray0, 474.792, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: state vector has dimension 3, relative tolerance vector has dimension 8
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 348.485001);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setInterpolationControl(false, (-2));
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 348.485001, (-429.3178944390215), 18);
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1.0E-12, doubleArray0, 3, doubleArray0);
      assertEquals(2.999999999999, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3235.4049590863706);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.setInitialStepSize(348.485001);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-4771.1613), doubleArray0, (-429.3178944390215), doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 3, 3, (-1089.560675523965));
      assertEquals(160.02339356097815, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3209.5635107987264);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.setInitialStepSize(348.485001);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 3, 1761, (-657));
      assertEquals(348.485001, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 936.0, doubleArray0, 0.0, doubleArray0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3209.5635107987264);
      graggBulirschStoerIntegrator0.setInitialStepSize(60.38302);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 3, (-1677), 527.8081592054236);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(348.485001, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 348.485001);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(895.9742807914379, 348.485001, 896.0023873139344, (-1150.07534195));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 4, 2482, 1.0E-12);
      try { 
        graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 1831.5983736161, doubleArray0, 2482, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // minimal step size (895.974) reached, integration needs 647.186
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, (-1232.646));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 4, 0, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[0];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1.0E-6, doubleArray0, 0.0, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, (-1232.646));
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 11, 11, (-1733.23));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 3, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[0];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1.0E-6, doubleArray0, 0.0, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, final state vector has dimension 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 348.485001);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 4, 2482, 1.0E-12);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 1831.5983736161, 895.9724070232714, 3);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1831.5983736161, doubleArray0, 2482, doubleArray0);
      assertEquals(301.9166253839003, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3235.4049590863706);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 3, 3, 348.485001);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(3, fixedStepHandler0);
      graggBulirschStoerIntegrator0.setStepHandler(stepNormalizer0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 21.89305166714037, doubleArray0, 1831.5983736161, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3209.5635107987264);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      DummyStepHandler dummyStepHandler0 = (DummyStepHandler)graggBulirschStoerIntegrator0.handler;
      graggBulirschStoerIntegrator0.setStepHandler(dummyStepHandler0);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-741.7015821898896), doubleArray0, 2.0, doubleArray0);
      assertEquals(46.73158018988954, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3235.4049590863706);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 2495.3732, (-1270.271), 3);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 348.485001, doubleArray0, 0.0, doubleArray0);
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      graggBulirschStoerIntegrator0.setStepHandler(continuousOutputModel0);
      assertEquals((-348.485001), graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 348.485001);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 2740.6041, doubleArray0, 896.0248725319316, doubleArray0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(4281, fixedStepHandler0);
      graggBulirschStoerIntegrator0.setStepHandler(stepNormalizer0);
      assertEquals((-102.15422246806838), graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3209.5635107987264);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 0.25, 3, 0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(348.485001, 0.01, (-1681.1048286), 348.485001);
      try { 
        graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, (-741.7015821898896), doubleArray0, 2.0, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // minimal step size (348.485) reached, integration needs 0.019
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1232.646), 0.0, 0.0, 2155.25);
      graggBulirschStoerIntegrator0.setStepsizeControl(0.020086947730642787, (-2131.5729420818), 0.0, 0.020086947730642787);
      assertEquals(-0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3235.4049590863706);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 348.485001, doubleArray0, (-2271.68972268699), doubleArray0);
      graggBulirschStoerIntegrator0.setStepsizeControl(3076.48632, 0.001, 1682.45374, (-2271.68972268699));
      assertEquals((-180.77971668699), graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3209.5635107987264);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.setOrderControl(1761, 0.8, (-487.528));
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1761, doubleArray0, 0.8, doubleArray0);
      assertEquals(0.8, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3235.4049590863706);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-4771.1613), doubleArray0, (-429.3178944390215), doubleArray0);
      graggBulirschStoerIntegrator0.setStepsizeControl((-429.3178944390215), 348.485001, 3235.4049590863706, 2848.46);
      assertEquals(348.485001, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 348.485001);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 3, doubleArray0, 0.001, doubleArray0);
      graggBulirschStoerIntegrator0.setStepsizeControl(799.268771423, 799.268771423, 0.94, (-1.0));
      assertEquals((-2.999), graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, (-1232.646));
      graggBulirschStoerIntegrator0.setOrderControl(0, 1.0E-12, 699.970002);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[0];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1.0E-6, doubleArray0, 0.0, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 348.485001);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.setStepsizeControl(3, 152.4799041354, 3, 3);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-2131.5729420818), (-0.0013990241651590145), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 578.90113, doubleArray0, (-2131.5729420818), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 348.485001);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setOrderControl(18, 18, 1404.93746);
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1.0E-12, doubleArray0, 3, doubleArray0);
      assertEquals(2.999999999999, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-12, 1.0E-12, 0, 1.0E-12);
      StepNormalizer stepNormalizer0 = new StepNormalizer(1913.765954, (FixedStepHandler) null);
      graggBulirschStoerIntegrator0.setStepHandler(stepNormalizer0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, (-1641.646524611), doubleArray0, (-1641.646524611), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-194.0), 0.7674501330603699, 0.0, (-1232.646));
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, (-194.0), (-1232.646), 0);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.setStepHandler(dummyStepHandler0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[0];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-0.8387980076471864), doubleArray0, (-0.8387980076471864), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 348.485001);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.setStepHandler(dummyStepHandler0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 5.0, doubleArray0, 5.0, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(349.68992865011234, 349.68992865011234, 349.68992865011234, 3235.4049590863706);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 3, doubleArray0, (-429.3178944390215), doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(18, 349.68992865011234, 348.485);
      assertEquals((-82.62796578890914), graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 348.485001);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 152.4799041354, 3, 2143733153);
      DummyStepHandler dummyStepHandler0 = (DummyStepHandler)graggBulirschStoerIntegrator0.handler;
      graggBulirschStoerIntegrator0.setStepHandler(dummyStepHandler0);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1.0E-10, doubleArray0, (-1393.940004), doubleArray0);
      assertEquals((-1.000444171950221E-10), graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 348.485001);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      DummyStepHandler dummyStepHandler0 = (DummyStepHandler)graggBulirschStoerIntegrator0.handler;
      graggBulirschStoerIntegrator0.setStepHandler(dummyStepHandler0);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 3, doubleArray0, 0.04471061572777259, doubleArray0);
      assertEquals((-2.9552893842722274), graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-1.6744700615601764), 0.0, (-1232.646));
      StepHandler stepHandler0 = mock(StepHandler.class, new ViolatedAssumptionAnswer());
      doReturn(true, true).when(stepHandler0).requiresDenseOutput();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 2138908978, 2144406891, 11);
      assertEquals(-0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3209.5635107987264);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.setOrderControl(3, 3209.5635107987264, 0.9999);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1761, doubleArray0, 0.8, doubleArray0);
      assertEquals((-6.661338147750939E-16), graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 3235.4049590863706);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 2495.3732, (-1270.271), 3);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 348.485001, doubleArray0, 0.0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(3, 3798.822998427693, 237.0748149472311);
      assertEquals((-348.485001), graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 348.485001);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.setStepHandler(dummyStepHandler0);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 1831.5983736161, 895.9724070232714, 3);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1831.5983736161, doubleArray0, 2482, doubleArray0);
      assertEquals(301.9166253839003, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-12, 1.0E-12, 0, 1.0E-12);
      StepNormalizer stepNormalizer0 = new StepNormalizer(1913.765954, (FixedStepHandler) null);
      graggBulirschStoerIntegrator0.setStepHandler(stepNormalizer0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 0.001, doubleArray0, 0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-194.0), 0.7674501330603699, 0.0, (-1232.646));
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn((-0.8387980076471864), (-194.0), 0.0, 0.7674501330603699, 1423.9).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, (-194.0), (-1232.646), 0);
      StepHandler stepHandler0 = graggBulirschStoerIntegrator0.getStepHandler();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1.0E-6, doubleArray0, 0.7674501330603699, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(348.485001, 348.485001, 348.485001, 348.485001);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.setStepHandler(dummyStepHandler0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(348.485001, (-3027.7142958290133), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 5.0, doubleArray0, 172.93042, doubleArray0);
  }
}
