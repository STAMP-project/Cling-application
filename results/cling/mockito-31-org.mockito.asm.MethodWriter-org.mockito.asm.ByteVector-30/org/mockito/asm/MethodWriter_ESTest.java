/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 09:27:15 GMT 2019
 */

package org.mockito.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mockito.asm.ByteVector;
import org.mockito.asm.ClassWriter;
import org.mockito.asm.Label;
import org.mockito.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(256, 697, 697).when(classWriter0).newClass(anyString());
      doReturn(256, 697).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[3];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "U{V#g1)`", "U{V#g1)`", "U{V#g1)`", stringArray0, false, true);
      Label label0 = mock(Label.class, new ViolatedAssumptionAnswer());
      methodWriter0.visitInsn(1);
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "JE/QBuB6wX66Po9", "JE/QBuB6wX66Po9", "long", (String[]) null, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 114, "SourceDebugExtension", "java/lang/Throwable", "SourceDebugExtension", (String[]) null, false, false);
      methodWriter0.visitVarInsn(1229, 1);
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2120));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "kqclVu-)V.%X6<", "CH(-s+1$~ll(B", (String[]) null, true, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "}4Hy&5Z ><(", "vj", "}4Hy&5Z ><(", (String[]) null, false, false);
      methodWriter1.visitVarInsn(1775, 2045);
      assertNotSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-141));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Bla8*rk42##]q; ;|", "Kz", "/[_HX", stringArray0, false, false);
      methodWriter0.visitMaxs((-5354), (-1637));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter((-2214));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1), "QlD|8hE>", "QlD|8hE>", "QlD|8hE>", stringArray0, false, false);
      methodWriter0.visitMaxs(2, (-2149));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "kqclVu-)V.%X6<", "kqclVu-)V.%X6<", "kqclVu-)V.%X6<", (String[]) null, true, false);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "19R^ws1lJ;MOkZ'#U7c");
      methodWriter0.visitMaxs(87, 114);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-141));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Bla8*rk42##]q; ;|", "Kz", "/[_HX", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn((-5354), label0);
      int int0 = methodWriter0.getSize();
      assertEquals(47, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-141));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 103, ";7uU!w.lLU#", "", "", stringArray0, false, false);
      methodWriter0.classReaderOffset = 1048;
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "RuntimeInvisibleAnnotations", "wCz", "LocalVariableTable", stringArray0, false, false);
      int int0 = methodWriter0.getSize();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter(4);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "&IGb8-[pl)n<V_|", "&IGb8-[pl)n<V_|", "Synthetic", stringArray0, false, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitIincInsn((-901), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -901
         //
         verifyException("org.mockito.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(32, 32, 3491, 55).when(classWriter0).newClass(anyString());
      doReturn(57, 55).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[4];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 285212682, "U{V#g1)`", "U{V#g1)`", "Qo;>p&@NI?", stringArray0, true, false);
      methodWriter0.visitIincInsn(2, 57);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter(4);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "_vZ2:EZ+1b", "org.mockito.asm.ClassWriter", "a-:~B2_Z %9", stringArray0, false, false);
      methodWriter0.visitLdcInsn("C_!:VFt\u0005K?,U");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-141));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 103, ";7uU!w.lLU#", "", "", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "RuntimeInvisibleAnnotations", "wCz", "LocalVariableTable", stringArray0, false, false);
      methodWriter0.visitLdcInsn(";7uU!w.lLU#");
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 114, "long", "java/lang/Throwable", "long", (String[]) null, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-286), "RuntimeInvisibleAnnotations", "Hj}2)adTI_J", "6oS(", (String[]) null, false, true);
      methodWriter1.visitIincInsn(487, 16777217);
      assertNotSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2120));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "kqclVu-)V.%X6<", "CH(-s+1$~ll(B", (String[]) null, true, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "}4Hy&5Z ><(", "vj", "}4Hy&5Z ><(", (String[]) null, false, false);
      methodWriter0.visitIincInsn(13, 183);
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2120));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "kqclVu-)V.%X6<", "_h5SoYOBw", (String[]) null, true, false);
      methodWriter0.visitIincInsn((-4819), (-2120));
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 59, "", (String) null, "G7b_If$u.tVDPBkF^", (String[]) null, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2120));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "kqclVu-)V.%X6<", "_h5SoYOBw", (String[]) null, true, false);
      methodWriter0.visitLdcInsn("L");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2120));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "kqclVu-)V.%X6<", "_h5SoYOBw", (String[]) null, true, false);
      methodWriter0.visitVarInsn(1, (-2208));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Signature";
      stringArray0[1] = "Signature";
      stringArray0[2] = "Signature";
      stringArray0[3] = "JE/QBuB6wX66Po9";
      ClassWriter classWriter0 = new ClassWriter(2);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Signature", "kqclVu-)V.%X6<", "RuntimeVisibleAnnotations", stringArray0, false, true);
      methodWriter0.visitVarInsn(2, 1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter(66);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1093), "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", ")z=", "~fw3D3SGGiwW>W", stringArray0, false, false);
      methodWriter0.visitFieldInsn(6, "~fw3D3SGGiwW>W", "mp", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2120));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2120), "_h5SoYOBw", "_h5SoYOBw", "_h5SoYOBw", (String[]) null, false, false);
      methodWriter0.visitFieldInsn(2138, "_h5SoYOBw", "_h5SoYOBw", "_h5SoYOBw");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "kqclVu-)V.%X6<", "kqclVu-)V.%X6<", "kqclVu-)V.%X6<", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "19R^ws1lJ;MOkZ'#U7c");
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(87, 114);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 114, "long", "long", "long", (String[]) null, false, false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[1] = "Hj}2)adTI_J";
      stringArray0[2] = "long";
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 114, "RuntimeInvisibleAnnotations", "Hj}2)adTI_J", "java/lang/Throwable", stringArray0, false, true);
      // Undeclared exception!
      try { 
        methodWriter1.visitMaxs(201, 184);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(classWriter0).newClass(anyString());
      doReturn(0, 0).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[5];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 41, "kqclVu-)V.%X6<", "kqclVu-)V.%X6<", "3>1>WEz$C!jaJ", stringArray0, false, true);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, (String) null);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(41, 76);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter((-2214));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 171, "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", stringArray0, false, false);
      methodWriter0.visitFrame(2, 1, stringArray0, (-368), stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-141));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Bla8*rk42##]q; ;|", "Kz", "/[_HX", stringArray0, false, false);
      methodWriter0.visitFrame(0, (-141), stringArray0, 1, stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(2266, 2266).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1086, "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", stringArray0, false, false);
      methodWriter0.visitFrame((-1395), (-1158), stringArray0, (-1158), stringArray0);
      methodWriter0.visitFrame((-1105), (-908), stringArray0, 2716, stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-141));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Bla8*rk42##]q; ;|", "Kz", "/[_HX", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 2, stringArray0, 59, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(32, 32, 3491, 55).when(classWriter0).newClass(anyString());
      doReturn(57, 55).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[4];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 285212682, "U{V#g1)`", "U{V#g1)`", "Qo;>p&@NI?", stringArray0, true, false);
      methodWriter0.visitVarInsn(64, 450);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-141));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 103, ";7uU!w.lLU#", "", "", stringArray0, false, false);
      methodWriter0.visitVarInsn(8, 99);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(11, 11, 3491).when(classWriter0).newClass(anyString());
      doReturn(76, 55).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[3];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "U{V#g1)`", "U{V#g1)`", "19R^ws1lJ;MOkZ'#U7c", stringArray0, false, true);
      methodWriter0.visitVarInsn(55, 3491);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2120));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "kqclVu-)V.%X6<", "_h5SoYOBw", (String[]) null, true, false);
      methodWriter0.visitVarInsn(50, (-1970));
      methodWriter0.visitLdcInsn("");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(32, 32, 32).when(classWriter0).newClass(anyString());
      doReturn(57, 57).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[3];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "U{V#g1)`", "U{V#g1)`", "19R^ws1lJ;MOkZ'#U7c", stringArray0, true, true);
      methodWriter0.visitVarInsn(57, 113);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2206));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1), "LocalVariable`able", "LocalVariable`able", "LocalVariable`able", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 120, "LocalVariable`able", "; |M)n59x", "LocalVariable`able", stringArray0, true, false);
      // Undeclared exception!
      try { 
        methodWriter1.visitVarInsn((-2206), 2414);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2206
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 114, "long", "long", "long", (String[]) null, false, false);
      methodWriter0.visitVarInsn(1, 1);
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 886, "RuntimeInvisibleAnnotations", "iY;Q=sVQara", (String) null, (String[]) null, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2147483628);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "H)m)s'+ILDXr7 xQ";
      stringArray0[1] = "H)m)s'+ILDXr7 xQ";
      stringArray0[2] = "H)m)s'+ILDXr7 xQ";
      stringArray0[3] = "H)m)s'+ILDXr7 xQ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 201, "", "H)m)s'+ILDXr7 xQ", "H)m)s'+ILDXr7 xQ", stringArray0, true, true);
      methodWriter0.visitMaxs(1125, 1125);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-644));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-644), "_h5SoYOBw", "_h5SoYOBw", "_h5SoYOBw", (String[]) null, false, false);
      methodWriter0.visitMethodInsn((-1477), "%W:?[G- |^ Y5b", "%W:?[G- |^ Y5b", "Ljava/lang/Synthetic;");
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2120));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "kqclVu-)V.%X6<", "_h5SoYOBw", (String[]) null, true, false);
      methodWriter0.visitFieldInsn(115, "z&fBvot*SEegbe `#", "_h5SoYOBw", "2L0o.m<CJU9#D  }X5i");
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "kqclVu-)V.%X6<", "kqclVu-)V.%X6<", "kqclVu-)V.%X6<", (String[]) null, true, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(4, "kqclVu-)V.%X6<", "qcHb-q4Bp[j*@K", "qcHb-q4Bp[j*@K");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 949, "RuntimeInvisibleAnnotations", "HR&{Z/f}+iM)\"Ap)]I`", "ES|", (String[]) null, false, true);
      methodWriter0.visitMethodInsn(2, "v[*3Ms:\"tH;\"fVyq'}k", "%W:?[G- |^ Y5b", "%W:?[G- |^ Y5b");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter((-2214));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1), "QlD|8hE>", "QlD|8hE>", "QlD|8hE>", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-1), "@ZP<(_qq65", "QlD|8hE>", "iise%rs|c$E*i4JhF-s", stringArray0, false, false);
      methodWriter0.visitMethodInsn(1, "18zrc/<G bM%0-b", "java/lang/Throwable", "18zrc/<G bM%0-b");
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-141));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "/Q)3x", "", stringArray0, true, false);
      methodWriter0.visitFieldInsn(759, "Ljava/lang/Synthetic;", "boolean", "/Q)3x");
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-1999), "Ljava/lang/Synthetic;", "Ljava/lang/Synthetic;", (String) null, stringArray0, false, false);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "J`rTJB<b[jzGlxeJ`P";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1497, "RuntimeInvisibleParameterAnnotations", "LocalVariableTable", "J`rTJB<b[jzGlxeJ`P", stringArray0, false, false);
      methodWriter0.visitMethodInsn(1497, "RuntimeInvisibleParameterAnnotations", "LocalVariableTable", "6w\"ryB.s,88<<MiAi");
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "JE/QBuB6wX66Po9", "JE/QBuB6wX66Po9", "long", (String[]) null, false, false);
      methodWriter0.visitFrame(3, 1, (Object[]) null, 248, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-141));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Bla8*rk42##]q; ;|", "Kz", "/[_HX", stringArray0, false, false);
      methodWriter0.visitFrame(4, 2, stringArray0, (-5354), stringArray0);
      String[] stringArray1 = new String[0];
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 4, "NSI6rrgg$sWZk)7sJkm", "", "M22[J5g~:", stringArray1, false, false);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-141));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Bla8*rk42##]q; ;|", "Kz", "/[_HX", stringArray0, false, false);
      methodWriter0.visitInsn(16);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(classWriter0).newClass(anyString());
      doReturn(0, 0).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[5];
      stringArray0[0] = "LineNumberTable";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 68, "", "<init>", "LineNumberTable", stringArray0, false, false);
      methodWriter0.visitFrame(1, 1, stringArray0, 47, stringArray0);
      assertEquals(5, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Label label0 = new Label();
      int[] intArray0 = new int[1];
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertEquals(1, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int[] intArray0 = new int[6];
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, (-449), 114);
      assertEquals(563, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(256, 697, 697).when(classWriter0).newClass(anyString());
      doReturn(256, 697).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[3];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "U{V#g1)`", "U{V#g1)`", "19R^ws1lJ;MOkZ'#U7c", stringArray0, false, true);
      Label label0 = mock(Label.class, new ViolatedAssumptionAnswer());
      int[] intArray0 = new int[3];
      intArray0[0] = 119;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertEquals(3, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter((-2214));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1), "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", stringArray0, false, false);
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertEquals(8, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 114, "long", "java/lang/Throwable", "long", (String[]) null, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-286), "RuntimeInvisibleAnnotations", "Hj}2)adTI_J", "java/lang/Throwable", (String[]) null, false, false);
      Label label0 = new Label();
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertEquals(1, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-141));
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.putLong(2);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1, "", "6_zY,vWq", "@x.m)yH_!B<P/~}p*c", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter((-2214));
      classWriter0.newConstItem(classWriter0.COMPUTE_FRAMES);
      classWriter0.newField("", "AnnotationDefault", "RuntimeVisibleAnnotations");
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1344, "RuntimeVisibleAnnotations", "AnnotationDefault", "RuntimeVisibleAnnotations", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn((-1), (-1), (-1)).when(classWriter0).newClass(anyString());
      doReturn((-1), (-1)).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[3];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "U{V#g1)`", "U{V#g1)`", "19R^ws1lJ;MOkZ'#U7c", stringArray0, false, true);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putByteArray((byte[]) null, (-637), 642);
      ByteVector byteVector1 = byteVector0.put11(2, 17);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter((-2214));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1), "QlD|8hE>", "QlD|8hE>", "QlD|8hE>", stringArray0, false, false);
      methodWriter0.visitVarInsn((-2214), 6);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(256, 697, 697).when(classWriter0).newClass(anyString());
      doReturn(256, 697, 256, 49, 119).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[3];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "U{V#g1)`", "U{V#g1)`", "19R^ws1lJ;MOkZ'#U7c", stringArray0, false, true);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putLong(697);
      ByteVector byteVector1 = byteVector0.putLong(1015);
      methodWriter0.visitIincInsn(49, 1);
      methodWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(251, 251, (-7), (-1849)).when(classWriter0).newClass(anyString());
      doReturn(251, (-1849), 0, 0, 0).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[4];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-7), "Kz", "H)m)7s'+ILDXr xQ", "H)m)7s'+ILDXr xQ", stringArray0, true, true);
      ClassWriter classWriter1 = new ClassWriter(467);
      ByteVector byteVector0 = classWriter1.pool;
      methodWriter0.visitAnnotation("!q:", true);
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 114, "long", "long", "long", (String[]) null, false, false);
      classWriter0.toByteArray();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 949, "RuntimeInvisibleAnnotations", "HR&{Z/f}+iM)\"Ap)]I`", "ES|", (String[]) null, false, true);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(66, Integer.MAX_VALUE, 2197, 49).when(classWriter0).newClass(anyString());
      doReturn(49, (-802)).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[4];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 181, "", "H)m)s'+ILDXr7 xQ", "H)m)s'+ILDXr7 xQ", stringArray0, true, true);
      methodWriter0.classReaderOffset = (-3638);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Signature";
      stringArray0[1] = "Signature";
      stringArray0[2] = "Signature";
      stringArray0[3] = "JE/QBuB6wX66Po9";
      ClassWriter classWriter0 = new ClassWriter(2);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Signature", "kqclVu-)V.%X6<", "RuntimeVisibleAnnotations", stringArray0, false, true);
      ByteVector byteVector0 = new ByteVector(2);
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      int[] intArray0 = new int[6];
      MethodWriter.getNewOffset(intArray0, intArray0, 108, (-2411));
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(classWriter0).newClass(anyString());
      doReturn(0, 0).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[6];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 16777225, "1E=STzm/?FpKa|Y", "1E=STzm/?FpKa|Y", "1E=STzm/?FpKa|Y", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      int[] intArray0 = new int[3];
      MethodWriter.getNewOffset(intArray0, intArray0, 2731, (-5351));
      ClassWriter classWriter0 = new ClassWriter((-141));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "qvex!w`t*8p1", "vB</X_o?d5&Jsi", stringArray0, false, false);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(91, 91, (-1086)).when(classWriter0).newClass(anyString());
      doReturn(10, 91, (-1086), 9, (-1086)).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[3];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "U{V#g1)`", "U{V#g1)`", "19R^ws1lJ;MOkZ'#U7c", stringArray0, false, true);
      Label label0 = mock(Label.class, new ViolatedAssumptionAnswer());
      methodWriter0.visitLocalVariable("19R^ws1lJ;MOkZ'#U7c", "U{V#g1)`", "7", label0, label0, 1);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2518);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "B[DswK2})CdBZ";
      stringArray0[1] = "] q0*Z3^UtK";
      stringArray0[2] = "B[DswK2})CdBZ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-630), "B[DswK2})CdBZ", "B[DswK2})CdBZ", "B[DswK2})CdBZ", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("] q0*Z3^UtK", "@Cfm5B4'L#1[", "*:", label0, label0, (-4479));
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "JE/QBuB6wX66Po9", "JE/QBuB6wX66Po9", "long", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("Uk*l5L:$}(gOR*'R5e", "G.D,?(|", "Uk*l5L:$}(gOR*'R5e", label0, label0, 2);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-141));
      classWriter0.newMethodItem("RuntimeInvisibleParameterAnnotations", "java/lang/Class", "", false);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 103, ";7uU!w.lLU#", "", "", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "RuntimeInvisibleAnnotations", "wCz", "LocalVariableTable", stringArray0, false, false);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter((-2214));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1), "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", stringArray0, false, false);
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 1450, "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", "G0}V#}^NP~f31", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-141));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Bla8*rk42##]q; ;|", "Kz", "/[_HX", stringArray0, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitFrame(4, 2, stringArray0, (-5354), stringArray0);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 4, "NSI6rrgg$sWZk)7sJkm", "", "M22[J5g~:", stringArray0, false, false);
      methodWriter0.visitIincInsn(2743, 1305);
      methodWriter0.put(byteVector0);
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2120));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2120), "_h5SoYOBw", "_h5SoYOBw", "Ljava/lang/Synthetic;", (String[]) null, false, false);
      classWriter0.visit(1048, 116, "Ljava/lang/Synthetic;", "Label offset position has not been resolved yet", "", (String[]) null);
      ByteVector byteVector0 = new ByteVector(57);
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2214));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1), "LocalVariableTable", "LocalVariableTable", "LocalVariableTable", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 120, "LocalVariableTable", "; |M)dn59x", "LocalVariableTable", stringArray0, true, false);
      methodWriter1.visitMaxs((-699), (-197));
      assertNotSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter((-2214));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1), "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 171, "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitInsn(33);
      methodWriter0.visitLineNumber((-2048), label0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(183, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 114, "long", "long", "long", (String[]) null, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 949, "RuntimeInvisibleAnnotations", "HR&{Z/f}+iM)\"Ap)]I`", "ES|", (String[]) null, false, true);
      methodWriter1.visitVarInsn(114, 64);
      assertNotSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-644));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Exceptions";
      stringArray0[1] = "z,u!KsF>g:a~";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-644), "Code", "Exceptions", "Exceptions", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-1207), "-Pqap", "<F7S8)qTo!=GHSy", (String) null, stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector(3574);
      methodWriter1.put(byteVector0);
      assertNotSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter(4);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4, "RuntimeVisibleParameterAnnotations", "Ljava/lang/Synthetic;", "RuntimeVisibleParameterAnnotations", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 4, "RuntimeVisibleParameterAnnotations", "Ljava/lang/Synthetic;", (String) null, stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector(6);
      methodWriter1.classReaderOffset = 1483;
      // Undeclared exception!
      try { 
        methodWriter1.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter((-2214));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1), "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 171, "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector(2);
      methodWriter0.put(byteVector0);
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter((-2214));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1), "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 171, "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", "RuntimeVisibleAnnotations", stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector(2);
      ByteVector byteVector1 = byteVector0.putLong(33);
      ByteVector byteVector2 = byteVector0.put11((-1991), 1);
      assertSame(byteVector2, byteVector1);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter((-2214));
      classWriter0.newLong(1);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1), "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", "PShx>$s&Z;~[J5>qlL&", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 119, "PShx>$s&Z;~[J5>qlL&", "; |M)dn59x", "PShx>$s&Z;~[J5>qlL&", stringArray0, false, false);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2720));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "I:8hqF\")}9PH{^yaW";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 16777217, "lR<FLhTCDZ5E", "lR<FLhTCDZ5E", "I:8hqF\")}9PH{^yaW", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-141));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Bla8*rk42##]q; ;|", "Kz", "/[_HX", stringArray0, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      String[] stringArray1 = new String[0];
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 4, "NSI6rrgg$sWZk)7sJkm", "", "M22[J5g~:", stringArray1, false, false);
      methodWriter0.visitAnnotation("Kz", false);
      methodWriter0.put(byteVector0);
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter((-2214));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1), "QlD|8hE>", "QlD|8hE>", "QlD|8hE>", stringArray0, false, false);
      methodWriter0.visitIincInsn((-1), (-2214));
      methodWriter0.visitFrame(1, (-2339), stringArray0, 6, stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(153, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2120));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "s0rX|Ed?\tsyXU;M2p";
      stringArray0[1] = "fb";
      stringArray0[2] = "s0rX|Ed?\tsyXU;M2p";
      stringArray0[3] = "fb";
      stringArray0[4] = "s0rX|Ed?\tsyXU;M2p";
      stringArray0[5] = "s0rX|Ed?\tsyXU;M2p";
      stringArray0[6] = "s0rX|Ed?\tsyXU;M2p";
      stringArray0[7] = "s0rX|Ed?\tsyXU;M2p";
      stringArray0[8] = "fb";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "s0rX|Ed?\tsyXU;M2p", "s0rX|Ed?\tsyXU;M2p", "fb", stringArray0, false, false);
      methodWriter0.visitAnnotation("fb", true);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter((-2214));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-552), "org.mockito.asm.Frame", "kqclVu-)V.%X6<", "_h5SoYOBw", stringArray0, true, false);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-141));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "/Q)3x", "", stringArray0, true, false);
      methodWriter0.visitMaxs(759, 41);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(256, 697, 697).when(classWriter0).newClass(anyString());
      doReturn(256, 697, 256, 49, 119).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[3];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "U{V#g1)`", "U{V#g1)`", "19R^ws1lJ;MOkZ'#U7c", stringArray0, false, true);
      Label label0 = mock(Label.class, new ViolatedAssumptionAnswer());
      methodWriter0.visitLineNumber(1, label0);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.visitIincInsn(49, 1);
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2120));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "s0rX|Ed?\tsyXU;M2p";
      stringArray0[1] = "fb";
      stringArray0[2] = "s0rX|Ed?\tsyXU;M2p";
      stringArray0[3] = "fb";
      stringArray0[4] = "s0rX|Ed?\tsyXU;M2p";
      stringArray0[5] = "s0rX|Ed?\tsyXU;M2p";
      stringArray0[6] = "s0rX|Ed?\tsyXU;M2p";
      stringArray0[7] = "s0rX|Ed?\tsyXU;M2p";
      stringArray0[8] = "fb";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "s0rX|Ed?\tsyXU;M2p", "s0rX|Ed?\tsyXU;M2p", "fb", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter(66);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1093), "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", ")z=", "~fw3D3SGGiwW>W", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(361, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-644));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1207), "-Pqap", "<F7S8)qTo!=GHSy", (String) null, stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector(3574);
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2120));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "kqclVu-)V.%X6<", "_h5SoYOBw", (String[]) null, false, false);
      classWriter0.toByteArray();
      String[] stringArray0 = new String[5];
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 5, "", "_h5SoYOBw", "_h5SoYOBw", stringArray0, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      ClassWriter classWriter0 = new ClassWriter((-141));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Bla8*rk42##]q; ;|", "Kz", "/[_HX", stringArray0, false, false);
      classWriter0.toByteArray();
      String[] stringArray1 = new String[0];
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 4, "NSI6rrgg$sWZk)7sJkm", "", "M22[J5g~:", stringArray1, false, false);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2120));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "kqclVu-)V.%X6<", "_h5SoYOBw", (String[]) null, true, false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "L";
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 16, "", "Deprecated", "kqclVu-)V.%X6<", stringArray0, false, false);
      methodWriter0.visitInsn(66);
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn((-2423), (-2423), (-2423), (-2423)).when(classWriter0).newClass(anyString());
      doReturn((-2423), (-2423)).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[4];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 90, (String) null, (String) null, (String) null, stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 90, stringArray0, 90, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }
}
