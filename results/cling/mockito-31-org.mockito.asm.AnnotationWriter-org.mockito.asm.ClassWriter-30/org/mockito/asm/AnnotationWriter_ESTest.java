/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 09:16:51 GMT 2019
 */

package org.mockito.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.asm.AnnotationVisitor;
import org.mockito.asm.AnnotationWriter;
import org.mockito.asm.Attribute;
import org.mockito.asm.ByteVector;
import org.mockito.asm.ClassWriter;
import org.mockito.asm.Item;
import org.mockito.asm.MethodWriter;
import org.mockito.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class AnnotationWriter_ESTest extends AnnotationWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2998);
      ByteVector byteVector0 = new ByteVector();
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, true, byteVector0, byteVector0, 1);
      Boolean boolean0 = Boolean.valueOf("|!wisz0]Q4hend ");
      annotationWriter0.visit("0;c8{.", boolean0);
      classWriter0.invalidFrames = true;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51966
         //
         verifyException("org.mockito.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2171);
      classWriter0.visitAnnotation("j1va/lang/Throwable", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(88, byteArray0.length);
      
      Short short0 = new Short((byte)0);
      int int0 = classWriter0.newConst(short0);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newDouble((short) (-755));
      classWriter0.visitAnnotation("short", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(83, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.visitField((-1180), "2%8h~QQ", "2%8h~QQ", "2%8h~QQ", "87#]wIa");
      classWriter0.visitAnnotation("|!wisz0]Q4hend ", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(197, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2919));
      classWriter0.visitAnnotation("java/lang/Throwable", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(88, byteArray0.length);
      
      Boolean boolean0 = new Boolean(false);
      int int0 = classWriter0.newConst(boolean0);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter0 = new ClassWriter(7);
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 7);
      classWriter0.visitAnnotation(",A)zjc3y=", false);
      classWriter0.toByteArray();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        annotationWriter0.visit(",A)zjc3y=", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@7a86ff81
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2998);
      ByteVector byteVector0 = new ByteVector();
      Boolean boolean0 = Boolean.TRUE;
      int int0 = classWriter0.newConst(boolean0);
      assertEquals(1, int0);
      
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, true, byteVector0, byteVector0, 1);
      annotationWriter0.visit("|!wisz0]Q4hend ", boolean0);
      classWriter0.visitAnnotation("", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(92, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newLong(2);
      classWriter0.newLong(2);
      // Undeclared exception!
      try { 
        classWriter0.newConst((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.addUninitializedType("m5F^:(_6.>MF6dV", 760);
      ByteVector byteVector0 = classWriter0.pool;
      classWriter0.addUninitializedType("m5F^:(_6.>MF6dV", 2);
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 2826);
      // Undeclared exception!
      try { 
        annotationWriter0.visit("fpkW0=,)J", annotationWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.mockito.asm.AnnotationWriter@33f12079
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newLong(2);
      classWriter0.newLong(2);
      classWriter0.visitAnnotation("W=Z'", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(80, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2171);
      classWriter0.visitAnnotation("97)-|.", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(73, byteArray0.length);
      
      Short short0 = new Short((short)12);
      int int0 = classWriter0.newConst(short0);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2171);
      classWriter0.visitAnnotation("java/lang/Throwable", true);
      classWriter0.toByteArray();
      Item item0 = classWriter0.newMethodItem("W4gWD&*.qsO8o3kL-", "java/lang/Throwable", "", false);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2171);
      classWriter0.visitAnnotation("java/lang/Throwable", true);
      classWriter0.toByteArray();
      Item item0 = classWriter0.newDouble(9);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2998);
      classWriter0.visitField(2998, "EnclosingMethod", "EnclosingMethod", "EnclosingMethod", "EnclosingMethod");
      classWriter0.visitAnnotation("oM2;SQv[z", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(150, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2171);
      classWriter0.visitAnnotation("java/lang/Throwable", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(86, byteArray0.length);
      
      Boolean boolean0 = Boolean.valueOf(">l%f>ODv0'NTLn^A]");
      int int0 = classWriter0.newConst(boolean0);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("", true);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        annotationVisitor0.visit(">0", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.mockito.asm.ClassWriter@158cf2df
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4211));
      classWriter0.addUninitializedType("InnerClasses", (-4211));
      int int0 = classWriter0.addUninitializedType("", 1);
      assertEquals(2, int0);
      
      classWriter0.visitAnnotation("InnerClasses", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(79, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2350);
      Attribute attribute0 = new Attribute("+QO");
      classWriter0.visitAttribute(attribute0);
      classWriter0.visitInnerClass(",Ybi", ",Ybi", "", 512);
      byte[] byteArray0 = new byte[2];
      attribute0.value = byteArray0;
      byte[] byteArray1 = classWriter0.toByteArray();
      assertEquals(82, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(26);
      classWriter0.visitSource("8NqCK", "A");
      classWriter0.toByteArray();
      Item item0 = classWriter0.newLong(26);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newLong(2);
      classWriter0.newLong(2);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(33, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2171);
      classWriter0.visitSource("97)-|.", "97)-|.");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(89, byteArray0.length);
      
      Short short0 = new Short((short)12);
      int int0 = classWriter0.newConst(short0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2998);
      classWriter0.visitField(2998, "EnclosingMethod", "EnclosingMethod", "EnclosingMethod", "EnclosingMethod");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(97, byteArray0.length);
      
      int int0 = classWriter0.newConst("EnclosingMethod");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newDouble(3);
      classWriter0.visitSource("", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(86, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2186);
      classWriter0.visitInnerClass(",Ybi", ",Ybi", ",Ybi", 2186);
      classWriter0.visitSource("h;<VP100w#5 ", ",Ybi");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(134, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2998);
      classWriter0.visitField(2998, "EnclosingMethod", "EnclosingMethod", "EnclosingMethod", "EnclosingMethod");
      classWriter0.visitSource("|!wisz0]Q4hend ", "EnclosingMethod");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(180, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2171);
      classWriter0.visitSource(">l%f>ODv0'NTLn^A]", "java/lang/Throwable");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(113, byteArray0.length);
      
      Boolean boolean0 = Boolean.valueOf(">l%f>ODv0'NTLn^A]");
      int int0 = classWriter0.newConst(boolean0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.addUninitializedType("m5F^:(_6.>MF6dV", 760);
      int int0 = classWriter0.addUninitializedType("m5F^:(_6.>MF6dV", 2);
      assertEquals(2, int0);
      
      classWriter0.visitSource("m5F^:(_6.>MF6dV", "value ");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(98, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(24, byteArray0.length);
      
      int int0 = classWriter0.addType("l)F");
      assertEquals(1, int0);
      
      int int1 = classWriter0.addUninitializedType("m5F^:(_6.>MF6dV", 26);
      assertEquals(2, int1);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.addType("float");
      classWriter0.visitSource("/F,$!K5-j @z", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(89, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-116));
      classWriter0.visitSource("h;<VP100w#5 ", ".s.IFJDCS");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(98, byteArray0.length);
      
      Type type0 = Type.getObjectType("h;<VP100w#5 ");
      int int0 = classWriter0.newConst(type0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2998);
      ByteVector byteVector0 = new ByteVector();
      Boolean boolean0 = Boolean.TRUE;
      int int0 = classWriter0.newConst(boolean0);
      assertEquals(1, int0);
      
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, true, byteVector0, byteVector0, 1);
      annotationWriter0.visit("|!wisz0]Q4hend ", boolean0);
      classWriter0.visitSource("|!wisz0]Q4hend ", "EnclosingMethod");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(112, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2919));
      classWriter0.visitAnnotation("jav5/lan%/Throwable", false);
      classWriter0.toByteArray();
      Byte byte0 = new Byte((byte) (-57));
      Item item0 = classWriter0.newConstItem(byte0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2171);
      classWriter0.visitAnnotation("97)-|.", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(73, byteArray0.length);
      
      Byte byte0 = new Byte((byte)16);
      int int0 = classWriter0.newConst(byte0);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2171);
      classWriter0.visitSource("97)-|.", "97)-|.");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(89, byteArray0.length);
      
      Byte byte0 = new Byte((byte)16);
      int int0 = classWriter0.newConst(byte0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2171);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("java/lang/Throwable", true);
      classWriter0.toByteArray();
      Boolean boolean0 = new Boolean(true);
      classWriter0.newConst(boolean0);
      annotationVisitor0.visit("", boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-116));
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(24, byteArray0.length);
      
      Type type0 = Type.getObjectType("h;<VP100w#5 ");
      int int0 = classWriter0.newConst(type0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2171);
      String[] stringArray0 = new String[0];
      classWriter0.visit(1, (-2517), "vp>0lJ+,gV3", "<'QtHh*26V7K", "", stringArray0);
      classWriter0.toByteArray();
      Item item0 = classWriter0.newInteger(2171);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newMethodItem(",Ybi", ",Ybi", ",Ybi", false);
      classWriter0.newMethodItem(",Ybi", ",Ybi", ",Ybi", false);
      Attribute attribute0 = new Attribute("vI7')sT:)NVLuR8yu?;");
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newMethodItem(",Ybi", ",Ybi", ",Ybi", true);
      classWriter0.visitInnerClass(",Ybi", ",Ybi", ",Ybi", 3);
      classWriter0.newMethodItem(",Ybi", ",Ybi", ",Ybi", true);
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, 3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newMethodItem(",Ybi", ",Ybi", ",Ybi", true);
      classWriter0.newMethodItem(",Ybi", ",Ybi", ",Ybi", true);
      classWriter0.visitOuterClass(",Ybi", ",Ybi", "W; U`N(");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      classWriter0.newMethodItem("Ybi", "Ybi", "Ybi", false);
      classWriter0.newMethodItem("Ybi", "Ybi", "Ybi", false);
      classWriter0.visitSource((String) null, (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      Item item0 = classWriter0.newMethodItem(",Ybi", ",Ybi", ",Ybi", true);
      Item item1 = classWriter0.newMethodItem(",Ybi", ",Ybi", ",Ybi", true);
      assertSame(item1, item0);
      
      classWriter0.visitSource("", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(97, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFloat(3);
      classWriter0.newFloat(3);
      classWriter0.visitField((-1180), "2%8h~QQ", "2%8h~QQ", "2%8h~QQ", "87#]wIa");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(142, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFloat(3);
      classWriter0.newFloat(3);
      classWriter0.visitSource("`,o", (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFloat(3);
      classWriter0.newFloat(3);
      classWriter0.visitOuterClass("float", (String) null, (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFloat(3);
      classWriter0.newFloat(3);
      classWriter0.visitOuterClass("float", "SourceFile", "SourceFile");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFloat(3);
      classWriter0.newFloat(3);
      classWriter0.visitOuterClass(".class", "short", (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFloat(3);
      classWriter0.newFloat(3);
      classWriter0.visitInnerClass("StackMapTable", (String) null, (String) null, (-2158));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFloat(321.3F);
      classWriter0.newFloat(321.3F);
      classWriter0.visitInnerClass("euy8Oby4.#aH.}oF", "qA)=L?jE~y82]HP", "qA)=L?jE~y82]HP", 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFloat(3);
      classWriter0.newFloat(3);
      classWriter0.visitSource((String) null, "87#]wIa");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFloat(3);
      classWriter0.newFloat(3);
      classWriter0.visitSource("/F,$!K5-j @z", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(94, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5));
      Item item0 = classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      classWriter0.visitAnnotation(",Ybi", false);
      Item item1 = classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      assertSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      classWriter0.visitSource("", (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      classWriter0.visitOuterClass(",Ybi", (String) null, (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "wk{IcpCF", "", "e", stringArray0, false, false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(90, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-10));
      classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      classWriter0.visitOuterClass(",Ybi", ",Ybi", ",Ybi");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      classWriter0.visitInnerClass("", (String) null, ",Ybi", 2057);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFieldItem("Y:bi", "Y:bi", "Y:bi");
      classWriter0.newFieldItem("Y:bi", "Y:bi", "Y:bi");
      classWriter0.visitInnerClass("", "~``y[~IvVJ5o-*llHk", (String) null, 3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFieldItem(",Yi", ",Yi", ",Yi");
      classWriter0.newFieldItem(",Yi", ",Yi", ",Yi");
      classWriter0.visitSource((String) null, ",Yi");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      classWriter0.visitSource(",Ybi", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(94, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      Attribute attribute0 = new Attribute("vI7')sT:)NVLuR8yu?;");
      classWriter0.visitAttribute(attribute0);
      Boolean boolean0 = Boolean.FALSE;
      classWriter0.newConst(boolean0);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      Type type0 = Type.BYTE_TYPE;
      classWriter0.newConst(type0);
      classWriter0.visitOuterClass("", (String) null, "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "!Jq%E3x%~8z~GX9O:";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "!Jq%E3x%~8z~GX9O:", ",Ybi", "!Jq%E3x%~8z~GX9O:", stringArray0, false, false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(106, byteArray0.length);
      
      Type type0 = Type.SHORT_TYPE;
      int int0 = classWriter0.newConst(type0);
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      Type type0 = Type.BYTE_TYPE;
      classWriter0.visitOuterClass(">\"?Q-)xJY IaB.yQJiY", ">\"?Q-)xJY IaB.yQJiY", (String) null);
      int int0 = classWriter0.newConst(type0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      Type type0 = Type.INT_TYPE;
      classWriter0.newConst(type0);
      classWriter0.visitInnerClass("Sl\"QUZ", (String) null, (String) null, 10);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      Type type0 = Type.INT_TYPE;
      classWriter0.newConst(type0);
      classWriter0.visitInnerClass((String) null, ",Ybi", (String) null, 5);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      Type type0 = Type.INT_TYPE;
      classWriter0.newConst(type0);
      classWriter0.visitInnerClass(",Ybi", ",Ybi", ",Ybi", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      Type type0 = Type.BYTE_TYPE;
      classWriter0.newConst(type0);
      classWriter0.visitSource((String) null, (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2171);
      classWriter0.visitSource("97)-|.", "97)-|.");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(89, byteArray0.length);
      
      Type type0 = Type.SHORT_TYPE;
      int int0 = classWriter0.newConst(type0);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      ByteVector byteVector0 = classWriter0.pool;
      classWriter0.addUninitializedType("m5F^:(_6.>MF6dV", 2);
      classWriter0.addUninitializedType("m5F^:(_6.>MF6dV", 2);
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 2826);
      // Undeclared exception!
      try { 
        annotationWriter0.visit("fpkW0=,)J", annotationWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.mockito.asm.AnnotationWriter@23f9a637
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.addUninitializedType("InnerClasses", 2);
      int int0 = classWriter0.addUninitializedType("InnerClasses", 2);
      assertEquals(1, int0);
      
      classWriter0.visitAnnotation("InnerClasses", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(79, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.addUninitializedType("m5F^:(_6.>MF6dV", 2);
      classWriter0.addUninitializedType("m5F^:(_6.>MF6dV", 2);
      classWriter0.visitOuterClass("o1}", "):EJ<UpJSC:cr8XC", "o1}");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.addUninitializedType("InnerClasses", 2);
      int int0 = classWriter0.addUninitializedType("InnerClasses", 2);
      assertEquals(1, int0);
      
      classWriter0.visitAnnotation("short", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(74, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.addUninitializedType("m5FK:(_6.>MF6dV", 2);
      classWriter0.addUninitializedType("m5FK:(_6.>MF6dV", 2);
      classWriter0.visitInnerClass("", (String) null, (String) null, (short) (-755));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      int int0 = classWriter0.addUninitializedType("m5F^:(_6.>MF6dV", 2);
      int int1 = classWriter0.addUninitializedType("m5F^:(_6.>MF6dV", 2);
      assertTrue(int1 == int0);
      
      classWriter0.visitSource("m5F^:(_6.>MF6dV", "value ");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(98, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(311);
      classWriter0.newMethodItem("", "", "", false);
      classWriter0.newNameType("", "");
      classWriter0.visitSource("", (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(311);
      classWriter0.newMethodItem("UH", "UH", "UH", true);
      classWriter0.newNameType("UH", "UH");
      classWriter0.visitOuterClass("RuntimeVisibleAnnotations", (String) null, "'`{dSWF~#'Mx[UX[f");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newNameType("m5F^:(_6.>MF6dV", "m5F^:(_6.>MF6dV");
      ByteVector byteVector0 = classWriter0.pool;
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 2826);
      classWriter0.newMethodItem("m5F^:(_6.>MF6dV", "m5F^:(_6.>MF6dV", "m5F^:(_6.>MF6dV", false);
      // Undeclared exception!
      try { 
        annotationWriter0.visit("fpkW0=,)J", annotationWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.mockito.asm.AnnotationWriter@50786197
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      classWriter0.newMethodItem(",Ybi", ",Ybi", ",Ybi", true);
      classWriter0.visitAnnotation(",Ybi", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(89, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(311);
      classWriter0.newMethodItem("UH", "UH", "UH", true);
      classWriter0.newNameType("UH", "UH");
      classWriter0.visitOuterClass("", "", (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      classWriter0.newMethodItem(",Ybi", ",Ybi", ",Ybi", true);
      classWriter0.visitAnnotation(",Ybi", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(91, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFieldItem("Y:bi", "Y:bi", "Y:bi");
      classWriter0.newMethodItem("Y:bi", "Y:bi", "Y:bi", true);
      classWriter0.visitInnerClass("", "~``y[~IvVJ5o-*llHk", (String) null, 3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFieldItem(",Ybi", ",Ybi", ",Ybi");
      classWriter0.newMethodItem(",Ybi", ",Ybi", ",Ybi", true);
      classWriter0.visitInnerClass("V05fvm,d4Ltf", "~``y[~IvVJ5o-*llHk", ",Ybi", 3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFieldItem(",Yi", ",Yi", ",Yi");
      classWriter0.newMethodItem(",Yi", ",Yi", ",Yi", true);
      classWriter0.visitSource((String) null, ",Yi");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      int int0 = classWriter0.newNameType("m5F^:(_6.>MF6dV", "m5F^:(_6.>MF6dV");
      assertEquals(2, int0);
      
      classWriter0.newMethodItem("m5F^:(_6.>MF6dV", "m5F^:(_6.>MF6dV", "m5F^:(_6.>MF6dV", false);
      classWriter0.visitSource("m5F^:(_6.>MF6dV", "value ");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(111, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2998);
      classWriter0.visitField(2998, "EnclosingMethod", "EnclosingMethod", "EnclosingMethod", "EnclosingMethod");
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.newConst((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter0 = new ClassWriter(3);
      Item item0 = classWriter0.newDouble(122.1);
      classWriter0.visitInnerClass(",Ybi", ",Ybi", ",Ybi", 3);
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, 3);
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, true, byteVector0, byteVector0, 22);
      // Undeclared exception!
      try { 
        annotationWriter0.visit("", item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.mockito.asm.Item@7ecfe712
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      Type type0 = Type.INT_TYPE;
      classWriter0.visitOuterClass(">\"?Q-)xJY IaB.yQJiY", ">\"?Q-)xJY IaB.yQJiY", ">\"?Q-)xJY IaB.yQJiY");
      int int0 = classWriter0.newConst(type0);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      ByteVector byteVector0 = classWriter0.pool;
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 2826);
      classWriter0.visitSource("m5F^:(_6.>MF6dV", "value ");
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        annotationWriter0.visit("fpkW0=,)J", annotationWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.mockito.asm.AnnotationWriter@324e5030
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newLong(1);
      classWriter0.visitAnnotation("P7KKA1F", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(85, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      Item item0 = classWriter0.newMethodItem("Ybi", "Ybi", "Ybi", false);
      Item item1 = classWriter0.newMethodItem("Ybi", "Ybi", "Ybi", false);
      assertSame(item1, item0);
      
      classWriter0.visitAnnotation(",A)zjc3y=", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(97, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter0 = new ClassWriter(7);
      classWriter0.newMethodItem("Ybi", "Ybi", "Ybi", false);
      classWriter0.newMethodItem("Ybi", "Ybi", "Ybi", false);
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 7);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        annotationWriter0.visit(",A)zjc3y=", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@35f57288
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      Item item0 = classWriter0.newMethodItem(",Ybi", ",Ybi", ",Ybi", true);
      Item item1 = classWriter0.newMethodItem(",Ybi", ",Ybi", ",Ybi", true);
      assertSame(item1, item0);
      
      classWriter0.visitAnnotation("K*,s*b .", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(95, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      Item item0 = classWriter0.newMethodItem(",Ybi", ",Ybi", ",Ybi", true);
      classWriter0.visitInnerClass(",Ybi", ",Ybi", ",Ybi", 3);
      Item item1 = classWriter0.newMethodItem(",Ybi", ",Ybi", ",Ybi", true);
      assertSame(item1, item0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(75, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFloat(3);
      classWriter0.newFloat(3);
      classWriter0.visitAnnotation("|!wisz0]Q4hend ", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(89, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      Item item0 = classWriter0.newFloat(3);
      Item item1 = classWriter0.newFloat(3);
      assertSame(item1, item0);
      
      classWriter0.visitAnnotation("StackMap", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(80, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFieldItem(",Yi", ",Yi", ",Yi");
      classWriter0.newFieldItem(",Yi", ",Yi", ",Yi");
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("", true);
      // Undeclared exception!
      try { 
        annotationVisitor0.visit(">0", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.mockito.asm.ClassWriter@6b943ebe
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFieldItem(",Yi", ",Yi", ",Yi");
      classWriter0.newFieldItem(",Yi", ",Yi", ",Yi");
      classWriter0.visitAnnotation("", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(86, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2171);
      classWriter0.visitAnnotation("java/lang/Throwable", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(88, byteArray0.length);
      
      int int0 = classWriter0.addType("java/lang/Throwable");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.addType("#.VC(?hT[a@d");
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, true, byteVector0, byteVector0, Integer.MAX_VALUE);
      // Undeclared exception!
      try { 
        annotationWriter0.visit("#.VC(?hT[a@d", (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2171);
      classWriter0.visitAnnotation("java/lang/Throwable", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(86, byteArray0.length);
      
      int int0 = classWriter0.addType("");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter0 = new ClassWriter(2186);
      classWriter0.visitInnerClass(",Ybi", ",Ybi", ",Ybi", 2186);
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, true, byteVector0, byteVector0, 2);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        annotationWriter0.visit("7~%eVV[%{@'", (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      Type type0 = Type.INT_TYPE;
      classWriter0.newConst(type0);
      Item item0 = classWriter0.newMethodItem(",Ybi", "DBc<RMSDT", ",Ybi", true);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2998);
      classWriter0.visitField(2998, "EnclosingMethod", "EnclosingMethod", "EnclosingMethod", "EnclosingMethod");
      classWriter0.invalidFrames = true;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51966
         //
         verifyException("org.mockito.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      Type type0 = Type.SHORT_TYPE;
      int int0 = classWriter0.newConst(type0);
      assertEquals(2, int0);
      
      classWriter0.visitAnnotation("P7KKA1F", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(83, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      Type type0 = Type.SHORT_TYPE;
      int int0 = classWriter0.newConst(type0);
      assertEquals(2, int0);
      
      classWriter0.visitAnnotation("@PAC", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(78, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2919));
      Character character0 = Character.valueOf('`');
      classWriter0.newConstItem(character0);
      classWriter0.visitAnnotation("java/lang/Throwable", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(93, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2919));
      Character character0 = new Character('`');
      classWriter0.newConstItem(character0);
      classWriter0.visitAnnotation("java/lang/Throwable", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(91, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2919));
      Character character0 = Character.valueOf('`');
      classWriter0.newConstItem(character0);
      classWriter0.visitSource("java/lang/Throwable", "Synthetic");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(110, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2919));
      classWriter0.visitAnnotation("jav5/lan%/Throwable", false);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-6000), 17);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2919));
      Byte byte0 = new Byte((byte) (-57));
      classWriter0.newConstItem(byte0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-6000), 17);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2171);
      classWriter0.visitAnnotation("java/lang/Throwable", true);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-1877), (-1877));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-116));
      classWriter0.visitSource("h;<VP100w#5 ", ".s.IFJDCS");
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }
}
