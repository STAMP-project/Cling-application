/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 08:43:15 GMT 2019
 */

package org.mockito.asm.util;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mockito.asm.FieldVisitor;
import org.mockito.asm.MethodVisitor;
import org.mockito.asm.util.ASMifierClassVisitor;
import org.mockito.asm.util.ASMifierMethodVisitor;
import org.mockito.asm.util.AbstractVisitor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ASMifierClassVisitor_ESTest extends ASMifierClassVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visitInnerClass("1g7wB1wwg", "1g7wB1wwg", "Ce'^vkb\"7J/!-g", 128);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test01()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "t|S.;RvnS>Tr3/:";
      aSMifierClassVisitor0.visit(932, 932, "t|S.;RvnS>Tr3/:", "Vq{(e\"i,'()uP*~)r~", "Vq{(e\"i,'()uP*~)r~", stringArray0);
      try { 
        ASMifierClassVisitor.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // t|S.;RvnS>Tr3/: (No such file or directory)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod((-2325), "mv.visitIntInsn(", "mv.visitIntInsn(", "p{TzxYY", stringArray0);
      aSMifierClassVisitor0.visit((-2325), (-1493), "b@'<uk6tHi[3im,C", "b@'<uk6tHi[3im,C", "~aQDZS7}>q-", stringArray0);
      aSMifierClassVisitor0.visit((-2325), 8192, ".class", "ConstantValue", "b@'<uk6tHi[3im,C", ((AbstractVisitor) methodVisitor0).TYPES);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(196653, 196653, "il/fBtxyAV[lQCpL7", "mv.visitMaxs(", "u #+3n&Iqod2pC", aSMifierClassVisitor0.OPCODES);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      String[] stringArray0 = new String[1];
      aSMifierClassVisitor0.visitMethod(8192, (String) null, (String) null, (String) null, stringArray0);
      aSMifierClassVisitor0.visit(50, 8192, "5zC()?Qv$~R]T8Bb", (String) null, stringArray0[0], stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(49, 1808, "-debug", "G.=9'FdHZ[dbaNL\"|@", "av0 = mv.visitAnnotationDefault();\n", (String[]) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit((-876), 8192, "av0 = mv.visitAnnotationDefault();\n", "av0 = mv.visitAnnotationDefault();\n", "c1!)}4NU7= E5$4 ", (String[]) null);
      aSMifierClassVisitor0.visit((-784), 1128, "$M@", "$M@", ".visit(", (String[]) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(8192, 8192, "wjmco_", "wjmco_", "wjmco_", aSMifierClassVisitor0.TYPES);
      ASMifierClassVisitor.main(aSMifierClassVisitor0.TYPES);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(5, "av0 = mv.visitAnnotationDefault();\n", "2)kR@t#wwBPO", (String) null, stringArray0);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(46, 54, "by+yI/dKL>1-0M`Nqd", "by+yI/dKL>1-0M`Nqd", ")V", (String[]) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField((-1493), "p{TzxYY", "p{TzxYY", "p{TzxYY", "p{TzxYY");
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod((-2325), "mv.visitIntInsn(", "mv.visitIntInsn(", "p{TzxYY", ((AbstractVisitor) fieldVisitor0).OPCODES);
      aSMifierClassVisitor0.visit((-2325), 8192, ".class", "ConstantValue", "b@'<uk6tHi[3im,C", ((AbstractVisitor) methodVisitor0).TYPES);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(8192, 8192, "-debug", "mv.visitFrame(Opcodes.F_FULL, ", "mv.visitFrame(Opcodes.F_FULL, ", aSMifierClassVisitor0.TYPES);
      aSMifierClassVisitor0.visitInnerClass("mv.visitFrame(Opcodes.F_FULL, ", "RuntimeVisibleParameterAnnotations", "-debug", 1524);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      StringWriter stringWriter0 = new StringWriter();
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(65528, (String) null, "V1_1", "u9^D{iS,C.u_L}}M", stringWriter0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      String[] stringArray0 = new String[0];
      aSMifierClassVisitor0.visit((-171), 32, "mv.visitMaxs(", "mv.visitMaxs(", "mv.visitMaxs(", stringArray0);
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField((-509457943), "mv.visitMaxs(", "Q` VUG", (String) null, (Object) null);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      String[] stringArray0 = new String[0];
      aSMifierClassVisitor0.visit((-171), (-3584), "[FZ", "Mw\toFt|fopg#iH^", "{\n", stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.appendAccess(2038);
      Object object0 = new Object();
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(16384, "-debug", (String) null, (String) null, object0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit((-171), 32, "mv.visitMaxs(", "mv.visitMaxs(", "mv.visitMaxs(", aSMifierClassVisitor0.OPCODES);
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField((-509457943), "mv.visitMaxs(", "Q` VUG", (String) null, (Object) null);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(730, 65535, "a |\"@bk4N_j}^Qh%7n", "V1_2", "a |\"@bk4N_j}^Qh%7n", (String[]) null);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(200, ":<1-'nK$c0Ikb", "uUTja^VRFs7M.class.class", "V1_2", (String[]) null);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      ASMifierMethodVisitor aSMifierMethodVisitor0 = aSMifierClassVisitor0.createASMifierMethodVisitor();
      aSMifierClassVisitor0.visitField(65535, "RuntimeVisibleParameterAnnotations", "v%kr<SZg1$k^kK!_6S", "v%kr<SZg1$k^kK!_6S", "RuntimeVisibleParameterAnnotations");
      aSMifierClassVisitor0.visit(65535, 3, "v%kr<SZg1$k^kK!_6S", "v%kr<SZg1$k^kK!_6S", "u #+3n&Iqod2pC", aSMifierMethodVisitor0.OPCODES);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(730, 65535, "a |\"@bk4N_j}^Qh%7n", "V1_2", "a |\"@bk4N_j}^Qh%7n", (String[]) null);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(65535, (String) null, "cw.visitEnd();\n\n.class", "_nbN1[(^AFh&roLU", (String[]) null);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(16384, "RuntimeVisibleParameterAnnotations", "D", "RuntimeVisibleParameterAnnotations", (Object) null);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(189, "org.mockito.asm.ClassWriter", "RuntimeVisibleParameterAnnotations", ".class", ((AbstractVisitor) fieldVisitor0).TYPES);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit((-171), 32, "mv.visitMaxs(", "mv.visitMaxs(", "mv.visitMaxs(", aSMifierClassVisitor0.TYPES);
      aSMifierClassVisitor0.visit((-171), (-3584), "[FZ", "Mw\toFt|fopg#iH^", "{\n", aSMifierClassVisitor0.TYPES);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      ASMifierMethodVisitor aSMifierMethodVisitor0 = aSMifierClassVisitor0.createASMifierMethodVisitor();
      ASMifierClassVisitor.main(aSMifierMethodVisitor0.OPCODES);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(16384, (String) null, ">", "iBx{#i", aSMifierMethodVisitor0.TYPES);
      assertFalse(methodVisitor0.equals((Object)aSMifierMethodVisitor0));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit((-171), (-171), "mv.visitMaxs(", "mv.visitMaxs(", "mv.visitMaxs(", aSMifierClassVisitor0.OPCODES);
      ASMifierClassVisitor.main(aSMifierClassVisitor0.OPCODES);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      Object object0 = new Object();
      aSMifierClassVisitor0.visitField(16384, "-debug", (String) null, (String) null, object0);
      ASMifierClassVisitor.main(aSMifierClassVisitor0.TYPES);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visitInnerClass("}, 0, null", "+SqIJg[^KV-$3g", "}, 0, null", 16384);
      ASMifierClassVisitor.main(aSMifierClassVisitor0.TYPES);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "org.mockito.asm.ClassReader";
      aSMifierClassVisitor0.visit(1049, (-1968), "org.mockito.asm.ClassReader", "org.mockito.asm.ClassReader", "org.mockito.asm.ClassReader", stringArray0);
      ASMifierClassVisitor.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(65535, "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations");
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(131030, "RuntimeVisibleParameterAnnotations", ";w:4uJ", "cw", ((AbstractVisitor) fieldVisitor0).OPCODES);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      Object object0 = new Object();
      aSMifierClassVisitor0.visitField(65535, "", "{KoHr|/}tl>W", "", object0);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod((-4998), "", "Z{L4f4^", ".4<Mq$s_=dRo.]rxV0", (String[]) null);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit((-2585), 16384, "org.mockito.asm.ClassReader", "k'.LZ'9|#4>Cwjmco_", "V&fu+Z5|_ 2z:.~;@jv", (String[]) null);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod((-1078), "iBx{#i", "iBx{#i", "]\"tvyQ& ", (String[]) null);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(47, 311, "av0 = mv.visitAnnotationDefault();\n", "av0 = mv.visitAnnotationDefault();\n", "av0 = mv.visitAnnotationDefault();\n", (String[]) null);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod((-530), "G.=9'FdHZ[dbaNL\"|@", "G.=9'FdHZ[dbaNL\"|@", "AnnotationVisitor av0;\n\n", (String[]) null);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      Object object0 = new Object();
      aSMifierClassVisitor0.visitField(65535, "", "{KoHr|/}tl>W", "", object0);
      aSMifierClassVisitor0.visit(65535, 65535, "Z{L4f4^", "!Zh!(,,4wYX0]9bb", "!Zh!(,,4wYX0]9bb", (String[]) null);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(196653, (-171), "u #+3n&Iqod2pC", "", "il/fBtxyAV[lQCpL7", aSMifierClassVisitor0.TYPES);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod((-805), ", null", "mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null", (String) null, (String[]) null);
      aSMifierClassVisitor0.visit(50, 50, "=6}T2S8aJoME", "mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null", (String) null, ((AbstractVisitor) methodVisitor0).OPCODES);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test34()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "uUTja^VRFs7M.class";
      try { 
        ASMifierClassVisitor.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // uUTja^VRFs7M.class (No such file or directory)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(48, 932, "mv.visitMaxs(", "mv.visitMaxs(", "mv.visitMaxs(", aSMifierClassVisitor0.TYPES);
      aSMifierClassVisitor0.visitInnerClass("mv.visitMaxs(", ");#Wi}", "", (-1));
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      ASMifierMethodVisitor aSMifierMethodVisitor0 = aSMifierClassVisitor0.createASMifierMethodVisitor();
      aSMifierClassVisitor0.visit(46, (-298), "null", "null", "LANq*<hx$J mS2#", aSMifierMethodVisitor0.TYPES);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(4731, 0, "", "", "", aSMifierClassVisitor0.TYPES);
      aSMifierClassVisitor0.visitInnerClass("o@ImF>yrdG", "o@ImF>yrdG", "o@ImF>yrdG", 65535);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      ASMifierMethodVisitor aSMifierMethodVisitor0 = aSMifierClassVisitor0.createASMifierMethodVisitor();
      aSMifierClassVisitor0.visitMethod(65535, "BMnN*f^\"#", "ACC_ABSTRACT", "IGux![4EbLE(OZL", aSMifierMethodVisitor0.OPCODES);
      aSMifierClassVisitor0.visitInnerClass("k+~{\"u1pp", "+l", "-3.c1Y#;*CYN", 65535);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(65535, "RuntimeVisibleParameterAnnotations", "v%kr<SZg1$k^kK!_6S", "v%kr<SZg1$k^kK!_6S", "RuntimeVisibleParameterAnnotations");
      FieldVisitor fieldVisitor1 = aSMifierClassVisitor0.visitField(200, "l", "RuntimeVisibleParameterAnnotations", "ACC_VOLATILE", "v%kr<SZg1$k^kK!_6S");
      assertFalse(fieldVisitor1.equals((Object)fieldVisitor0));
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visitInnerClass("{KoHr|/}tl>W", "return cw.toByteArray();\n", "cw.visitSource(", 65535);
      aSMifierClassVisitor0.visit(65535, 65535, "Z{L4f4^", "!Zh!(,,4wYX0]9bb", "!Zh!(,,4wYX0]9bb", (String[]) null);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      String[] stringArray0 = new String[0];
      aSMifierClassVisitor0.visit(5, 5, "6jer#d/23", "6jer#d/23", "6jer#d/23", stringArray0);
      ASMifierMethodVisitor aSMifierMethodVisitor0 = aSMifierClassVisitor0.createASMifierMethodVisitor();
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(65535, "6jer#d/23", "6jer#d/23", (String) null, aSMifierMethodVisitor0.OPCODES);
      assertNotSame(aSMifierMethodVisitor0, methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(4731, 32, "", "", "", aSMifierClassVisitor0.OPCODES);
      aSMifierClassVisitor0.visitInnerClass("o@ImF>yrdG", "o@ImF>yrdG", "uUTja^VRFs7M.class", 65535);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      ASMifierClassVisitor.main(aSMifierClassVisitor0.TYPES);
      aSMifierClassVisitor0.visitInnerClass("o@ImF>yrdG", "o@ImF>yrdG", "uUTja^VRFs7M.class", 65535);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "pLoZ|MG9|D&";
      aSMifierClassVisitor0.visitMethod(65535, ">gu~:S>.T", "5Im)GH", "7DI5%Ze8TZEYKA", stringArray0);
      try { 
        ASMifierClassVisitor.main(stringArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Class not found
         //
         verifyException("org.mockito.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      ASMifierMethodVisitor aSMifierMethodVisitor0 = aSMifierClassVisitor0.createASMifierMethodVisitor();
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(65535, "av0 = mv.visitParameterAnnotation(", "av0 = mv.visitParameterAnnotation(", "av0 = mv.visitParameterAnnotation(", aSMifierMethodVisitor0.OPCODES);
      aSMifierClassVisitor0.visit(180, (-2161), "av0 = mv.visitParameterAnnotation(", "-debug", "-debug", aSMifierMethodVisitor0.OPCODES);
      assertFalse(aSMifierMethodVisitor0.equals((Object)methodVisitor0));
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visitInnerClass("{KoHr|/}tl>W", "return cw.toByteArray();\n", "cw.visitSource(", 65535);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod((-4998), "", "Z{L4f4^", ".4<Mq$s_=dRo.]rxV0", (String[]) null);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visitInnerClass("/FwneZQv!\t a2qjN", "mv.visitFraeOpcods.F_SAME, 0, null, 0, null.class", "mv.visitFraeOpcods.F_SAME, 0, null, 0, null.class", 32767);
      aSMifierClassVisitor0.visit(47, 47, "/FwneZQv!\t a2qjN", " = new Label();\n.class", "/FwneZQv!\t a2qjN", aSMifierClassVisitor0.TYPES);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      ASMifierMethodVisitor aSMifierMethodVisitor0 = aSMifierClassVisitor0.createASMifierMethodVisitor();
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(65535, "j##r0", "j##r0", "t|S.;RvnS>Tr3/:", aSMifierMethodVisitor0.OPCODES);
      aSMifierClassVisitor0.visit(41, 16, "t|S.;RvnS>Tr3/:", "j##r0", "t|S.;RvnS>Tr3/:", aSMifierMethodVisitor0.TYPES);
      assertFalse(aSMifierMethodVisitor0.equals((Object)methodVisitor0));
  }
}
