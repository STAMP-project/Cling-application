/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 03:48:47 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.EcmaError;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class NativeArray_ESTest extends NativeArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-1476L));
      // Undeclared exception!
      try { 
        nativeArray0.get((-1476L));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1970L);
      Object[] objectArray0 = new Object[0];
      Object[] objectArray1 = nativeArray0.toArray(objectArray0);
      Object[] objectArray2 = nativeArray0.toArray(objectArray1);
      assertEquals(1970, objectArray2.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      NativeArray.init(baseFunction0, false);
      NativeArray nativeArray0 = new NativeArray(13);
      int int0 = nativeArray0.size();
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      NativeArray.init(baseFunction0, false);
      NativeArray nativeArray0 = new NativeArray(13);
      // Undeclared exception!
      try { 
        nativeArray0.get(10000);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeArray.getLengthProperty(context0, nativeContinuation0);
      assertTrue(nativeContinuation0.isEmpty());
      
      NativeArray nativeArray0 = new NativeArray(369L);
      Object[] objectArray0 = nativeArray0.toArray();
      assertEquals(369, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeArray.setMaximumInitialCapacity(7);
      NativeArray nativeArray0 = new NativeArray(13);
      int int0 = nativeArray0.size();
      assertEquals(13, int0);
      
      boolean boolean0 = nativeArray0.has((-3630), (Scriptable) nativeArray0);
      assertFalse(boolean0);
      assertTrue(nativeArray0.isEmpty());
      assertTrue(nativeArray0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Object object0 = nativeArray0.get((-4010), (Scriptable) nativeArray0);
      boolean boolean0 = nativeArray0.contains(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(180);
      nativeArray0.equivalentValues("(I)C");
      assertTrue(nativeArray0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      Context context0 = mock(Context.class, new ViolatedAssumptionAnswer());
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        nativeArray0.defineOwnProperty(context0, (Object) nativeIterator_StopIteration0, (ScriptableObject) nativeIterator_StopIteration0, false);
        fail("Expecting exception: EcmaError");
      
      } catch(EcmaError e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NativeArray.setMaximumInitialCapacity(7);
      NativeArray nativeArray0 = new NativeArray(13);
      nativeArray0.has((-3630), (Scriptable) nativeArray0);
      // Undeclared exception!
      try { 
        nativeArray0.get(10000);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      ImporterTopLevel importerTopLevel0 = null;
      try {
        importerTopLevel0 = new ImporterTopLevel(context0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Scriptable scriptable0 = mock(Scriptable.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(scriptable0).get(anyString() , any(com.google.javascript.rhino.head.Scriptable.class));
      doReturn((Scriptable) null, (Scriptable) null, (Scriptable) null, (Scriptable) null, (Scriptable) null).when(scriptable0).getParentScope();
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(scriptable0).toString();
      NativeArray.init(scriptable0, false);
      NativeArray nativeArray0 = new NativeArray((-7698142301602209613L));
      Object object0 = nativeArray0.get(0, (Scriptable) nativeArray0);
      assertEquals((-7698142301602209613L), nativeArray0.getLength());
      
      boolean boolean0 = nativeArray0.contains(object0);
      assertFalse(boolean0);
  }
}
