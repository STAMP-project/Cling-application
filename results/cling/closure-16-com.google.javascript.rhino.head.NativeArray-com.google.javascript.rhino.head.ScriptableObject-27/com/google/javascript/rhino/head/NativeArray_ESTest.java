/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 18 05:22:53 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeError;
import com.google.javascript.rhino.head.NativeFunction;
import com.google.javascript.rhino.head.NativeJavaConstructor;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class NativeArray_ESTest extends NativeArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NativeFunction nativeFunction0 = mock(NativeFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(nativeFunction0).get(anyString() , any(com.google.javascript.rhino.head.Scriptable.class));
      doReturn(0).when(nativeFunction0).getLanguageVersion();
      doReturn(0).when(nativeFunction0).getParamAndVarCount();
      doReturn(0).when(nativeFunction0).getParamCount();
      doReturn((Scriptable) null, (Scriptable) null, (Scriptable) null, (Scriptable) null, (Scriptable) null).when(nativeFunction0).getParentScope();
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(nativeFunction0).toString();
      Object[] objectArray0 = new Object[6];
      NativeCall nativeCall0 = new NativeCall(nativeFunction0, nativeFunction0, objectArray0);
      NativeArray.init(nativeCall0, true);
      assertTrue(nativeCall0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-1925L));
      NativeArray nativeArray1 = new NativeArray(4);
      nativeArray1.lastIndexOf(nativeArray0);
      // Undeclared exception!
      try { 
        nativeArray1.get((-1797));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(10000);
      Object[] objectArray0 = nativeArray0.toArray();
      assertEquals(10000, objectArray0.length);
      assertTrue(nativeArray0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Class<NativeJavaConstructor> class0 = NativeJavaConstructor.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeArray0, "tt", class0);
      // Undeclared exception!
      try { 
        nativeArray0.get((long) 10000);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(286);
      assertEquals(286L, nativeArray0.jsGet_length());
      
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) nativeArray0;
      NativeArray nativeArray1 = new NativeArray(objectArray0);
      boolean boolean0 = nativeArray0.containsAll(nativeArray1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test5()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(2215L);
      NativeArray.setMaximumInitialCapacity(2);
      nativeArray0.getIndexIds();
      Context context0 = mock(Context.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(context0).toString();
      NativeError nativeError0 = new NativeError();
      // Undeclared exception!
      try { 
        nativeArray0.defineOwnProperty(context0, (Object) context0, (ScriptableObject) nativeError0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }
}
