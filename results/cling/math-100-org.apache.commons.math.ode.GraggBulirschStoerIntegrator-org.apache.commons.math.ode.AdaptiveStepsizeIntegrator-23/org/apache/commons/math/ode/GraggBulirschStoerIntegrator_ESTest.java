/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 11:03:34 GMT 2019
 */

package org.apache.commons.math.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.ContinuousOutputModel;
import org.apache.commons.math.ode.DummyStepHandler;
import org.apache.commons.math.ode.FirstOrderConverter;
import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math.ode.FixedStepHandler;
import org.apache.commons.math.ode.GraggBulirschStoerIntegrator;
import org.apache.commons.math.ode.IntegratorException;
import org.apache.commons.math.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math.ode.StepHandler;
import org.apache.commons.math.ode.StepNormalizer;
import org.apache.commons.math.ode.SwitchingFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-12, 1.0E-12, 0.0, 1.0E-12);
      graggBulirschStoerIntegrator0.setInitialStepSize(1.0E-12);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 14, 10, 0.02);
      assertEquals(1.0E-12, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 550.364766821079;
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 4, doubleArray0, 3127.505198156, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 11, 4, 1.0E-4);
      assertEquals(371.6813640506052, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1954.0, 1954.0, 550.364766821079, 550.364766821079);
      graggBulirschStoerIntegrator0.setInitialStepSize((-1560.41527));
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-4), 4819, 0.125);
      assertEquals(1954.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      double double0 = graggBulirschStoerIntegrator0.filterStep(4, true);
      assertEquals(550.364766821079, double0, 0.01);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 11, 4, 1.0E-4);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(550.364766821079, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 4, doubleArray0, 3127.505198156, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 11, 4, 1.0E-4);
      assertEquals(371.6813640506052, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      double[] doubleArray0 = new double[4];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(73.220719387309, 1.0E15, doubleArray0, doubleArray0);
      try { 
        graggBulirschStoerIntegrator0.filterStep(8, false);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // minimal step size (550.365) reached, integration needs 8
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 550.364766821079;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-645.83954159231), 550.364766821079, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1655.094300463237, doubleArray0, 2871.1862146, doubleArray0);
      assertEquals(115.36238049460508, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.setInitialStepSize(550.364766821079);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-1437.5596), doubleArray0, 550.364766821079, doubleArray0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-1437.5596), 4, graggBulirschStoerIntegrator0.vecRelativeTolerance, graggBulirschStoerIntegrator0.vecRelativeTolerance);
      assertEquals(336.83006635784204, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(550.364766821079, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.setInitialStepSize((-1835.1751108235));
      assertEquals(550.364766821079, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(2009.72258219, 11.0, doubleArray0, doubleArray0);
      assertEquals(2009.72258219, graggBulirschStoerIntegrator1.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2513.713289), (-2513.713289), (-2513.713289), (-2513.713289));
      assertEquals(2513.713289, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(4, (-2513.713289), (double[]) null, (double[]) null);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-1793), doubleArray0, (-2513.713289), doubleArray0);
      assertEquals((-2513.713289), graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 10.427508642579134, doubleArray0, doubleArray0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 550.364766821079, doubleArray0, (-2140102203), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 76, 6, 269.10309);
      graggBulirschStoerIntegrator0.setInitialStepSize((-1835.1751108235));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(550.364766821079, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0001, 1.0001, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-173), (-173), 3936.2);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray1 = new double[0];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 3936.2, doubleArray1, 1.3333333333333333, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, final state vector has dimension 9
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5.0, 5.0, (double[]) null, (double[]) null);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1695), 11, 0.9);
      graggBulirschStoerIntegrator0.setInitialStepSize(1591.37767139);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(5.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 550.364766821079;
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 3045, 4, (-1044.783235892046));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-3010.581), 0.94, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 213.53470046323696, doubleArray0, 999.9, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1249.49, 1249.49, (-402.6443336), 1249.49);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-943), 59, 0.01);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-2445.42760329419), doubleArray0, 1, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, initial state vector has dimension 3
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 3045, 4, (-1044.783235892046));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(2009.72258219, 11.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 213.53470046323696, doubleArray0, 999.9, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.setStepsizeControl(550.364766821079, (-1154.37), 2719.0, 550.364766821079);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1655.094300463237, doubleArray0, 1655.094300463237, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      graggBulirschStoerIntegrator0.setInitialStepSize(2143324210);
      graggBulirschStoerIntegrator0.setStepsizeControl(1815.3924645968634, (-98.35300540501), 4, 550.364766821079);
      assertEquals(550.364766821079, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 550.364766821079;
      graggBulirschStoerIntegrator0.setStepsizeControl(550.364766821079, (-1154.37), 2719.0, 550.364766821079);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1655.094300463237, doubleArray0, 2871.1862146, doubleArray0);
      assertEquals(115.36238049460508, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.setInitialStepSize(550.364766821079);
      graggBulirschStoerIntegrator0.setStepsizeControl(2877.2377361188155, (-20.412634778206275), 4, (-1154.37));
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-1437.5596), doubleArray0, 550.364766821079, doubleArray0);
      assertEquals(336.83006635784204, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2140102203), 550.364766821079, 182.1354379, 182.1354379);
      graggBulirschStoerIntegrator0.setInitialStepSize((-693.3359397));
      graggBulirschStoerIntegrator0.setStepsizeControl(1691.2831337, 10.427508642579134, 0.001, 2083.4154634);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1954.0, 1954.0, 550.364766821079, 550.364766821079);
      graggBulirschStoerIntegrator0.setInitialStepSize((-1560.41527));
      graggBulirschStoerIntegrator0.setStepsizeControl(550.364766821079, (-587.0195806778138), 616.8326814, (-4));
      assertEquals(1954.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 550.364766821079;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(550.364766821079, 10.427508642579134, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStepsizeControl(1691.2831337, 10.427508642579134, 0.001, 2083.4154634);
      // Undeclared exception!
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, (-1645.425813679), doubleArray0, (-1148.5496136257443), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3306.1886009264736, 550.364766821079, 4, (-786.85652));
      graggBulirschStoerIntegrator0.setStepsizeControl(4, (-937.0384725), 955.656442116, 955.656442116);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 4, doubleArray0, 1.0E-4, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // minimal step size (3,306.189) reached, integration needs 1,022.106
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1091.095546977357), (-1091.095546977357), doubleArray0, doubleArray0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(10, 10).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setStepsizeControl(10, (-1091.095546977357), 180.8208590485525, 1.0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-4028.97642134124), doubleArray0, 10, (double[]) null);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 10, initial state vector has dimension 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(4.0, 0.0, 0.0, 0.0);
      double[] doubleArray0 = new double[0];
      graggBulirschStoerIntegrator0.setStepsizeControl(0.7777777777777778, 1183.68754501425, 0.0, (-959.88192972798));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 4291, 0).when(firstOrderDifferentialEquations0).getDimension();
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1678.07, doubleArray0, (-955.562277355), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, final state vector has dimension 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer((-607.440344521), fixedStepHandler0);
      graggBulirschStoerIntegrator0.setStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setStepsizeControl(550.364766821079, (-1154.37), 2719.0, 6.8812326946963);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 2719.0, doubleArray0, (-118.694227937722), doubleArray0);
      assertEquals((-118.694227937722), graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 10.427508642579134, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStepsizeControl(1691.2831337, 10.427508642579134, 0.001, 2083.4154634);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-1645.425813679), doubleArray0, (-1148.5496136257443), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 4, 4, 4);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 550.364766821079, doubleArray0, 550.364766821079, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 4, (-2140102203), 4);
      graggBulirschStoerIntegrator0.setInitialStepSize(2143324210);
      assertEquals(550.364766821079, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 550.364766821079;
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1655.094300463237, doubleArray0, 2871.1862146, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 612, 612, 6);
      assertEquals(115.36238049460508, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.5, 0.5, 0.5, 0.5);
      double[] doubleArray0 = new double[0];
      graggBulirschStoerIntegrator0.setInterpolationControl(false, (-221));
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 0.0, (-221), (-221));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 0.0, doubleArray0, 1052.0672642, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.setInitialStepSize(550.364766821079);
      assertEquals(550.364766821079, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1.0, doubleArray0, (-366.1944526309962), doubleArray0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.setInitialStepSize(550.364766821079);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-1437.5596), doubleArray0, 550.364766821079, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 3, 1073688134, 124.68019445527453);
      assertEquals(550.364766821079, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 550.364766821079;
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 4, (-2140102203), 4);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(550.364766821079, 10.427508642579134, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, (-1645.425813679), doubleArray0, (-1148.5496136257443), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 4, 949, 949);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(3306.1886009264736, 550.364766821079, 4, (-786.85652));
      try { 
        graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 4, doubleArray0, 1.0E-4, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // minimal step size (3,306.189) reached, integration needs 1,022.106
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 4, 949, 949);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 4, doubleArray0, 1.0E-4, doubleArray0);
      assertEquals(1.0E-4, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1916).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1916, 0.5, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 8, (-715732452), 3577.0959628737);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 7.0, doubleArray0, (-3830.733129791), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 3,832, initial state vector has dimension 5
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(4.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 7, 1, (-1835.1751108235));
      double[] doubleArray0 = new double[0];
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 4291, 0).when(firstOrderDifferentialEquations0).getDimension();
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1678.07, doubleArray0, (-955.562277355), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, final state vector has dimension 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.4, 550.4, 550.4, 550.4);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      graggBulirschStoerIntegrator0.setStepHandler(continuousOutputModel0);
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 4, 668, (-208.4));
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-1154.37), doubleArray0, (-118.694227937722), doubleArray0);
      assertEquals(1.4210854715202004E-14, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 4, (-2140102203), 4);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(550.364766821079, 10.427508642579134, doubleArray0, doubleArray0);
      // Undeclared exception!
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, (-1645.425813679), doubleArray0, (-1148.5496136257443), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-3010.581), doubleArray0, (-9.35292435884448), doubleArray0);
      StepHandler stepHandler0 = graggBulirschStoerIntegrator0.getStepHandler();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      assertEquals((-9.35292435884448), graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1954.0, 1954.0, 550.364766821079, 550.364766821079);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      double double0 = graggBulirschStoerIntegrator0.filterStep(550.364766821079, true);
      assertEquals(1954.0, double0, 0.01);
      
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 616.8326814, 532.9573560769186, (-4));
      assertEquals(1954.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(550.364766821079, (-2585.0), 550.364766821079, (-20.412634778206275));
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(360.4397493679, fixedStepHandler0);
      graggBulirschStoerIntegrator1.setStepHandler(stepNormalizer0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-20.412634778206275), doubleArray0, (-644.598376665), doubleArray0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1249.49, 1249.49, (-402.6443336), 1249.49);
      graggBulirschStoerIntegrator0.setOrderControl(59, 0.01, 18);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1249.49, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.setStepsizeControl((-2866.79516831), 0.0018737681664791894, 345.31, (-39.17726167561544));
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-2866.79516831), doubleArray0, 345.31, doubleArray0);
      assertEquals(460.28133420460523, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.setOrderControl(3263, 1859.53, 4.0);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1.0, doubleArray0, (-3470.9918962703), doubleArray0);
      assertEquals((-169.80329534382645), graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-1437.5596), doubleArray0, 550.364766821079, doubleArray0);
      graggBulirschStoerIntegrator0.setStepsizeControl(Double.NaN, 1132.5454748, 1211.87693272, 550.364766821079);
      assertEquals(550.364766821079, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      graggBulirschStoerIntegrator0.setOrderControl((-682), (-682), 1.0E15);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 550.364766821079, doubleArray0, 550.364766821079, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, final state vector has dimension 4
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(4.0, 0.0, 0.0, 0.0);
      StepHandler stepHandler0 = graggBulirschStoerIntegrator0.getStepHandler();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      double[] doubleArray0 = new double[0];
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 4.0, doubleArray0, 4.0, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-39.17726167561544), doubleArray0, (-700.2), doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(4, (-39.17726167561544), 1.0);
      assertEquals((-110.65797150330559), graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1916, 0.5, doubleArray0, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.filterStep((-92.144), true);
      assertEquals((-0.5), double0, 0.01);
      
      DummyStepHandler dummyStepHandler0 = (DummyStepHandler)graggBulirschStoerIntegrator0.handler;
      graggBulirschStoerIntegrator0.setStepHandler(dummyStepHandler0);
      assertEquals(30.95157508108432, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      double double0 = graggBulirschStoerIntegrator0.filterStep((-5.0), true);
      assertEquals((-550.364766821079), double0, 0.01);
      
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 1073688134, 550.364766821079, 4);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(550.364766821079, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-478.076), doubleArray0, doubleArray0);
      StepHandler stepHandler0 = mock(StepHandler.class, new ViolatedAssumptionAnswer());
      doReturn(true, true).when(stepHandler0).requiresDenseOutput();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      graggBulirschStoerIntegrator0.addSwitchingFunction((SwitchingFunction) null, (-478.076), (-821.0), 4);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 4, doubleArray0, 4, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-1148.5496136257443), doubleArray0, (-290.6784), doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(4, (-838.46862), 0.5667149535193777);
      assertEquals(307.5064468046653, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.364766821079, 550.364766821079, 550.364766821079, 550.364766821079);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 4, doubleArray0, 3127.505198156, doubleArray0);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 1025.76, 2152.9684796803, (-2145188190));
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.setStepHandler(dummyStepHandler0);
      assertEquals(371.6813640506052, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.4, 550.4, 550.4, 550.4);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      graggBulirschStoerIntegrator0.setStepHandler(continuousOutputModel0);
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.setOrderControl(2140358184, 4, 2737.57228511607);
      assertEquals(550.4, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-1154.37), doubleArray0, (-118.694227937722), doubleArray0);
      assertEquals(550.4, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(550.4, 550.4, 550.4, 550.4);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, 4).when(firstOrderDifferentialEquations0).getDimension();
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      graggBulirschStoerIntegrator0.setStepHandler(continuousOutputModel0);
      double[] doubleArray0 = new double[4];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-1005.1), doubleArray0, 550.4, doubleArray0);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.setStepHandler(dummyStepHandler0);
      assertEquals(454.70000000000005, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      double double0 = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(4.0, 0.0, 0.0, 0.0);
      StepHandler stepHandler0 = graggBulirschStoerIntegrator0.getStepHandler();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      double[] doubleArray0 = new double[0];
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, (-1383.37362171), doubleArray0, (-2743.62134), doubleArray0);
  }
}
