/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 23:09:22 GMT 2019
 */

package org.joda.time;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Hours;
import org.joda.time.Interval;
import org.joda.time.MutableInterval;
import org.joda.time.ReadableInstant;
import org.joda.time.ReadablePeriod;
import org.joda.time.Seconds;
import org.joda.time.chrono.IslamicChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class MutableInterval_ESTest extends MutableInterval_ESTest_scaffolding {

  @Test(timeout = 4000)
  @Ignore
  public void test0()  throws Throwable  {
      MutableInterval mutableInterval0 = new MutableInterval((Object) null);
      assertEquals(1566083359742L, mutableInterval0.getEndMillis());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test1()  throws Throwable  {
      MutableInterval mutableInterval0 = new MutableInterval((ReadablePeriod) null, (ReadableInstant) null);
      assertEquals(1566083359726L, mutableInterval0.getStartMillis());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test2()  throws Throwable  {
      Hours hours0 = Hours.TWO;
      Seconds seconds0 = hours0.toStandardSeconds();
      MutableInterval mutableInterval0 = new MutableInterval((ReadableInstant) null, seconds0);
      assertEquals(1566090559706L, mutableInterval0.getEndMillis());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test3()  throws Throwable  {
      Seconds seconds0 = Seconds.TWO;
      MutableInterval mutableInterval0 = new MutableInterval(seconds0, (ReadableInstant) null);
      assertEquals(1566083359677L, mutableInterval0.getEndMillis());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test4()  throws Throwable  {
      Interval interval0 = new Interval((Object) null);
      assertEquals(1566083359577L, interval0.getEndMillis());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test5()  throws Throwable  {
      MutableInterval mutableInterval0 = new MutableInterval((ReadableInstant) null, (ReadableInstant) null);
      MutableInterval mutableInterval1 = new MutableInterval(mutableInterval0);
      assertEquals(1566083359536L, mutableInterval1.getStartMillis());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IslamicChronology islamicChronology0 = IslamicChronology.getInstance();
      MutableInterval mutableInterval0 = new MutableInterval((-2008L), 918518400000L, islamicChronology0);
      MutableInterval mutableInterval1 = new MutableInterval(mutableInterval0, islamicChronology0);
      assertEquals(918518400000L, mutableInterval0.getEndMillis());
      assertEquals((-2008L), mutableInterval0.getStartMillis());
  }
}
