/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 20:54:03 GMT 2019
 */

package org.apache.commons.lang3.time;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.TimeZone;
import org.apache.commons.lang3.time.DurationFormatUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class DurationFormatUtils_ESTest extends DurationFormatUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  @Ignore
  public void test00()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDurationWords(86400000L, true, true);
      assertEquals("1 day", string0);
      
      String string1 = DurationFormatUtils.formatPeriod(86400000L, 0L, "1 day");
      assertEquals("1 30a0", string1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test01()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDuration(1068L, "@WO1Gx'LfK7akHHI");
      assertEquals("@WO1GxLfK7akHHI", string0);
      
      TimeZone timeZone0 = TimeZone.getTimeZone(" 1 days");
      String string1 = DurationFormatUtils.formatPeriod((-1120L), 0L, "gqX5", true, timeZone0);
      assertEquals("gqX5", string1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DurationFormatUtils.formatDurationWords((-252L), false, false);
      // Undeclared exception!
      DurationFormatUtils.formatPeriod(0L, (-252L), "");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DurationFormatUtils.formatDuration(1105L, "@WO1Gx'LfK7akHHI");
      TimeZone timeZone0 = TimeZone.getTimeZone(" 1 days");
      // Undeclared exception!
      DurationFormatUtils.formatPeriod(1105L, (-539L), "@WO1Gx'LfK7akHHI", true, timeZone0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test04()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDuration(0L, "Minimum abbreviation width with offset is 7");
      assertEquals("0ini00u abbreviation wi0th with off00et i 7", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test05()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDuration(1105L, "@WO1Gx'LfK7akHHI");
      assertEquals("@WO1GxLfK7akHHI", string0);
      
      TimeZone timeZone0 = TimeZone.getTimeZone(" 1 days");
      String string1 = DurationFormatUtils.formatPeriod(1105L, 1081L, " 1 days", true, timeZone0);
      assertEquals(" 1 30a086399", string1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test06()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDurationWords(0L, false, true);
      assertEquals("0 days", string0);
      
      String string1 = DurationFormatUtils.formatDuration(3600000L, "");
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test07()  throws Throwable  {
      DurationFormatUtils.formatDuration(3600000L, "");
      String string0 = DurationFormatUtils.formatDurationWords(3600000L, false, true);
      assertEquals("0 days 1 hour", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test08()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDurationWords(60000L, true, true);
      assertEquals("1 minute", string0);
      
      String string1 = DurationFormatUtils.formatDurationHMS(20L);
      assertEquals("0:00:00.020", string1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test09()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDurationWords(60000L, true, true);
      assertEquals("1 minute", string0);
      
      String string1 = DurationFormatUtils.formatPeriod(521L, 521L, "Cannot pad a negative amount: ");
      assertEquals("Cannot pa0 a negative a0ount: ", string1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test10()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDurationHMS(20L);
      assertEquals("0:00:00.020", string0);
      
      String string1 = DurationFormatUtils.formatPeriodISO(20L, 0L);
      assertEquals("P-1Y11M30DT23H59M59.980S", string1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test11()  throws Throwable  {
      DurationFormatUtils.formatDuration(0L, "|O", false);
      String string0 = DurationFormatUtils.formatDurationWords((-5302L), true, true);
      assertEquals("-5 seconds", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test12()  throws Throwable  {
      DurationFormatUtils.formatDuration(0L, "");
      String string0 = DurationFormatUtils.formatDurationWords(0L, true, false);
      assertEquals("0 seconds", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test13()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDurationISO(86400000L);
      assertEquals("P0Y0M1DT0H0M0.000S", string0);
      
      String string1 = DurationFormatUtils.formatPeriod(86400000L, 86400000L, "P0Y0M1DT0H0M0.000S");
      assertEquals("P0Y001DT00000.0000", string1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(";- 7#R|D[yH");
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1, (-3620));
      boolean boolean0 = durationFormatUtils_Token2.equals(durationFormatUtils_Token1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "P0Y0-10DT07430-10.0003598558");
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuffer0);
      boolean boolean0 = durationFormatUtils_Token0.equals("P0Y0-10DT07430-10.0003598558");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test16()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDurationWords(60000L, true, true);
      assertEquals("1 minute", string0);
      
      String string1 = DurationFormatUtils.formatPeriodISO(20L, 0L);
      assertEquals("P-1Y11M30DT23H59M59.980S", string1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test17()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDuration(0L, "P0Y0M0DT0H0M0.000S");
      assertEquals("P0Y000DT00000.0000", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test18()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      String string0 = DurationFormatUtils.formatPeriod((-2642L), (-4084L), "P0Y0M0DT0H0M0.000S", false, timeZone0);
      assertEquals("P0Y0-10DT07430-10.0003598558", string0);
      
      String string1 = DurationFormatUtils.formatDuration((-1861L), "P0Y0-10DT07430-10.0003598558");
      assertEquals("P0Y0-10DT07430-10.0003598558", string1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M");
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("-2113");
      boolean boolean0 = durationFormatUtils_Token1.equals(durationFormatUtils_Token0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("M");
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      boolean boolean0 = durationFormatUtils_TokenArray0[0].equals(durationFormatUtils_Token0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test21()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDuration(0L, "|O", false);
      assertEquals("|O", string0);
      
      String string1 = DurationFormatUtils.formatPeriodISO(0L, (-5302L));
      assertEquals("P-1Y11M30DT23H59M54.698S", string1);
  }
}
