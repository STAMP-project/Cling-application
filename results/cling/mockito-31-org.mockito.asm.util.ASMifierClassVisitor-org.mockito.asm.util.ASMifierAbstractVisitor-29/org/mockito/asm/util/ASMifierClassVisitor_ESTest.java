/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 08:49:34 GMT 2019
 */

package org.mockito.asm.util;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mockito.asm.FieldVisitor;
import org.mockito.asm.MethodVisitor;
import org.mockito.asm.util.ASMifierClassVisitor;
import org.mockito.asm.util.ASMifierMethodVisitor;
import org.mockito.asm.util.AbstractVisitor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ASMifierClassVisitor_ESTest extends ASMifierClassVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visitInnerClass("d", "mv = cw.visitMethod(", "d", 128);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(8192, 8192, "CezO$lbPK%5rVs", "CezO$lbPK%5rVs", "Q", aSMifierClassVisitor0.TYPES);
      aSMifierClassVisitor0.visit(8192, (-1808), "PI%r%&", ")anh", "qbzp';.55UOg?m", aSMifierClassVisitor0.OPCODES);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(8192, 2034, "Signature", "Signature", "yo.class", (String[]) null);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(8192, "Signature", "}.5f{b,26Nsf", (String) null, (String[]) null);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(74, 8192, "!p/0a?#xHt)C", "BBA=", "pcj=A[iY[V$`YoF7", (String[]) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      String[] stringArray0 = new String[0];
      aSMifierClassVisitor0.visit((-1), 8192, "!17ws!C\"E3i;A/bwJD", "u^bB{Gp`", "ly", stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(196653, 196653, ",26Nsf", "ou5`H|%-Q6x7X", "]zwAinyuNfA]<`e.class", aSMifierClassVisitor0.OPCODES);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.appendAccess(16359);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(32, "new Double(\"", "u-/,p\"8~ZX", ">bcr..class", aSMifierClassVisitor0.TYPES);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[0];
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(50, 1572, "bT=h](Nd~q1?>aU#,%", "]zwAinyuNfA]<`e.class", (String) null, stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      ASMifierMethodVisitor aSMifierMethodVisitor0 = aSMifierClassVisitor0.createASMifierMethodVisitor();
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(2428, "ACC_TRANSIENT", "ACC_TRANSIENT", "0bty\"V2pL", aSMifierMethodVisitor0.OPCODES);
      aSMifierClassVisitor0.visit(1143, 8192, "Opcodes.UNINITIALIZED_THIS", "mv.visitFrame(Opcodes.F_CHOP,", "CezO$lbPK%5rVs", aSMifierMethodVisitor0.OPCODES);
      assertFalse(aSMifierMethodVisitor0.equals((Object)methodVisitor0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.appendAccess(16359);
      ASMifierClassVisitor.main(aSMifierClassVisitor0.TYPES);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      ASMifierMethodVisitor aSMifierMethodVisitor0 = aSMifierClassVisitor0.createASMifierMethodVisitor();
      aSMifierClassVisitor0.visit(1143, 8192, "Opcodes.UNINITIALIZED_THIS", "t~|>]XiHg4qC\"2F", "CezO$lbPK%5rVs", aSMifierMethodVisitor0.OPCODES);
      ASMifierClassVisitor.main(aSMifierMethodVisitor0.OPCODES);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      String[] stringArray0 = new String[1];
      Object object0 = new Object();
      aSMifierClassVisitor0.visitField(46, "", "", "av0 = mv.visitAnnotationDefault();\n", object0);
      try { 
        ASMifierClassVisitor.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      ASMifierMethodVisitor aSMifierMethodVisitor0 = aSMifierClassVisitor0.createASMifierMethodVisitor();
      aSMifierClassVisitor0.visit(2119, 2119, "u-/,p\"8~ZX", "", "u-/,p\"8~ZX", aSMifierMethodVisitor0.TYPES);
      aSMifierClassVisitor0.appendAccess(16359);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(262144, "6#fA", "5J#'f8c`,%\rqDE", "5J#'f8c`,%\rqDE", stringArray0);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(48, 200, "mv.visitLabel(", "}.5f{b,26Nsf.class", "ACC_BRIDGE", aSMifierClassVisitor0.OPCODES);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(46, 2091, "|S*F0", "kAZlj'2%iAtzxZ\"", (String) null, aSMifierClassVisitor0.TYPES);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod((-687), "Nkh&++", "Nkh&++", "Nkh&++", (String[]) null);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(47, 47, "cw.visitOuterClass(", "]zwAinyuNfA]<`e", "]zwAinyuNfA]<`e", (String[]) null);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(8192, 8192, "CezO$lbPK%5rVs", "Q#dz.V{Nsh", "]zwAinyuNfA]<`e", aSMifierClassVisitor0.TYPES);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod((-1), "e", "6#A", "CezO$lbPK%5rVs", aSMifierClassVisitor0.TYPES);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(8179, 8179, "CezO$lbPK%5rVs", "CezO$lbPK%5rVs", "Q", aSMifierClassVisitor0.OPCODES);
      Object object0 = new Object();
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(16411, "CezO$lbPK%5rVs", "CezO$lbPK%5rVs", "uPXXZ<cOg@Ls,LZjw]", object0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(16384, 286, "d9BvAtI(.d[Bg", "Code", "new double[] {", aSMifierClassVisitor0.OPCODES);
      aSMifierClassVisitor0.visitInnerClass("s$qm", "s$qm", "0bty\"V2pL", 16384);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(49, 49, "Nkh&++", "m", "TU\bs|Y!10kH4", aSMifierClassVisitor0.TYPES);
      aSMifierClassVisitor0.visit((-834), (-834), "Nkh&++", "]zwAinyuNfA]<`e", "m", aSMifierClassVisitor0.OPCODES);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(690, 16384, "d9BvAtI(.d[Bg", "Code", (String) null, aSMifierClassVisitor0.TYPES);
      aSMifierClassVisitor0.visitInnerClass("s$qm", "Code", ",26Nsf", 419);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      Object object0 = new Object();
      aSMifierClassVisitor0.visitField(16384, "Opcodes.NULL", "n", "Opcodes.NULL", object0);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod((-2134), "TOjS>h3+0T/", "TOjS>h3+0T/", "TOjS>h3+0T/", aSMifierClassVisitor0.OPCODES);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      Object object0 = new Object();
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      ASMifierClassVisitor.main(aSMifierClassVisitor0.TYPES);
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(16384, "7xhachc%tci8hTHoU", "7xhachc%tci8hTHoU", "y^uNkh&++", object0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      ASMifierMethodVisitor aSMifierMethodVisitor0 = aSMifierClassVisitor0.createASMifierMethodVisitor();
      aSMifierClassVisitor0.visit(16359, (-444), "u-/,p\"8~ZX", "u-/,p\"8~ZX", "new Double(\"", aSMifierMethodVisitor0.TYPES);
      ASMifierClassVisitor.main(aSMifierClassVisitor0.TYPES);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(46, (-2108), "yo.class", "Nkh&++", "yo.class", aSMifierClassVisitor0.OPCODES);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      Object object0 = new Object();
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(16384, "7xhachc%tci8hTHoU", "7xhachc%tci8hTHoU", "y^uNkh&++", object0);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(16384, "Prints the ASM code to generate the given class.", "y^uNkh&++", "y=X&|7mR\u0003sP7X]", ((AbstractVisitor) fieldVisitor0).OPCODES);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(16384, 16384, "4>YoD$_fAQV", ");\n\n", ");\n\n", (String[]) null);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(197, "9*y\"w^a]jxfB", ");\n\n", ".class", (String[]) null);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String[] stringArray0 = new String[0];
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      Object object0 = new Object();
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(4096, 4096, "a]|{*GYT", "7xhachc%tci8hTHoU", "zX6PGT:ySw+", stringArray0);
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(16384, "7xhachc%tci8hTHoU", "7xhachc%tci8hTHoU", "y^uNkh&++", object0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "y^uNkh&++";
      try { 
        ASMifierClassVisitor.main(stringArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Class not found
         //
         verifyException("org.mockito.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[0];
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(50, (-1299), "mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null", "mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null", "gKzgBr08NcjVD'H", stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "]zwAinyuNfA]<`e.class";
      try { 
        ASMifierClassVisitor.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // ]zwAinyuNfA]<`e.class (No such file or directory)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod((-905), "Deprecated", "&9m#[`% l&A.", "&9m#[`% l&A.", stringArray0);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(48, (-2278), ".class", "ACC_BRIDGE", "}.5f{b,26Nsf.class", aSMifierClassVisitor0.OPCODES);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(47, (-82), "v =c.xvisitMethod(", "v =c.xvisitMethod(", " = av", (String[]) null);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(16384, 336, "Code", "d9BvAtI(.d[Bg", "y\"V2pL", aSMifierClassVisitor0.TYPES);
      aSMifierClassVisitor0.visitInnerClass("ACC_INTERFACE", "Deprecated", "L{", 32767);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[0];
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(521, 131070, "ACC_ANNOTATION", "zX6PGT:ySw+", "ACC_ANNOTATION", stringArray0);
      aSMifierClassVisitor0.visitInnerClass("Boolean.TRUE", ",26Nsf", "s$qm", 131070);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      ASMifierClassVisitor.main(aSMifierClassVisitor0.OPCODES);
      aSMifierClassVisitor0.visitInnerClass("s$qm", "s$qm", "0bty\"V2pL", 16384);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(131070, "ACC_ANNOTATION", "zX6PGT:ySw+", ",26Nsf", (String[]) null);
      aSMifierClassVisitor0.visitMethod(131070, ",26Nsf", "s(=y/^vFt;q<&, Dg", "ACC_ANNOTATION", ((AbstractVisitor) methodVisitor0).OPCODES);
      aSMifierClassVisitor0.visitInnerClass("new double[] {", (String) null, "ACC_ANNOTATION", 131070);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String[] stringArray0 = new String[0];
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(609, (-1465), "CezO$lbPK%5rVs", ",26Nsf", "zX6PGT:ySw+", stringArray0);
      aSMifierClassVisitor0.visitInnerClass("Q", ",26Nsf", "return cw.toByteArray();\n", 131070);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(196653, (-696), "Signature", "Signature", "yo.class", aSMifierClassVisitor0.OPCODES);
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(32767, "}.5f{b,26Nsf", "}.5f{b,26Nsf", "}.5f{b,26Nsf.class", "yo.class");
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      Object object0 = new Object();
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(16411, "}.5f{b2Nsf", "yo.class", "}.5f{b,26Nsf", object0);
      aSMifierClassVisitor0.visit(180, 180, "Ljava/lang/Synthetic;", "U ", "U ", ((AbstractVisitor) fieldVisitor0).TYPES);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String[] stringArray0 = new String[0];
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(1291, "zX6PGT:ySw+", "ACC_ANNOTATION", "a]|{*GYT", "zX6PGT:ySw+");
      aSMifierClassVisitor0.visit(4096, 4096, "a]|{*GYT", "7xhachc%tci8hTHoU", "zX6PGT:ySw+", stringArray0);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(16384, "Prints the ASM code to generate the given class.", "y^uNkh&++", "y=X&|7mR\u0003sP7X]", ((AbstractVisitor) fieldVisitor0).OPCODES);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visitMethod(16384, (String) null, ">bcr.", ">bcr.", aSMifierClassVisitor0.OPCODES);
      aSMifierClassVisitor0.visit(16384, (-2464), "v =c.xvisitMethod(", "v =c.xvisitMethod(", "JZlfDP5W/S$'';", (String[]) null);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      String[] stringArray0 = new String[7];
      aSMifierClassVisitor0.visit(185, 4072, "P", "P", (String) null, stringArray0);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(16384, stringArray0[1], "FieldVisitor fv;\n", stringArray0[2], stringArray0);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(1291, "zX6PGT:ySw+", "ACC_ANNOTATION", "a]|{*GYT", "zX6PGT:ySw+");
      ASMifierClassVisitor.main(aSMifierClassVisitor0.TYPES);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(16384, "Prints the ASM code to generate the given class.", "y^uNkh&++", "y=X&|7mR\u0003sP7X]", ((AbstractVisitor) fieldVisitor0).OPCODES);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(49, 49, "Nkh&++", "m", "U\bs|Y!10kH4", aSMifierClassVisitor0.TYPES);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(131070, ".*@CMJjKyX&kY=G8>", "U\bs|Y!10kH4", "m", aSMifierClassVisitor0.TYPES);
      assertNotNull(methodVisitor0);
  }
}
