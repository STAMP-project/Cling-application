/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 14:56:02 GMT 2019
 */

package org.apache.commons.math.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.DummyStepHandler;
import org.apache.commons.math.ode.FirstOrderConverter;
import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math.ode.GraggBulirschStoerIntegrator;
import org.apache.commons.math.ode.IntegratorException;
import org.apache.commons.math.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math.ode.StepHandler;
import org.apache.commons.math.ode.SwitchingFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 1503.97435759382, (-1624.05719890664), 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn((-1303), (-1303)).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[5];
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-1137), 12, 4.0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 0.0, doubleArray0, (-1489.08), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension -1,303, initial state vector has dimension 5
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 0, 0, 0.6510416666666666);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, (-1073794972), 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[4];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 96.32455395918828, doubleArray0, 6, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, final state vector has dimension 4
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      StepHandler stepHandler0 = mock(StepHandler.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(stepHandler0).requiresDenseOutput();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 0, 0, 0.6510416666666666);
      int int0 = 4;
      graggBulirschStoerIntegrator0.setOrderControl(4, 1797.3061, 1797.3061);
      StepHandler stepHandler1 = mock(StepHandler.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(stepHandler1).requiresDenseOutput();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler1);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[0];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 0.0, doubleArray0, 10.0, doubleArray0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations1 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      double double1 = 3300.01787839;
      double double2 = 2077.9151;
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations1, double1, doubleArray0, double2, doubleArray0);
      double double3 = 1021.3835429347392;
      double double4 = (-1089.324724826744);
      graggBulirschStoerIntegrator0.setOrderControl(int0, double3, double4);
      double double5 = 22.6385;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(double3, double5, doubleArray0, doubleArray0);
      int int1 = 326;
      double double6 = (-1176.6965454636938);
      graggBulirschStoerIntegrator1.setOrderControl(int1, double6, double0);
      boolean boolean0 = false;
      graggBulirschStoerIntegrator1.setInterpolationControl(boolean0, int1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3428.1975180489158, 1.0E-10, 1.0E-10, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2, 2141421229, 2141421229);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(2141421229, 1927, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.filterStep((-3820.832454500572), true);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1562), (-3956), 0.125);
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, (-1593.466548825288), doubleArray0, 2, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3265.22534878, 2144645871, doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 2144645871, doubleArray0, 2144645871, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1616.5844177, 1616.5844177, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInitialStepSize(4.0E-15);
      assertEquals(1616.5844177, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3428.1975180489158, 1.0E-10, 1.0E-10, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-2269), 1.0E15, doubleArray0, doubleArray0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 96.32455387718682, doubleArray0, 96.3245538765868, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // minimal step size (3,428.198) reached, integration needs 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(492, 492).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.001, (-2312.388678463637), doubleArray0, doubleArray0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1.0E-14, doubleArray0, (-3420.2418), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 492, initial state vector has dimension 3
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.6510416666666666, 671.4703612278, doubleArray0, doubleArray0);
      double[] doubleArray1 = new double[7];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-3940.155156875144), doubleArray0, 0.021029070166016097, doubleArray1);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, final state vector has dimension 7
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3428.1975180489158, 1.0E-10, 1.0E-10, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1488.4744082248);
      doubleArray0[1] = 0.0;
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.setStepHandler(dummyStepHandler0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1.0E-10, 1.0E-10, 1.0E-10, (-1.0));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator(2141421229, (-1299.56922), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator2.setStabilityCheck(false, (-2688), 2141421229, 2141421229);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator3 = new GraggBulirschStoerIntegrator(3.0, (-298.29), 4110.0, 0.9);
      graggBulirschStoerIntegrator3.integrate(firstOrderDifferentialEquations0, (-1488.4744082248), doubleArray0, (-3588.0118323756), doubleArray0);
      double double0 = (-1878.8939823958822);
      double double1 = 4044.676242699471;
      double double2 = 2.141421229E9;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new GraggBulirschStoerIntegrator(double0, doubleArray0[1], double1, double2);
      StepHandler stepHandler0 = graggBulirschStoerIntegrator1.handler;
      graggBulirschStoerIntegrator1.setStepHandler(stepHandler0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3428.1975180489158, 1.0E-10, 1.0E-10, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2, 2141421229, 2141421229);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 1.0E-4, (-26.041666666666668), 1927);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1.0E-10, doubleArray0, 1.0E-12, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // minimal step size (3,428.198) reached, integration needs 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1616.5844177, 959.0597, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInitialStepSize(1616.5844177);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 3, 1, 6);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1245.150981473346, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1616.5844177, 1616.5844177, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInitialStepSize(1616.5844177);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 3, 1, 6);
      assertEquals(1616.5844177, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1616.5844177, 1616.5844177, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStepsizeControl(1013.435549143, 11, 0.2, 1616.5844177);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1616.5844177, 959.0597, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.setInitialStepSize(1616.5844177);
      assertEquals(1245.150981473346, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3428.1975180489158, 1.0E-10, 1.0E-10, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1488.4744082248);
      graggBulirschStoerIntegrator0.setStepsizeControl(3428.1975180489158, 0.0, 536.4377295912, (-1488.4744082248));
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-1488.4744082248), doubleArray0, 1090.2857037966398, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // minimal step size (3,428.198) reached, integration needs 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1616.5844177, 1616.5844177, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStepsizeControl(1013.435549143, 11, 0.2, 1616.5844177);
      graggBulirschStoerIntegrator0.setInitialStepSize(1616.5844177);
      assertEquals(1616.5844177, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5.746280211439194, (-500.3), (-9.194632392478356), 5.746280211439194);
      graggBulirschStoerIntegrator0.setStepsizeControl(0.5, 0.0, 0.5, 0.0);
      graggBulirschStoerIntegrator0.setInitialStepSize(0.0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1616.5844177, 1616.5844177, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStepsizeControl(1013.435549143, 11, 0.2, 1616.5844177);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator0.sanityChecks(firstOrderConverter0, 3178.610883777, doubleArray0, 0.2, doubleArray0);
      assertEquals(1616.5844177, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 1503.97435759382, (-1624.05719890664), 0.0);
      double double0 = graggBulirschStoerIntegrator0.filterStep((-1624.05719890664), true);
      assertEquals((-1503.97435759382), double0, 0.01);
      
      graggBulirschStoerIntegrator0.setStepsizeControl(622.789986519356, (-258.3047420346), 0.0, 0.1521609496625161);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3428.1975180489158, 3428.1975180489158, 1.0E-10, 3428.1975180489158);
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.setStepsizeControl(1927, 1.0E-15, 4.0, 622.789986519356);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, (-1399.19), doubleArray0, (-1488.4744082248), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, initial state vector has dimension 2
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3428.1975180489158, 3428.1975180489158, 1.0E-10, 3428.1975180489158);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 96.32455395918828, doubleArray0, 332.87254, doubleArray0);
      graggBulirschStoerIntegrator0.setStepsizeControl(1927, 1.0E-15, 4.0, 622.789986519356);
      assertEquals(332.87254, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3428.1975180489158, 1.0E-10, 1.0E-10, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 3, 2141421229, 3);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 3100, doubleArray0, 3100, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3428.1975180489158, 1.0E-10, 1.0E-10, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1488.4744082248);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 3, 2141421229, 3);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 96.32455395918828, doubleArray0, 0.0, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // minimal step size (3,428.198) reached, integration needs 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[8];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(138.8, 138.8, doubleArray0, doubleArray1);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, (-1664.85494034475), doubleArray0, 138.8, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: state vector has dimension 0, relative tolerance vector has dimension 8
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-0.2014737481327276), (-0.2014737481327276), 63.9330659595, 3284.0);
      graggBulirschStoerIntegrator0.getName();
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 2462);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2462, 2462, (-1623.33131530797));
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, (-0.2014737481327276), 1, 1);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[0];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1, doubleArray0, (-1682.56), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5.746280211439194, (-500.3), (-9.194632392478356), 5.746280211439194);
      graggBulirschStoerIntegrator0.setInitialStepSize(0.0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2, 2, 622.789986519356);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-879.09), (-1624.05719890664), 1.0E-10, 2);
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2141421229, 2, 2141421229);
      assertEquals((-1624.05719890664), graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(1194.8608467042673, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-646.401961848), doubleArray0, (-1624.05719890664), doubleArray0);
      assertArrayEquals(new double[] {0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double double0 = 0.0;
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-10, 1.0E-10, 1.0E-10, (-1.0));
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 3, 2141421229, 3);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 96.32455395918828, doubleArray0, 0.0, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-393.39705142482), (-32.259766131756194), (-32.259766131756194), (-32.259766131756194));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1414, 1414).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 1414, 1414, 0.001);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 3605.849, doubleArray0, 7.141333728038428, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 1,414, initial state vector has dimension 3
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4, (-1073794972), 0).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 6, 1, 6);
      double[] doubleArray0 = new double[4];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 96.32455395918828, doubleArray0, 6, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, final state vector has dimension 4
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3428.1975180489158, 50.666666666666664, 50.666666666666664, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2, 2141421229, 2);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn((-646.401961848), 1.0E15, Double.NaN, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 1.0E-4, (-26.041666666666668), 1927);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 50.666666666666664, doubleArray0, 1.0E-12, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Endpoints do not specify an interval: [50.666666666666664,24.624900000127997]
         //
         verifyException("org.apache.commons.math.analysis.UnivariateRealSolverImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5277.01979651771, 391.82049721, 0.021029070166016097, 0.9999);
      graggBulirschStoerIntegrator0.setStepsizeControl(0.9999, 0.9999, 5277.01979651771, 391.82049721);
      assertEquals(1437.9306382640932, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3428.1975180489158, 3428.1975180489158, 3428.1975180489158, 0.0);
      graggBulirschStoerIntegrator0.setOrderControl(1620, 0.0, 0.1521609496625161);
      assertEquals(3428.1975180489158, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.8, 0.8, 0.8, 0.0);
      StepHandler stepHandler0 = mock(StepHandler.class, new ViolatedAssumptionAnswer());
      doReturn(true, true).when(stepHandler0).requiresDenseOutput();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      double double0 = graggBulirschStoerIntegrator0.filterStep(0.8, true);
      assertEquals(0.8, double0, 0.01);
      
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, (-1763.0), 0.0, 840);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2, 3174.492913584633, (-0.0013990241651590145), 0.6510416666666666);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 0.6510416666666666, doubleArray0, 2, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl((-1979), 0.6510416666666666, 0.6510416666666666);
      assertEquals(1.3489583333333335, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3428.1975180489158, 1.0E-10, 1.0E-10, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(332.87254, 332.87254, 1.0E-10, 1.0E-10);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 332.87254, 8.0, 2141421229);
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 96.32455395918828, doubleArray0, 332.87254, doubleArray0);
      assertEquals(236.54798604081174, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.setStepHandler(dummyStepHandler0);
      assertEquals(3428.1975180489158, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3810.5061, 3810.5061, 0.02, 354.2287777060081);
      graggBulirschStoerIntegrator0.setOrderControl(2144645871, 30.10021401404152, 12.0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 2144645871, doubleArray0, 2144645871, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3428.1975180489158, 1.0E-10, 1.0E-10, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.setStepHandler(dummyStepHandler0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 3100, doubleArray0, 3100, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3428.1975180489158, 1.0E-10, 1.0E-10, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 0.0, 8.0, 1927);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 3100, doubleArray0, 3100, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3810.5061, 3810.5061, 0.02, 354.2287777060081);
      graggBulirschStoerIntegrator0.setOrderControl(2144645871, 30.10021401404152, 12.0);
      double double0 = graggBulirschStoerIntegrator0.filterStep((-1.0), true);
      assertEquals(3810.5061, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals((-3810.5061), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3428.1975180489158, 1.0E-10, 1.0E-10, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1.0E-10, 1.0E-10, 1.0E-10, (-1.0));
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 0.0, 8.0, 1927);
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 96.32455395918828, doubleArray0, 0.0, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1616.5844177, 1616.5844177, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(11, 11, 6);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(6, 1616.5844177, 2.1170345824450285, 1616.5844177);
      graggBulirschStoerIntegrator1.addSwitchingFunction((SwitchingFunction) null, 3281.260260705, (-2935.6), 280);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator1.integrate(firstOrderConverter0, (-1.0), doubleArray0, 3281.260260705, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.SwitchState", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3428.1975180489158, 1.0E-10, 1.0E-10, 0.0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2, 2).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[2];
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.setStepHandler(dummyStepHandler0);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 332.87254, 332.87254, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 0.0, 8.0, 1927);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 96.32455395918828, doubleArray0, 0.0, doubleArray0);
  }
}
