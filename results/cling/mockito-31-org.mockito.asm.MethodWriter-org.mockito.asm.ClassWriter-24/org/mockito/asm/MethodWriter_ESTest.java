/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 09:28:44 GMT 2019
 */

package org.mockito.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mockito.asm.ByteVector;
import org.mockito.asm.ClassWriter;
import org.mockito.asm.Item;
import org.mockito.asm.Label;
import org.mockito.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[8];
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(76, 76, 76, 256, 2).when(classWriter0).newClass(anyString());
      doReturn(120, 2015).when(classWriter0).newUTF8(anyString());
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "_YeXc:[I>2Yvd", "7=B):cOHr/", "GW", stringArray0, false, true);
      methodWriter0.visitVarInsn(120, (-4044));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1374));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 33, "UwDlv3V&pvWRX\".7+$", "|5mW)Ag$T^_mb=", "GTv&CS&Z1RhW}jn4+M<", (String[]) null, true, false);
      int[] intArray0 = new int[2];
      intArray0[1] = 2;
      MethodWriter.getNewOffset(intArray0, intArray0, 0, 49);
      methodWriter0.visitFieldInsn(51, "GTv&CS&Z1RhW}jn4+M<", "GTv&CS&Z1RhW}jn4+M<", "YY0uf&h5$;Y$?xQ");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2749);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q6D*q9Q;LL", stringArray0, true, true);
      methodWriter0.visitVarInsn(177, 60);
      int[] intArray0 = new int[4];
      intArray0[0] = 1314;
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {1314, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1378));
      Label label0 = new Label();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1173), "UwDlv3V&pvWRX\".7+$", "|5mW)Ag$T^_mb=", "GTv&CS&Z1RhW}jn4+M<", (String[]) null, true, false);
      methodWriter0.visitLabel(label0);
      methodWriter0.visitFieldInsn(1070, "|5mW)Ag$T^_mb=", "Signature", "SourceFile");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1378));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "<]MBD4Km$/`'zZ;:M", "<]MBD4Km$/`'zZ;:M", "<]MBD4Km$/`'zZ;:M", (String[]) null, false, false);
      Label label0 = new Label();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-1173), "UwDlv3V&pvWRX\".7+$", "|5mW)Ag$T^_mb=", "GTv&CS&Z1RhW}jn4+M<", (String[]) null, true, false);
      methodWriter1.visitFieldInsn(1070, "|5mW)Ag$T^_mb=", "Signature", "SourceFile");
      methodWriter0.visitLabel(label0);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "S3urceDebugExtension";
      stringArray0[1] = "WwRrZ0#W)l(+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Ljava/lang/Synthetic;", "WwRrZ0#W)l(+", "S3urceDebugExtension", stringArray0, false, true);
      methodWriter0.visitVarInsn(2, 67);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(252, 252);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "S3urceDebugExtension";
      stringArray0[1] = "WwRrZ0#W)l(+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Ljava/lang/Synthetic;", "WwRrZ0#W)l(+", "S3urceDebugExtension", stringArray0, false, true);
      methodWriter0.visitVarInsn(2, 67);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("j^", "S3urceDebugExtension", "S3urceDebugExtension", label0, label0, (-377));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "SourceDebugExte$sion";
      stringArray0[1] = "WwRrZ0#W)l(+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 9, "Ljava/lang/Synthetic;", "WwRrZ0#W)l(+", "SourceDebugExte$sion", stringArray0, true, true);
      methodWriter0.visitVarInsn(2, 67);
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "%/JnR9d{&BCyqzY");
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(67, 67);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "SourceDebugExtension";
      stringArray0[1] = "WwRrZ0#W)l(+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 9, "AnnotationDefault", "WwRrZ0#W)l(+", "SourceDebugExtension", stringArray0, false, true);
      methodWriter0.visitVarInsn(2, (-1));
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(185, 503);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "SourceDebugExtension";
      stringArray0[1] = "WwRrZ0#W)l(+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 9, "AnnotationDefault", "WwRrZ0#W)l(+", "SourceDebugExtension", stringArray0, false, true);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("WwRrZ0#W)l(+", "xq2+LTo8I\".NUC", "WwRrZ0#W)l(+", label0, label0, (-1840700267));
      methodWriter0.visitVarInsn(2, (-1));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-14));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "SourceDebugExtension";
      stringArray0[1] = "WwRrZ0#W)l(+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 9, "Ljava/lang/Synthetic;", "WwRrZ0#W)l(+", "SourceDebugExtension", stringArray0, true, true);
      methodWriter0.visitMultiANewArrayInsn("%/JnR9d{&BCyqzY", (-14));
      methodWriter0.visitVarInsn(2, 67);
      methodWriter0.visitMethodInsn((-14), "WwRrZ0#W)l(+", "RuntimeInvisibleAnnotations", "Ljava/lang/Synthetic;");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2749);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q6D*q9Q;LL", stringArray0, true, false);
      methodWriter0.visitFieldInsn(2, "SlqWI*-h([X)C,#R", "A &kts-336Xj 5", "A &kts-336Xj 5");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(2749, 39);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1378));
      classWriter0.addType("GTv&CS&Z1RhW}jn4+M<");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1173), "UwDlv3V&pvWRX\".7+$", "|5mW)Ag$T^_mb=", "GTv&CS&Z1RhW}jn4+M<", (String[]) null, true, false);
      methodWriter0.visitFieldInsn(1070, "|5mW)Ag$T^_mb=", "Signature", "SourceFile");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      Item item0 = classWriter0.newDouble(0.0);
      stringArray0[0] = "SourceDebugExtension";
      stringArray0[1] = "WwRrZ0#W)l(+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 9, "Ljava/lang/Synthetic;", "WwRrZ0#W)l(+", "SourceDebugExtension", stringArray0, true, true);
      methodWriter0.visitVarInsn(2, 67);
      Item item1 = classWriter0.newDouble(0);
      assertSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "S3urceDebugExtension";
      stringArray0[1] = "WwRrZ0#W)l(+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Ljava/lang/Synthetic;", "WwRrZ0#W)l(+", "S3urceDebugExtension", stringArray0, false, true);
      methodWriter0.visitVarInsn(2, 2);
      classWriter0.addType("u3.Uh]");
      int int0 = classWriter0.addType("u3.Uh]");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2749);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q6D*q9Q;LL", stringArray0, true, false);
      methodWriter0.visitVarInsn(173, 60);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(60, (-265));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "S3urceDebugExtension";
      stringArray0[1] = "WwRrZ0#W)l(+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Ljava/lang/Synthetic;", "WwRrZ0#W)l(+", "S3urceDebugExtension", stringArray0, false, true);
      methodWriter0.visitLdcInsn("S3urceDebugExtension");
      methodWriter0.visitVarInsn(2, 2);
      int int0 = classWriter0.addType("u3.Uh]");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2749);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q61h*q9g;LL", stringArray0, true, false);
      classWriter0.newInteger((-360));
      methodWriter0.visitFieldInsn(67, "PvCFqj.", "PvCFqj.", "</K*M6</<x`)*d8)");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[1];
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "WwRrZ0#W)l(+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "<init>", "WwRrZ0#W)l(+", "WwRrZ0#W)l(+", stringArray0, true, true);
      methodWriter0.visitVarInsn(2, 64);
      methodWriter0.visitLdcInsn(intArray0[0]);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2749);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q6D*q9Q;LL", stringArray0, true, true);
      methodWriter0.visitVarInsn(177, 60);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      classWriter0.newDouble(0.0);
      stringArray0[0] = "SourceDebugExtension";
      stringArray0[1] = "WwRrZ0#W)l(+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 9, "AnnotationDefault", "WwRrZ0#W)l(+", "SourceDebugExtension", stringArray0, false, true);
      methodWriter0.visitVarInsn(2, (-1));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(9, 9).when(classWriter0).newUTF8(anyString());
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "$aFXH4EyIN?3q", "$aFXH4EyIN?3q", "$aFXH4EyIN?3q", (String[]) null, false, false);
      methodWriter0.visitMaxs(1, 9);
      methodWriter0.visitVarInsn(52, 2);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2749);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q6D*q9Q;LL", stringArray0, true, false);
      methodWriter0.visitMaxs(1, (-524));
      methodWriter0.visitFieldInsn(24, "Ljava/lang/Synthetic;", "SourceDebugExtension", "A &kts-336Xj 5");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1378));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "<]MBD4Km$/`'zZ;:M", "<]MBD4Km$/`'zZ;:M", "<]MBD4Km$/`'zZ;:M", (String[]) null, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-1173), "UwDlv3V&pvWRX\".7+$", "|5mW)Ag$T^_mb=", "GTv&CS&Z1RhW}jn4+M<", (String[]) null, true, false);
      methodWriter0.visitMaxs((-1173), 1);
      methodWriter1.visitFieldInsn(1070, "|5mW)Ag$T^_mb=", "Signature", "SourceFile");
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2749);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q6D*q9Q;LL", stringArray0, true, false);
      methodWriter0.visitMaxs(1, (-524));
      methodWriter0.visitVarInsn(1, (-524));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "SourceDebugExtension";
      stringArray0[1] = "WwRrZ0#W)l(+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Ljava/lang/Synthetic;", "WwRrZ0#W)l(+", "SourceDebugExtension", stringArray0, false, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitTypeInsn(45, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "SourceDebugExtension";
      stringArray0[1] = "WwRrZ0#W)l(+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 9, "AnnotationDefault", "WwRrZ0#W)l(+", "SourceDebugExtension", stringArray0, false, true);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(2, label0);
      methodWriter0.visitVarInsn(2, (-1));
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(104);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 172, "org.mockito.asm.Frame", "s=5_x(u`2f_K", "MM+*?{Y`:M:iCQ", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitFieldInsn(50331648, "", "75b/", "75b/");
      methodWriter0.visitJumpInsn(2, label0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(104);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "AnnotationDefault", "MM+*?{Y`:M:iCQ", "AnnotationDefault", (String[]) null, false, false);
      methodWriter0.visitFieldInsn(67, "LocalVariableTypeTable", "RuntimeVisibleAnnotations", "StackMapTable");
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2729);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q61h*q9g;LL", stringArray0, true, true);
      methodWriter0.visitFieldInsn(67, "PvCFqj.", "PvCFqj.", "</K*M6</<x`)*d8)");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2749);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q6D*q9Q;LL", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitFieldInsn(985, "A3}|a8L<", "SlqWI*-h([X)C,#R", "UZr}Q6D*q9Q;LL");
      methodWriter0.visitJumpInsn(99, label0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2749);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "SlqWI*-h([X)C,#R", "|5mW)Ag$T^_mb=", "UwDlv3V&pvWRX\".7+$", stringArray0, true, false);
      methodWriter0.visitTypeInsn(2, "SlqWI*-h([X)C,#R");
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1407);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "8gUu@6cssZ6Br'Z", "RuntimeVisibleParameterAnnotations", "java/lang/Throwable", stringArray0, false, false);
      methodWriter0.visitTypeInsn(178, "b<P;*qGgR&G<@h");
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2729);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q61h*q9g;LL", stringArray0, true, false);
      methodWriter0.visitFieldInsn(67, "PvCFqj.", "PvCFqj.", "</K*M6</<x`)*d8)");
      methodWriter0.visitIntInsn((-360), (-1245));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(187);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "]b";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-28), "m}", "]b", "]b", stringArray0, false, false);
      methodWriter0.visitVarInsn(1, 611);
      methodWriter0.visitMaxs((-1109), 38);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2749);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q6D*q9Q;LL", stringArray0, true, true);
      methodWriter0.visitIntInsn(5, 2);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2749);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q6D*q9Q;LL", stringArray0, true, false);
      methodWriter0.visitIntInsn(2, 2);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2749);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q6D*q9Q;LL", stringArray0, true, false);
      methodWriter0.visitVarInsn(173, 60);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(185, label0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "SourceDebugExtension";
      stringArray0[1] = "WwRrZ0#W)l(+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnotationDefault", "WwRrZ0#W)l(+", "SourceDebugExtension", stringArray0, false, true);
      methodWriter0.visitVarInsn(2, 1);
      methodWriter0.visitMethodInsn(0, "WwRrZ0#W)l(+", "RuntimeInvisibleAnnotations", "SourceFile");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2749);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q6D*q9Q;LL", stringArray0, true, false);
      methodWriter0.visitFieldInsn(2, "SlqWI*-h([X)C,#R", "AnnotationDefault", "*");
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(93, "*", "AnnotationDefault", "EnclosingMethod");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2749);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q6D*q9Q;LL", stringArray0, true, false);
      methodWriter0.visitVarInsn(187, 60);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(6, "UZr}Q6D*q9Q;LL", "/)UYtpOg%/)$VcHUqD", "6*%3s R~\"GD");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2749);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q6D*q9Q;LL", stringArray0, true, false);
      methodWriter0.visitVarInsn(1, (-524));
      methodWriter0.visitFieldInsn(2, "", "", "UZr}Q6D*q9Q;LL");
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2749);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SlqWI*-h([X)C,#R", "SlqWI*-h([X)C,#R", "UZr}Q6D*q9Q;LL", stringArray0, true, false);
      methodWriter0.visitFieldInsn(24, "Ljava/lang/Synthetic;", "SourceDebugExtension", "A &kts-336Xj 5");
      methodWriter0.visitLdcInsn("Ljava/lang/Synthetic;");
  }
}
