/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 09:33:48 GMT 2019
 */

package org.mockito.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mockito.asm.ByteVector;
import org.mockito.asm.ClassWriter;
import org.mockito.asm.Label;
import org.mockito.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(462);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ";$iYaVm:@EI<d<k,";
      stringArray0[1] = ";$iYaVm:@EI<d<k,";
      stringArray0[2] = ";$iYaVm:@EI<d<k,";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ";$iYaVm:@EI<d<k,", ";$iYaVm:@EI<d<k,", ";$iYaVm:@EI<d<k,", stringArray0, false, false);
      methodWriter0.visitVarInsn(2, 2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(756);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2{v";
      stringArray0[1] = "-r#Y58pE)@z";
      stringArray0[2] = "-r#Y58pE)@z";
      stringArray0[3] = "-r#Y58pE)@z";
      stringArray0[4] = "-r#Y58pE)@z";
      stringArray0[5] = "Yw?F]PK6<";
      stringArray0[6] = "-r#Y58pE)@z";
      stringArray0[7] = "2{v";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 756, "-r#Y58pE)@z", "-r#Y58pE)@z", "2{v", stringArray0, true, false);
      int[] intArray0 = new int[2];
      methodWriter0.visitFieldInsn((-256), "SourceFile", "Deprecated", "SourcyDebugExension");
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 1, 2681);
      assertEquals(2680, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(756);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2{v";
      stringArray0[1] = "-r#Y58pE)@z";
      stringArray0[2] = "-r#Y58pE)@z";
      stringArray0[3] = "-r#Y58pE)@z";
      stringArray0[4] = "-r#Y58pE)@z";
      stringArray0[5] = "Yw?F]PK6<";
      stringArray0[6] = "-r#Y58pE)@z";
      stringArray0[7] = "2{v";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 756, "-r#Y58pE)@z", "-r#Y58pE)@z", "2{v", stringArray0, true, false);
      classWriter0.addType("2{v");
      methodWriter0.visitFieldInsn((-256), "SourceFile", "Deprecated", "SourcyDebugExension");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1999));
      classWriter0.addType("q");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 104, "q", "Z)&9.b/`-?}_S|", "Yw?F]PK6<", (String[]) null, true, false);
      methodWriter0.visitFieldInsn(128, "Yw?F]PK6<", "Yw?F]PK6<", "Deprecated");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(756);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-r#Y58pE)@z";
      stringArray0[1] = ",M";
      stringArray0[2] = "-r#Y58pE)@z";
      stringArray0[3] = ",M";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",M", "-r#Y58pE)@z", "-r#Y58pE)@z", stringArray0, true, true);
      classWriter0.newLong(1);
      methodWriter0.visitVarInsn(2, 4);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1999));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "int", "Yw?F]PK6<", "Yw?F]PK6<", (String[]) null, false, false);
      methodWriter0.visitLdcInsn("Yw?F]PK6<");
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 104, "q", "Z)&9.b/`-?}_S|", "Yw?F]PK6<", (String[]) null, true, false);
      methodWriter1.visitFieldInsn(128, "Yw?F]PK6<", "Yw?F]PK6<", "Deprecated");
      assertNotSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(756);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-r#Y58pE)@z";
      classWriter0.newInteger(2);
      stringArray0[1] = ",M";
      stringArray0[2] = "-r#Y58pE)@z";
      stringArray0[3] = ",M";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",M", "-r#Y58pE)@z", "-r#Y58pE)@z", stringArray0, true, true);
      methodWriter0.visitVarInsn(2, 4);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(756);
      classWriter0.newInteger(756);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2{v";
      stringArray0[1] = "-r#Y58pE)@z";
      stringArray0[2] = "-r#Y58pE)@z";
      stringArray0[3] = "-r#Y58pE)@z";
      stringArray0[4] = "-r#Y58pE)@z";
      stringArray0[5] = "-r#Y58pE)@z";
      stringArray0[6] = "-r#Y58pE)@z";
      stringArray0[7] = "2{v";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 756, "-r#Y58pE)@z", "-r#Y58pE)@z", "2{v", stringArray0, true, false);
      methodWriter0.visitFieldInsn(179, "2{v", "2{v", "-r#Y58pE)@z");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(756);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-r#Y58pE)@z";
      classWriter0.newInteger(2);
      stringArray0[1] = "q";
      stringArray0[2] = "-r#Y58pE)@z";
      stringArray0[3] = "q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "q", "-r#Y58pE)@z", "-r#Y58pE)@z", stringArray0, true, true);
      methodWriter0.visitVarInsn(4, 2569);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(756);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2{v";
      stringArray0[1] = "-r#Y58pE)@z";
      stringArray0[2] = "-r#Y58pE)@z";
      stringArray0[3] = "-r#Y58pE)@z";
      stringArray0[4] = "-r#Y58pE)@z";
      stringArray0[5] = "Yw?F]PK6<";
      stringArray0[6] = "-r#Y58pE)@z";
      stringArray0[7] = "2{v";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 756, "-r#Y58pE)@z", "-r#Y58pE)@z", "2{v", stringArray0, true, false);
      methodWriter0.visitFieldInsn((-256), "SourceFile", "Deprecated", "SourcyDebugExension");
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(756);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-r#Y58pE)@z";
      stringArray0[1] = "q";
      stringArray0[2] = "-r#Y58pE)@z";
      stringArray0[3] = "q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "q", "-r#Y58pE)@z", "-r#Y58pE)@z", stringArray0, true, true);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
      methodWriter0.visitVarInsn(4, 2569);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1999));
      classWriter0.newDouble((-96.4));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 104, "q", "Z)&9.b/`-?}_S|", "Yw?F]PK6<", (String[]) null, true, false);
      methodWriter0.visitFieldInsn(128, "Yw?F]PK6<", "Yw?F]PK6<", "Deprecated");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1999));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "VN{#;>qD]ZO9 ", "Z)&9.b/`-?}_S|", "Exceptions", (String[]) null, false, false);
      methodWriter0.visitMaxs((-1999), 2);
      methodWriter0.visitVarInsn(3969, 1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(2576, (-388), 9).when(classWriter0).newClass(anyString());
      doReturn((-388), 2576).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[3];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.mockito.asm.MethodWriter", "org.mockito.asm.MethodWriter", "org.mockito.asm.MethodWriter", stringArray0, false, false);
      methodWriter0.visitMaxs(1784, (-388));
      methodWriter0.visitVarInsn(2, 30);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(255);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1644), "#TFud!.e#wX/)yjl", "#TFud!.e#wX/)yjl", ".s.IFJDCS", stringArray0, true, false);
      methodWriter0.visitMaxs(127, 255);
      methodWriter0.visitFieldInsn(2, "P6]", "value ", "#TFud!.e#wX/)yjl");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(248);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ")V", ")V", "void", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitFieldInsn(1, "void", "x:*t\"+WU+HWsX#|0*", "org.mockito.asm.ClassWriter");
      methodWriter0.visitJumpInsn(1, label0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(248);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ")V", ")V", "void", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitFieldInsn(1, "void", "x:*t\"+WU+HWsX#|0*", "org.mockito.asm.ClassWriter");
      label0.status = 1;
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1999));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "int", "Yw?F]PK6<", "Yw?F]PK6<", (String[]) null, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-1048576), "VN{#;>qD]ZO9 ", "Z)&9.b/`-?}_S|", "Z)&9.b/`-?}_S|", (String[]) null, false, true);
      methodWriter0.visitFieldInsn(1, "Yw?F]PK6<", "Z)&9.b/`-?}_S|", "Z)&9.b/`-?}_S|");
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(756);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2{v";
      stringArray0[1] = "-r#Y58pE)@z";
      stringArray0[2] = "-r#Y58pE)@z";
      stringArray0[3] = "-r#Y58pE)@z";
      stringArray0[4] = "-r#Y58pE)@z";
      stringArray0[5] = "-r#Y58pE)@z";
      stringArray0[6] = "-r#Y58pE)@z";
      stringArray0[7] = "2{v";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "2{v", "-r#Y58pE)@z", "-r#Y58pE)@z", stringArray0, false, true);
      methodWriter0.visitFieldInsn(2, "-r#Y58pE)@z", "float", "-r#Y58pE)@z");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(756);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-r#Y58pE)@z";
      stringArray0[1] = "q";
      stringArray0[2] = "-r#Y58pE)@z";
      stringArray0[3] = "q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "mLD{+DojJX5s@KV&!", "Class not found", "Yw?F]PK6<", stringArray0, false, false);
      methodWriter0.visitTypeInsn(1, "}0l4RTg>/@2]$k C");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1999));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 104, "~&/3aut1", "Z)&9.b/`-?}_S|", "6_{Ef1sA9Yc&x?@M", (String[]) null, true, false);
      methodWriter0.visitFieldInsn(128, "Yw?F]PK6<", "Yw?F]PK6<", "Deprecated");
      methodWriter0.visitIntInsn(1, 128);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = mock(ClassWriter.class, new ViolatedAssumptionAnswer());
      doReturn(76, 76, 1792, 76).when(classWriter0).newClass(anyString());
      doReturn(76, 76).when(classWriter0).newUTF8(anyString());
      String[] stringArray0 = new String[4];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 107, "#sgO", "-r_y#Y58pE)@z", ".ug", stringArray0, true, true);
      methodWriter0.visitIntInsn(107, 1792);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1999));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 104, "~&/3aut1", "Z)&9.b/`-?}_S|", "6_{Ef1sA9Yc&x?@M", (String[]) null, true, false);
      methodWriter0.visitIntInsn(1, 128);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(756);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-r#Y58pE)@z";
      stringArray0[1] = ",M";
      stringArray0[2] = "-r#Y58pE)@z";
      stringArray0[3] = ",M";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",M", "-r#Y58pE)@z", "-r#Y58pE)@z", stringArray0, true, true);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "O=M", "Gv_v:Q)t9|adJ}", "R71PX8", stringArray0, false, false);
      methodWriter1.visitMethodInsn((-172), "Exceptions", "LocalVariableTable", "Gv_v:Q)t9|adJ}");
      methodWriter0.visitVarInsn(2, 4);
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(756);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-r#Y58pE)@z";
      stringArray0[1] = ",M";
      stringArray0[2] = "-r#Y58pE)@z";
      stringArray0[3] = ",M";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",M", "-r#Y58pE)@z", "-r#Y58pE)@z", stringArray0, true, true);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "O=M", "Gv_v:Q)t9|adJ}", "R71PX8", stringArray0, false, false);
      methodWriter0.visitVarInsn(2, 4);
      // Undeclared exception!
      try { 
        methodWriter1.visitJumpInsn(18, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(756);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2{v";
      stringArray0[1] = "-r#Y58pE)@z";
      stringArray0[2] = "-r#Y58pE)@z";
      stringArray0[3] = "-r#Y58pE)@z";
      stringArray0[4] = "-r#Y58pE)@z";
      stringArray0[5] = "Yw?F]PK6<";
      stringArray0[6] = "-r#Y58pE)@z";
      stringArray0[7] = "2{v";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 756, "-r#Y58pE)@z", "-r#Y58pE)@z", "2{v", stringArray0, true, false);
      methodWriter0.visitFieldInsn((-256), "SourceFile", "Deprecated", "SourcyDebugExension");
      methodWriter0.visitMethodInsn(41, "*Ucw1nny", "\"w0>6^", "-r#Y58pE)@z");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(756);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "2{v";
      stringArray0[1] = "-r#Y58pE)@z";
      stringArray0[2] = "-r#Y58pE)@z";
      stringArray0[3] = "-r#Y58pE)@z";
      stringArray0[4] = "-r#Y58pE)@z";
      stringArray0[5] = "-r#Y58pE)@z";
      stringArray0[6] = "-r#Y58pE)@z";
      stringArray0[7] = "2{v";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 756, "-r#Y58pE)@z", "-r#Y58pE)@z", "2{v", stringArray0, true, false);
      methodWriter0.visitFieldInsn(179, "2{v", "2{v", "-r#Y58pE)@z");
      Label label0 = new Label();
      methodWriter0.visitLineNumber(179, label0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(756);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-r#Y58pE)@z";
      stringArray0[1] = "q";
      stringArray0[2] = "-r#Y58pE)@z";
      stringArray0[3] = "q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "q", "-r#Y58pE)@z", "-r#Y58pE)@z", stringArray0, true, true);
      methodWriter0.visitVarInsn(4, 2569);
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber(1084, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }
}
