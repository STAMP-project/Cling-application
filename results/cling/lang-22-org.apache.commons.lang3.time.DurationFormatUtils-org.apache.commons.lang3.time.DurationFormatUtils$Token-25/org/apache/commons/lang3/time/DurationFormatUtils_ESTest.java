/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 20:57:30 GMT 2019
 */

package org.apache.commons.lang3.time;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.TimeZone;
import org.apache.commons.lang3.time.DurationFormatUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class DurationFormatUtils_ESTest extends DurationFormatUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      DurationFormatUtils.formatPeriod(0L, (-215L), "0:00:00.85");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test01()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDuration(5451L, "");
      assertEquals("", string0);
      
      TimeZone timeZone0 = TimeZone.getTimeZone(" 1 hours");
      String string1 = DurationFormatUtils.formatPeriod(0L, (-1L), "Search and Replace array lengths don't match: ", true, timeZone0);
      assertEquals("999earch an364 Replace arra-1 length86399 364ont match: ", string1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DurationFormatUtils.formatDurationWords(1L, true, true);
      // Undeclared exception!
      DurationFormatUtils.formatPeriod(1L, (-2910L), "[Nq9e|-}w");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DurationFormatUtils.formatDurationHMS((-215L));
      // Undeclared exception!
      DurationFormatUtils.formatPeriod(0L, (-215L), "0:00:00.85");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test04()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDurationWords((-1L), true, true);
      assertEquals("0 seconds", string0);
      
      String string1 = DurationFormatUtils.formatDuration(60000L, "{NdmR/_Iu");
      assertEquals("{N01R/_Iu", string1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test05()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDurationWords(1000L, false, false);
      assertEquals("0 days 0 hours 0 minutes 1 second", string0);
      
      String string1 = DurationFormatUtils.formatDuration((-1L), " 1 days");
      assertEquals(" 1 0a00", string1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test06()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDurationWords((-1L), true, true);
      assertEquals("0 seconds", string0);
      
      String string1 = DurationFormatUtils.formatDurationHMS(940L);
      assertEquals("0:00:00.940", string1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test07()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDuration(1L, "1p6uP?Yr<N.H");
      assertEquals("1p6uP?Yr<N.0", string0);
      
      String string1 = DurationFormatUtils.formatDurationWords(0L, true, false);
      assertEquals("0 seconds", string1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test08()  throws Throwable  {
      DurationFormatUtils.formatDuration(2040L, "%rG@1v $");
      String string0 = DurationFormatUtils.formatPeriodISO(2040L, (-1L));
      assertEquals("P-1Y11M30DT23H59M57.959S", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test09()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDurationISO(18L);
      assertEquals("P0Y0M0DT0H0M0.018S", string0);
      
      String string1 = DurationFormatUtils.formatPeriod(112L, 0L, "P0Y0M0DT0H0M0.018S");
      assertEquals("P0Y0-10DT07430-10.0183599888", string1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test10()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDurationWords((-1L), false, true);
      assertEquals("0 days", string0);
      
      String string1 = DurationFormatUtils.formatDuration(60000L, "");
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DurationFormatUtils.formatDuration(60000L, "{NdmR/_Iu");
      TimeZone timeZone0 = TimeZone.getTimeZone("{NdmR/_Iu");
      // Undeclared exception!
      DurationFormatUtils.formatPeriod(60000L, (-1L), "{NdmR/_Iu", true, timeZone0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("CP4G.V2a;:)(9#!k");
      boolean boolean0 = durationFormatUtils_Token0.equals("CP4G.V2a;:)(9#!k");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getTimeZone("M");
      String string0 = DurationFormatUtils.formatPeriod(867L, 1865L, "M", false, timeZone0);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test14()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDurationWords(60000L, true, true);
      assertEquals("1 minute", string0);
      
      String string1 = DurationFormatUtils.formatDuration(1122L, "");
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test15()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDurationWords(3600000L, true, true);
      assertEquals("1 hour", string0);
      
      String string1 = DurationFormatUtils.formatDurationHMS((-1L));
      assertEquals("0:00:00.99", string1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = DurationFormatUtils.formatPeriod(1393L, 0L, "M");
      assertEquals("-1", string0);
      
      String string1 = DurationFormatUtils.formatDuration((-1L), "M");
      assertEquals("0", string1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test17()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getTimeZone("org.apache.commons.lang3.StringUtils");
      String string0 = DurationFormatUtils.formatPeriod((-1L), 0L, "0 seconds", true, timeZone0);
      assertEquals("0 0econ00", string0);
      
      String string1 = DurationFormatUtils.formatDurationHMS(940L);
      assertEquals("0:00:00.940", string1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test18()  throws Throwable  {
      String string0 = DurationFormatUtils.formatPeriodISO(0L, 0L);
      assertEquals("P0Y0M0DT0H0M0.000S", string0);
      
      String string1 = DurationFormatUtils.formatDurationWords(0L, false, true);
      assertEquals("0 days", string1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test19()  throws Throwable  {
      String string0 = DurationFormatUtils.formatDurationWords((-1L), true, true);
      assertEquals("0 seconds", string0);
      
      TimeZone timeZone0 = TimeZone.getTimeZone("org.apache.commons.lang3.StringUtils");
      String string1 = DurationFormatUtils.formatPeriod((-1L), 0L, "0 seconds", true, timeZone0);
      assertEquals("0 0econ00", string1);
  }
}
