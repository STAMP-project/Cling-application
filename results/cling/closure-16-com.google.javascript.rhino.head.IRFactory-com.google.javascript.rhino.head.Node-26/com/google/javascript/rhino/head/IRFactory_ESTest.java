/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 18 06:38:53 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.CompilerEnvirons;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.ErrorReporter;
import com.google.javascript.rhino.head.IRFactory;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.Node;
import com.google.javascript.rhino.head.ast.ArrayComprehension;
import com.google.javascript.rhino.head.ast.ArrayComprehensionLoop;
import com.google.javascript.rhino.head.ast.ArrayLiteral;
import com.google.javascript.rhino.head.ast.AstRoot;
import com.google.javascript.rhino.head.ast.CatchClause;
import com.google.javascript.rhino.head.ast.ElementGet;
import com.google.javascript.rhino.head.ast.FunctionNode;
import com.google.javascript.rhino.head.ast.Jump;
import com.google.javascript.rhino.head.ast.Name;
import com.google.javascript.rhino.head.ast.NumberLiteral;
import com.google.javascript.rhino.head.ast.ObjectLiteral;
import com.google.javascript.rhino.head.ast.ReturnStatement;
import com.google.javascript.rhino.head.ast.StringLiteral;
import com.google.javascript.rhino.head.ast.ThrowStatement;
import com.google.javascript.rhino.head.ast.UnaryExpression;
import com.google.javascript.rhino.head.ast.VariableDeclaration;
import com.google.javascript.rhino.head.ast.XmlDotQuery;
import com.google.javascript.rhino.head.ast.XmlElemRef;
import com.google.javascript.rhino.head.ast.Yield;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class IRFactory_ESTest extends IRFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XmlElemRef xmlElemRef0 = new XmlElemRef(65536);
      ArrayLiteral arrayLiteral0 = new ArrayLiteral(2356);
      arrayLiteral0.addChildrenToFront(xmlElemRef0);
      // Undeclared exception!
      try { 
        arrayLiteral0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ObjectLiteral objectLiteral0 = new ObjectLiteral((-1570));
      iRFactory0.decompile(objectLiteral0);
      assertEquals((-1), objectLiteral0.getLineno());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ElementGet elementGet0 = new ElementGet(65536, 2823);
      // Undeclared exception!
      try { 
        iRFactory0.decompile(elementGet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IRFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = mock(CompilerEnvirons.class, new ViolatedAssumptionAnswer());
      doReturn((ErrorReporter) null).when(compilerEnvirons0).getErrorReporter();
      IRFactory iRFactory0 = new IRFactory(compilerEnvirons0);
      NumberLiteral numberLiteral0 = new NumberLiteral(65536, "|");
      assertEquals(40, numberLiteral0.getType());
      
      iRFactory0.decompile(numberLiteral0);
      assertEquals((-1), numberLiteral0.getLineno());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = mock(CompilerEnvirons.class, new ViolatedAssumptionAnswer());
      IRFactory iRFactory0 = new IRFactory(compilerEnvirons0, (ErrorReporter) null);
      StringLiteral stringLiteral0 = new StringLiteral(84);
      ElementGet elementGet0 = mock(ElementGet.class, new ViolatedAssumptionAnswer());
      doReturn(stringLiteral0).when(elementGet0).getTarget();
      // Undeclared exception!
      try { 
        iRFactory0.decompileElementGet(elementGet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = mock(CompilerEnvirons.class, new ViolatedAssumptionAnswer());
      doReturn((ErrorReporter) null).when(compilerEnvirons0).getErrorReporter();
      ArrayLiteral arrayLiteral0 = new ArrayLiteral(2235);
      assertEquals(65, arrayLiteral0.getType());
      
      IRFactory iRFactory0 = new IRFactory(compilerEnvirons0);
      iRFactory0.decompile(arrayLiteral0);
      assertEquals((-1), arrayLiteral0.getLineno());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      CompilerEnvirons compilerEnvirons0 = mock(CompilerEnvirons.class, new ViolatedAssumptionAnswer());
      doReturn(errorReporter0).when(compilerEnvirons0).getErrorReporter();
      IRFactory iRFactory0 = new IRFactory(compilerEnvirons0);
      Name name0 = new Name(1, 13);
      // Undeclared exception!
      try { 
        iRFactory0.decompile(name0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      FunctionNode functionNode0 = new FunctionNode();
      iRFactory0.decompileFunctionHeader(functionNode0);
      assertEquals((-1), functionNode0.getLineno());
      assertEquals((-1), functionNode0.getBaseLineno());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ArrayLiteral arrayLiteral0 = new ArrayLiteral(65536);
      Node node0 = iRFactory0.transform(arrayLiteral0);
      boolean boolean0 = node0.hasConsistentReturnUsage();
      assertTrue(boolean0);
      assertEquals(65, node0.getType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ArrayLiteral arrayLiteral0 = new ArrayLiteral(65536);
      iRFactory0.checkMutableReference(arrayLiteral0);
      assertEquals((-1), arrayLiteral0.getLineno());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      AstRoot astRoot0 = new AstRoot((-926));
      iRFactory0.transformTree(astRoot0);
      CatchClause catchClause0 = new CatchClause();
      // Undeclared exception!
      try { 
        catchClause0.setString("(Lorg/mozilla/javascript/RegExpProxy;Lorg/mozilla/javascript/Context;)V");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.head.ast.CatchClause cannot be cast to com.google.javascript.rhino.head.ast.Name
         //
         verifyException("com.google.javascript.rhino.head.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ObjectLiteral objectLiteral0 = new ObjectLiteral((-1570));
      ReturnStatement returnStatement0 = new ReturnStatement(4, 432, objectLiteral0);
      ThrowStatement throwStatement0 = new ThrowStatement(65533, (-3476), returnStatement0);
      assertEquals(50, throwStatement0.getType());
      
      Node node0 = iRFactory0.transform(throwStatement0);
      assertEquals((-1), node0.getLineno());
      assertTrue(node0.hasChildren());
      assertEquals("50", node0.toString());
      
      Jump jump0 = new Jump(131, returnStatement0);
      assertTrue(jump0.hasChildren());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ObjectLiteral objectLiteral0 = new ObjectLiteral((-1570));
      ReturnStatement returnStatement0 = new ReturnStatement(4, 432, objectLiteral0);
      ThrowStatement throwStatement0 = new ThrowStatement(65533, (-3476), returnStatement0);
      assertEquals(50, throwStatement0.getType());
      
      Node node0 = iRFactory0.transform(throwStatement0);
      assertEquals((-1), node0.getLineno());
      assertEquals(50, node0.getType());
      
      iRFactory0.isDestructuring(throwStatement0);
      assertEquals((-1), objectLiteral0.getLineno());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ObjectLiteral objectLiteral0 = new ObjectLiteral((-1570));
      ReturnStatement returnStatement0 = new ReturnStatement(4, 432, objectLiteral0);
      ThrowStatement throwStatement0 = new ThrowStatement(65533, (-3476), returnStatement0);
      iRFactory0.transform(throwStatement0);
      FunctionNode functionNode0 = new FunctionNode();
      functionNode0.setIsExpressionClosure(true);
      Node node0 = iRFactory0.decompileFunctionHeader(functionNode0);
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      Name name0 = new Name();
      AstRoot astRoot0 = new AstRoot(2);
      iRFactory0.transformTree(astRoot0);
      ReturnStatement returnStatement0 = new ReturnStatement(18, 1, name0);
      // Undeclared exception!
      try { 
        iRFactory0.transform(returnStatement0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IRFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      Name name0 = new Name();
      CatchClause catchClause0 = new CatchClause((-698), 1);
      catchClause0.addChildToFront(name0);
      ReturnStatement returnStatement0 = new ReturnStatement(18, 1, name0);
      // Undeclared exception!
      try { 
        iRFactory0.transform(returnStatement0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ObjectLiteral objectLiteral0 = new ObjectLiteral((-1570));
      objectLiteral0.putIntProp(65536, 2272);
      ReturnStatement returnStatement0 = new ReturnStatement(4, 432, objectLiteral0);
      ThrowStatement throwStatement0 = new ThrowStatement(65533, (-3476), returnStatement0);
      iRFactory0.transform(throwStatement0);
      objectLiteral0.putIntProp((-1621), 71);
      assertEquals(1, Node.LEFT);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ObjectLiteral objectLiteral0 = new ObjectLiteral((-1570));
      ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop(21, 24);
      ReturnStatement returnStatement0 = new ReturnStatement(4, 13, objectLiteral0);
      ThrowStatement throwStatement0 = new ThrowStatement(65533, (-3476), returnStatement0);
      returnStatement0.addChildBefore(throwStatement0, (Node) null);
      // Undeclared exception!
      try { 
        iRFactory0.transform(arrayComprehensionLoop0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ObjectLiteral objectLiteral0 = new ObjectLiteral((-1570));
      iRFactory0.transform(objectLiteral0);
      AstRoot astRoot0 = new AstRoot(977);
      // Undeclared exception!
      try { 
        astRoot0.replaceChild(objectLiteral0, objectLiteral0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ObjectLiteral objectLiteral0 = new ObjectLiteral((-1570));
      ReturnStatement returnStatement0 = new ReturnStatement(4, 432, objectLiteral0);
      ThrowStatement throwStatement0 = new ThrowStatement(65533, (-3476), returnStatement0);
      iRFactory0.transform(throwStatement0);
      iRFactory0.decompileObjectLiteral(objectLiteral0);
      assertEquals(0, Node.NON_SPECIALCALL);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ObjectLiteral objectLiteral0 = new ObjectLiteral((-1570));
      ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop(21, 24);
      ReturnStatement returnStatement0 = new ReturnStatement(4, 432, objectLiteral0);
      ThrowStatement throwStatement0 = new ThrowStatement(65533, (-3476), returnStatement0);
      iRFactory0.transform(throwStatement0);
      objectLiteral0.addChildrenToFront(arrayComprehensionLoop0);
      // Undeclared exception!
      try { 
        objectLiteral0.removeChild(throwStatement0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.head.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      Name name0 = new Name();
      FunctionNode functionNode0 = new FunctionNode(65536, name0);
      iRFactory0.isDestructuring(name0);
      // Undeclared exception!
      try { 
        iRFactory0.transform(functionNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ObjectLiteral objectLiteral0 = new ObjectLiteral((-1570));
      iRFactory0.transform(objectLiteral0);
      AstRoot astRoot0 = new AstRoot(977);
      ReturnStatement returnStatement0 = new ReturnStatement((-1586), 4, astRoot0);
      // Undeclared exception!
      try { 
        returnStatement0.addChildBefore(objectLiteral0, objectLiteral0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ObjectLiteral objectLiteral0 = new ObjectLiteral((-1570));
      ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop(21, 24);
      ReturnStatement returnStatement0 = new ReturnStatement(4, 432, objectLiteral0);
      ThrowStatement throwStatement0 = new ThrowStatement(65533, (-3476), returnStatement0);
      iRFactory0.transform(throwStatement0);
      objectLiteral0.addChildrenToFront(arrayComprehensionLoop0);
      objectLiteral0.addChild(returnStatement0);
      assertEquals(13, Node.INCRDECR_PROP);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop(65536, 27);
      ReturnStatement returnStatement0 = new ReturnStatement((-574), (-574), arrayComprehensionLoop0);
      returnStatement0.addChildrenToBack(arrayComprehensionLoop0);
      ThrowStatement throwStatement0 = new ThrowStatement((-574), (-574), returnStatement0);
      // Undeclared exception!
      try { 
        iRFactory0.transform(throwStatement0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XmlElemRef xmlElemRef0 = new XmlElemRef(65536);
      // Undeclared exception!
      try { 
        xmlElemRef0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ObjectLiteral objectLiteral0 = new ObjectLiteral((-1570));
      boolean boolean0 = iRFactory0.isDestructuring(objectLiteral0);
      assertFalse(boolean0);
      
      ReturnStatement returnStatement0 = new ReturnStatement(4, 432, objectLiteral0);
      ThrowStatement throwStatement0 = new ThrowStatement(65533, (-3476), returnStatement0);
      assertEquals(50, throwStatement0.getType());
      
      Node node0 = iRFactory0.transform(throwStatement0);
      assertEquals((-1), node0.getLineno());
      assertEquals(50, node0.getType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XmlDotQuery xmlDotQuery0 = new XmlDotQuery();
      // Undeclared exception!
      try { 
        xmlDotQuery0.labelId();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ObjectLiteral objectLiteral0 = new ObjectLiteral();
      assertEquals((-1), objectLiteral0.getLineno());
      
      AstRoot astRoot0 = iRFactory0.parse("yME+6,p4Zqa2o", "yME+6,p4Zqa2o", 7);
      astRoot0.addChildToFront(objectLiteral0);
      assertTrue(astRoot0.hasChildren());
      assertEquals(136, astRoot0.getType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      Object[] objectArray0 = new Object[1];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      ObjectLiteral objectLiteral0 = mock(ObjectLiteral.class, new ViolatedAssumptionAnswer());
      doReturn(nativeArray0).when(objectLiteral0).getElements();
      // Undeclared exception!
      try { 
        iRFactory0.decompileObjectLiteral(objectLiteral0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IRFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AstRoot astRoot0 = new AstRoot(65536);
      ArrayComprehension arrayComprehension0 = new ArrayComprehension(70);
      // Undeclared exception!
      try { 
        astRoot0.setScope(arrayComprehension0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      VariableDeclaration variableDeclaration0 = new VariableDeclaration(2, (-38));
      Node node0 = iRFactory0.transform(variableDeclaration0);
      assertEquals((-1), node0.getLineno());
      assertEquals(122, variableDeclaration0.getType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      Yield yield0 = new Yield(14, 5);
      assertEquals(72, yield0.getType());
      
      Node node0 = iRFactory0.transform(yield0);
      assertEquals("72", node0.toString());
      assertEquals((-1), node0.getLineno());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UnaryExpression unaryExpression0 = new UnaryExpression();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      IRFactory iRFactory0 = new IRFactory(compilerEnvirons0);
      // Undeclared exception!
      try { 
        iRFactory0.transform(unaryExpression0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      XmlElemRef xmlElemRef0 = new XmlElemRef(65536);
      FunctionNode functionNode0 = mock(FunctionNode.class, new ViolatedAssumptionAnswer());
      doReturn((Name) null).when(functionNode0).getFunctionName();
      doReturn(xmlElemRef0, xmlElemRef0).when(functionNode0).getMemberExprNode();
      // Undeclared exception!
      try { 
        iRFactory0.decompileFunctionHeader(functionNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IRFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = mock(CompilerEnvirons.class, new ViolatedAssumptionAnswer());
      doReturn((ErrorReporter) null).when(compilerEnvirons0).getErrorReporter();
      IRFactory iRFactory0 = new IRFactory(compilerEnvirons0);
      NativeArray nativeArray0 = new NativeArray(2908L);
      FunctionNode functionNode0 = mock(FunctionNode.class, new ViolatedAssumptionAnswer());
      doReturn((Name) null).when(functionNode0).getFunctionName();
      doReturn((Name) null).when(functionNode0).getMemberExprNode();
      doReturn(nativeArray0).when(functionNode0).getParams();
      // Undeclared exception!
      try { 
        iRFactory0.decompileFunctionHeader(functionNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IRFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ArrayLiteral arrayLiteral0 = new ArrayLiteral();
      // Undeclared exception!
      try { 
        arrayLiteral0.getExistingIntProp(1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IRFactory iRFactory0 = new IRFactory();
      ObjectLiteral objectLiteral0 = new ObjectLiteral((-1570));
      ReturnStatement returnStatement0 = new ReturnStatement(4, 432, objectLiteral0);
      ThrowStatement throwStatement0 = new ThrowStatement(65533, (-3476), returnStatement0);
      iRFactory0.transform(throwStatement0);
      // Undeclared exception!
      try { 
        iRFactory0.decompile(returnStatement0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION: unexpected token: RETURN
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }
}
