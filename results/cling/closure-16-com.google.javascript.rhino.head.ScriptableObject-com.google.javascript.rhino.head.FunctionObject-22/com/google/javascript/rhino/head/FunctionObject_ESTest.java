/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 18 04:26:35 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.BoundFunction;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.Delegator;
import com.google.javascript.rhino.head.EcmaError;
import com.google.javascript.rhino.head.EvaluatorException;
import com.google.javascript.rhino.head.FunctionObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.MemberBox;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJavaMethod;
import com.google.javascript.rhino.head.NativeJavaTopPackage;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.Synchronizer;
import com.google.javascript.rhino.head.TopLevel;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class FunctionObject_ESTest extends FunctionObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      assertFalse(importerTopLevel0.avoidObjectDetection());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-879L));
      Context context0 = Context.enter();
      NativeObject nativeObject0 = (NativeObject)ScriptableObject.buildDataDescriptor(nativeArray0, context0, 11);
      assertFalse(nativeObject0.hasPrototypeMap());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      NativeString nativeString0 = new NativeString(stringBuffer0);
      // Undeclared exception!
      try { 
        nativeString0.put("msg.incompat.call", (Scriptable) null, (Object) "msg.incompat.call");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeArray nativeArray0 = new NativeArray(160);
      nativeIterator_StopIteration0.defineConst("getTypeTag", nativeArray0);
      assertFalse(nativeIterator_StopIteration0.hasPrototypeMap());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      Delegator delegator0 = new Delegator(baseFunction0);
      baseFunction0.defineConst("?nZ}(`lACF", delegator0);
      assertTrue(baseFunction0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(nativeArray0, "jsStaticFunction_setImmunePrototypeProperty", 220);
      // Undeclared exception!
      try { 
        nativeArray0.setAttributes("jsStaticFunction_setImmunePrototypeProperty", (Scriptable) scriptableObject0, 220);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 220
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Object object0 = ScriptableObject.getProperty((Scriptable) importerTopLevel0, 556);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeString nativeString0 = new NativeString("ROCAL_BOCK");
      NativeCall nativeCall0 = new NativeCall();
      nativeString0.put(15, (Scriptable) nativeCall0, (Object) "ROCAL_BOCK");
      assertTrue(nativeString0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.putProperty((Scriptable) nativeIterator_StopIteration0, 192, (Object) "get");
      Synchronizer synchronizer0 = new Synchronizer(nativeIterator_StopIteration0);
      boolean boolean0 = nativeIterator_StopIteration0.containsValue(synchronizer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Context context0 = new Context();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      String string0 = nativeJavaTopPackage0.getTypeOf();
      assertEquals("object", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      boolean boolean0 = importerTopLevel0.isConst("!");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NativeString nativeString0 = new NativeString("ROCALBOCK");
      Delegator delegator0 = new Delegator();
      // Undeclared exception!
      try { 
        nativeString0.setGetterOrSetter("oZ51N6", 1073741824, delegator0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // oZ51N6
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BaseFunction baseFunction0 = null;
      try {
        baseFunction0 = new BaseFunction((Scriptable) null, (Scriptable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      assertEquals(0, ScriptableObject.EMPTY);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<Float> class0 = Float.TYPE;
      Method[] methodArray0 = FunctionObject.getMethodList(class0);
      NativeArray nativeArray0 = new NativeArray(methodArray0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod((MemberBox[]) null, "language version");
      BoundFunction boundFunction0 = new BoundFunction(context0, nativeArray0, nativeJavaMethod0, nativeJavaMethod0, methodArray0);
      nativeArray0.putConst("getClassObject", boundFunction0, context0);
      assertEquals(0, methodArray0.length);
      assertEquals(0L, nativeArray0.jsGet_length());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      NativeString nativeString0 = new NativeString("7RbI7&");
      // Undeclared exception!
      try { 
        topLevel0.putConst("7RbI7&", (Scriptable) null, nativeString0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Class<NativeObject> class0 = NativeObject.class;
      // Undeclared exception!
      try { 
        importerTopLevel0.getDefaultValue(class0);
        fail("Expecting exception: EvaluatorException");
      
      } catch(EvaluatorException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeObject
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      TopLevel topLevel0 = new TopLevel();
      // Undeclared exception!
      try { 
        FunctionObject.convertArg(context0, (Scriptable) topLevel0, (Object) topLevel0, 2);
        fail("Expecting exception: EcmaError");
      
      } catch(EcmaError e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeArray nativeArray0 = new NativeArray(160);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.defineOwnProperty(context0, (Object) nativeArray0, (ScriptableObject) nativeArray0, false);
        fail("Expecting exception: EcmaError");
      
      } catch(EcmaError e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }
}
