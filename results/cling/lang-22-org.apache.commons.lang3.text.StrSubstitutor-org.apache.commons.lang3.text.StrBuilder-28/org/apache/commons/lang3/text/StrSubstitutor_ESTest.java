/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 21:26:36 GMT 2019
 */

package org.apache.commons.lang3.text;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.Properties;
import org.apache.commons.lang3.text.StrBuilder;
import org.apache.commons.lang3.text.StrLookup;
import org.apache.commons.lang3.text.StrMatcher;
import org.apache.commons.lang3.text.StrSubstitutor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class StrSubstitutor_ESTest extends StrSubstitutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  @Ignore
  public void test00()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1151));
      Properties properties0 = new Properties();
      properties0.put(strBuilder0, "a");
      assertEquals(32, strBuilder0.capacity());
      
      Properties properties1 = new Properties();
      String string0 = StrSubstitutor.replace((Object) "a", properties1);
      assertNotNull(string0);
      assertEquals("a", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'x');
      strSubstitutor0.replaceIn((StrBuilder) null);
      StrBuilder strBuilder0 = new StrBuilder("D*z^(_jH~&1>uqzV'H");
      // Undeclared exception!
      try { 
        strBuilder0.replace(strSubstitutor0.DEFAULT_PREFIX, "q,;/", (-1646), 2011, 2011);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1646
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, "startIndex must be valid", "startIndex must be valid", '<');
      StrBuilder strBuilder0 = new StrBuilder((-2182));
      strSubstitutor0.replaceIn(strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2917), (-2182));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2917
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'x');
      strSubstitutor0.replaceIn((StrBuilder) null);
      assertEquals('x', strSubstitutor0.getEscapeChar());
      
      StrBuilder strBuilder0 = new StrBuilder("D*z^(_jH~&1>uqzV'H");
      Properties properties0 = new Properties();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      properties0.put(strBuilder0, locale_FilteringMode0);
      assertEquals(18, strBuilder0.length());
      assertEquals(50, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, "a", "a", '<');
      StrBuilder strBuilder0 = new StrBuilder((-1151));
      Properties properties0 = new Properties();
      properties0.put(strBuilder0, "a");
      boolean boolean0 = strSubstitutor0.replaceIn(strBuilder0);
      assertEquals(0, strBuilder0.length());
      assertFalse(boolean0);
      assertEquals('<', strSubstitutor0.getEscapeChar());
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, "a", "a", '<');
      StrBuilder strBuilder0 = new StrBuilder((-1151));
      Properties properties0 = new Properties();
      properties0.put(strBuilder0, "a");
      assertEquals(32, strBuilder0.capacity());
      
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean boolean0 = strSubstitutor0.replaceIn(stringBuffer0);
      assertEquals('<', strSubstitutor0.getEscapeChar());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      doReturn(":}>9 \"").when(strLookup0).toString();
      doReturn(":}>9 \"").when(strLookup0).lookup(anyString());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      doReturn("D*z^(_jH~&1>uqzV'H", (String) null, (String) null, (String) null).when(strMatcher0).toString();
      doReturn(16, 16, 0, 0, 0).when(strMatcher0).isMatch(any(char[].class) , anyInt() , anyInt() , anyInt());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'x');
      strSubstitutor0.replaceIn((StrBuilder) null);
      StrBuilder strBuilder0 = new StrBuilder("D*z^(_jH~&1>uqzV'H");
      String string0 = strSubstitutor0.replace(strBuilder0);
      assertEquals(18, strBuilder0.length());
      assertEquals(":}>9 \"", string0);
      assertEquals(50, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      StrBuilder strBuilder0 = new StrBuilder();
      strSubstitutor0.replaceIn(strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(2, 97);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      StrBuilder strBuilder0 = new StrBuilder();
      StringBuffer stringBuffer0 = new StringBuffer(strBuilder0);
      strSubstitutor0.replaceIn(stringBuffer0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(2, 97);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2182));
      StrBuilder strBuilder1 = strBuilder0.appendSeparator("ava.lang.Object@3c494d5f", 2);
      // Undeclared exception!
      try { 
        strBuilder1.substring((-2902), 200);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2902
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2182));
      strBuilder0.appendSeparator("^ariableeprefix matcherOmust not be null!", (-2182));
      // Undeclared exception!
      try { 
        strBuilder0.delete((-2182), '<');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2182
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'x');
      StrBuilder strBuilder0 = new StrBuilder("D*z^(_jH~&1>uqzV'H");
      strBuilder0.appendSeparator('x', 1338);
      // Undeclared exception!
      try { 
        strBuilder0.replace(strSubstitutor0.DEFAULT_PREFIX, "q,;/", (-1646), 2011, 2011);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1646
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2182));
      StrBuilder strBuilder1 = strBuilder0.appendSeparator('<', (-2182));
      // Undeclared exception!
      try { 
        strBuilder1.substring((-2917), (-2182));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2917
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2182));
      StrBuilder strBuilder1 = strBuilder0.appendSeparator("^ariableeprefix matcherOmust not be null!", (-2182));
      strBuilder1.append((CharSequence) "Variable suffix must not be null!");
      strBuilder1.insert(5, 2844);
      assertEquals(66, strBuilder1.capacity());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder('$');
      StrBuilder strBuilder1 = strBuilder0.appendSeparator("^ariableeprefix matcherOmust not be null!", (int) '<');
      StrBuilder strBuilder2 = strBuilder1.appendSeparator('<', 84);
      strBuilder2.insert(5, 1417);
      assertEquals(46, strBuilder0.size());
      assertEquals(82, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2182));
      strBuilder0.appendSeparator('<', (-2182));
      strBuilder0.append((CharSequence) "Variable suffix must not be null!");
      strBuilder0.insert(5, 2844);
      assertEquals(66, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2182));
      strBuilder0.appendSeparator("^ariableeprefix matcherOmust not be null!", (-2182));
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('<');
      Properties properties0 = new Properties();
      properties0.put(strBuilder0, strMatcher_CharMatcher0);
      assertEquals(32, strBuilder0.capacity());
      assertTrue(strBuilder0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2182));
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('<');
      strBuilder0.appendSeparator('<', (-2182));
      Properties properties0 = new Properties();
      properties0.put(strBuilder0, strMatcher_CharMatcher0);
      assertEquals(0, strBuilder0.size());
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2182));
      StrBuilder strBuilder1 = strBuilder0.appendSeparator("^ariableeprefix matcherOmust not be null!", (-2182));
      // Undeclared exception!
      try { 
        strBuilder1.substring(3682, (-2182));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("CKq5J");
      strBuilder0.appendSeparator('$', 114);
      // Undeclared exception!
      try { 
        strBuilder0.substring(117, 2894);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2182));
      strBuilder0.appendSeparator('<', (-2182));
      // Undeclared exception!
      try { 
        strBuilder0.substring(3682, (-2182));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("$(");
      StrBuilder strBuilder1 = strBuilder0.deleteAll("Igr$hmc ");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      int int0 = strBuilder1.lastIndexOf(strSubstitutor0.DEFAULT_PREFIX);
      assertEquals(2, strBuilder1.length());
      assertEquals(34, strBuilder1.capacity());
      assertEquals((-1), int0);
      assertEquals('$', strSubstitutor0.getEscapeChar());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-1151));
      StrBuilder strBuilder1 = strBuilder0.appendSeparator('P', (int) 'c');
      Properties properties0 = new Properties();
      properties0.put(strBuilder0, "a");
      Object object0 = new Object();
      properties0.replace((Object) strBuilder1, object0, object0);
      assertFalse(strBuilder0.isEmpty());
      assertEquals(1, strBuilder0.length());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      doReturn("$$$").when(strLookup0).toString();
      doReturn("$$$").when(strLookup0).lookup(anyString());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      doReturn("CKq5J", "CKq5J", "CKq5J", "CKq5J", "CKq5J").when(strMatcher0).toString();
      doReturn(2880, 2, 2880, 2880).when(strMatcher0).isMatch(any(char[].class) , anyInt() , anyInt() , anyInt());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'x');
      strSubstitutor0.replace((Object) "java.lang.Object@32884917");
      StrBuilder strBuilder0 = new StrBuilder();
      strSubstitutor0.replace("java.lang.Object@32884917");
      StrBuilder strBuilder1 = strBuilder0.appendSeparator('@', (-556));
      assertSame(strBuilder1, strBuilder0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("java.lang.Object@25212265");
      strBuilder0.setLength(256);
      assertEquals(512, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Object object0 = new Object();
      StrSubstitutor.replace(object0, (Properties) null);
      StrBuilder strBuilder0 = new StrBuilder("Jnvalid !ffset: ");
      // Undeclared exception!
      try { 
        strBuilder0.substring((-1329), (-1329));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1329
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[7];
      StrBuilder strBuilder0 = new StrBuilder("Variable suffix must not be null!");
      strBuilder0.insert(3, charArray0);
      assertEquals(40, strBuilder0.length());
      
      Properties properties0 = new Properties();
      String string0 = StrSubstitutor.replace((Object) "$$$", properties0);
      assertEquals("$$$", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StrLookup<Integer> strLookup0 = (StrLookup<Integer>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'j');
      StrSubstitutor.replace((Object) strSubstitutor0, (Properties) null);
      StrBuilder strBuilder0 = new StrBuilder("&@JXkBW");
      // Undeclared exception!
      try { 
        strBuilder0.substring(101, 101);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Integer integer0 = new Integer((-2843));
      Properties properties0 = new Properties();
      StrSubstitutor.replace((Object) integer0, properties0);
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring(2904, 2884);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Integer>) hashMap0, "fmAgo\"`&n8v_u*b", "fmAgo\"`&n8v_u*b", '\u0084');
      StringBuffer stringBuffer0 = new StringBuffer();
      strSubstitutor0.replace(stringBuffer0);
      StrBuilder strBuilder0 = new StrBuilder();
      // Undeclared exception!
      try { 
        strBuilder0.substring((-4921), 6);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4921
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StrMatcher.TrimMatcher strMatcher_TrimMatcher0 = new StrMatcher.TrimMatcher();
      StrMatcher strMatcher0 = StrMatcher.noneMatcher();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((StrLookup<?>) null, strMatcher_TrimMatcher0, strMatcher0, 's');
      StrBuilder strBuilder0 = new StrBuilder("set() is unsupported");
      strSubstitutor0.replaceIn(strBuilder0, 11, 11);
      // Undeclared exception!
      try { 
        strBuilder0.substring((-2917), (-1866));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2917
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      doReturn("").when(strLookup0).toString();
      doReturn("").when(strLookup0).lookup(anyString());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      doReturn("D*z^(_jH~&1>uqzV'H", (String) null, "1.1", "1.1").when(strMatcher0).toString();
      doReturn(16, 16).when(strMatcher0).isMatch(any(char[].class) , anyInt() , anyInt() , anyInt());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'x');
      StrBuilder strBuilder0 = new StrBuilder("D*z^(_jH~&1>uqzV'H");
      strSubstitutor0.replace(strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder0.replace(strSubstitutor0.DEFAULT_PREFIX, "q,;/", (-1646), 2011, 2011);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1646
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("D*z^(_jH~&1yk>uqzV'H");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher_StringMatcher0, strMatcher_StringMatcher0, 'x');
      strSubstitutor0.setEnableSubstitutionInVariables(true);
      StrBuilder strBuilder0 = new StrBuilder("D*z^(_jH~&1yk>uqzV'H");
      StrBuilder strBuilder1 = strBuilder0.append("D*z^(_jH~&1yk>uqzV'H");
      strSubstitutor0.replace(strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder1.substring((-2977), 101);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2977
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2182));
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('<');
      Properties properties0 = new Properties();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0);
      String string0 = strSubstitutor0.replace(stringBuffer0);
      assertEquals('$', strSubstitutor0.getEscapeChar());
      assertNotNull(string0);
      assertEquals("", string0);
      
      properties0.put(strBuilder0, strMatcher_CharMatcher0);
      assertEquals(0, strBuilder0.length());
      assertEquals(32, strBuilder0.capacity());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, "a", "a", '<');
      StrBuilder strBuilder0 = new StrBuilder((-1151));
      Properties properties0 = new Properties();
      properties0.put(strBuilder0, "a");
      // Undeclared exception!
      try { 
        strSubstitutor0.replace("a", (-1151), 31);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      doReturn(":}>9 \"").when(strLookup0).toString();
      doReturn(":}>9 \"").when(strLookup0).lookup(anyString());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      doReturn("D*z^(_jH~&1>uqzV'H", (String) null, (String) null, (String) null).when(strMatcher0).toString();
      doReturn(16, 16, 0, 0, 0).when(strMatcher0).isMatch(any(char[].class) , anyInt() , anyInt() , anyInt());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'x');
      StrBuilder strBuilder0 = new StrBuilder("D*z^(_jH~&1>uqzV'H");
      String string0 = strSubstitutor0.replace(strBuilder0);
      assertEquals('x', strSubstitutor0.getEscapeChar());
      assertEquals(":}>9 \"", string0);
      
      Properties properties0 = new Properties();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      properties0.put(strBuilder0, locale_FilteringMode0);
      assertEquals(50, strBuilder0.capacity());
      assertEquals(18, strBuilder0.size());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, String>) hashMap0, "", ".^gy(,_", '!');
      StrBuilder strBuilder0 = new StrBuilder(4);
      hashMap0.getOrDefault(strBuilder0, "startIndex must be valid");
      // Undeclared exception!
      try { 
        strSubstitutor0.replace("5.1", 27, 4);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "9_u|A~", "must", '<');
      StringBuffer stringBuffer0 = new StringBuffer();
      strSubstitutor0.replace(stringBuffer0);
      StrBuilder strBuilder0 = new StrBuilder("ava.lang.Object@43110bba");
      // Undeclared exception!
      try { 
        strBuilder0.substring(683, 683);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StrLookup<Integer> strLookup0 = (StrLookup<Integer>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      doReturn("", "set() is unsupported").when(strMatcher0).toString();
      doReturn(0, 0, 0, 0).when(strMatcher0).isMatch(any(char[].class) , anyInt() , anyInt() , anyInt());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 's');
      StrBuilder strBuilder0 = new StrBuilder("");
      strSubstitutor0.substitute(strBuilder0, 17, 4);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "riableeprefix matcherOmust not be null!org.apache.commons.lang3.text.StrMatcher", "riableeprefix matcherOmust not be null!org.apache.commons.lang3.text.StrMatcher", '[');
      strSubstitutor0.setVariablePrefix('[');
      StrBuilder strBuilder0 = new StrBuilder(534);
      char[] charArray0 = new char[7];
      charArray0[0] = '[';
      strSubstitutor0.replace(charArray0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(116, 683);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      strSubstitutor0.replace("$", 1, 0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(683, (-673));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0, "riableeprefix matcherOmust not be null!org.apache.commons.lang3.text.StrMatcher", "riableeprefix matcherOmust not be null!org.apache.commons.lang3.text.StrMatcher", '[');
      StrBuilder strBuilder0 = new StrBuilder(534);
      strSubstitutor0.replace((StringBuffer) null);
      // Undeclared exception!
      try { 
        strBuilder0.substring(116, 683);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StrLookup<Integer> strLookup0 = (StrLookup<Integer>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(strLookup0).toString();
      doReturn("${").when(strLookup0).lookup(anyString());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      doReturn("", "set() is unsupported", "set() is unsupported", "startIndex must be valid").when(strMatcher0).toString();
      doReturn(1, 4, 24).when(strMatcher0).isMatch(any(char[].class) , anyInt() , anyInt() , anyInt());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 's');
      char[] charArray0 = new char[2];
      strSubstitutor0.replace(charArray0);
      // Undeclared exception!
      try { 
        strSubstitutor0.replace("jeX]\",Ut23rq9dm", 14, (-1487));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StrLookup<Integer> strLookup0 = (StrLookup<Integer>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(strLookup0).toString();
      doReturn("${").when(strLookup0).lookup(anyString());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      doReturn("", "set() is unsupported", "set() is unsupported", "startIndex must be valid").when(strMatcher0).toString();
      doReturn(1, 4, 4).when(strMatcher0).isMatch(any(char[].class) , anyInt() , anyInt() , anyInt());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 's');
      char[] charArray0 = new char[2];
      strSubstitutor0.replace(charArray0);
      // Undeclared exception!
      try { 
        strSubstitutor0.replace("Infinite loop in property interpolation of ", 0, 44);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // length must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      doReturn("/1e\"inG6:a").when(strLookup0).toString();
      doReturn("/1e\"inG6:a").when(strLookup0).lookup(anyString());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      doReturn("?", "?", (String) null, (String) null).when(strMatcher0).toString();
      doReturn(15, 15, 0, 0, 0).when(strMatcher0).isMatch(any(char[].class) , anyInt() , anyInt() , anyInt());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'x');
      strSubstitutor0.replace((Object) "java.lang.Object@1dac8b");
      // Undeclared exception!
      try { 
        strSubstitutor0.replace("?", (-1784), (int) 'x');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      doReturn("$$$").when(strLookup0).toString();
      doReturn("$$$").when(strLookup0).lookup(anyString());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      doReturn("CKq5J", "CKq5J", "CKq5J", "CKq5J", (String) null).when(strMatcher0).toString();
      doReturn(2880, 2, 2880, 0, 0).when(strMatcher0).isMatch(any(char[].class) , anyInt() , anyInt() , anyInt());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 'x');
      strSubstitutor0.replace((Object) "java.lang.Object@6612a412");
      strSubstitutor0.replace("java.lang.Object@6612a412");
      // Undeclared exception!
      try { 
        strSubstitutor0.replace("java.lang.Object@6612a412", 108, 2880);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StrLookup<Object> strLookup0 = (StrLookup<Object>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrMatcher.StringMatcher strMatcher_StringMatcher0 = new StrMatcher.StringMatcher("D*z^(_jH~&1yk>uqzV'H");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher_StringMatcher0, strMatcher_StringMatcher0, 'x');
      strSubstitutor0.setEnableSubstitutionInVariables(true);
      StrBuilder strBuilder0 = new StrBuilder("D*z^(_jH~&1yk>uqzV'H");
      StrBuilder strBuilder1 = strBuilder0.append("D*z^(_jH~&1yk>uqzV'H");
      strSubstitutor0.replace(strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder1.substring(59, 1800);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2182));
      strBuilder0.append((CharSequence) "Variable suffix must not be null!");
      StringWriter stringWriter0 = new StringWriter();
      strBuilder0.insert(5, 2844);
      assertEquals(66, strBuilder0.capacity());
      
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Object>) hashMap0);
      strSubstitutor0.replace(stringBuffer0);
      assertEquals('$', strSubstitutor0.getEscapeChar());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder((-2182));
      strBuilder0.append((CharSequence) "Variable suffix must not be null!");
      strBuilder0.insert(5, 2844);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      StrLookup<Integer> strLookup0 = StrLookup.mapLookup((Map<String, Integer>) hashMap0);
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0);
      // Undeclared exception!
      try { 
        strSubstitutor0.replace("$$$", 5, 84);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // startIndex must be valid
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, ?>) hashMap0);
      strSubstitutor0.replace("java.lang.Object@537274c5", 3, 3);
      StrBuilder strBuilder0 = new StrBuilder(15);
      // Undeclared exception!
      try { 
        strBuilder0.insert(7, (-1L));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 7
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HashMap<String, StrLookup<Object>> hashMap0 = new HashMap<String, StrLookup<Object>>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, StrLookup<Object>>) hashMap0, "Variable prefix ust not be null!", "startIndex must be valid");
      StrMatcher.CharMatcher strMatcher_CharMatcher0 = new StrMatcher.CharMatcher('$');
      StrSubstitutor strSubstitutor1 = strSubstitutor0.setVariablePrefixMatcher(strMatcher_CharMatcher0);
      StrSubstitutor strSubstitutor2 = strSubstitutor1.setVariableSuffix('$');
      char[] charArray0 = new char[5];
      charArray0[0] = '$';
      charArray0[1] = '$';
      charArray0[2] = '$';
      String string0 = strSubstitutor2.replace(charArray0);
      assertEquals("$$\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder(1488);
      strBuilder0.appendNewLine();
      StringBuffer stringBuffer0 = new StringBuffer(strBuilder0);
      assertEquals(1, strBuilder0.length());
      assertEquals(1, strBuilder0.size());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test52()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("$(");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      Properties properties0 = new Properties();
      String string0 = StrSubstitutor.replace((Object) "}sj(i", properties0);
      assertEquals("}sj(i", string0);
      
      int int0 = strBuilder0.lastIndexOf(strSubstitutor0.DEFAULT_PREFIX);
      assertEquals(34, strBuilder0.capacity());
      assertEquals(2, strBuilder0.length());
      assertEquals('$', strSubstitutor0.getEscapeChar());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test53()  throws Throwable  {
      StrBuilder strBuilder0 = new StrBuilder("$(");
      StrSubstitutor strSubstitutor0 = new StrSubstitutor();
      int int0 = strBuilder0.lastIndexOf(strSubstitutor0.DEFAULT_PREFIX);
      assertEquals((-1), int0);
      assertEquals('$', strSubstitutor0.getEscapeChar());
      assertEquals(34, strBuilder0.capacity());
      
      String string0 = StrSubstitutor.replace((Object) "end < start", (Map<String, Object>) null, "}sj(i", "$");
      assertEquals("end < start", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Object object0 = new Object();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      StrSubstitutor.replace(object0, (Map<String, ?>) hashMap0, "Variable prefix must not be null!", "startIndex must be valid");
      StrLookup<Integer> strLookup0 = (StrLookup<Integer>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      doReturn("", "set() is unsupported").when(strMatcher0).toString();
      doReturn(1, 0, 0, 0, 0).when(strMatcher0).isMatch(any(char[].class) , anyInt() , anyInt() , anyInt());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 's');
      StrBuilder strBuilder0 = new StrBuilder("java.lang.Object@1d194d5e");
      strSubstitutor0.replaceIn(strBuilder0);
      // Undeclared exception!
      try { 
        strBuilder0.substring(4, (-2917));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // end < start
         //
         verifyException("org.apache.commons.lang3.text.StrBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StrLookup<Integer> strLookup0 = (StrLookup<Integer>) mock(StrLookup.class, new ViolatedAssumptionAnswer());
      doReturn("", "oidVV{lwG?BS]").when(strLookup0).toString();
      doReturn("java.lang.Object@6a6457cd", "Variable prefix ust not be null!").when(strLookup0).lookup(anyString());
      StrMatcher strMatcher0 = mock(StrMatcher.class, new ViolatedAssumptionAnswer());
      doReturn("", "set() is unsIpported", "set() is unsIpported", "startIndex must be valid", "").when(strMatcher0).toString();
      doReturn(1, 24, 1, 0, 256).when(strMatcher0).isMatch(any(char[].class) , anyInt() , anyInt() , anyInt());
      StrSubstitutor strSubstitutor0 = new StrSubstitutor(strLookup0, strMatcher0, strMatcher0, 's');
      char[] charArray0 = new char[2];
      String string0 = strSubstitutor0.replace(charArray0);
      assertEquals("Variable prefix ust not be null!", string0);
      
      strSubstitutor0.replace("AN@a9c_$(hg.W${k", 1, 0);
      assertEquals('s', strSubstitutor0.getEscapeChar());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HashMap<String, Locale.FilteringMode> hashMap0 = new HashMap<String, Locale.FilteringMode>();
      StrSubstitutor strSubstitutor0 = new StrSubstitutor((Map<String, Locale.FilteringMode>) hashMap0, "1", "1");
      strSubstitutor0.setEnableSubstitutionInVariables(true);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "1");
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      stringBuffer0.append((Object) locale_FilteringMode0);
      boolean boolean0 = strSubstitutor0.replaceIn(stringBuffer0);
      assertFalse(boolean0);
      assertEquals('$', strSubstitutor0.getEscapeChar());
  }
}
