/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 08:46:54 GMT 2019
 */

package org.mockito.asm.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.PrintWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mockito.asm.FieldVisitor;
import org.mockito.asm.MethodVisitor;
import org.mockito.asm.util.ASMifierClassVisitor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ASMifierClassVisitor_ESTest extends ASMifierClassVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visitInnerClass("q5>sV74e|S}A1~l", "", "oHO:I=7wP5q5#~t,8", 128);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[4];
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visitMethod(8192, (String) null, "vW`i.!ae", "]PJBCm7", stringArray0);
      aSMifierClassVisitor0.visit((-847), 224, "THETIC", "@g<^^LERC2*}9Q5{.class", "]PJBCm7", stringArray0);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.appendAccess(1692);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(736, "LocalVariableTypeTable", "8m/{a", "8m/{a", stringArray0);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[4];
      ASMifierClassVisitor.main(stringArray0);
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(8192, (String) null, "vW`i.!ae", "]PJBCm7", stringArray0);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ", new int[] {";
      aSMifierClassVisitor0.visitMethod(262144, ", new int[] {", "Iw6Z2h", "Iw6Z2h", stringArray0);
      try { 
        ASMifierClassVisitor.main(stringArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Class not found
         //
         verifyException("org.mockito.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(262144, 262144, "(/+0lDv!o1+6)", "7KZFdTNY", "-debug", stringArray0);
      aSMifierClassVisitor0.visit((-106), (-721), "-debug", (String) null, "!}QX\"#Nl,=4Q(Q>", stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(8, "mv.visitIincInsn(", "*}9Q5{", "Opcodes.INTEGER", stringArray0);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(47, 2495, "", "", "", aSMifierClassVisitor0.OPCODES);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(8201, "`|_d^q;$|X[", "`|_d^q;$|X[", ">:b2MUzT<Ow+3!nsi-j", aSMifierClassVisitor0.OPCODES);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(539, 8192, "H&lxThPk#2yJq.;", "j(4e4Rqe2NgjN4", "", aSMifierClassVisitor0.OPCODES);
      aSMifierClassVisitor0.visit(46, 247, "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "?Js|ug_w", "N@Pj)Y", (String[]) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit((-3438), (-2079), "", "2BO(iG~", "(short)", (String[]) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.appendAccess(196);
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(16384, "", "-debug", "-debug", "-debug");
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      Object object0 = new Object();
      aSMifierClassVisitor0.visitField(1400, "2>^FS_|6^HIXXHM,", "2>^FS_|6^HIXXHM,", "~Py6aTGep&", object0);
      aSMifierClassVisitor0.visit(46, 16384, "C*VPt*)u9>qL)m?vT", ".visitEnd();\n", "Opcodes.INTEGER", stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visitField((-1508), "@g<^^LERC2*}9Q5{.class", "@g<^^LERC2*}9Q5{.class", "@g<^^LERC2*}9Q5{.class", "@g<^^LERC2*}9Q5{.class");
      aSMifierClassVisitor0.appendAccess(1730);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visitField((-1508), "@g<^^LERC2*}9Q5{.class", "@g<^^LERC2*}9Q5{.class", "@g<^^LERC2*}9Q5{.class", "@g<^^LERC2*}9Q5{.class");
      aSMifierClassVisitor0.visit(50, 50, "@g<^^LERC2*}9Q5{.class", "X", "SourceFile", stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(16384, 16384, ".visitAnnotation(", "mv.visitFrame(Opcodes.F_CHOP,", "}, ", aSMifierClassVisitor0.TYPES);
      aSMifierClassVisitor0.visit(50, 50, ".visitAnnotation(", "wW7L^O", "wW7L^O", aSMifierClassVisitor0.TYPES);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visitInnerClass(" f:8I!MFar60Is/z_P", " f:8I!MFar60Is/z_P", "THETIC", (-1750));
      aSMifierClassVisitor0.visit(49, 49, ", ", ", ", "Eq#41c1F$+nsoWP", aSMifierClassVisitor0.OPCODES);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visitInnerClass("Q7B>:I/>{Lx'NY5t", "Q7B>:I/>{Lx'NY5t", "nt[] {", 2104);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(16384, ">+R]M", "LRWa_j5MpZ6", "^mZwAGt*dGB_T`A", aSMifierClassVisitor0.TYPES);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(128, (-1005), "", "`|_d^q;$|X[", "", aSMifierClassVisitor0.OPCODES);
      Object object0 = new Object();
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(889, "", "", "`|_d^q;$|X[", object0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visitInnerClass("Eq#41c1F$+nsoWP", ", ", "", 194);
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(16384, "", "-debug", "-debug", "-debug");
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit((-496), (-496), "", "", "", aSMifierClassVisitor0.TYPES);
      ASMifierClassVisitor.main(aSMifierClassVisitor0.OPCODES);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      ASMifierClassVisitor.main(aSMifierClassVisitor0.OPCODES);
      aSMifierClassVisitor0.visit(178, 16384, "w/R8QqT", "w/R8QqT", "QXBYKC[,a", aSMifierClassVisitor0.TYPES);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(8, (-1760), "mv.visitIincInsn(", "7KZFdTNY", "mv.visitIincInsn(", aSMifierClassVisitor0.OPCODES);
      aSMifierClassVisitor0.visit(8, 8, ")c;u#lp/ ", "*}9Q5{", "mv.visitIincInsn(", aSMifierClassVisitor0.TYPES);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(46, (-1175), "[1HTUKxJN5W", (String) null, "D!HF>8", stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(128, (-1006), "", "`|_d^q;$|X[", "", aSMifierClassVisitor0.TYPES);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(8201, "`|_d^q;$|X[", "`|_d^q;$|X[", ">:b2MUzT<Ow+3!nsi-j", aSMifierClassVisitor0.TYPES);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod((-2473), "i2g;ZKo@+Y5' _FEy", "i2g;ZKo@+Y5' _FEy", "mv.visitFrame(Opcodes.F_NEW, ", (String[]) null);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(4099, 16384, ">+R]M", ")o_ZqI9>e3C e,`{;", ")o_ZqI9>e3C e,`{;", (String[]) null);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(779, ">+R]M", ")o_ZqI9>e3C e,`{;", "b]vIZ2|", (String[]) null);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(16384, 16384, "V1_1", "V1_1", ":n1o)hUM*", stringArray0);
      aSMifierClassVisitor0.visit(2944, 1512, "V1_1", "*}9Q5{", "nt[] {", stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[3];
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visitMethod(49, "X4%87H06TGZlSD{:", "QDahi&11iZ=a<uV", ", ", stringArray0);
      FieldVisitor fieldVisitor0 = aSMifierClassVisitor0.visitField(16384, "", "-debug", "-debug", "-debug");
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(196653, 3686, "SourceFile", "", "SourceFile", aSMifierClassVisitor0.TYPES);
      aSMifierClassVisitor0.visit(6, 50, "8_1/", "import org.mockito.asm.*;\n", "import org.mockito.asm.*;\n", aSMifierClassVisitor0.TYPES);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(50, 50, "@g<^^LERC2*}9Q5{.class", "X", "SourceFile", stringArray0);
      aSMifierClassVisitor0.appendAccess(1730);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(49, 49, ", ", ", ", "Eq#41c1F$+nsoWP", aSMifierClassVisitor0.OPCODES);
      aSMifierClassVisitor0.visit(524288, (-895), "O0=c{rwNHhi\b", "Eq#41c1F$+nsoWP", "Eq#41c1F$+nsoWP", aSMifierClassVisitor0.TYPES);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visitMethod(8192, (String) null, "wW7L^O", (String) null, stringArray0);
      aSMifierClassVisitor0.visit(176, (-2852), "]PJBCm7", (String) null, "SourceFile", stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(48, 48, "KA", "KA", "KA", aSMifierClassVisitor0.TYPES);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod((-439), (String) null, "(c7|iJCbW\"k^3Egctl", "_9", aSMifierClassVisitor0.OPCODES);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visit(47, 2495, "", "", "", aSMifierClassVisitor0.OPCODES);
      aSMifierClassVisitor0.visit(128, (-1006), "", "`|_d^q;$|X[", "", aSMifierClassVisitor0.OPCODES);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.appendAccess(196);
      aSMifierClassVisitor0.visitInnerClass("\\", "pepowW7L^O.class", "Eq#41c1F$+nsoWP", 16384);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visitInnerClass("Eq#41c1F$+nsoWP", ", ", "", 194);
      aSMifierClassVisitor0.visitInnerClass("\\", "pepowW7L^O.class", "Eq#41c1F$+nsoWP", 16384);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visitInnerClass("(3M.{ mE%o:U7f$;", "(3M.{ mE%o:U7f$;", "-debug", 16384);
      aSMifierClassVisitor0.visitInnerClass("Q7B>:I/>{Lx'NY5t", "Q7B>:I/>{Lx'NY5t", "nt[] {", 2104);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.appendAccess(16384);
      aSMifierClassVisitor0.visit(3070, 3070, "&~K`+E[Z1dWjNt#o<.class", "&~K`+E[Z1dWjNt#o<.class", "&~K`+E[Z1dWjNt#o<.class", aSMifierClassVisitor0.OPCODES);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor((PrintWriter) null);
      aSMifierClassVisitor0.visit(2944, 1512, "V1_1", "*}9Q5{", "nt[] {", stringArray0);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(16384, ")c;u#lp/ ", "W_0\"BBy\"3#,gtB&U7", "Is/z_P", aSMifierClassVisitor0.OPCODES);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[3];
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.visitInnerClass("\\", "pepowW7L^O.class", "Eq#41c1F$+nsoWP", 16384);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(49, "X4%87H06TGZlSD{:", "QDahi&11iZ=a<uV", ", ", stringArray0);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.appendAccess(16384);
      ASMifierClassVisitor.main(aSMifierClassVisitor0.OPCODES);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.appendAccess(16384);
      aSMifierClassVisitor0.visit(91, 160, "U7NgY74a/i++Ccp[j", "*}9Q5{", "AnnotationDefault", aSMifierClassVisitor0.TYPES);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      MethodVisitor methodVisitor0 = aSMifierClassVisitor0.visitMethod(16384, ";QjN#MobBGm8", "ACC_SYNTHETIC.class", "ACC_SYNTHETIC.class", (String[]) null);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      ASMifierClassVisitor aSMifierClassVisitor0 = new ASMifierClassVisitor(printWriter0);
      aSMifierClassVisitor0.appendAccess(16384);
      aSMifierClassVisitor0.visit((-1193), (-1193), "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", aSMifierClassVisitor0.OPCODES);
  }
}
