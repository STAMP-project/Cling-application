/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 10:59:30 GMT 2019
 */

package org.apache.commons.math.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.FirstOrderConverter;
import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math.ode.GraggBulirschStoerIntegrator;
import org.apache.commons.math.ode.IntegratorException;
import org.apache.commons.math.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math.ode.StepHandler;
import org.apache.commons.math.ode.SwitchingFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1634.1776274), 0.1, (double[]) null, (double[]) null);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 7, 7, 0.001);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.001, (-1634.1776274), (-4843.83), 0.1);
      double double0 = graggBulirschStoerIntegrator1.filterStep((-26.041666666666668), true);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      assertEquals((-1634.1776274), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1493.226066269, 7, 1493.226066269, (-2202.9208558556907));
      graggBulirschStoerIntegrator0.setInitialStepSize(1493.226066269);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 0, 2, 12.0);
      assertEquals(102.23787196476167, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-4, 1.0E-4, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInitialStepSize(1.0E-4);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, 278, 1.0E-4);
      assertEquals(1.0E-4, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-551.7482819), 14.34375, (-843.0), 2651.0);
      double double0 = graggBulirschStoerIntegrator0.filterStep((-551.7482819), true);
      assertEquals((-14.34375), double0, 0.01);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 9, 9, 2.0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2.0, 2.0, 2.0, (-1314.3392580876648));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(6, 6).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[1];
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-2886), 2145599890, 0.8);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-0.2014737481327276), doubleArray0, 1.0E15, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 6, initial state vector has dimension 1
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0, 1556.948526838647, doubleArray0, doubleArray0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 0.0, doubleArray0, 0, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.948526838647, 1556.948526838647, 1556.948526838647, 1556.948526838647);
      graggBulirschStoerIntegrator0.setOrderControl(0, 0, 1556.948526838647);
      graggBulirschStoerIntegrator0.setStepsizeControl(0, 1556.948526838647, 1.0E15, 1556.948526838647);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0, 1556.948526838647, doubleArray0, (double[]) null);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator((-719.088342447), (-1186.722979007), (-3.4046500868740456E-4), (-1611.33168));
      // Undeclared exception!
      graggBulirschStoerIntegrator2.integrate(firstOrderDifferentialEquations0, 0, doubleArray0, (-1611.33168), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-4, 1.0E-4, doubleArray0, doubleArray0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 131).when(firstOrderDifferentialEquations0).getDimension();
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 0.8, doubleArray0, (-10), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 131, initial state vector has dimension 7
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.9485268386, 1556.9485268386, (-2607.0), (-2607.0));
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(13, 1556.9485268386, doubleArray0, doubleArray0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray1 = new double[7];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1493.226066269, doubleArray0, 1493.226066269, doubleArray1);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, final state vector has dimension 7
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.948526838647, 1556.948526838647, 1556.948526838647, 1556.948526838647);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0, 1556.948526838647, doubleArray0, doubleArray0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, (-3.75), 1.7976931348623157E308, (-1805));
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 560.92274758, doubleArray0, 0.1, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-551.7482819), 14.34375, (-843.0), 2651.0);
      graggBulirschStoerIntegrator0.setInitialStepSize(14.34375);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 9, 9, 2.0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1493.226066269, 7, 1493.226066269, (-2202.9208558556907));
      double double0 = graggBulirschStoerIntegrator0.filterStep(7, true);
      assertEquals(7.0, double0, 0.01);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 0, 2, 12.0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(102.23787196476167, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-1822.3561049792293), 0.0, 0.0);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-624.944305), 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-357764798), 0, 1.7976931348623157E308);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator1.integrate(firstOrderConverter0, 0.0, doubleArray0, 0.9999, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math.ode.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.948526838647, 1556.948526838647, 1556.948526838647, 1556.948526838647);
      graggBulirschStoerIntegrator0.setOrderControl(0, 0, 1556.948526838647);
      graggBulirschStoerIntegrator0.setStepsizeControl(0, 1556.948526838647, 1.0E15, 1556.948526838647);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0, 1556.948526838647, doubleArray0, doubleArray0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator1.getName();
      int int0 = 954370893;
      graggBulirschStoerIntegrator1.setStabilityCheck(false, 954370893, 4, 251.0);
      double double0 = (-0.022459085953066622);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, int0, doubleArray0, double0, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-551.7482819), 14.34375, (-843.0), 2651.0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(172).when(secondOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[3];
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 9, 9, 2.0);
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 2651.0, doubleArray0, (-287.682787764), doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 344, initial state vector has dimension 3
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1493.226066269, 7, 1493.226066269, (-2202.9208558556907));
      graggBulirschStoerIntegrator0.setInitialStepSize((-2365.6089509861695));
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 0, 2, 12.0);
      assertEquals(102.23787196476167, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.948526838647, 1556.948526838647, 1556.948526838647, 1556.948526838647);
      double[] doubleArray0 = new double[0];
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, (-3029.4389161881), doubleArray0, (-1611.33168), doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, 225, 0.6510416666666666);
      assertEquals(1556.948526838647, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3.4046500868740456E-4), (-1611.33168), (-1611.33168), (-3.4046500868740456E-4));
      assertEquals(0.7406767543466517, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 13.0, doubleArray0, 0.6510416666666666, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, 15, (-1672.41548262));
      assertEquals((-3.4046500868740456E-4), graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-247.6553615918), (-247.6553615918), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStepsizeControl(3224.27725536, 3224.27725536, 1095.5657189144401, 1095.5657189144401);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray1 = new double[0];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 3224.27725536, doubleArray1, 1607.663, doubleArray1);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: state vector has dimension 0, absolute tolerance vector has dimension 8
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2.0, 2.0, 2.0, (-1314.3392580876648));
      graggBulirschStoerIntegrator0.setInitialStepSize(2.0);
      graggBulirschStoerIntegrator0.setStepsizeControl(429, 1519.16608747323, (-695.4), (-728.3206154613719));
      assertEquals(2.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(41.995194961807, 41.995194961807, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStepsizeControl(2.14559989E9, 41.995194961807, (-4.436036387594894), 41.995194961807);
      try { 
        graggBulirschStoerIntegrator0.filterStep((-1.0), false);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // minimal step size (41.995) reached, integration needs 1
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.948526838647, 1556.948526838647, 1556.948526838647, 1556.948526838647);
      double[] doubleArray0 = new double[0];
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setStepsizeControl(1556.948526838647, 1556.948526838647, 1556.948526838647, 0.6510416666666666);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-719.088342447), (-1186.722979007), (-3.4046500868740456E-4), (-1611.33168));
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 0, doubleArray0, (-1611.33168), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1634.1776274), 1.3690605672803553, (double[]) null, (double[]) null);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1493.226066269, 7, 1493.226066269, (-2202.9208558556907));
      double double0 = graggBulirschStoerIntegrator1.filterStep(7, true);
      assertEquals(7.0, double0, 0.01);
      assertEquals(102.23787196476167, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.setStepsizeControl(2139.291, 1.3690605672803553, (-2202.9208558556907), 2139.291);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.948526838647, 1556.948526838647, 1556.948526838647, 1556.948526838647);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0, 1556.948526838647, doubleArray0, doubleArray0);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setStepsizeControl(1556.948526838647, 1556.948526838647, 1556.948526838647, 0.6510416666666666);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, (-3.4046500868740456E-4), doubleArray0, 496.1010594273176, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math.ode.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.948526838647, 1556.948526838647, 1556.948526838647, 1556.948526838647);
      double[] doubleArray0 = new double[0];
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setStepsizeControl(1556.948526838647, 1556.948526838647, 1556.948526838647, 0.6510416666666666);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 0, doubleArray0, (-1611.33168), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.9485268386, 1556.9485268386, (-2607.0), (-2607.0));
      graggBulirschStoerIntegrator0.setStepsizeControl(13, (-2607.0), 1.0E15, (-2607.0));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[2];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 1.0E15, doubleArray0, 13, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, initial state vector has dimension 2
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.9485268386, 1556.9485268386, (-2607.0), (-2607.0));
      graggBulirschStoerIntegrator0.setStepsizeControl(13, (-2607.0), 1.0E15, (-2607.0));
      double[] doubleArray0 = new double[0];
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray1 = new double[7];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1493.226066269, doubleArray0, 1493.226066269, doubleArray1);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, final state vector has dimension 7
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1634.1776274), (-1634.1776274), (-1634.1776274), 0.1);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 7, 7, 0.001);
      graggBulirschStoerIntegrator0.setInitialStepSize(125.0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1634.1776274, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2.0, 2.0, 2.0, (-1314.3392580876648));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(6, 6).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 6;
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 0.01, doubleArray0, 6, doubleArray0);
      assertEquals(1.9900000000000002, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-0.2014737481327276), (-0.2014737481327276), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInitialStepSize((-3958.7928865));
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 871, 0, 0.125);
      assertEquals(0.2014737481327276, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1634.1776274), 1.3690605672803553, (double[]) null, (double[]) null);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1493.226066269, 7, 1493.226066269, (-2202.9208558556907));
      double double0 = graggBulirschStoerIntegrator1.filterStep(7, true);
      assertEquals(102.23787196476167, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      assertEquals(7.0, double0, 0.01);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 7, 7, (-38.0));
      assertEquals((-1634.1776274), graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1852.8948, 0.5, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 1840261380, 22, (-483.0));
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 2895.75538, doubleArray0, (-1508.4228282917), doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math.ode.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-0.2014737481327276), (-0.2014737481327276), doubleArray0, doubleArray0);
      double double0 = graggBulirschStoerIntegrator0.filterStep((-0.2014737481327276), true);
      assertEquals(0.2014737481327276, double0, 0.01);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 871, 0, 0.125);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.2014737481327276, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.948526838647, 1556.948526838647, 1556.948526838647, 1556.948526838647);
      double[] doubleArray0 = new double[0];
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 997, 1345, (-4.0));
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, (-3.75), 1.7976931348623157E308, (-1805));
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 560.92274758, doubleArray0, 0.1, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-1822.3561049792293), 0.0, 0.0);
      graggBulirschStoerIntegrator0.setStepsizeControl((-1822.3561049792293), 1.0E-4, 0.0, 1.7976931348623157E308);
      assertEquals((-1822.3561049792293), graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-247.6553615918), (-247.6553615918), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStepsizeControl(3224.27725536, (-247.6553615918), 0.8, 3142.41);
      graggBulirschStoerIntegrator0.setInitialStepSize(19.985053242002433);
      assertEquals(247.6553615918, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1634.1776274), 0.1, (double[]) null, (double[]) null);
      graggBulirschStoerIntegrator0.setStepsizeControl(Double.NaN, 1739, (-1.1270175653862835), 2385.8356606241);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2.0, 2.0, 2.0, (-1314.3392580876648));
      graggBulirschStoerIntegrator0.setOrderControl(871, 2.0, 871);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(6, 6).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[6];
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 0.01, doubleArray0, 6, doubleArray0);
      assertEquals(1.9900000000000002, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.948526838647, 1556.948526838647, 1556.948526838647, 1556.948526838647);
      graggBulirschStoerIntegrator0.setStepsizeControl(0, 1556.948526838647, 1.0E15, 1556.948526838647);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0, 1556.948526838647, doubleArray0, (double[]) null);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 1.0001, doubleArray0, 115.16, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.948526838647, 1556.948526838647, 1556.948526838647, 1556.948526838647);
      double[] doubleArray0 = new double[0];
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setOrderControl(2145337420, 0.5, (-476.6727));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-719.088342447), (-1186.722979007), (-3.4046500868740456E-4), (-1611.33168));
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, (-2925.223845648), doubleArray0, (-4.450312892752409), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.948526838647, 1556.948526838647, 1556.948526838647, 1556.948526838647);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0, 1556.948526838647, doubleArray0, (double[]) null);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setStepsizeControl(1556.948526838647, 1556.948526838647, 1556.948526838647, 0.6510416666666666);
      // Undeclared exception!
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 1.0001, doubleArray0, 115.16, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1634.1776274), (-1634.1776274), doubleArray0, doubleArray0);
      StepHandler stepHandler0 = mock(StepHandler.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(stepHandler0).requiresDenseOutput();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      double double0 = graggBulirschStoerIntegrator0.filterStep(2652.42860475, false);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1634.1776274, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals((-1634.1776274), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.948526838647, 1556.948526838647, (-2607.0), (-2607.0));
      graggBulirschStoerIntegrator0.setOrderControl(0, 0, 1556.948526838647);
      double[] doubleArray0 = new double[0];
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 0.0, doubleArray0, 0, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.7976931348623157E308, 1.7976931348623157E308, 1.7976931348623157E308, 1.7976931348623157E308);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 1.7976931348623157E308, 1.7976931348623157E308, 1319);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      double[] doubleArray0 = new double[0];
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 0.0, doubleArray0, 0.0, doubleArray0);
        fail("Expecting exception: IntegratorException");
      
      } catch(IntegratorException e) {
         //
         // too small integration interval: length = 0
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1493.226066269, 7, 1493.226066269, (-2202.9208558556907));
      double double0 = graggBulirschStoerIntegrator0.filterStep(7, true);
      assertEquals(7.0, double0, 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl(871, (-2202.9208558556907), 1493.226066269);
      assertEquals(102.23787196476167, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-1634.1776274);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1634.1776274), (-1634.1776274), doubleArray0, doubleArray0);
      StepHandler stepHandler0 = mock(StepHandler.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(stepHandler0).requiresDenseOutput();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 1124.4977, (-1634.1776274), 10);
      assertEquals(1634.1776274, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.948526838647, 1556.948526838647, 1556.948526838647, 1556.948526838647);
      graggBulirschStoerIntegrator0.setOrderControl(0, 0, 1556.948526838647);
      double[] doubleArray0 = new double[0];
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, (-3.75), 1.7976931348623157E308, (-1805));
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 560.92274758, doubleArray0, 0.1, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0, 1556.948526838647, doubleArray0, (double[]) null);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setOrderControl(0, 1556.948526838647, 0.6510416666666666);
      graggBulirschStoerIntegrator0.integrate(firstOrderDifferentialEquations0, 1.0001, doubleArray0, 115.16, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1556.948526838647, 1556.948526838647, 1556.948526838647, 1556.948526838647);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0, 1556.948526838647, doubleArray0, (double[]) null);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = mock(FirstOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(firstOrderDifferentialEquations0).getDimension();
      StepHandler stepHandler0 = graggBulirschStoerIntegrator0.getStepHandler();
      graggBulirschStoerIntegrator1.setStepHandler(stepHandler0);
      graggBulirschStoerIntegrator1.integrate(firstOrderDifferentialEquations0, 1.0001, doubleArray0, 115.16, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-646.1486737916588), (-646.1486737916588), (-646.1486737916588), (-646.1486737916588));
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, (-646.1486737916588), (-11.573902539959631), 10);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, (-646.1486737916588), doubleArray0, 10, doubleArray0);
  }
}
