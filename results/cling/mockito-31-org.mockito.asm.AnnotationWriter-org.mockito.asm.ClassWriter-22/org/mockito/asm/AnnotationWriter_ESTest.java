/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 09:10:42 GMT 2019
 */

package org.mockito.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.asm.AnnotationVisitor;
import org.mockito.asm.AnnotationWriter;
import org.mockito.asm.ByteVector;
import org.mockito.asm.ClassWriter;
import org.mockito.asm.FieldVisitor;
import org.mockito.asm.FieldWriter;
import org.mockito.asm.Item;
import org.mockito.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class AnnotationWriter_ESTest extends AnnotationWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.visit(18, 5024, "8YH", "", ">JhHO=D+R]&wETapd", (String[]) null);
      classWriter0.toByteArray();
      FieldVisitor fieldVisitor0 = classWriter0.visitField(35, ">am%XYeOsm80", "1rg6Y8;aC#k6", ">JhHO=D+R]&wETapd", ">JhHO=D+R]&wETapd");
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-16));
      classWriter0.visitField((-955), "8YH", "8YH", ">JhHO=D+R]&wETapd", ">JhHO=D+R]&wETapd");
      classWriter0.visit((-602), 4996, "RJBPo:Qn6h!)CB&d", "aHAmFs_9qzM[(j%2", "aHAmFs_9qzM[(j%2", (String[]) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(176, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      int int0 = classWriter0.newMethod("org.mockito.asm.ClassWriter", "", "3tT", false);
      assertEquals(6, int0);
      
      classWriter0.visit((-16), 4996, "8YH", "", ">JhHO=D+R]&wETapd", (String[]) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(128, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitAnnotation("mk", false);
      classWriter0.toByteArray();
      Short short0 = new Short((short)0);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(16777153, "mk", "jXPB", "Synthetic", short0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitAnnotation("", false);
      classWriter0.toByteArray();
      Item item0 = classWriter0.newDouble(1);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.newClassItem("mk");
      classWriter0.visitOuterClass("mk", "mk", "mk");
      classWriter0.visitAnnotation("mk", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(107, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitAnnotation("", false);
      classWriter0.toByteArray();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 670, "Tbd_a.<p_Z`$f#", "", "Tbd_a.<p_Z`$f#", "1Deprecated");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitAnnotation("qk", false);
      Boolean boolean0 = Boolean.TRUE;
      classWriter0.visitField(16777153, "n1z", "InnerClasses", "t[N>5V=", boolean0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(196, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("mk", false);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        annotationVisitor0.visit("InnerClasses", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.mockito.asm.ClassWriter@12fe670b
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitAnnotation("", false);
      classWriter0.addType("");
      int int0 = classWriter0.addType("1Deprecated");
      assertEquals(2, int0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(69, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitAnnotation("", false);
      classWriter0.addType("");
      int int0 = classWriter0.addType("");
      assertEquals(1, int0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(69, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      int int0 = classWriter0.addUninitializedType("8YH", (-939));
      assertEquals(1, int0);
      
      classWriter0.visitAnnotation("8YH", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(72, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.newMethod("org.mockito.asm.ClassWriter", "", "3tT", false);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(1, "g}|SK ", ">JhHO=D+R]&wETapd", "8YH", ">JhHO=D+R]&wETapd");
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("", false);
      classWriter0.newDouble(1);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        annotationVisitor0.visit("", byteVector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.mockito.asm.ByteVector@34f3f748
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.visitField(2, "Wh{;rJgh8g9", "Wh{;rJgh8g9", "Wh{;rJgh8g9", "Wh{;rJgh8g9");
      int int0 = classWriter0.addUninitializedType("Wh{;rJgh8g9", 1);
      assertEquals(1, int0);
      
      int int1 = classWriter0.addType("Wh{;rJgh8g9");
      assertEquals(2, int1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      classWriter0.visitField((-925), "8YH", "8YH", ">JhHO=D+R]&#xwETapd", ">JhHO=D+R]&#xwETapd");
      int int0 = classWriter0.addType(">JhHO=D+R]&#xwETapd");
      assertEquals(1, int0);
      
      int int1 = classWriter0.addType(">JhHO=D+R]&#xwETapd");
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("mk", true);
      classWriter0.addUninitializedType("mk", 235);
      // Undeclared exception!
      try { 
        annotationVisitor0.visit("Wh{;reJgh8g9", annotationVisitor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.mockito.asm.AnnotationWriter@49fc3d13
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector(2);
      ClassWriter classWriter0 = new ClassWriter(2);
      Byte byte0 = new Byte((byte) (-79));
      classWriter0.visitField(1, "dmORy1J*V;", "dmORy1J*V;", "InnerClasses", byte0);
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 7);
      annotationWriter0.visit("dmORy1J*V;", byte0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      Short short0 = new Short((short)0);
      classWriter0.visitField(1, "Wh{;rJgh8g9", "Wh{;rJgh8g9", "Wh{;rJgh8g9", short0);
      classWriter0.visitAnnotation("Wh{;rJgh8g9", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(135, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      int int0 = classWriter0.newMethod("InnerClasses", "qk", "qk", false);
      assertEquals(5, int0);
      
      classWriter0.visitAnnotation("n1z", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(103, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777132);
      classWriter0.visitAnnotation("mk", true);
      classWriter0.newDouble((-113.25114372));
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(78, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitOuterClass("mk", "mk", "mk");
      classWriter0.visitAnnotation("mk", true);
      classWriter0.visitInnerClass("mk", "Wh{;reJgh8g9", "!.)", 268435467);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(160, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.visitField(2, "Wh{;rJgh8g9", "Wh{;rJgh8g9", "Wh{;rJgh8g9", "Wh{;rJgh8g9");
      classWriter0.visitAnnotation("Wh{;rJgh8g9", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(133, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      Boolean boolean0 = Boolean.TRUE;
      classWriter0.visitField(16777153, "n1z", "InnerClasses", "t[N>5V=", boolean0);
      classWriter0.visitAnnotation("t[N>5V=", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(189, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitAnnotation("n1z", true);
      classWriter0.addType("K],");
      int int0 = classWriter0.addType("`|z%XGF:");
      assertEquals(2, int0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(70, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      classWriter0.addType(">JhHO=D+R]&#xwETapd");
      int int0 = classWriter0.addType(">JhHO=D+R]&#xwETapd");
      assertEquals(1, int0);
      
      classWriter0.visitAnnotation(">JhHO=D+R]&#xwETapd", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(86, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitAnnotation("mk", true);
      classWriter0.addUninitializedType("mk", 235);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(69, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("qk", false);
      AnnotationVisitor annotationVisitor1 = classWriter0.visitAnnotation("n1z", true);
      Short short0 = new Short((short) (-4401));
      annotationVisitor0.visit("K],", short0);
      classWriter0.toByteArray();
      annotationVisitor0.visit("6o", short0);
      assertNotSame(annotationVisitor0, annotationVisitor1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitSource("Tbd_a.<p_Z`$f#", "");
      classWriter0.newLong(1);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(100, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.visitField(2, "Wh{;rJgh8g9", "Wh{;rJgh8g9", "Wh{;rJgh8g9", "Wh{;rJgh8g9");
      classWriter0.visitField(2, "Wh{;rJgh8g9", "", "Wh{;rJgh8g9", "Wh{;rJgh8g9");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(120, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777157);
      classWriter0.newMethodItem("", "Tbd_a.<p_Z`$f#", "value ", true);
      classWriter0.visitSource("Tbd_a.<p_Z`$f#", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(116, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777157);
      classWriter0.visitSource("Tbd_a.<p_Z`$f#", "");
      classWriter0.toByteArray();
      Item item0 = classWriter0.newDouble(1);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitSource("Tbd_a.<p_Z`$f#", "");
      classWriter0.newFieldItem("1Deprecated", "", "");
      classWriter0.visitOuterClass("1Deprecated", "", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(149, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitSource("Tbd_a.<p_Z`$f#", "");
      classWriter0.toByteArray();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 670, "Tbd_a.<p_Z`$f#", "", "Tbd_a.<p_Z`$f#", "1Deprecated");
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitSource("Tbd_a.<p_Z`$f#", "");
      classWriter0.addType("");
      int int0 = classWriter0.addType("1Deprecated");
      assertEquals(2, int0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(91, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      Boolean boolean0 = Boolean.FALSE;
      classWriter0.visitField(2, "RJBPo:Qn6h!)CB&d", "RJBPo:Qn6h!)CB&d", "RJBPo:Qn6h!)CB&d", boolean0);
      classWriter0.visitSource("ac][?g/#(lk7q7", "Tbd_a.<p_Z`$f#");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(181, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitSource("Tbd_a.<p_Z`$f#", "");
      int int0 = classWriter0.addType("");
      int int1 = classWriter0.addType("");
      assertTrue(int1 == int0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(91, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777152);
      classWriter0.visitSource("Tbd_a.<p_Z`$f#", "");
      int int0 = classWriter0.addUninitializedType("ZDX+=", 167);
      assertEquals(1, int0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(91, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("qk", false);
      classWriter0.visitSource("Nx", "");
      Short short0 = new Short((short) (-4401));
      annotationVisitor0.visit("K],", short0);
      classWriter0.toByteArray();
      annotationVisitor0.visit("6o", short0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      Item item0 = classWriter0.newInteger(1);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(29, byteArray0.length);
      
      Item item1 = classWriter0.newInteger(1);
      assertSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      Byte byte0 = new Byte((byte) (-79));
      classWriter0.visitField(1, "dmORy1J*V;", "dmORy1J*V;", "KN)s\"i", byte0);
      classWriter0.visitAnnotation("value ", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(154, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      Byte byte0 = new Byte((byte) (-79));
      classWriter0.visitField(1, "dmORy1J*V;", "dmORy1J*V;", "SourceDebugExtension", byte0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(117, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      Boolean boolean0 = Boolean.FALSE;
      classWriter0.visitField(2, "RJBPo:Qn6h!)CB&d", "RJBPo:Qn6h!)CB&d", "RJBPo:Qn6h!)CB&d", boolean0);
      classWriter0.visitAnnotation("+UHl", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(149, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      Boolean boolean0 = Boolean.FALSE;
      classWriter0.visitField(2, "RJBPo:Qn6h!)CB&d", "RJBPo:Qn6h!)CB&d", "RJBPo:Qn6h!)CB&d", boolean0);
      classWriter0.visitAnnotation("RJBPo:Qn6h!)CB&d", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(140, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      Boolean boolean0 = Boolean.TRUE;
      classWriter0.visitField(2, "RJBPo:Qn6h!)CB&d", "RJBPo:Qn6h!)CB&d", "RJBPo:Qn6h!)CB&d", boolean0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "RJBPo:Qn6h!)CB&d";
      stringArray0[1] = "RJBPo:Qn6h!)CB&d";
      stringArray0[2] = "i";
      stringArray0[3] = "";
      stringArray0[4] = "0";
      classWriter0.visit(2, (-1), "i", "", "i", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(178, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      Boolean boolean0 = Boolean.valueOf(true);
      classWriter0.newConstItem(boolean0);
      classWriter0.visit((-1334), (-1334), "", "org.mockito.asm.ClassWriter", "Deprecated", (String[]) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(107, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      Type type0 = Type.getObjectType("2h?[V");
      classWriter0.visitField(16777222, "4:/km{}88b+1Mpt/i~", "2h?[V", ">JhHO=D+R]&wETapd", type0);
      classWriter0.visitAnnotation(".class", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(177, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      Type type0 = Type.getObjectType("2h?[V");
      classWriter0.visitField(2, "4:/km{}88b+1Mpt/i~", "2h?[V", ">JhHO=D+R]&wETapd", type0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(128, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Type type0 = Type.BYTE_TYPE;
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitField(192, "zalue ", "zalue ", "long", type0);
      classWriter0.visitInnerClass((String) null, "zalue ", "7se^%i|6{+zE^+", 913);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitOuterClass("mk", "mk", "mk");
      Type type0 = Type.VOID_TYPE;
      FieldVisitor fieldVisitor0 = classWriter0.visitField(6, "mk", "", "", type0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      Type type0 = Type.DOUBLE_TYPE;
      classWriter0.visitField(4096, "zalue ", "zalue ", "long", type0);
      classWriter0.visitOuterClass("", "long", (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.visitInnerClass("#e", (String) null, "RJBPo:Qn6h!)CB&d", 18);
      Type type0 = Type.INT_TYPE;
      FieldVisitor fieldVisitor0 = classWriter0.visitField(18, "ac][?g/#(lk7q7", "", "", type0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.visitField((-993), "8YH", "8YH", ">JhHO=D+R]&wcETapd", ">JhHO=D+R]&wcETapd");
      ClassWriter classWriter1 = new ClassWriter(1688);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "8YH";
      stringArray0[1] = "s S<;olqrW,bfr{iCwm";
      stringArray0[2] = "~ZY d2}s!pU]&";
      stringArray0[3] = "s S<;olqrW,bfr{iCwm";
      stringArray0[4] = ">JhHO=D+R]&wcETapd";
      stringArray0[5] = "\":/?2Gj>`";
      stringArray0[6] = "\":/?2Gj>`";
      stringArray0[7] = "\":/?2Gj>`";
      classWriter1.visitMethod(1, "s S<;olqrW,bfr{iCwm", "s S<;olqrW,bfr{iCwm", "long", stringArray0);
      byte[] byteArray0 = classWriter1.toByteArray();
      assertEquals(188, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitOuterClass("mk", "mk", "mk");
      int int0 = classWriter0.newMethod("InnerClasses", "mk", "mk", true);
      assertEquals(6, int0);
      
      classWriter0.visitField(235, "*", "mk", "", (Object) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(123, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitOuterClass("qk", "qk", "qk");
      classWriter0.newMethod("InnerClasses", "qk", "qk", false);
      classWriter0.visitOuterClass("`|z%XGF:", (String) null, "K],");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitOuterClass("mk", "mk", "mk");
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("mk", true);
      classWriter0.newMethod("InnerClasses", "mk", "mk", true);
      // Undeclared exception!
      try { 
        annotationVisitor0.visit("Wh{;reJgh8g9", annotationVisitor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.mockito.asm.AnnotationWriter@60e3a996
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitOuterClass("mk", "mk", "mk");
      classWriter0.visitAnnotation("mk", true);
      int int0 = classWriter0.newMethod("InnerClasses", "mk", "mk", true);
      assertEquals(6, int0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(128, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.newNameType("zalue ", "long");
      classWriter0.newFieldItem("zalue ", "zalue ", "long");
      classWriter0.visitOuterClass("", "long", (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitOuterClass("", "", "");
      classWriter0.visitOuterClass("", "", "");
      classWriter0.visitInnerClass("pvP%Aik4", (String) null, "Exceptions", (-576));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitOuterClass("qk", "qk", "qk");
      classWriter0.visitAnnotation("qk", false);
      int int0 = classWriter0.newMethod("InnerClasses", "qk", "qk", false);
      assertEquals(6, int0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(130, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      int int0 = classWriter0.newNameType("zalue ", "long");
      assertEquals(3, int0);
      
      classWriter0.newFieldItem("zalue ", "zalue ", "long");
      classWriter0.visit(1, 6, "", "long", "org.mockito.asm.ClassWriter", (String[]) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(112, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitOuterClass("mk", "mk", "mk");
      int int0 = classWriter0.newMethod("InnerClasses", "mk", "mk", true);
      assertEquals(6, int0);
      
      classWriter0.visitInnerClass("mk", "Wh{;reJgh8g9", "!.)", 268435467);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(128, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitOuterClass("mk", "mk", "mk");
      classWriter0.newMethod("InnerClasses", "mk", "mk", true);
      classWriter0.visitSource((String) null, "");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitOuterClass("qk", "qk", "qk");
      int int0 = classWriter0.newMethod("InnerClasses", "qk", "qk", false);
      assertEquals(6, int0);
      
      classWriter0.visitSource("qk", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(138, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      Type type0 = Type.VOID_TYPE;
      classWriter0.visitField(16, "ac][?g/#(lk7q7", "", "", type0);
      classWriter0.visitSource("ac][?g/#(lk7q7", "Tbd_a.<p_Z`$f#");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(167, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitOuterClass("`|z%XGF:", (String) null, "K],");
      Type type0 = Type.VOID_TYPE;
      FieldVisitor fieldVisitor0 = classWriter0.visitField((short) (-4401), "InnerClasses", "qk", (String) null, type0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.visitInnerClass("Wh{;rJgh8g9", "Wh{;rJgh8g9", "Wh{;rJgh8g9", 1);
      Type type0 = Type.DOUBLE_TYPE;
      classWriter0.visitField(807, "java/lang/Class", "Wh{;rJgh8g9", "9Zh;KyII6mtE0", type0);
      classWriter0.visitInnerClass("9Zh;KyII6mtE0", "5&)2x[", (String) null, 5);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector(2);
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.visitSource((String) null, "value ");
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, byteVector0, 2);
      // Undeclared exception!
      try { 
        annotationWriter0.visit("java/lang/String", (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777132);
      classWriter0.visitSource("Class not found", (String) null);
      classWriter0.toByteArray();
      ByteVector byteVector0 = new ByteVector(2013);
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, false, byteVector0, (ByteVector) null, 65);
      // Undeclared exception!
      try { 
        annotationWriter0.visit("", byteVector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.mockito.asm.ByteVector@26bfebfd
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitAnnotation("", false);
      classWriter0.newLong(1);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(78, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      ByteVector byteVector0 = classWriter0.pool;
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, true, byteVector0, byteVector0, 47);
      byte[] byteArray0 = classWriter0.toByteArray();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      classWriter0.newLong(32L);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (short)3612);
      // Undeclared exception!
      try { 
        annotationWriter0.visit("Deprecated", bufferedInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.BufferedInputStream@8b37a5
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777140);
      classWriter0.visitAnnotation("mk", true);
      classWriter0.newLong((-332L));
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(78, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.visit((-2743), (-2743), "", "org.mockito.asm.ClassWriter", "Class not found", (String[]) null);
      classWriter0.toByteArray();
      Item item0 = classWriter0.newLong(32L);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.newFloat(2);
      classWriter0.visitAnnotation("8YH", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(77, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      Boolean boolean0 = Boolean.FALSE;
      classWriter0.visitField((-1), "~ke", "~ke", "~ke", boolean0);
      Item item0 = classWriter0.newFloat((-1));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitAnnotation("mk", true);
      classWriter0.toByteArray();
      Item item0 = classWriter0.newFloat((-4074.86F));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.visit(18, 4996, "8YH", "", ">JhHO=D+R]&wETapd", (String[]) null);
      classWriter0.toByteArray();
      Item item0 = classWriter0.newFloat(4996);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visit((-1334), (-1334), "", "org.mockito.asm.ClassWriter", "Deprecated", (String[]) null);
      classWriter0.toByteArray();
      Item item0 = classWriter0.newFloat(16777153);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.visitInnerClass("Wh{;rJgh8g9", "Wh{;rJgh8g9", "Wh{;rJgh8g9", 1);
      Type type0 = Type.DOUBLE_TYPE;
      classWriter0.visitField(807, "", "Wh{;rJgh8g9", "9Zh;KyII6mtE0", type0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(150, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.visitInnerClass("Wh{;rJgh8g9", "Wh{;rJgh8g9", "Wh{;rJgh8g9", 1);
      int int0 = classWriter0.addType("Wh{;rJgh8g9");
      assertEquals(1, int0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(72, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("mk", true);
      classWriter0.visitInnerClass("mk", "Wh{;reJgh8g9", "!.)", 268435467);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        annotationVisitor0.visit("Wh{;reJgh8g9", annotationVisitor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.mockito.asm.AnnotationWriter@1b1e0b5d
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitAnnotation("mk", false);
      classWriter0.toByteArray();
      Item item0 = classWriter0.newMethodItem("", "Class not found", "", true);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visit((-1334), (-1334), "", "org.mockito.asm.ClassWriter", "Deprecated", (String[]) null);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.newMethod("[]", "#m", (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      Type type0 = Type.VOID_TYPE;
      classWriter0.visitField(16, "ac][?g/#(lk7q7", "", "", type0);
      classWriter0.visitAnnotation("RJBPo:Qn6h!)CB&d", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(162, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      Type type0 = Type.INT_TYPE;
      classWriter0.visitField(7, "8YH", "RJBPo:Qn6h!)CB&d", ">JhHO=D+R]&wETapd", type0);
      classWriter0.visit(2, 4996, "RJBPo:Qn6h!)CB&d", "aHAmFs_9qzM[(j%2", "aHAmFs_9qzM[(j%2", (String[]) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(179, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitAnnotation("", false);
      classWriter0.newFieldItem("1Deprecated", "", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(96, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      Item item0 = classWriter0.newFieldItem("zalue ", "zalue ", "]q");
      ByteVector byteVector0 = new ByteVector();
      AnnotationWriter annotationWriter0 = new AnnotationWriter(classWriter0, true, byteVector0, byteVector0, 16777153);
      // Undeclared exception!
      try { 
        annotationWriter0.visit("]q", item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.mockito.asm.Item@40704c5e
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.newFieldItem("mk", "mk", "mk");
      classWriter0.visitAnnotation("-=AvswX9UNGC3T", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(99, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      int int0 = classWriter0.newField("je4IZ0ZSh", "\":/?2Gj>`", "");
      assertEquals(6, int0);
      
      classWriter0.visit(18, 4996, "8YH", "", "je4IZ0ZSh", (String[]) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(111, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visit((-1334), (-1334), "", "org.mockito.asm.ClassWriter", "Deprecated", (String[]) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(102, byteArray0.length);
      
      int int0 = classWriter0.newField("K,ToX6-}ew", "K,ToX6-}ew", "Deprecated");
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-16));
      Type type0 = Type.INT_TYPE;
      classWriter0.visitField(7, "8YH", "RJBPo:Qn6h!)CB&d", ">JhHO=D+R]&wETapd", type0);
      classWriter0.visit((-602), 4996, "RJBPo:Qn6h!)CB&d", "aHAmFs_9qzM[(j%2", "aHAmFs_9qzM[(j%2", (String[]) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(161, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitAnnotation("mk", true);
      classWriter0.toByteArray();
      Character character0 = Character.valueOf('$');
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-871), "|@=!", "mk", "|@=!", character0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.toByteArray();
      Character character0 = Character.valueOf('$');
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-871), "|@=!", "mk", "|@=!", character0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitAnnotation("", false);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 250);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      Boolean boolean0 = Boolean.TRUE;
      classWriter0.visitField(2, "RJBPo:Qn6h!)CB&d", "RJBPo:Qn6h!)CB&d", "RJBPo:Qn6h!)CB&d", boolean0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-455), 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitAnnotation("mk", false);
      classWriter0.toByteArray();
      Type type0 = Type.VOID_TYPE;
      FieldVisitor fieldVisitor0 = classWriter0.visitField(6, "mk", "", "", type0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitAnnotation("mk", true);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 2155);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777153);
      classWriter0.visitSource("Tbd_a.<p_Z`$f#", "");
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 250);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }
}
