/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 20:39:50 GMT 2019
 */

package org.apache.commons.lang3.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.Map;
import org.apache.commons.lang3.builder.StandardToStringStyle;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ToStringStyle_ESTest extends ToStringStyle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      
      standardToStringStyle0.setSummaryObjectEndText((String) null);
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSummaryObjectEndText(">u'Z>");
      assertEquals(">u'Z>", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      standardToStringStyle0.setSummaryObjectStartText((String) null);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSummaryObjectStartText("@.a}ur");
      assertEquals("@.a}ur", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      
      standardToStringStyle0.setSizeEndText((String) null);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSizeEndText("{K@>n(mEhV*X");
      assertEquals("{K@>n(mEhV*X", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      
      standardToStringStyle0.setSizeStartText((String) null);
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.setSizeStartText("mY6!1=$N\"KZ");
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseClassName());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      standardToStringStyle0.setNullText((String) null);
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setNullText("u!2zn.l%ptbn70]j");
      assertEquals("u!2zn.l%ptbn70]j", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      
      standardToStringStyle0.setFieldSeparator("ctA}1{^<Sd");
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      standardToStringStyle0.setFieldNameValueSeparator((String) null);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setFieldNameValueSeparator("=-Y.W");
      assertEquals("=-Y.W", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      
      standardToStringStyle0.setContentEnd((String) null);
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setContentEnd(".fHP||~3:HYKHQ");
      assertEquals(".fHP||~3:HYKHQ", standardToStringStyle0.getContentEnd());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      standardToStringStyle0.setContentStart((String) null);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      standardToStringStyle0.setContentStart("");
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      standardToStringStyle0.setArraySeparator((String) null);
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setArraySeparator("e");
      assertEquals("e", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      
      standardToStringStyle0.setArrayEnd((String) null);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setArrayEnd("=-Y.W");
      assertEquals("=-Y.W", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      standardToStringStyle0.setArrayStart((String) null);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setArrayStart("java.specification.name");
      assertEquals("java.specification.name", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, (String) null, (Object) stringBuffer0, (Boolean) null);
      assertEquals(",", stringBuffer0.toString());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendIdentityHashCode((StringBuffer) null, (Object) null);
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendStart(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle");
      assertEquals("String[", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      toStringStyle0.MULTI_LINE_STYLE.appendClassName((StringBuffer) null, (Object) null);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SIMPLE_STYLE.appendClassName(stringBuffer0, stringBuffer0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(0, stringBuffer0.length());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(66);
      boolean[] booleanArray0 = new boolean[0];
      standardToStringStyle0.append(stringBuffer0, "=-Y.W", booleanArray0, (Boolean) null);
      assertEquals("=-Y.W={},", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "v8VD1=", (boolean[]) null, boolean0);
      assertEquals("v8VD1==<null>,", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean[] booleanArray0 = new boolean[0];
      Boolean boolean0 = Boolean.valueOf("yRZnu!p");
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "yRZnu!p", booleanArray0, boolean0);
      assertEquals(17, stringBuffer0.length());
      assertEquals("yRZnu!p=<size=0>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "}Qsq|U?y'C7xH3>s]E4", (float[]) null, boolean0);
      assertEquals("}Qsq|U?y'C7xH3>s]E4=<null>\n  ", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      double[] doubleArray0 = new double[2];
      standardToStringStyle0.appendDetail(stringBuffer0, "UOo-p63@zpudI,bG", doubleArray0);
      assertEquals("{0.0,0.0}", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "ctA}1{^<Sd");
      double[] doubleArray0 = new double[1];
      Boolean boolean0 = new Boolean(true);
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "ctA}1{^<Sd", doubleArray0, boolean0);
      assertEquals("ctA}1{^<SdctA}1{^<Sd={0.0}\n  ", stringBuffer0.toString());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "p2;G", (double[]) null, (Boolean) null);
      assertEquals(14, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      char[] charArray0 = new char[0];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle", charArray0, boolean0);
      assertEquals(52, stringBuffer0.length());
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle={}\n  ", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "a3$5'^=sL`", (char[]) null, boolean0);
      assertEquals("a3$5'^=sL`=<null>\n  ", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      byte[] byteArray0 = new byte[2];
      toStringStyle0.SIMPLE_STYLE.appendDetail(stringBuffer0, ">@p4Tju8;-R/]@", byteArray0);
      assertEquals("{0,0}", stringBuffer0.toString());
      assertEquals(5, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      byte[] byteArray0 = new byte[0];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "awt.toolkit", byteArray0, boolean0);
      assertEquals("awt.toolkit={},", stringBuffer0.toString());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, " ,4", (byte[]) null, boolean0);
      assertEquals(" ,4=<null>\n  ", stringBuffer0.toString());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      short[] shortArray0 = new short[2];
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendDetail(stringBuffer0, "4!1 RDvd8(4", shortArray0);
      assertEquals(5, stringBuffer0.length());
      assertEquals("{0,0}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      short[] shortArray0 = new short[0];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "j+/J7|R<$wt", shortArray0, boolean0);
      assertEquals("{},", stringBuffer0.toString());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("Gs,#r.xPyU${>");
      Boolean boolean0 = Boolean.valueOf(true);
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "Gs,#r.xPyU${>", (short[]) null, boolean0);
      assertEquals("Gs,#r.xPyU${>Gs,#r.xPyU${>=<null>,", stringBuffer0.toString());
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(2477);
      int[] intArray0 = new int[2];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "rB+GPY>dz", intArray0, boolean0);
      assertEquals(6, stringBuffer0.length());
      assertEquals("{0,0},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      long[] longArray0 = new long[2];
      standardToStringStyle0.appendDetail(stringBuffer0, "7a4", longArray0);
      assertEquals("{0,0}", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      long[] longArray0 = new long[0];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "user.region", longArray0, boolean0);
      assertEquals("user.region={},", stringBuffer0.toString());
      assertEquals(15, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("]-9bSf?");
      Boolean boolean0 = Boolean.valueOf(true);
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "]-9bSf?", (long[]) null, boolean0);
      assertEquals(24, stringBuffer0.length());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) stringBuffer0;
      toStringStyle0.appendDetail(stringBuffer0, "o6", objectArray0);
      assertEquals("{{}", stringBuffer0.toString());
      assertEquals(3, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Object[] objectArray0 = new Object[2];
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle", objectArray0);
      assertEquals("{<null>,<null>}", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "}");
      Object[] objectArray0 = new Object[1];
      Boolean boolean0 = Boolean.valueOf("}");
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "}", objectArray0, boolean0);
      assertEquals("}}=<size=1>,", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.append((StringBuffer) null, "bctA}1`y^<Sd", (Object[]) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(2);
      Object[] objectArray0 = new Object[0];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "sa9:tI3|E#", objectArray0, boolean0);
      assertEquals("sa9:tI3|E#={}\n  ", stringBuffer0.toString());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.MULTI_LINE_STYLE.appendStart(stringBuffer0, "(-XC(ejT");
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Map<Object, Object> map0 = ToStringStyle.getRegistry();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendInternal(stringBuffer0, "java.vendor.url", map0, false);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      standardToStringStyle0.appendInternal(stringBuffer0, (String) null, linkedList0, false);
      assertEquals("<size=0>", stringBuffer0.toString());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      Boolean boolean0 = new Boolean("V");
      toStringStyle0.appendStart(stringBuffer0, boolean0);
      toStringStyle0.appendInternal(stringBuffer0, "!yNQ", boolean0, false);
      assertEquals(29, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.valueOf(false);
      standardToStringStyle0.append(stringBuffer0, "  ", (Object) null, boolean0);
      assertEquals("  =<null>,", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("tHQ]hjT.{p}O+<u8u?");
      Object object0 = new Object();
      toStringStyle0.appendEnd(stringBuffer0, object0);
      assertEquals("tHQ]hjT.{p}O+<u8u?", stringBuffer0.toString());
      assertEquals(19, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("  ");
      toStringStyle0.appendEnd(stringBuffer0, "  ");
      assertEquals(4, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      toStringStyle0.setFieldSeparator((String) null);
      StringBuffer stringBuffer0 = new StringBuffer("  ");
      toStringStyle0.appendEnd(stringBuffer0, stringBuffer0);
      assertEquals(2, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      toStringStyle0.setFieldSeparatorAtEnd(true);
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        toStringStyle0.appendEnd((StringBuffer) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      Character character0 = Character.valueOf('');
      toStringStyle0.appendStart(stringBuffer0, character0);
      Boolean boolean0 = Boolean.TRUE;
      toStringStyle0.append(stringBuffer0, "org.apache.commons.lang3.builder.StandardToStringStyle", (Object) character0, boolean0);
      assertEquals(79, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.appendStart(stringBuffer0, (Object) null);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(0, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.appendSuper(stringBuffer0, "/I]");
      assertEquals("/I],", stringBuffer0.toString());
      assertEquals(4, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.appendSuper(stringBuffer0, "");
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.appendSuper(stringBuffer0, (String) null);
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.appendEnd(stringBuffer0, stringBuffer0);
      assertEquals("]", stringBuffer0.toString());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendInternal(stringBuffer0, (String) null, (Object) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSizeStartText();
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", string0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      byte[] byteArray0 = new byte[0];
      Boolean boolean0 = Boolean.valueOf("64eNY[5$aU%dsJW");
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "64eNY[5$aU%dsJW", byteArray0, boolean0);
      assertEquals("<size=0>,", stringBuffer0.toString());
      assertEquals(9, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      double[] doubleArray0 = new double[0];
      Boolean boolean0 = Boolean.valueOf((String) null);
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, (String) null, doubleArray0, boolean0);
      assertEquals("<size=0>,", stringBuffer0.toString());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "W8C>5]!", 'p');
      assertEquals(2, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      float[] floatArray0 = new float[0];
      Boolean boolean0 = Boolean.valueOf("AIX");
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "AIX", floatArray0, boolean0);
      assertEquals("<size=0>,", stringBuffer0.toString());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      long[] longArray0 = new long[1];
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.append(stringBuffer0, "L0Y", longArray0, boolean0);
      assertEquals("L0Y=<size=1>,", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setUseFieldNames(true);
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "*e#+", (short)16);
      assertEquals(10, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setDefaultFullDetail(true);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      toStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, ">@p4Tju8;-R/]@", 1);
      assertEquals(17, stringBuffer0.length());
      assertEquals(">@p4Tju8;-R/]@=1,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      
      standardToStringStyle0.setArrayContentDetail(false);
      assertFalse(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getArrayEnd();
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", string0);
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(100);
      float[] floatArray0 = new float[2];
      Boolean boolean0 = Boolean.valueOf(true);
      standardToStringStyle0.append(stringBuffer0, "bct}1`y^<d", floatArray0, boolean0);
      assertEquals(21, stringBuffer0.length());
      assertEquals("bct}1`y^<d={0.0,0.0},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getContentStart();
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", string0);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isDefaultFullDetail();
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(boolean0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      toStringStyle0.appendSuper(stringBuffer0, "org.apache.commons.lang3.builder.StandardToStringStyle");
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      toStringStyle0.append(stringBuffer0, "1.3", (Object) "1.3", boolean0);
      assertEquals("1.3,", stringBuffer0.toString());
      assertEquals(4, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "<size=", false);
      assertEquals("false,", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean[] booleanArray0 = new boolean[20];
      standardToStringStyle0.SIMPLE_STYLE.appendDetail(stringBuffer0, "1.4", booleanArray0);
      assertEquals(121, stringBuffer0.length());
      assertEquals("{false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getContentEnd();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", string0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      
      standardToStringStyle0.setFieldSeparatorAtStart(true);
      assertTrue(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isUseShortClassName();
      assertFalse(boolean0);
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setUseIdentityHashCode(true);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isUseClassName();
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(boolean0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtStart();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(boolean0);
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      char[] charArray0 = new char[1];
      Boolean boolean0 = new Boolean("$jBY'YG");
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "$jBY'YG", charArray0, boolean0);
      assertEquals(17, stringBuffer0.length());
      assertEquals("$jBY'YG=<size=1>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "(-XC(ejT", (byte) (-1));
      assertEquals(14, stringBuffer0.length());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getArraySeparator();
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", string0);
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      LinkedList<Byte> linkedList0 = new LinkedList<Byte>();
      standardToStringStyle0.appendInternal(stringBuffer0, "6%{N @g(dr", linkedList0, true);
      assertEquals("[]", stringBuffer0.toString());
      assertEquals(2, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getNullText();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<null>", string0);
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getArrayStart();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", string0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      int[] intArray0 = new int[0];
      Boolean boolean0 = Boolean.valueOf(false);
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "-O|=`7#ey{K31\"4D", intArray0, boolean0);
      assertEquals("<size=0>,", stringBuffer0.toString());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSummaryObjectEndText();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", string0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getFieldNameValueSeparator();
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", string0);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getFieldSeparator();
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      short[] shortArray0 = new short[0];
      Boolean boolean0 = Boolean.valueOf("\"{mEX_d\"y2`1cvH)K");
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "java.ext.dirs", shortArray0, boolean0);
      assertEquals("java.ext.dirs=<size=0>,", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSizeEndText();
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", string0);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "!1OPYTwK6#", (-748.0));
      assertEquals("!1OPYTwK6#=-748.0,", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.append((StringBuffer) null, "5i#(TDq3|; ,k", 5106.2954F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "user.home", (-1L));
      assertEquals(3, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtEnd();
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertFalse(boolean0);
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      char[] charArray0 = new char[2];
      standardToStringStyle0.DEFAULT_STYLE.appendDetail(stringBuffer0, (String) null, charArray0);
      assertEquals(5, stringBuffer0.length());
      assertEquals("{\u0000,\u0000}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setUseClassName(true);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isUseFieldNames();
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(boolean0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSummaryObjectStartText();
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", string0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertFalse(standardToStringStyle0.isUseShortClassName());
      
      standardToStringStyle0.setUseShortClassName(true);
      assertTrue(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isArrayContentDetail();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(boolean0);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      toStringStyle0.append(stringBuffer0, "XGN %;O+u", (int[]) null, (Boolean) null);
      assertEquals(17, stringBuffer0.length());
      assertEquals("XGN %;O+u=<null>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.MULTI_LINE_STYLE.appendStart(stringBuffer0, "(-XC(ejT");
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Map<Object, Object> map0 = ToStringStyle.getRegistry();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendInternal(stringBuffer0, "java.vendor.url", map0, true);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
