/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 21 15:45:07 GMT 2019
 */

package org.mockito.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.asm.AnnotationVisitor;
import org.mockito.asm.Attribute;
import org.mockito.asm.ByteVector;
import org.mockito.asm.ClassWriter;
import org.mockito.asm.Label;
import org.mockito.asm.MethodVisitor;
import org.mockito.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Label label0 = new Label();
      int[] intArray0 = new int[2];
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int[] intArray0 = new int[7];
      // Undeclared exception!
      try { 
        MethodWriter.getNewOffset(intArray0, (int[]) null, 1527, (-1025));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Label label0 = new Label();
      int[] intArray0 = new int[7];
      intArray0[2] = 1;
      label0.position = 68;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertEquals(7, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Label label0 = new Label();
      int[] intArray0 = new int[7];
      intArray0[2] = 1;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertEquals(7, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3524));
      String[] stringArray0 = new String[0];
      classWriter0.version = (-2050302571);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 73, "!-8{vyB:)?J.0", "!-8{vyB:)?J.0", "!-8{vyB:)?J.0", stringArray0, true, false);
      methodWriter0.visitInsn(186);
      methodWriter0.visitFrame(2, 186, stringArray0, (-3524), stringArray0);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3572));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "TK8m1-;iVz";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1878, "value ", "value ", "TK8m1-;iVz", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitIntInsn(116, 1);
      methodWriter0.visitLineNumber(46, label0);
      ByteVector byteVector0 = new ByteVector(185);
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"", "\"", "\"", (String[]) null, false, false);
      Attribute attribute0 = new Attribute("\"");
      methodWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(8);
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3597));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", stringArray0, true, true);
      methodWriter0.signature = null;
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3581));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-65), "<init>", "<init>", "<init>", (String[]) null, false, false);
      classWriter0.visit((-3581), 566, "<init>", "byte", "<init>", (String[]) null);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3569));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3569), "M9R-v:)??.S", "M9R-v:)??.S", "M9R-v:)??.S", stringArray0, true, true);
      methodWriter0.classReaderOffset = 2;
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3572));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3572), "java/lang/Throwable", ".class", "java/lang/Throwable", (String[]) null, false, false);
      methodWriter0.visitAnnotation("java/lang/Throwable", false);
      int int0 = methodWriter0.getSize();
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3572));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2289), "java/lang/String", "d0PHu5b|&$MiW)X", "$!+92n", stringArray0, false, true);
      methodWriter0.visitAnnotation("5S", true);
      int int0 = methodWriter0.getSize();
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3580));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Annotatonefa^ult";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Annotatonefa^ult", "Annotatonefa^ult", (String) null, stringArray0, false, false);
      int int0 = methodWriter0.getSize();
      assertEquals(18, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3577));
      classWriter0.version = (-3577);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3577), "q(O=_u", "\"", "q(O=_u", (String[]) null, false, false);
      methodWriter0.visitInsn(2);
      methodWriter0.visitFrame(2, 2, (Object[]) null, 1, (Object[]) null);
      int int0 = methodWriter0.getSize();
      assertEquals(52, int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3572));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "TK8m1-;iVz";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1878, "value ", "value ", "TK8m1-;iVz", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitIntInsn(116, 1);
      methodWriter0.visitLineNumber(46, label0);
      int int0 = methodWriter0.getSize();
      assertEquals(58, int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3581));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3581), "9.\"\"p;D&?$g", "9.\"\"p;D&?$g", "9.\"\"p;D&?$g", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(2, label0);
      methodWriter0.visitLocalVariable("-YYb@HC<", "i}&~hwOfBZ3p", "-YYb@HC<", label0, label0, 1);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(239, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1884704305));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBFr:)?J.", "f-vyBFr:)?J.", "f-vyBFr:)?J.", stringArray0, false, false);
      methodWriter0.classReaderOffset = (-3186);
      int int0 = methodWriter0.getSize();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      // Undeclared exception!
      try { 
        MethodWriter.getArgumentsAndReturnSizes("9kIw[Jszrt|");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      // Undeclared exception!
      try { 
        MethodWriter.getArgumentsAndReturnSizes("vZU:hBgv|3J[DfL");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3561));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-960), "f-vyBr:)?J.0", "7!a+6q2~|g=F+[[2Z^", "RuntimeInvisibleParameterAnnotations", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      // Undeclared exception!
      try { 
        MethodWriter.getArgumentsAndReturnSizes("PtbSviG_;^.kLEVa;");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      int int0 = MethodWriter.getArgumentsAndReturnSizes("W$o}@W$`y)D6}YjF<");
      assertEquals(38, int0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3572));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 86, "f-vyBr:)?J.0", "f-vyBr:)?J.0", "&b:d", stringArray0, true, false);
      methodWriter0.visitMethodInsn(1020, "Zt)VZhll.v;To#b^)~U", "f-vyBr:)?J.0", "Zt)VZhll.v;To#b^)~U");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5284));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vy!Fr:)?J./", "f-vy!Fr:)?J./", "f-vy!Fr:)?J./", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(2, label0);
      methodWriter0.visitJumpInsn(2, label0);
      methodWriter0.visitMaxs(955, (-2363));
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5284));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vy!Fr:)?J./", "f-vy!Fr:)?J./", "f-vy!Fr:)?J./", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, (Label) null, (Label) null, "JSR/RET ar^ not supported with computeFrames option");
      methodWriter0.visitMaxs(164, 1);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "^g3~2+FFj";
      stringArray0[1] = "!ZAX%X7mRY#q'0;";
      stringArray0[2] = ";)'WK-_`d2]cT";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 73, "f-vyBFr:)?J.0", ";)'WK-_`d2]cT", "^g3~2+FFj", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "org.mockito.asm.MethodWriter");
      methodWriter0.visitMaxs(73, 1579);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3581));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "q(O(_%To_u";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Annotatonefa^ult", "q(O(_%To_u", "Annotatonefa^ult", stringArray0, false, false);
      methodWriter0.visitMaxs(1, 91);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3572));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 86, "f-vyBr:)?J.0", "f-vyBr:)?J.0", "&b:d", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitLineNumber(1005, label0);
      methodWriter0.visitLineNumber(29, label0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3606));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBFr:)?J.", "f-vyBFr:)?J.", "f-vyBFr:)?J.", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("Deprecated", "Deprecated", "Deprecated", label0, label0, 2);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5284));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-5284), "f-vy!Fr:)?J./", "f-vy!Fr:)?J./", "f-vy!Fr:)?J./", stringArray0, false, true);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("NEMGT;Z|EZ$rB(V?", "J58uURr", "Annotatonefa^ult", label0, label0, 2);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3587));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-v[BFri)?J.0", "f-v[BFri)?J.0", "f-v[BFri)?J.0", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("f-v[BFri)?J.0", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", label0, label0, 2);
      methodWriter0.visitLocalVariable("f-v[BFri)?J.0", "RuntimeInvisibleAnnotations", "f-v[BFri)?J.0", label0, label0, (-2467));
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3587));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 98, "f-v[BFri)?J.0", "f-v[BFri)?J.0", "f-v[BFri)?J.0", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("f-v[BFri)?J.0", "Class n~t found", (String) null, label0, label0, 98);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5284));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vy!Fr:)?J./", "f-vy!Fr:)?J./", "f-vy!Fr:)?J./", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, (Label) null, (Label) null, "JSR/RET ar^ not supported with computeFrames option");
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "f-vy!Fr:)?J./");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3587));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "f-vyBFr:)?J.0";
      stringArray0[1] = "f-vyBFr:)?J.0";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, (String) null);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(622, (-3587));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3611));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", stringArray0, true, true);
      methodWriter0.visitMultiANewArrayInsn("f-vyBFr:)?J.0", 1);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3572));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 105, "f-vyBr:)?J.0", "f-vyBr:)?J.0", "f-vyBr:)?J.0", stringArray0, true, true);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[5];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      methodWriter0.visitTableSwitchInsn(77, 1, label0, labelArray0);
      assertEquals(5, labelArray0.length);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3594));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", stringArray0, true, false);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      methodWriter0.visitTableSwitchInsn(1, 1, label0, labelArray0);
      assertEquals(2, labelArray0.length);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3569));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3569), "M9R-v:)??.S", "M9R-v:)??.S", "M9R-v:)??.S", stringArray0, true, true);
      Label label0 = new Label();
      int[] intArray0 = new int[1];
      Label[] labelArray0 = new Label[5];
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3572));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 105, "f-vyBr:)?J.0", "f-vyBr:)?J.0", "f-vyBr:)?J.0", stringArray0, true, true);
      Label label0 = new Label();
      int[] intArray0 = new int[6];
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertEquals(6, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3545));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 86, "!-vyBr:)?J.0", "!-vyBr:)?J.0", "!-vyBr:)?J.0", stringArray0, true, false);
      methodWriter0.visitIincInsn(2, 86);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3579));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 105, "f-vyBr:)?J.0", "f-vyBr:)?J.0", "f-vyBr:)?J.0", stringArray0, true, true);
      methodWriter0.visitIincInsn(105, 746);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3575));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBFr:)?J.", "f-vyBFr:)?J.", "f-vyBFr:)?J.", stringArray0, true, false);
      methodWriter0.visitIincInsn(63, (-3575));
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"", "\"", "\"", (String[]) null, false, false);
      methodWriter0.visitIincInsn(648, 8);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3594));
      String[] stringArray0 = new String[0];
      classWriter0.index = 248;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-567), "float", "f-v3nr:)?gJ.", ")%U|p:-}+d>l", stringArray0, false, false);
      classWriter0.newClass("f-v3nr:)?gJ.");
      methodWriter0.visitMultiANewArrayInsn("float", (-1));
      methodWriter0.visitTypeInsn(2, ":c<cRZ2(\"J.b;");
      methodWriter0.visitLdcInsn("O");
      methodWriter0.visitLdcInsn("f-v3nr:)?gJ.");
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3594));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", stringArray0, true, false);
      methodWriter0.visitMultiANewArrayInsn("f-vyBFr:)?J.0", 2);
      methodWriter0.visitLdcInsn("f-vyBFr:)?J.0");
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3594));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-v3nr:)?gJ.", "f-v3nr:)?gJ.", "f-v3nr:)?gJ.", stringArray0, true, true);
      methodWriter0.visitLdcInsn("f-v3nr:)?gJ.");
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5284));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", stringArray0, true, false);
      methodWriter0.visitLdcInsn("f-vyBFr:)?J.0");
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3594));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2042);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\n>`Og1'Nx;/gk=", "tNB3MCrw99RgjNrj", "RuntimeVisibleAnnotations", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3180);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "\")Puc";
      stringArray0[1] = "\")Puc";
      stringArray0[2] = "\")Puc";
      stringArray0[3] = "\")Puc";
      stringArray0[4] = "\")Puc";
      stringArray0[5] = "\")Puc";
      stringArray0[6] = "\")Puc";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "\")Puc", "\")Puc", "org.mockito.asm.Label", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitInsn(172);
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3572));
      String[] stringArray0 = new String[1];
      stringArray0[0] = ";";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ";", ";", ";", stringArray0, false, false);
      Label label0 = new Label();
      label0.status = 69;
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3580));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Annotatonefa^ult";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1878, "Annotatonefa^ult", "Annotatonefa^ult", "Annotatonefa^ult", stringArray0, false, false);
      Label label0 = new Label();
      byte[] byteArray0 = new byte[5];
      label0.resolve(methodWriter0, (-1996695850), byteArray0);
      methodWriter0.visitJumpInsn((-1996695850), label0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "^g3~2+FFj";
      stringArray0[1] = "!ZAX%X7mRY#q'0;";
      stringArray0[2] = ";)'WK-_`d2]cT";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 92, "f-vyBFr:)?J.0", ";)'WK-_`d2]cT", "^g3~2+FFj", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      methodWriter0.visitJumpInsn(2, label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2, 73);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.mockito.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3521));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f-vyBr:)?J.0", "f-vyBr:)?J.0", "wbe3:d", stringArray0, true, false);
      methodWriter0.visitMethodInsn(185, "f-vyBr:)?J.0", "f-vyBr:)?J.0", "f-vyBr:)?J.0");
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5284));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vy!Fr:)?J./", "f-vy!Fr:)?J./", "f-vy!Fr:)?J./", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(2, label0);
      methodWriter0.visitMethodInsn(1, "f-vy!Fr:)?J./", "WJv7", "\")Puc");
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3572));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3572), "f-vyBr:)?J.0", "f-vyBr:)?J.0", "&b:d", stringArray0, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(185, "f-vyBr:)?J.0", "&b:d", "LocalVariableTable");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3555));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBr:)?&J.0", "f-vyBr:)?&J.0", "f-vyBr:)?&J.0", stringArray0, false, false);
      methodWriter0.visitMethodInsn((-3555), "f-vyBr:)?&J.0", "f-vyBr:)?&J.0", "f-vyBr:)?&J.0");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3572));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 86, "f-vyBr:)?J.0", "f-vyBr:)?J.0", "&b:d", stringArray0, true, false);
      methodWriter0.visitFieldInsn(2, "&T\"kmkI55]:e4k", "&T\"kmkI55]:e4k", "LocalVariableTypeTable");
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5284));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vy!Fr:)?J./", "f-vy!Fr:)?J./", "f-vy!Fr:)?J./", stringArray0, true, false);
      methodWriter0.visitFieldInsn((-5284), "f-vy!Fr:)?J./", "JSR/RET ar^ not supported with computeFrames option", "JSR/RET ar^ not supported with computeFrames option");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3587));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBUr:){J.", "f-vyBUr:){J.", "f-vyBUr:){J.", stringArray0, true, true);
      methodWriter0.visitFieldInsn(2, "f-vyBUr:){J.", "f-vyBUr:){J.", "3=%}U zYNNl)x5=.Tx<");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3587));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3587), "V![vyBr`)?Y.0", "V![vyBr`)?Y.0", "V![vyBr`)?Y.0", stringArray0, true, false);
      methodWriter0.visitFieldInsn((-114), "RuntimeInvisibleAnnotations", "V![vyBr`)?Y.0", "DJDb2QVRvw7^*^~o\"");
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3580));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Annotatonefa^ult";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Annotatonefa^ult", "Annotatonefa^ult", "Annotatonefa^ult", stringArray0, false, false);
      methodWriter0.visitFieldInsn(1, "b", "Annotatonefa^ult", "Annotatonefa^ult");
      methodWriter0.visitFrame(2, (-3580), stringArray0, (-1), stringArray0);
      int int0 = methodWriter0.getSize();
      assertEquals(58, int0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3594));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-v3nr:)?gJ.", "f-v3nr:)?gJ.", "f-v3nr:)?gJ.", stringArray0, true, true);
      methodWriter0.visitTypeInsn(1, "f-v3nr:)?gJ.");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3579));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 105, "f-vyBr:)?J.0", "f-vyBr:)?J.0", "f-vyBr:)?J.0", stringArray0, true, true);
      methodWriter0.visitVarInsn(105, (-3579));
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3589));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "8&&<XQA";
      stringArray0[2] = "JZ";
      stringArray0[3] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "8&&<XQA", "JZ", "8&&<XQA", stringArray0, false, false);
      methodWriter0.visitVarInsn(169, (-2200));
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3607));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3607), "V![vyBr`)?Y.0", "V![vyBr`)?Y.0", "V![vyBr`)?Y.0", stringArray0, true, false);
      methodWriter0.visitVarInsn(168, 168);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3587));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 86, "V!-vyBr:)?J.0", "V!-vyBr:)?J.0", "V!-vyBr:)?J.0", stringArray0, true, false);
      methodWriter0.visitVarInsn(57, (-3587));
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3611));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "-vyBFr:)?J.0", "-vyBFr:)?J.0", "-vyBFr:)?J.0", stringArray0, true, true);
      methodWriter0.visitVarInsn(24, Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5284));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vy!Fr:)?J./", "f-vy!Fr:)?J./", "f-vy!Fr:)?J./", stringArray0, true, false);
      methodWriter0.visitVarInsn(22, (-4329));
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3594));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "f-vyBFr:)?J.0";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2825), "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", stringArray0, false, true);
      methodWriter0.visitIntInsn(17, 6);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3572));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 86, "f-vyBr:)?J.0", "f-vyBr:)?J.0", "f-vyBr:)?J.0", stringArray0, true, false);
      methodWriter0.visitVarInsn(55, (-3572));
      methodWriter0.visitIntInsn(2, 86);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3572));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 86, "f-vyBr:)?J.0", "f-vyBr:)?J.0", "f-vyBr:)?J.0", stringArray0, true, false);
      methodWriter0.visitIntInsn(188, 1612);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3555));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "fvyBr:)J.0", "fvyBr:)J.0", "fvyBr:)J.0", stringArray0, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitIntInsn(78, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3555));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBr:)?&J.0", "f-vyBr:)?&J.0", "f-vyBr:)?&J.0", stringArray0, true, false);
      methodWriter0.visitIntInsn(1, 2);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3558));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-vyBFr:)?J.0";
      stringArray0[1] = "-vyBFr:)?J.0";
      stringArray0[2] = "Annotatonefa^ult";
      stringArray0[3] = "Annotatonefa^ult";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3558), "Annotatonefa^ult", "-vyBFr:)?J.0", "Annotatonefa^ult", stringArray0, true, true);
      methodWriter0.visitInsn(191);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3587));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3587), "V![vyBr`)?Y.0", "V![vyBr`)?Y.0", "V![vyBr`)?Y.0", stringArray0, true, false);
      methodWriter0.visitInsn(2);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3543));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 73, "!-vyBr:)?J.0", "!-vyBr:)?J.0", "!-vyBr:)?J.0", stringArray0, true, false);
      methodWriter0.visitInsn(186);
      methodWriter0.visitFrame(2, 186, stringArray0, 224, stringArray0);
      ByteVector byteVector0 = new ByteVector(2);
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3581));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "q(O(_%To_u";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Annotatonefa^ult", "q(O(_%To_u", "Annotatonefa^ult", stringArray0, false, false);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[7];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      labelArray0[6] = label0;
      methodWriter0.visitTableSwitchInsn(187, 1, label0, labelArray0);
      methodWriter0.visitTableSwitchInsn(Integer.MAX_VALUE, 91, label0, labelArray0);
      methodWriter0.visitFrame(4, 192, stringArray0, 1, stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(66);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 66, "Signature", "Signature", "Signature", (String[]) null, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 2, (Object[]) null, 66, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3572));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      methodWriter0.visitFrame(0, 0, stringArray0, 0, (Object[]) null);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3581));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "q(O(_%To_u";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Annotatonefa^ult", "q(O(_%To_u", "Annotatonefa^ult", stringArray0, false, false);
      Label[] labelArray0 = new Label[7];
      methodWriter0.visitFrame(4, 192, labelArray0, 1, stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(47);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Fr", "Fr", "Fr", (String[]) null, false, false);
      methodWriter0.visitFrame(3, 1, (Object[]) null, 2, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3558));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Annotatonefa^ult";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Annotatonefa^ult", "Annotatonefa^ult", "Annotatonefa^ult", stringArray0, false, false);
      Label[] labelArray0 = new Label[4];
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 1, stringArray0, 86, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3595));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3595), "/.\"\"p;D&?$g", "/.\"\"p;D&?$g", "/.\"\"p;D&?$g", (String[]) null, false, false);
      methodWriter0.visitFrame((-3595), 1, (Object[]) null, 1, (Object[]) null);
      methodWriter0.visitFrame((-3595), 3, (Object[]) null, 2, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3558));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Annotatonefa^ult";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Annotatonefa^ult", "Annotatonefa^ult", "Annotatonefa^ult", stringArray0, false, false);
      Label[] labelArray0 = new Label[4];
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 1, stringArray0, 86, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 73, ";<&iqw}", ";<&iqw}", ";<&iqw}", (String[]) null, false, false);
      Label[] labelArray0 = new Label[1];
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 73, labelArray0, 1266, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3580));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Annotatonefa^ult";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Annotatonefa^ult", "Annotatonefa^ult", "Annotatonefa^ult", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), (-1), stringArray0, 3, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3611));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", stringArray0, true, true);
      methodWriter0.visitFrame((-3611), (-3611), stringArray0, 1241, stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3580));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "q(O(_%To_u";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1878, "Annotatonefa^ult", "q(O(_%To_u", "Annotatonefa^ult", stringArray0, false, false);
      methodWriter0.visitFrame(1, (-3580), stringArray0, 1878, stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"", "\"", "\"", (String[]) null, false, false);
      Attribute attribute0 = new Attribute("\"");
      methodWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3587));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBFr:)?J.", "f-vyBFr:)?J.", "f-vyBFr:)?J.", stringArray0, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "f-vyBFr:)?J.", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3555));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBr:)?&J.0", "f-vyBr:)?&J.0", "RuntimeInvisibleAnnotations", stringArray0, false, true);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitParameterAnnotation((-3555), "Ljava/lang/Synthetic;", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3587));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-v[BFri)?J.0", "f-v[BFri)?J.0", "f-v[BFri)?J.0", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "f-v[BFri)?J.0", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3555));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBr:)?&J.0", "f-vyBr:)?&J.0", "f-vyBr:)?&J.0", stringArray0, false, false);
      methodWriter0.visitAnnotation("f-vyBr:)?&J.0", true);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3572));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3572), "q(O=_u", "", "q(O=_u", (String[]) null, false, false);
      methodWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1569, "<init>", "2Q8+BgpDs", "Nw3c.P[Zd9om,}.k![!^", (String[]) null, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5284));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", "f-vyBFr:)?J.0", stringArray0, true, false);
      methodWriter0.visitTypeInsn(1, "f-vyBFr:)?J.0");
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "f-vyBFr:)?J.0");
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(8, "\"", "\"", "StackMap", (String[]) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"", "\"", "\"", (String[]) null, false, false);
      assertFalse(methodWriter0.equals((Object)methodVisitor0));
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, (byte)41);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 41
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 259);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 259
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3572));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Signature";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1878, "", "q(O=_u", "Signature", stringArray0, false, false);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3580));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "q(O(_%To_u";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1878, "Annotatonefa^ult", "q(O(_%To_u", "Annotatonefa^ult", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(136, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, 2063, (byte)74);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2063
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, (byte) (-66));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -66
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(512);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      stringArray0[1] = "6eG,/!";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "p{ViS", "6eG,/!", "RuntimeVisibleAnnotations", stringArray0, false, false);
      methodWriter0.visitCode();
  }
}
