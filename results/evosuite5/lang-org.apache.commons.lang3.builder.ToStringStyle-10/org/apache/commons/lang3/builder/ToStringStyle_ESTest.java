/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 25 01:02:04 GMT 2019
 */

package org.apache.commons.lang3.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import org.apache.commons.lang3.builder.StandardToStringStyle;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ToStringStyle_ESTest extends ToStringStyle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      
      standardToStringStyle0.setSummaryObjectEndText((String) null);
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSummaryObjectEndText("9G");
      assertEquals("9G", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      standardToStringStyle0.setSummaryObjectStartText((String) null);
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSummaryObjectStartText("<size=");
      assertEquals("<size=", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      
      standardToStringStyle0.setSizeEndText((String) null);
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSizeEndText("=");
      assertEquals("=", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      
      standardToStringStyle0.setSizeStartText((String) null);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSizeStartText("8-!gU=a`");
      assertEquals("8-!gU=a`", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      standardToStringStyle0.setNullText((String) null);
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setNullText("java.specification.vendor");
      assertEquals("java.specification.vendor", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      
      standardToStringStyle0.setFieldSeparator((String) null);
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setFieldSeparator("mxOO.");
      assertEquals("mxOO.", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      standardToStringStyle0.setFieldNameValueSeparator((String) null);
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setFieldNameValueSeparator("<");
      assertEquals("<", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      
      standardToStringStyle0.setContentEnd((String) null);
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setContentEnd("@MD:%A");
      assertEquals("@MD:%A", standardToStringStyle0.getContentEnd());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      standardToStringStyle0.setContentStart((String) null);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setContentStart("=baSkXC?gKQvQ&,%%");
      assertEquals("=baSkXC?gKQvQ&,%%", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.setArraySeparator((String) null);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setArraySeparator("yTNN|rrY[QS!2P.J0d/");
      assertEquals("yTNN|rrY[QS!2P.J0d/", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      
      standardToStringStyle0.setArrayEnd((String) null);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setArrayEnd("jbK.Y3`e:jRC7rA");
      assertEquals("jbK.Y3`e:jRC7rA", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      standardToStringStyle0.setArrayStart((String) null);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setArrayStart("*VH");
      assertEquals("*VH", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.DEFAULT_STYLE.appendIdentityHashCode((StringBuffer) null, (Object) null);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.MULTI_LINE_STYLE.appendClassName((StringBuffer) null, (Object) null);
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "<");
      standardToStringStyle0.SIMPLE_STYLE.appendClassName(stringBuffer0, "<");
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(1, stringBuffer0.length());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean[] booleanArray0 = new boolean[2];
      standardToStringStyle0.MULTI_LINE_STYLE.appendDetail(stringBuffer0, "?/XHH$zs-DIp}H", booleanArray0);
      assertEquals(13, stringBuffer0.length());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(" [P8:");
      boolean[] booleanArray0 = new boolean[0];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, " [P8:", booleanArray0, boolean0);
      assertEquals(14, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.valueOf("ZBgem^>j|'m'O~oX+");
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "ZBgem^>j|'m'O~oX+", (boolean[]) null, boolean0);
      assertEquals("ZBgem^>j|'m'O~oX+=<null>\n  ", stringBuffer0.toString());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      float[] floatArray0 = new float[4];
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail(stringBuffer0, ">oYJHjJ f@c,GNqDq!X", floatArray0);
      assertEquals("{0.0,0.0,0.0,0.0}", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      float[] floatArray0 = new float[0];
      Boolean boolean0 = new Boolean(true);
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle", floatArray0, boolean0);
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle={}\n  ", stringBuffer0.toString());
      assertEquals(72, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = new Boolean(true);
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle", (float[]) null, boolean0);
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle=<null>\n  ", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("O1o");
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      double[] doubleArray0 = new double[2];
      toStringStyle0.appendDetail(stringBuffer0, "O1o", doubleArray0);
      assertEquals(12, stringBuffer0.length());
      assertEquals("O1o{0.0,0.0}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("Windows 9");
      double[] doubleArray0 = new double[0];
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "Windows 9", doubleArray0, (Boolean) null);
      assertEquals(12, stringBuffer0.length());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = new Boolean(true);
      standardToStringStyle0.append(stringBuffer0, "}", (double[]) null, boolean0);
      assertEquals("}=<null>,", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isUseClassName());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "{");
      char[] charArray0 = new char[3];
      standardToStringStyle0.DEFAULT_STYLE.appendDetail(stringBuffer0, "{", charArray0);
      assertEquals(8, stringBuffer0.length());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ",");
      char[] charArray0 = new char[0];
      Boolean boolean0 = Boolean.valueOf(false);
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, ",", charArray0, boolean0);
      assertEquals(",<size=0>,", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      Boolean boolean0 = Boolean.FALSE;
      toStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "T[1([>+/K.p@XVRElj", (char[]) null, boolean0);
      assertEquals(26, stringBuffer0.length());
      assertEquals("T[1([>+/K.p@XVRElj=<null>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[0];
      Boolean boolean0 = Boolean.valueOf(true);
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "Na", charArray0, boolean0);
      assertEquals(3, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      byte[] byteArray0 = new byte[17];
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "", byteArray0, (Boolean) null);
      assertEquals(36, stringBuffer0.length());
      assertEquals("{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("1.6");
      Boolean boolean0 = Boolean.valueOf(false);
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "1.6", (byte[]) null, boolean0);
      assertEquals(10, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ",");
      short[] shortArray0 = new short[2];
      standardToStringStyle0.SIMPLE_STYLE.appendDetail(stringBuffer0, ",", shortArray0);
      assertEquals(6, stringBuffer0.length());
      assertEquals(",{0,0}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "]");
      short[] shortArray0 = new short[0];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "]", shortArray0, boolean0);
      assertEquals(4, stringBuffer0.length());
      assertEquals("]{},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ">");
      Boolean boolean0 = Boolean.valueOf(true);
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, ">", (short[]) null, boolean0);
      assertEquals(12, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      int[] intArray0 = new int[8];
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "qpW%;", intArray0, (Boolean) null);
      assertEquals(25, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      long[] longArray0 = new long[2];
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail(stringBuffer0, "[", longArray0);
      assertEquals(5, stringBuffer0.length());
      assertEquals("{0,0}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      long[] longArray0 = new long[0];
      Boolean boolean0 = new Boolean(true);
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "ICf<Lk9 =r`y@).=$\"", longArray0, boolean0);
      assertEquals("ICf<Lk9 =r`y@).=$\"={},", stringBuffer0.toString());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        standardToStringStyle0.SIMPLE_STYLE.append((StringBuffer) null, ">", (long[]) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Object[] objectArray0 = new Object[0];
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        standardToStringStyle0.append((StringBuffer) null, (String) null, objectArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ">");
      Boolean boolean0 = new Boolean(false);
      standardToStringStyle0.append(stringBuffer0, ">", (Object[]) null, boolean0);
      assertEquals(">>=<null>,", stringBuffer0.toString());
      assertEquals(10, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("}");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      standardToStringStyle0.appendInternal(stringBuffer0, "}", hashMap0, false);
      assertEquals("}<size=0>", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.appendInternal(stringBuffer0, ">", ">", true);
      assertEquals(1, stringBuffer0.length());
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("}");
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.append(stringBuffer0, "}", (Object) boolean0, boolean0);
      assertEquals(8, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.append(stringBuffer0, "=", (Object) null, (Boolean) null);
      assertEquals("==<null>,", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("Oo");
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      toStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertEquals(2, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("`|");
      standardToStringStyle0.appendEnd(stringBuffer0, standardToStringStyle0);
      assertEquals(3, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendStart(stringBuffer0, stringBuffer0);
      assertEquals("StringBuffer[", stringBuffer0.toString());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ">");
      standardToStringStyle0.appendStart(stringBuffer0, (Object) null);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(",");
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      toStringStyle0.appendToString(stringBuffer0, ",");
      assertEquals(",,,", stringBuffer0.toString());
      assertEquals(3, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("]");
      standardToStringStyle0.appendToString(stringBuffer0, "]");
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(1, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.appendToString(stringBuffer0, (String) null);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendInternal(stringBuffer0, (String) null, (Object) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      Character character0 = Character.valueOf('x');
      Object[] objectArray0 = new Object[4];
      objectArray0[3] = (Object) character0;
      standardToStringStyle0.appendDetail(stringBuffer0, "short", objectArray0);
      assertEquals(24, stringBuffer0.length());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSizeStartText();
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", string0);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      byte[] byteArray0 = new byte[0];
      Boolean boolean0 = new Boolean("org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle");
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, ">", byteArray0, boolean0);
      assertEquals(11, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.appendEnd(stringBuffer0, stringBuffer0);
      assertEquals("]", stringBuffer0.toString());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      double[] doubleArray0 = new double[0];
      Boolean boolean0 = Boolean.valueOf("ysXdk_brL^-.");
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "ysXdk_brL^-.", doubleArray0, boolean0);
      assertEquals("ysXdk_brL^-.=<size=0>\n  ", stringBuffer0.toString());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(">");
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, ">", 'A');
      assertEquals(">>=A\n  ", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "{");
      float[] floatArray0 = new float[0];
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.append(stringBuffer0, "{", floatArray0, boolean0);
      assertEquals(12, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      long[] longArray0 = new long[0];
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, (String) null, longArray0, boolean0);
      assertEquals(9, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertTrue(standardToStringStyle0.isUseFieldNames());
      
      standardToStringStyle0.setUseFieldNames(false);
      assertFalse(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("\":SRPDy6]hu#}(");
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "\":SRPDy6]hu#}(", (short)96);
      assertEquals(32, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      
      standardToStringStyle0.setDefaultFullDetail(false);
      assertFalse(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean[] booleanArray0 = new boolean[1];
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "Q}/C__`G_vP", booleanArray0, (Boolean) false);
      assertEquals("<size=1>,", stringBuffer0.toString());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setArrayContentDetail(true);
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getArrayEnd();
      assertEquals("}", string0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getContentStart();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", string0);
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isDefaultFullDetail();
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(boolean0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.appendSuper(stringBuffer0, "");
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "xO", false);
      assertEquals(6, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getContentEnd();
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", string0);
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setFieldSeparatorAtStart(false);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isUseShortClassName();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(boolean0);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setUseIdentityHashCode(true);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      Object[] objectArray0 = new Object[0];
      Boolean boolean0 = Boolean.valueOf("TI\"bozs(X?$#Dz:0XU");
      toStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "TI\"bozs(X?$#Dz:0XU", objectArray0, boolean0);
      assertEquals("TI\"bozs(X?$#Dz:0XU=<size=0>,", stringBuffer0.toString());
      assertEquals(28, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      
      standardToStringStyle0.setFieldSeparatorAtEnd(true);
      assertTrue(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isUseClassName();
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(boolean0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtStart();
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(boolean0);
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ">");
      toStringStyle0.append(stringBuffer0, ">", (byte)0);
      assertEquals(">0,", stringBuffer0.toString());
      assertEquals(3, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getArraySeparator();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", string0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.appendInternal(stringBuffer0, "Na", "Na", false);
      assertEquals("<String>", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(" b*pEfWh]+\u0004D[xOi;'");
      LinkedList<Float> linkedList0 = new LinkedList<Float>();
      standardToStringStyle0.DEFAULT_STYLE.appendDetail(stringBuffer0, " b*pEfWh]+\u0004D[xOi;'", linkedList0);
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getNullText();
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", string0);
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getArrayStart();
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", string0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      int[] intArray0 = new int[0];
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle", intArray0, boolean0);
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle=<size=0>,", stringBuffer0.toString());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSummaryObjectEndText();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", string0);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.MULTI_LINE_STYLE.appendStart(stringBuffer0, ">");
      assertEquals(22, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getFieldNameValueSeparator();
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", string0);
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getFieldSeparator();
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", string0);
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ">");
      short[] shortArray0 = new short[1];
      Boolean boolean0 = Boolean.valueOf(">");
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, ">", shortArray0, boolean0);
      assertEquals(10, stringBuffer0.length());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSizeEndText();
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", string0);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, ";X(", 681.76);
      assertEquals(13, stringBuffer0.length());
      assertEquals(";X(=681.76\n  ", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "{", 0.81856537F);
      assertEquals(11, stringBuffer0.length());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(44);
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "[", (long) 44);
      assertEquals(7, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "", (-740));
      assertEquals(8, stringBuffer0.length());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtEnd();
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(boolean0);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertTrue(standardToStringStyle0.isUseClassName());
      
      standardToStringStyle0.setUseClassName(false);
      assertFalse(standardToStringStyle0.isUseClassName());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isUseFieldNames();
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(boolean0);
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.getSummaryObjectStartText();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = new Boolean("java.io.tmpdir");
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "java.io.tmpdir", (int[]) null, boolean0);
      assertEquals("java.io.tmpdir=<null>,", stringBuffer0.toString());
      
      StringBuffer stringBuffer1 = new StringBuffer("<");
      standardToStringStyle0.appendEnd(stringBuffer1, stringBuffer1);
      assertEquals("<]", stringBuffer1.toString());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setUseShortClassName(false);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isArrayContentDetail();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(boolean0);
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      HashMap<Object, Double> hashMap0 = new HashMap<Object, Double>();
      Object[] objectArray0 = new Object[7];
      objectArray0[3] = (Object) hashMap0;
      standardToStringStyle0.appendDetail(stringBuffer0, ".Rxare!6)kUdN", objectArray0);
      assertEquals("{<null>,<null>,<null>,{},<null>,<null>,<null>}", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }
}
