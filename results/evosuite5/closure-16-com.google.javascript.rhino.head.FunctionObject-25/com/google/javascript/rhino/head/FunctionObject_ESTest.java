/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 18 04:30:19 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.Delegator;
import com.google.javascript.rhino.head.FunctionObject;
import com.google.javascript.rhino.head.JavaAdapter;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJavaArray;
import com.google.javascript.rhino.head.NativeJavaMethod;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.Script;
import com.google.javascript.rhino.head.Scriptable;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class FunctionObject_ESTest extends FunctionObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  @Ignore
  public void test00()  throws Throwable  {
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      Method[] methodArray0 = FunctionObject.getMethodList(class0);
      Method method0 = FunctionObject.findSingleMethod(methodArray0, "getIds");
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(method0, "getIds");
      FunctionObject functionObject0 = new FunctionObject("getIds", method0, nativeJavaMethod0);
      boolean boolean0 = functionObject0.isVarArgsConstructor();
      assertFalse(boolean0);
      assertEquals(13, methodArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      Method[] methodArray0 = FunctionObject.getMethodList(class0);
      Method method0 = FunctionObject.findSingleMethod(methodArray0, "getIds");
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(method0, "getIds");
      FunctionObject functionObject0 = new FunctionObject("getIds", method0, nativeJavaMethod0);
      // Undeclared exception!
      try { 
        functionObject0.createObject((Context) null, nativeJavaMethod0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Wrapped java.lang.InstantiationException: com.google.javascript.rhino.head.NativeJavaArray
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      Method[] methodArray0 = FunctionObject.getMethodList(class0);
      Method method0 = FunctionObject.findSingleMethod(methodArray0, "wrap");
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(method0, "wrap");
      FunctionObject functionObject0 = new FunctionObject("wrap", method0, nativeJavaMethod0);
      // Undeclared exception!
      try { 
        Context.getContext();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      Method[] methodArray0 = FunctionObject.getMethodList(class0);
      Method method0 = FunctionObject.findSingleMethod(methodArray0, "wrap");
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(method0, "wrap");
      FunctionObject functionObject0 = new FunctionObject("wrap", method0, nativeJavaMethod0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "wrap";
      // Undeclared exception!
      try { 
        functionObject0.call((Context) null, nativeJavaMethod0, nativeJavaMethod0, objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Wrapped org.evosuite.runtime.mock.java.lang.MockThrowable: Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      Method[] methodArray0 = FunctionObject.getMethodList(class0);
      Method method0 = FunctionObject.findSingleMethod(methodArray0, "getIds");
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(method0, "getIds");
      FunctionObject functionObject0 = new FunctionObject("getIds", method0, nativeJavaMethod0);
      // Undeclared exception!
      try { 
        functionObject0.call((Context) null, functionObject0, functionObject0, methodArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"getIds\" called on incompatible object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      Method[] methodArray0 = FunctionObject.getMethodList(class0);
      Method method0 = FunctionObject.findSingleMethod(methodArray0, "getIds");
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(method0, "getIds");
      FunctionObject functionObject0 = new FunctionObject("getIds", method0, nativeJavaMethod0);
      // Undeclared exception!
      try { 
        functionObject0.call((Context) null, nativeJavaMethod0, nativeJavaMethod0, methodArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"getIds\" called on incompatible object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      Method[] methodArray0 = FunctionObject.getMethodList(class0);
      Method method0 = FunctionObject.findSingleMethod(methodArray0, "getIds");
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(method0, "getIds");
      // Undeclared exception!
      try { 
        Context.getContext();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      Context context0 = new Context();
      Class<Method> class0 = Method.class;
      // Undeclared exception!
      try { 
        FunctionObject.convertArg(context0, (Scriptable) nativeCall0, (Object) context0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't convert to type \"java.lang.reflect.Method\".
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      Method[] methodArray0 = FunctionObject.getMethodList(class0);
      // Undeclared exception!
      try { 
        FunctionObject.findSingleMethod(methodArray0, "has");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Method \"has\" occurs multiple times in class \"com.google.javascript.rhino.head.NativeJavaArray\".
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Method[] methodArray0 = new Method[1];
      Method method0 = FunctionObject.findSingleMethod(methodArray0, " ky#*oj'");
      assertNull(method0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test10()  throws Throwable  {
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      Method[] methodArray0 = FunctionObject.getMethodList(class0);
      Method method0 = FunctionObject.findSingleMethod(methodArray0, "getIds");
      assertNotNull(method0);
      
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(method0, "getIds");
      FunctionObject functionObject0 = new FunctionObject("getIds", method0, nativeJavaMethod0);
      functionObject0.getMethodOrConstructor();
      assertEquals(13, methodArray0.length);
      assertEquals(0, functionObject0.getArity());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test11()  throws Throwable  {
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      Method[] methodArray0 = FunctionObject.getMethodList(class0);
      Method method0 = FunctionObject.findSingleMethod(methodArray0, "getIds");
      assertNotNull(method0);
      
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(method0, "n<mee&c%1(HN#be");
      FunctionObject functionObject0 = new FunctionObject((String) null, method0, nativeJavaMethod0);
      functionObject0.getFunctionName();
      assertEquals(13, methodArray0.length);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test12()  throws Throwable  {
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      Method[] methodArray0 = FunctionObject.getMethodList(class0);
      Method method0 = FunctionObject.findSingleMethod(methodArray0, "getIds");
      assertNotNull(method0);
      
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(method0, "getIds");
      FunctionObject functionObject0 = new FunctionObject("getIds", method0, nativeJavaMethod0);
      String string0 = functionObject0.decompile(2, 2);
      assertEquals(13, methodArray0.length);
      assertEquals("function getIds() {\n\t[native code, arity=0]\n}\n", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Class<Double> class0 = Double.TYPE;
      NativeCall nativeCall0 = new NativeCall();
      Object object0 = FunctionObject.convertArg((Context) null, (Scriptable) nativeCall0, (Object) null, (Class<?>) class0);
      Object object1 = FunctionObject.convertArg((Context) null, (Scriptable) nativeCall0, object0, (Class<?>) class0);
      assertNotNull(object1);
      assertEquals(0.0, object1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      Class<Boolean> class0 = Boolean.class;
      Object object0 = FunctionObject.convertArg((Context) null, (Scriptable) nativeCall0, (Object) null, (Class<?>) class0);
      assertEquals(false, object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Object object0 = FunctionObject.convertArg((Context) null, (Scriptable) nativeObject0, (Object) 0, 2);
      assertEquals(0, object0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Class<String> class0 = String.class;
      Object object0 = FunctionObject.convertArg((Context) null, (Scriptable) delegator0, (Object) "msg.no.overload", (Class<?>) class0);
      assertEquals("msg.no.overload", object0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.getContext();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No Context associated with current Thread
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      Method[] methodArray0 = FunctionObject.getMethodList(class0);
      Method method0 = FunctionObject.findSingleMethod(methodArray0, "wrap");
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(method0, "wrap");
      FunctionObject functionObject0 = new FunctionObject("wrap", method0, nativeJavaMethod0);
      // Undeclared exception!
      try { 
        functionObject0.call((Context) null, nativeJavaMethod0, nativeJavaMethod0, methodArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Class<Double> class0 = Double.class;
      // Undeclared exception!
      try { 
        FunctionObject.convertArg((Context) null, (Scriptable) delegator0, (Object) delegator0, (Class<?>) class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Class<Boolean> class0 = Boolean.TYPE;
      Boolean boolean0 = Boolean.valueOf("\"X@= ,$0LL5?,5#6fX");
      Object object0 = FunctionObject.convertArg((Context) null, (Scriptable) delegator0, (Object) boolean0, (Class<?>) class0);
      assertEquals(false, object0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      int int0 = FunctionObject.getTypeTag(class0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Class<Integer> class0 = Integer.class;
      Object object0 = FunctionObject.convertArg((Context) null, (Scriptable) delegator0, (Object) null, (Class<?>) class0);
      assertNotNull(object0);
      assertEquals(0, object0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        FunctionObject.convertArg((Context) null, (Scriptable) delegator0, (Object) nativeIterator_StopIteration0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Class<Delegator> class0 = Delegator.class;
      Method[] methodArray0 = FunctionObject.getMethodList(class0);
      Method method0 = FunctionObject.findSingleMethod(methodArray0, "call");
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(method0, "getIds");
      FunctionObject functionObject0 = null;
      try {
        functionObject0 = new FunctionObject("call", method0, nativeJavaMethod0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unsupported parameter type \"com.google.javascript.rhino.head.Context\" in method \"call\".
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        JavaAdapter.runScript((Script) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.JavaAdapter$2", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      Method[] methodArray0 = FunctionObject.getMethodList(class0);
      Method method0 = FunctionObject.findSingleMethod(methodArray0, "getIds");
      //  // Unstable assertion: assertNotNull(method0);
      
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(method0, "getIds");
      FunctionObject functionObject0 = new FunctionObject("getIds", method0, nativeJavaMethod0);
      functionObject0.addAsConstructor(nativeJavaMethod0, nativeJavaMethod0);
      //  // Unstable assertion: assertEquals(13, methodArray0.length);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      Method[] methodArray0 = FunctionObject.getMethodList(class0);
      Method method0 = FunctionObject.findSingleMethod(methodArray0, "getIds");
      //  // Unstable assertion: assertNotNull(method0);
      
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(method0, "getIds");
      FunctionObject functionObject0 = new FunctionObject("getIds", method0, nativeJavaMethod0);
      int int0 = functionObject0.getLength();
      //  // Unstable assertion: assertEquals(13, methodArray0.length);
      //  // Unstable assertion: assertEquals(0, int0);
  }
}
