/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 23:27:05 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Decompiler;
import com.google.javascript.rhino.head.UintMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Decompiler_ESTest extends Decompiler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;)Ljava/lang/Object;", 146, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("(J\u0DE0\uB6B3\uA764\u0000", 1, uintMap0);
      assertEquals("\n1000000000000000000", string0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile(")\u0002SR", 2, uintMap0);
      assertEquals("(\"SR\")", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("g\u0001", 1, uintMap0);
      assertEquals("", string0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("R\u0001", 2, uintMap0);
      assertEquals(";", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("ry'E}GuJAb>%>QoX", 144, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("x'(kt$f^,u}94", 2, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("V\u0001", 1, uintMap0);
      assertEquals("", string0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("U\u0001U\u0001", 136, uintMap0);
      assertEquals("\n{\n    {\n\n", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      UintMap uintMap0 = new UintMap(136);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(" \u2209 [0, ", 126, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 8713
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u00A4(D\uC068\u63B2\u43FD\uA9E6", 3, uintMap0);
      assertEquals("-195.1155109362", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A3\u0001", 163, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 163
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A2\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 162
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A1\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 161
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u00A0\u0001", 1, uintMap0);
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u009F\u0001", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 159
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u009E\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 158
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u009D\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 157
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u009C\u0001", (-694), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 156
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u009A\u0001", 154, uintMap0);
      assertEquals("const ", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0099\u0001", 139, uintMap0);
      assertEquals("let ", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0098\u0001", 162, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0097\u0001", 1, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0096\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 150
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("(D\uC099\u41C8\u2C45\u584F\u0095\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 149
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0094\u0001", 148, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 148
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0093\u0001", 147, uintMap0);
      assertEquals("@", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0092\u0001", 146, uintMap0);
      assertEquals(".(", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0091\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 145
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0090\u0001", 142, uintMap0);
      assertEquals("::", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u008F\u0001\u009B\u0001", (-2011), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 155
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u008E\u0001", (-28), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 142
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u008D\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 141
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u008C\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 140
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u008B\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 139
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0001\u0001\u008A\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 138
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0001\u0001\u0088\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 136
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0087\u0001", 93, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 135
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0086\u0001", 134, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 134
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0085\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 133
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0084\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 132
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0083\u0001", 131, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 131
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0082\u0001", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 130
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0081\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 129
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0080\u0001", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 128
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("G.eo", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 127
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("hXwjTmd", 2, uintMap0);
      assertEquals(" || )for ++]function ", string0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("t\u0001t\u0001", 116, uintMap0);
      assertEquals("\ndefault\ndefault\n\n", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("p,[Xy", 1, uintMap0);
      assertEquals("\nif false |= )continue", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      UintMap uintMap0 = new UintMap(32768);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("xnI}^d]ih.lG", 32768, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 110
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("continue", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 111
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("`Lu`ayB71SE.>$pm", 1760, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 76
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("_0J-q)#b.", 60, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Z/3+d@", 6, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 51
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("hr4O\"Tm<N)SaL%F8", (-2364), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 79
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("~NR+}yfUc*8.iYXjQ", 4539, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 78
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Myu|tyOj:", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 77
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("4uKE8LQrlle[um<", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 75
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("rI)lqx=~nx", 6, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 73
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("UHz", 1, uintMap0);
      assertEquals("\n{yield var ", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("VudG,sx9!", 118, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 71
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("FR^aE\"-~pmoibi^^", (-826), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 70
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("ELjig`c*GWUFb89;|O|l", 146, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 69
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("f -b}D]R8jPA?]ND", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 68
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("jC|aJ_/Bf(Eyf[", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 67
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Bd/P", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 80
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      UintMap uintMap0 = new UintMap(340);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("fU vA9gJMs4yvXhwmE5", 340, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 65
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("v@eXWxV|]+ <", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 64
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(" ? ", 4098, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 63
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      UintMap uintMap0 = new UintMap(298);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(" ^= ", 298, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 61
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("aX<Z!", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 60
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(";2t2vr*\"njlzka5", 39, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 59
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Wg,x:i/HiwZdE", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 58
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("|9gsj#_hm?hhj{", 163, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 57
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("]48", 1486, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 56
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("zk6.5W", 799, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 54
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("VsU[Ul1", 164, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 49
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("b/W[{{RJ+Y.9Pjk41)", 156, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 74
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      UintMap uintMap0 = new UintMap(128);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("~sg2modify.sealed", 128, uintMap0);
      assertEquals("\nvoid case  : throw function  /=  &&  ? continue === case  %=  += . %=  /= \n", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Y5^-4766+:L", (-842), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 55
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("++>k9UIq!KJ,", 164, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 62
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("liVq*J\"TQ[yG|", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 74
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(" & ", 115, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 38
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("y%Wm;", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 37
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Q$U:|7H", 1778, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 36
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("SV#Z", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 35
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("y\"CLAU7'!zZk", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 34
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("!]i8H]t{VY>)wHUF_", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 33
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u0001\u0001\u001E\u0001", 2, uintMap0);
      assertEquals("new ", string0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u001D\u0001", 2, uintMap0);
      assertEquals("-", string0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u001C\u0001", 1, uintMap0);
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u001B\u0001", 1, uintMap0);
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u001A\u0001", 155, uintMap0);
      assertEquals("!", string0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u0019\u0001", 2, uintMap0);
      assertEquals(" % ", string0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0018\u0001", 3, uintMap0);
      assertEquals(" / ", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u0017\u0001", 2, uintMap0);
      assertEquals(" * ", string0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u0016\u0001", 2, uintMap0);
      assertEquals(" - ", string0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u0015\u0001", 1, uintMap0);
      assertEquals("", string0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0014\u0001", 20, uintMap0);
      assertEquals("\n >>> \n\n", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0013\u0001", 1113, uintMap0);
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0012\u0001", 2, uintMap0);
      assertEquals(" << ", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0011\u0001", 2, uintMap0);
      assertEquals(" >= ", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0010\u0001", 1, uintMap0);
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u000F\u0001", 3, uintMap0);
      assertEquals(" <= ", string0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u000E\u0001", 14, uintMap0);
      assertEquals(" < ", string0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\r\u0001", 2543, uintMap0);
      assertEquals(" != ", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\f\u0001", 12, uintMap0);
      assertEquals("\n == \n\n", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u000B\u0001", 2, uintMap0);
      assertEquals(" & ", string0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\n || );  /= ", 1, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\t\u0001~\u0001", 2, uintMap0);
      assertEquals(" | void ", string0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\b\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 8
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("(S\u00010\u0002//m\u0001m\u0003)\u0010s/8o'#UrkJg@2^E'\u0010s/8o'#UrkJg@2^E0\"/s/8o'#UrkJg@2^E/s/8o'#UrkJg@2^E)\u0010s/8o'#UrkJg@2^E'\u0010s/8o'#UrkJg@2^E\u0007\t\u0001m\u0002m\u0002\u00A4(D\u4093\u8328\uF5C2\u8F5C0\"/s/8o'#UrkJg@2^E/s/8o'#UrkJg@2^E\u00A4m\u0002m\u00020=/s/8o'#UrkJg@2^E/com.google|javascript.rhin1.hean.NativeCall\u0002\u0001\u00A4", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 7
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0006\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 6
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0005\u0001", 118, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 5
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u0004\u0001", 2, uintMap0);
      assertEquals("return ", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile(")\u0003()I\u0003\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 3
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0002\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 2
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("0\u0002//\u0089\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 137
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      uintMap0.put(1, 1);
      String string0 = Decompiler.decompile("(S\u0001", 1, uintMap0);
      assertEquals("\n 1", string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      String string0 = Decompiler.decompile("\u0088\u0001", 2, uintMap0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      uintMap0.put(3, (-422));
      // Undeclared exception!
      try { 
        Decompiler.decompile("S$T2=\"tB`4_GH", (-268), uintMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      uintMap0.put(2, (-2139));
      // Undeclared exception!
      try { 
        Decompiler.decompile("y\"CLAU7'!zZk", 1, uintMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      uintMap0.put(1, (-613));
      // Undeclared exception!
      try { 
        Decompiler.decompile("(D\uC070\u5B97\u5E97\u401D", 1, uintMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      String string0 = Decompiler.decompile("", 2, uintMap0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addRegexp("(S\u00010\u0002//m\u0001m\u0003)\u0010s/8o'#UrkJg@2^E'\u0010s/8o'#UrkJg@2^E0\"/s/8o'#UrkJg@2^E/s/8o'#UrkJg@2^E)\u0010s/8o'#UrkJg@2^E'\u0010s/8o'#UrkJg@2^E\u0007\t\u0001m\u0002m\u0002\u00A4(D\u4093\u8328\uF5C2\u8F5C0\"/s/8o'#UrkJg@2^E/s/8o'#UrkJg@2^E\u00A4m\u0002m\u00020=/s/8o'#UrkJg@2^E/com.google|javascript.rhin1.hean.NativeCall\u0002\u0001\u00A4", "(S\u00010\u0002//m\u0001m\u0003)\u0010s/8o'#UrkJg@2^E'\u0010s/8o'#UrkJg@2^E0\"/s/8o'#UrkJg@2^E/s/8o'#UrkJg@2^E)\u0010s/8o'#UrkJg@2^E'\u0010s/8o'#UrkJg@2^E\u0007\t\u0001m\u0002m\u0002\u00A4(D\u4093\u8328\uF5C2\u8F5C0\"/s/8o'#UrkJg@2^E/s/8o'#UrkJg@2^E\u00A4m\u0002m\u00020=/s/8o'#UrkJg@2^E/com.google|javascript.rhin1.hean.NativeCall\u0002\u0001\u00A4");
      assertEquals(1, Decompiler.ONLY_BODY_FLAG);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addNumber(1.0E18);
      assertEquals(1, Decompiler.ONLY_BODY_FLAG);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addNumber((-6640));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addNumber(1248.79);
      assertEquals(2, Decompiler.INDENT_GAP_PROP);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addNumber(1);
      decompiler0.addRegexp("", "");
      decompiler0.markFunctionStart(1);
      decompiler0.markFunctionStart(3);
      decompiler0.addString("s/8o'#UrkJg@2^E");
      decompiler0.addName("s/8o'#UrkJg@2^E");
      decompiler0.addRegexp("s/8o'#UrkJg@2^E", "s/8o'#UrkJg@2^E");
      decompiler0.addString("s/8o'#UrkJg@2^E");
      decompiler0.addName("s/8o'#UrkJg@2^E");
      decompiler0.addEOL(9);
      decompiler0.markFunctionStart(2);
      decompiler0.addNumber(1248.79);
      assertEquals(1, Decompiler.INITIAL_INDENT_PROP);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addEOL(1128);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addEOL((-47));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addToken(439);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addToken((-250));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u0001\u0001'\u0000\u0001\u0001", 1, uintMap0);
      assertEquals("\n\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      int int0 = decompiler0.markFunctionEnd((-23));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      String string0 = decompiler0.getEncodedSource();
      assertEquals("", string0);
  }
}
