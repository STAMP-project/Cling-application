/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 10:15:35 GMT 2019
 */

package org.apache.commons.math.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math.ode.DormandPrince853Integrator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class DormandPrince853Integrator_ESTest extends DormandPrince853Integrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[18];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-116.0), (-116.0), doubleArray0, doubleArray0);
      double[][] doubleArray1 = new double[12][4];
      double[] doubleArray2 = new double[0];
      double double0 = dormandPrince853Integrator0.estimateError(doubleArray1, doubleArray2, doubleArray2, 60.0);
      assertEquals(8, dormandPrince853Integrator0.getOrder());
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[12][4];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(Double.NaN, (-1680.7887), Double.NaN, (-1680.7887));
      double double0 = dormandPrince853Integrator0.estimateError(doubleArray1, doubleArray0, doubleArray0, (-116.0));
      assertEquals(8, dormandPrince853Integrator0.getOrder());
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-116.0), (-116.0), doubleArray0, doubleArray0);
      double[][] doubleArray1 = new double[12][4];
      double double0 = dormandPrince853Integrator0.estimateError(doubleArray1, doubleArray0, doubleArray0, (-1749.298330279434));
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-116.0), (-116.0), doubleArray0, doubleArray0);
      String string0 = dormandPrince853Integrator0.getName();
      assertEquals(8, dormandPrince853Integrator0.getOrder());
      assertEquals("Dormand-Prince 8 (5, 3)", string0);
  }
}
