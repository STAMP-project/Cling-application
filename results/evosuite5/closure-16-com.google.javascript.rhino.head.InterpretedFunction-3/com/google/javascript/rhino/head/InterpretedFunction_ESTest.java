/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 25 08:06:26 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.InterpreterData;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.TopLevel;
import com.google.javascript.rhino.head.debug.DebuggableScript;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class InterpretedFunction_ESTest extends InterpretedFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Context context0 = Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(13, "language version", "error reporter", false);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      interpreterData0.itsFunctionType = 12;
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createFunction(context0, importerTopLevel0, interpreterData0, (Object) null);
      // Undeclared exception!
      try { 
        interpretedFunction0.exec(context0, importerTopLevel0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Context context0 = Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(13, "language version", "error reporter", false);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createFunction(context0, importerTopLevel0, interpreterData0, (Object) null);
      // Undeclared exception!
      try { 
        interpretedFunction0.exec(context0, importerTopLevel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Context context0 = Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(13, "language version", "error reporter", false);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createFunction(context0, importerTopLevel0, interpreterData0, (Object) null);
      String string0 = interpretedFunction0.getFunctionName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Context context0 = Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(13, "language version", "error reporter", false);
      interpreterData0.itsName = "language version";
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createFunction(context0, importerTopLevel0, interpreterData0, (Object) null);
      String string0 = interpretedFunction0.getFunctionName();
      assertEquals("language version", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Context context0 = Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(13, "language version", "error reporter", false);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Object[] objectArray0 = new Object[3];
      interpreterData0.itsRegExpLiterals = objectArray0;
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createFunction(context0, importerTopLevel0, interpreterData0, (Object) null);
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Context context0 = Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(13, "language version", "error reporter", true);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createFunction(context0, importerTopLevel0, interpreterData0, (Object) null);
      // Undeclared exception!
      try { 
        interpretedFunction0.createRegExpWraps(context0, interpretedFunction0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Context context0 = Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(13, "language version", "error reporter", true);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createFunction(context0, importerTopLevel0, interpreterData0, (Object) null);
      // Undeclared exception!
      try { 
        interpretedFunction0.getParamOrVarName(8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Context context0 = Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(13, "language version", "language version", false);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createFunction(context0, importerTopLevel0, interpreterData0, (Object) null);
      DebuggableScript debuggableScript0 = interpretedFunction0.getDebuggableView();
      assertFalse(debuggableScript0.isTopLevel());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      TopLevel topLevel0 = new TopLevel();
      // Undeclared exception!
      try { 
        InterpretedFunction.createFunction(context0, topLevel0, (InterpretedFunction) null, 110);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }
}
