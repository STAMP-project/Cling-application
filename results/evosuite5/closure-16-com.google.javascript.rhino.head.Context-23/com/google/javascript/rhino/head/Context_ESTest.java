/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 18 06:03:19 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Arguments;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.Callable;
import com.google.javascript.rhino.head.ClassShutter;
import com.google.javascript.rhino.head.CompilerEnvirons;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextAction;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.ContextListener;
import com.google.javascript.rhino.head.DefaultErrorReporter;
import com.google.javascript.rhino.head.ErrorReporter;
import com.google.javascript.rhino.head.Evaluator;
import com.google.javascript.rhino.head.Function;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.Interpreter;
import com.google.javascript.rhino.head.InterpreterData;
import com.google.javascript.rhino.head.JavaAdapter;
import com.google.javascript.rhino.head.JavaScriptException;
import com.google.javascript.rhino.head.MemberBox;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeError;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJavaMethod;
import com.google.javascript.rhino.head.NativeJavaObject;
import com.google.javascript.rhino.head.NativeJavaPackage;
import com.google.javascript.rhino.head.NativeJavaTopPackage;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.PolicySecurityController;
import com.google.javascript.rhino.head.Script;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.SecurityController;
import com.google.javascript.rhino.head.Synchronizer;
import com.google.javascript.rhino.head.TopLevel;
import com.google.javascript.rhino.head.WrapFactory;
import com.google.javascript.rhino.head.debug.Debugger;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.io.StringReader;
import java.lang.reflect.InvocationTargetException;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockError;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Context_ESTest extends Context_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      context0.addActivationName("Function argument was not created by interpreted mode ");
      context0.removeActivationName("Function argument was not created by interpreted mode ");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test001()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        context0.removeActivationName("REF_SPECIAL");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      context0.removeActivationName("Function argument was not created by interpreted mode ");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test003()  throws Throwable  {
      Context context0 = Context.getContext();
      context0.isActivationNeeded("error reporter");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Context context0 = new Context();
      context0.isActivationNeeded("error reporter");
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Context context0 = new Context();
      context0.addActivationName("language version");
      context0.addActivationName("Ku\"U% ;5;D");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test006()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        context0.addActivationName("language version");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Context context0 = new Context();
      context0.addActivationName("<p=G ^Pm_;SQ[");
      context0.isActivationNeeded("<p=G ^Pm_;SQ[");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Context context0 = Context.enter();
      context0.isVersionECMA1();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test009()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Context.toBoolean(nativeContinuation0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Context context0 = new Context();
      context0.isVersionECMA1();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test011()  throws Throwable  {
      Context context0 = Context.getContext();
      context0.getRegExpProxy();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test012()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      BaseFunction baseFunction0 = new BaseFunction();
      // Undeclared exception!
      try { 
        context0.compileFunction(baseFunction0, "", "", 1, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test013()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        context0.compileFunction(nativeContinuation0, "toEXxponential", "toEXxponential", 2, nativeContinuation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test014()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.compileFunction((Scriptable) null, "wg~Z;BX7_|n9v+qG", "wg~Z;BX7_|n9v+qG", 4, "wg~Z;BX7_|n9v+qG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Context context0 = new Context();
      NativeCall nativeCall0 = new NativeCall();
      // Undeclared exception!
      try { 
        context0.compileFunction(nativeCall0, (String) null, (String) null, 9, (Object) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test016()  throws Throwable  {
      Context context0 = Context.getContext();
      StringReader stringReader0 = new StringReader("language version");
      // Undeclared exception!
      try { 
        context0.evaluateReader((Scriptable) null, stringReader0, "error reporter", 11, stringReader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test017()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.evaluateString((Scriptable) null, "Context.java.java", "Context.java.java", 1, (Object) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      context0.setApplicationClassLoader(classLoader0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test019()  throws Throwable  {
      Context context0 = new Context();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        context0.setApplicationClassLoader(classLoader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Loader can not resolve Rhino classes
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test020()  throws Throwable  {
      Context context0 = Context.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      // Undeclared exception!
      try { 
        context0.setApplicationClassLoader(classLoader0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Context context0 = new Context();
      context0.setApplicationClassLoader((ClassLoader) null);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Context context0 = new Context();
      context0.setInstructionObserverThreshold(0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setInstructionObserverThreshold((-436));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test024()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        context0.setInstructionObserverThreshold(2845);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test025()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(430, "Cannot overwrite existing ClassShutter object", "Cannot overwrite existing ClassShutter object", false);
      // Undeclared exception!
      try { 
        InterpretedFunction.createScript(interpreterData0, interpreterData0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Context.getDebuggableView((Script) null);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test027()  throws Throwable  {
      Context context0 = new Context();
      Context context1 = Context.enter();
      // Undeclared exception!
      try { 
        context1.setDebugger((Debugger) null, context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Context context0 = new Context();
      context0.setDebugger((Debugger) null, (Object) null);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setWrapFactory((WrapFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test030()  throws Throwable  {
      Context context0 = Context.enter();
      WrapFactory wrapFactory0 = context0.getWrapFactory();
      // Undeclared exception!
      try { 
        context0.setWrapFactory(wrapFactory0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Context context0 = new Context();
      WrapFactory wrapFactory0 = context0.getWrapFactory();
      context0.setWrapFactory(wrapFactory0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      NativeNumber nativeNumber0 = new NativeNumber(4);
      context0.putThreadLocal(nativeNumber0, nativeNumber0);
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      context0.removeThreadLocal(compilerEnvirons0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test033()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Interpreter interpreter0 = new Interpreter();
      // Undeclared exception!
      try { 
        context0.removeThreadLocal(interpreter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      context0.removeThreadLocal(compilerEnvirons0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Context context0 = new Context();
      context0.putThreadLocal(context0, context0);
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      context0.putThreadLocal(nativeJavaTopPackage0, classLoader0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test036()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        context0.putThreadLocal(context0, context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Context context0 = Context.enter();
      context0.getThreadLocal((Object) null);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      context0.putThreadLocal(contextFactory0, contextFactory0);
      context0.getThreadLocal(contextFactory0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Context context0 = Context.enter();
      context0.getClassShutterSetter();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test040()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        context0.setClassShutter((ClassShutter) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setClassShutter((ClassShutter) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      SecurityController.initGlobal(policySecurityController0);
      // Undeclared exception!
      try { 
        context0.setSecurityController(policySecurityController0);
        fail("Expecting exception: SecurityException");
      
      } catch(SecurityException e) {
         //
         // Can not overwrite existing global SecurityController object
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test043()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      context0.setSecurityController(policySecurityController0);
      // Undeclared exception!
      try { 
        context0.setSecurityController(policySecurityController0);
        fail("Expecting exception: SecurityException");
      
      } catch(SecurityException e) {
         //
         // Can not overwrite existing SecurityController object
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test044()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      // Undeclared exception!
      try { 
        context0.setSecurityController(policySecurityController0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setSecurityController((SecurityController) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Context context0 = new Context();
      context0.setOptimizationLevel((-1));
      context0.setMaximumInterpreterStackDepth(2956);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Context context0 = new Context();
      context0.setOptimizationLevel((-1));
      // Undeclared exception!
      try { 
        context0.setMaximumInterpreterStackDepth((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot set maximumInterpreterStackDepth to less than 1
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test048()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.setMaximumInterpreterStackDepth(110);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setMaximumInterpreterStackDepth((-1));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot set maximumInterpreterStackDepth when optimizationLevel != -1
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setOptimizationLevel(13);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Optimization level outside [-1..9]: 13
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setOptimizationLevel((-400));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Optimization level outside [-1..9]: -400
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Context context0 = new Context();
      context0.setOptimizationLevel((-2));
  }

  @Test(timeout = 4000)
  @Ignore
  public void test053()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        context0.setOptimizationLevel(170);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Context context0 = new Context();
      context0.setGeneratingSource(true);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      context0.setOptimizationLevel(9);
      context0.setGeneratingDebug(true);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Context context0 = new Context();
      context0.setGeneratingDebug(false);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test057()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        context0.setGeneratingDebug(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Context context0 = new Context();
      context0.setGeneratingDebug(true);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        Context.throwAsScriptRuntimeEx(mockThrowable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Wrapped org.evosuite.runtime.mock.java.lang.MockThrowable
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test060()  throws Throwable  {
      MockError mockError0 = new MockError();
      InvocationTargetException invocationTargetException0 = new InvocationTargetException(mockError0, "language version");
      // Undeclared exception!
      try { 
        Context.throwAsScriptRuntimeEx(invocationTargetException0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Context context0 = Context.enter();
      JavaScriptException javaScriptException0 = new JavaScriptException(context0, "error reporter", (-1));
      // Undeclared exception!
      try { 
        Context.throwAsScriptRuntimeEx(javaScriptException0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test062()  throws Throwable  {
      JavaAdapter javaAdapter0 = new JavaAdapter();
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        Context.javaToJS(javaAdapter0, nativeJavaObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Character character0 = Character.valueOf('c');
      Context.javaToJS(character0, (Scriptable) null);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Boolean boolean0 = Boolean.TRUE;
      Context.javaToJS(boolean0, nativeError0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      Float float0 = new Float((float) 4);
      Context.javaToJS(float0, baseFunction0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Context.javaToJS(nativeError0, nativeError0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test067()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("j_=|>k&7-3/=;V#'%re");
      Context.javaToJS("j_=|>k&7-3/=;V#'%re", nativeJavaPackage0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      MemberBox[] memberBoxArray0 = new MemberBox[0];
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(memberBoxArray0, "language version");
      // Undeclared exception!
      try { 
        context0.newArray((Scriptable) nativeJavaMethod0, (Object[]) memberBoxArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.newArray((Scriptable) null, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Context context0 = new Context();
      BaseFunction baseFunction0 = new BaseFunction();
      context0.decompileFunctionBody(baseFunction0, 2596);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Context context0 = new Context();
      context0.decompileFunctionBody((Function) null, 754);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      BaseFunction baseFunction0 = new BaseFunction();
      context0.decompileFunction(baseFunction0, 13);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test073()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeArray nativeArray0 = new NativeArray(context0.emptyArgs);
      Synchronizer synchronizer0 = new Synchronizer(nativeArray0);
      context0.decompileFunction(synchronizer0, 2);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test074()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        context0.evaluateString((Scriptable) null, "language version", "language version", (-136), "language version");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test075()  throws Throwable  {
      Context context0 = new Context();
      BaseFunction baseFunction0 = new BaseFunction();
      StringReader stringReader0 = new StringReader("language version");
      // Undeclared exception!
      try { 
        context0.evaluateReader(baseFunction0, stringReader0, "language version", 13, stringReader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test076()  throws Throwable  {
      Context context0 = Context.getContext();
      context0.stringIsCompilableUnit("PI;g+0:yng`sUQk]#Z");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test077()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      context0.stringIsCompilableUnit("error reporter");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test078()  throws Throwable  {
      Context context0 = Context.getContext();
      context0.stringIsCompilableUnit("Context.java.java");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test079()  throws Throwable  {
      Context.getCurrentContext();
      InterpreterData interpreterData0 = new InterpreterData(8, "error reporter", "language version", false);
      // Undeclared exception!
      try { 
        InterpretedFunction.createScript(interpreterData0, interpreterData0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        context0.callFunctionWithContinuations((Callable) null, (Scriptable) null, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Function argument was not created by interpreted mode 
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test081()  throws Throwable  {
      Context.getCurrentContext();
      InterpreterData interpreterData0 = new InterpreterData(8, "error reporter", "language version", false);
      interpreterData0.itsFunctionType = 2031;
      // Undeclared exception!
      try { 
        InterpretedFunction.createScript(interpreterData0, interpreterData0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Context context0 = new Context();
      NativeArray nativeArray0 = new NativeArray(context0.emptyArgs);
      // Undeclared exception!
      try { 
        context0.executeScriptWithContinuations((Script) null, nativeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Script argument was not a script or was not created by interpreted mode 
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Context context0 = new Context();
      context0.firePropertyChange("language version", "error reporter", "language version");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test084()  throws Throwable  {
      Context context0 = Context.enter();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("error reporter", propertyChangeListener0);
      // Undeclared exception!
      try { 
        context0.removePropertyChangeListener(propertyChangeListenerProxy0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Context context0 = new Context();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("language version", propertyChangeListener0);
      context0.removePropertyChangeListener(propertyChangeListenerProxy0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test086()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("error reporter", propertyChangeListener0);
      // Undeclared exception!
      try { 
        context0.addPropertyChangeListener(propertyChangeListenerProxy0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Context context0 = new Context();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("error reporter", propertyChangeListener0);
      context0.addPropertyChangeListener(propertyChangeListenerProxy0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test088()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        context0.setLocale((Locale) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Context context0 = new Context();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      context0.setLocale(locale0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Context context0 = new Context();
      context0.getLocale();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      context0.setErrorReporter(errorReporter0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      context0.setErrorReporter(defaultErrorReporter0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test093()  throws Throwable  {
      Context context0 = Context.getContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      // Undeclared exception!
      try { 
        context0.setErrorReporter(defaultErrorReporter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setErrorReporter((ErrorReporter) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test095()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        InterpretedFunction.createScript((InterpreterData) null, context0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Context context0 = new Context();
      context0.getImplementationVersion();
      context0.getImplementationVersion();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.checkLanguageVersion(5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad language version: 5
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Context.isValidLanguageVersion(180);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Context.isValidLanguageVersion(160);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Context.isValidLanguageVersion(150);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Context.checkLanguageVersion(130);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Context.isValidLanguageVersion(120);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Context.isValidLanguageVersion(110);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Context.isValidLanguageVersion(100);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Context.isValidLanguageVersion(140);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test106()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.setLanguageVersion(3018);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test107()  throws Throwable  {
      Context context0 = new Context();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      context0.seal(importerTopLevel0);
      context0.unseal(importerTopLevel0);
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test108()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.unseal((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.unseal(context0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test110()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        context0.seal(importerTopLevel0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ContextListener contextListener0 = mock(ContextListener.class, new ViolatedAssumptionAnswer());
      Context.addContextListener(contextListener0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Context context0 = new Context();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ContextFactory contextFactory0 = new ContextFactory();
      Context.call(contextFactory0, (Callable) nativeContinuation0, (Scriptable) nativeContinuation0, (Scriptable) nativeContinuation0, context0.emptyArgs);
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Context context0 = null;
      try {
        context0 = new Context((ContextFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // factory == null
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Object object0 = Context.getUndefinedValue();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test115()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.decompileScript((Script) null, 874);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        Context.reportRuntimeError3("X`W!_qq2IXxzM|h", context0, "X`W!_qq2IXxzM|h", context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property X`W!_qq2IXxzM|h
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Context context0 = new Context();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      assertNotNull(classLoader0);
      
      context0.createClassLoader(classLoader0);
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Context.setCachingEnabled(true);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.newObject((Scriptable) null, "error reporter");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test120()  throws Throwable  {
      Context context0 = Context.enter();
      assertTrue(context0.isGeneratingSource());
      
      // Undeclared exception!
      try { 
        context0.setGeneratingSource(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Context context0 = new Context();
      context0.getDebuggerContextData();
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
      assertTrue(context0.isGeneratingSource());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test122()  throws Throwable  {
      Context.reportWarning("Zi", (Throwable) null);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      context0.getDebugger();
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Context context0 = new Context();
      NativeString nativeString0 = new NativeString("error reporter");
      // Undeclared exception!
      try { 
        Context.reportRuntimeError4("language version", nativeString0, context0, context0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property language version
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ContextAction contextAction0 = mock(ContextAction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(contextAction0).run(any(com.google.javascript.rhino.head.Context.class));
      Object object0 = Context.call(contextAction0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Context context0 = new Context();
      int int0 = context0.getInstructionObserverThreshold();
      assertEquals(0, int0);
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      int int0 = context0.getMaximumInterpreterStackDepth();
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test128()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      boolean boolean0 = context0.isSealed();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Context context0 = new Context();
      context0.observeInstructionCount(9);
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test130()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<Arguments> class0 = Arguments.class;
      // Undeclared exception!
      try { 
        Context.toObject((Object) context0, (Scriptable) nativeIterator_StopIteration0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Context context0 = Context.enter();
      context0.initStandardObjects();
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test132()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.captureContinuation();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Interpreter frames not found
         //
         verifyException("com.google.javascript.rhino.head.Interpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ContextListener contextListener0 = mock(ContextListener.class, new ViolatedAssumptionAnswer());
      Context.removeContextListener(contextListener0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Context context0 = new Context();
      context0.setInstructionObserverThreshold(160);
      assertTrue(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      // Undeclared exception!
      try { 
        JavaAdapter.runScript((Script) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.JavaAdapter$2", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test136()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.reportError("language version");
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // language version
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test137()  throws Throwable  {
      Context context0 = new Context();
      StringReader stringReader0 = new StringReader("language version");
      // Undeclared exception!
      try { 
        context0.evaluateReader((Scriptable) null, stringReader0, "language version", (-1487), stringReader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test138()  throws Throwable  {
      Context context0 = Context.enter();
      Evaluator evaluator0 = Context.createInterpreter();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      // Undeclared exception!
      try { 
        context0.compileString("msg.extra.trailing.semi", evaluator0, errorReporter0, "msg.extra.trailing.semi", 23, (Object) errorReporter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(true, "language version", classLoader0);
      // Undeclared exception!
      try { 
        context0.getElements(nativeJavaPackage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test140()  throws Throwable  {
      Context context0 = new Context();
      NativeCall nativeCall0 = new NativeCall();
      // Undeclared exception!
      try { 
        context0.newObject((Scriptable) nativeCall0, "language version", context0.emptyArgs);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Constructor for \"language version\" not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.reportRuntimeError0("language version");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property language version
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Context context0 = new Context();
      Context.toString((Object) context0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Context context0 = new Context();
      Class<TopLevel> class0 = TopLevel.class;
      try { 
        Context.toType(context0, class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot convert com.google.javascript.rhino.head.Context@1 to com.google.javascript.rhino.head.TopLevel
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Context context0 = Context.enter();
      double double0 = Context.toNumber(context0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Context context0 = new Context();
      Context.ClassShutterSetter context_ClassShutterSetter0 = context0.getClassShutterSetter();
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
      assertTrue(context0.isGeneratingSource());
      assertNotNull(context_ClassShutterSetter0);
  }
}
