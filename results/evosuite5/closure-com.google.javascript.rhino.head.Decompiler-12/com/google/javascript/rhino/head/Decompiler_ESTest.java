/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 23:18:29 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Decompiler;
import com.google.javascript.rhino.head.UintMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Decompiler_ESTest extends Decompiler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("(J \u0000\u0000\u0000", 139, uintMap0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertEquals("9007199254740992", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("xx'O|N>ceI|", 1, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("V\u0001V)\u0010:${;L(;h~xvgsOFx)\u0002^Km\u00010\u0014/^K/:${;L(;h~xvgsOFxV", 161, uintMap0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertEquals("}\":${;L(;h~xvgsOFx\"\"^K\"function /^K/:${;L(;h~xvgsOFx}", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("UV%Z/_=(A", 147, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 37
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1419);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("(S\u0001U\u0001", (-1419), uintMap0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      UintMap uintMap0 = new UintMap(39);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0000\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 0
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A2\u0001", (-2071), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 162
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A1\u0001m\u00A1", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 161
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("m\u00A0\u00A0\u0001", 3, uintMap0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertEquals("function debugger;\n", string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u009E\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 158
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u009D\u0001", 1113, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 157
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u009C\u0001", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 156
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("(S\u0002\u009B", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 155
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u009A\u0001", 154, uintMap0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertEquals("const ", string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u0099\u0001", 3, uintMap0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertEquals("let ", string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0098\u0001", 2, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0097\u0001", 3, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0096\u0001", 150, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 150
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A4\u0095~", 136, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 149
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("(D\u4075\u1990\u85F4\uA127\u0094", 148, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 148
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(")\u0004 &= \u0092\u0001\u00A4\u009F\u0001", (-2381), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 159
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("(D\u3FFD\u58A1\uB5CF\u6E45\u0091", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 145
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("m\u0090\u0090\u0001", 2, uintMap0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertEquals("function ::", string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u008F\u0001", 2, uintMap0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertEquals("..", string0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("'\n(Function)\u008E", 157, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 142
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u008D\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 141
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u008C\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 140
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      UintMap uintMap0 = new UintMap(133);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u008B\u0001", (-730), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 139
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u008A\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 138
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0089\u0001m\uF34E", 135, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 137
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("'\u0002HV\u0088", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 136
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0087\u0001", (-214748364), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 135
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0086\u0001", 161, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 134
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      UintMap uintMap0 = new UintMap(133);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0085\u0001", 915, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 133
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0084\u0001", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 132
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0083\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 131
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0082\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 130
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0081\u0001", 915, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 129
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0080\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 128
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("z{W+", 1110, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 127
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("y\u0001", 136, uintMap0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertEquals("\ncontinue\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("j. j*av'U8?/Td,|D]", 1, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("replace", 1719, uintMap0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertEquals("switch  %= if . +=  *=  %= ", string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("__exception__", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 111
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("]n7u,", 157, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 110
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("s~w", 92, uintMap0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertEquals("\ncase void for \n", string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("zW+", 1110, uintMap0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertEquals("var (this", string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("STS<", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 60
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("R[r(Q44", (-1), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("}Ol;HOk9 ~Y_WT^", 553, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 79
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Ngm1pRgs", 4, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 78
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("XMCE{.", 2252, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 77
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("XL'DkI", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 76
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Q^g.Kyl$nT<", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 75
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("J7+", 41, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 74
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("pI4j#ELAX", 1048575, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 73
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Hg(", 2, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("G+]n^[`+ $J", 156, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 71
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("stF4R)`H<'OZXM{", (-25), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 70
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("E6{/3A|s ,jHWA,<", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 69
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("DZ?*YL;7pmXu", (-711), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 68
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("jhubdCc]&SU/", 1326, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 67
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("SUB", 1, uintMap0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertEquals("\n[{:", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("ASSIGN_ADD", 147, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 65
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("@w?V0_p(S}|hO>eb%Se", (-28), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 64
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("V?#o", 789, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 63
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(">kj1", 143, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 62
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(" /= ", (-256), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 61
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("{YZ<LUMq\"1n9hr", 92, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 60
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(";smJ;y`2{", (-3080), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 59
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("9!#wpxp", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 57
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("+8Ov/", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 56
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("6UTe", 817, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 54
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("5b :a*pC#E@", 2502, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 58
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("4uV3s6?", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 51
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("`1+x+)'F\"", 109, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 49
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("q2/.", 2, uintMap0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertEquals("else throw  !==  === ", string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("sa,P6P4$^", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 80
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("|*7dQpA{&S(+So4j!h>", 82, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 55
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(" &Kr[=F<fAgH6", 92, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 38
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3557);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("frk%M(2YF U)", 3557, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 37
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("$Nv|D^O5FPb3I_H", (-1070), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 36
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Vz#_", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 35
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("a~+~U\"u*m[/#4P", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 34
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("xhV{!\"KN'r|~g@>N", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 33
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u001E\u0001", 1, uintMap0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      UintMap uintMap0 = new UintMap(29);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u0001\u0001\u00A4(S\u0001\u0001)\u0010:${;L(;h~xvgsOFx)\u0002^Km\u00010\u0006/^K/^K\u001D", 29, uintMap0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertEquals("\n1\n\":${;L(;h~xvgsOFx\"\"^K\"function /^K/^K-", string0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      UintMap uintMap0 = new UintMap(27);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0001\u0001\u0001m\u0001)\u0010:${;L(;h~xvgsOFx)\u0002^Km\u00010\u0006/^K/^K\u001B", 27, uintMap0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertEquals("function \":${;L(;h~xvgsOFx\"\"^K\"function /^K/^K~", string0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("0\b/@[$/@[$\u001A", 3, uintMap0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertEquals("/@[$/@[$!", string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      UintMap uintMap0 = new UintMap(31);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0001\u0001(D\uC097\u4672\u746E\uAF6C\u0001)\u0010:${;L(;h~xvgsOFx)\u0002^Km\u00010\u0006/^K/^K\u001F", 31, uintMap0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertEquals("-1489.6117722792214\":${;L(;h~xvgsOFx\"\"^K\"function /^K/^Kdelete ", string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0018\u0001", 1, uintMap0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      UintMap uintMap0 = new UintMap(23);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("(S\u0001)\u0010 uwDJuSYH,! _j=Im\u0001m\u00010#/ uwDJuSYH,! _j=I/gTPo<`n\"-v6A<9{tN\u0017", 3, uintMap0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertEquals("1\" uwDJuSYH,! _j=I\"function function / uwDJuSYH,! _j=I/gTPo<`n\"-v6A<9{tN * ", string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      UintMap uintMap0 = new UintMap(22);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("(S\u0001\u0001)\u0010 uwDJuSYH,! _j=Im\u00010$/gTPo<`n\"-v6A<9{tN/gTPo<`n\"-v6A<9{tN0#/ uwDJuSYH,! _j=I/gTPo<`n\"-v6A<9{tN\u0016", 22, uintMap0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertEquals("1\" uwDJuSYH,! _j=I\"function /gTPo<`n\"-v6A<9{tN/gTPo<`n\"-v6A<9{tN/ uwDJuSYH,! _j=I/gTPo<`n\"-v6A<9{tN - ", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile(")\u00117.?={;Qvr=I_&R)-T\u0001\u0001m\u0001\u0015)\u00068UZ7!", 1, uintMap0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertEquals("\nfunction  + \"8UZ7\\x7f!\"", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile(")\u00107.?={;Qvr=I_&)-T\u0001\u0001m\u0001\u0014)\u00068UZ7!", 1, uintMap0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertEquals("\nfunction  >>> \"8UZ7\\x7f!\"", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      UintMap uintMap0 = new UintMap(19);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile(")\u000F7?={;Qvr=I_&)-T\u0001\u0001m\u0001\u0013)\u00068UZ7!", 41, uintMap0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertEquals("\nfunction  >> \"8UZ7\\x7f!\"", string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      UintMap uintMap0 = new UintMap(18);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u0001)\u000F7?={;Qvr=I_&)-Tm\u00020&/gTPo<`n\"-v6A<Fx9{t/gTPo<`n\"-v6A<Fx9{t0#/7?={;Qvr=I_&)-T/gTPo<`n\"-v6A<Fx9{t\u0012", 1, uintMap0);
      assertNotNull(string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertEquals("\"7?={;Qvr=I_&)-T\"function /gTPo<`n\"-v6A<Fx9{t/gTPo<`n\"-v6A<Fx9{t/7?={;Qvr=I_&)-T/gTPo<`n\"-v6A<Fx9{t << ", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("(S\u0001\u0001\u00A4\u0011\u0001", 2, uintMap0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertEquals("1 >= ", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("0\b/@[$/@[$\u0010", 1, uintMap0);
      assertNotNull(string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertEquals("\n/@[$/@[$ > ", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("0\u0002//\u000B", 1, uintMap0);
      assertEquals("\n// & ", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("\nfinally try }", 2213, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 110
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      UintMap uintMap0 = new UintMap(135);
      String string0 = Decompiler.decompile("\tat script", 135, uintMap0);
      assertEquals(" |  += defaulttypeof case  *= switch  && if default", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("\b\u0001", (-4143), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 8
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      UintMap uintMap0 = new UintMap(7);
      // Undeclared exception!
      try { 
        Decompiler.decompile("(S\u0001)\u0002^Km\u00010$/gTPo<`n\"-v6A<9{tN/gTPo<`n\"-v6A<9{tN0\u0015/^K/gTPo<`n\"-v6A<9{tN\u0007", 7, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 7
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      UintMap uintMap0 = new UintMap(6);
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0001)\u0003do m\u00010\b/do /do 0\b/do /do \u0006", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 6
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      UintMap uintMap0 = new UintMap(5);
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0001)\u0002^Km\u00010\u0006/^K/^K0\u0006/^K/^K\u0005", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 5
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      String string0 = Decompiler.decompile("\u0001\u0001m\u0001\u0004", 2, uintMap0);
      assertEquals("function return ", string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("(S\u0001\u0003", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 3
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0002\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 2
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("0\u0002//", 3, uintMap0);
      assertEquals("(//)", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      UintMap uintMap0 = new UintMap(28);
      uintMap0.put(1, 64);
      String string0 = Decompiler.decompile("-\u0001(S\u0001\u0001)\u0010:${;L(;h~xvgsOFx)\u0002^Km\u00010\u0006/^K/^K0\u0006/^K/^K\u001C", 28, uintMap0);
      assertEquals("\n                                                                true\n                                                                1\n                                                                \":${;L(;h~xvgsOFx\"\"^K\"function /^K/^K/^K/^K+\n", string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u0088\u0001", 3, uintMap0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      uintMap0.put(3, (-6063));
      // Undeclared exception!
      try { 
        Decompiler.decompile("xhV{!\"KN'r|~g@>N", 2, uintMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      uintMap0.put(2, (-436));
      // Undeclared exception!
      try { 
        Decompiler.decompile("(D\u4075\u1990\u85F4\uA127", 2, uintMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      uintMap0.put(1, (-448));
      // Undeclared exception!
      try { 
        Decompiler.decompile("`_p/<_`77`nG", 3, uintMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("", 1, uintMap0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addRegexp("Cannot overwrite existing ClassShutter object", "Cannot overwrite existing ClassShutter object");
      decompiler0.addRegexp("0/Cannot overwrite existing ClassShutter object/Cannot overwrite existing ClassShutter objectm\u0001\u00A4\u00A4", "0/Cannot overwrite existing ClassShutter object/Cannot overwrite existing ClassShutter objectm\u0001\u00A4\u00A4");
      decompiler0.addName("0/Cannot overwrite existing ClassShutter object/Cannot overwrite existing ClassShutter objectm\u0001\u00A4\u00A4");
      assertEquals(2, Decompiler.INDENT_GAP_PROP);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addNumber(9.007199254740992E15);
      assertEquals(1, Decompiler.INITIAL_INDENT_PROP);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addNumber((-2986));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addNumber(5043.094540622);
      assertEquals(1, Decompiler.INITIAL_INDENT_PROP);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addNumber(1);
      assertEquals(2, Decompiler.TO_SOURCE_FLAG);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addEOL(425);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addEOL(109);
      assertEquals(2, Decompiler.TO_SOURCE_FLAG);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addEOL((-2100));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addToken(3041);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addToken((-4045));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addString("Cannot overwrite existing ClassShutter object");
      assertEquals(1, Decompiler.INITIAL_INDENT_PROP);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("(S\u0002\u0001'\u0000\u0001", 1, uintMap0);
      assertEquals("\n", string0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      int int0 = decompiler0.markFunctionEnd(1443);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      int int0 = decompiler0.markFunctionStart(3436);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      String string0 = decompiler0.getEncodedSource();
      assertEquals("", string0);
  }
}
