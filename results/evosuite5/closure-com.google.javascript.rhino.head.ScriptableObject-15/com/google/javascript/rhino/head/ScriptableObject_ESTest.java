/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 23:53:58 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Arguments;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.BoundFunction;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.Delegator;
import com.google.javascript.rhino.head.FunctionObject;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.JavaAdapter;
import com.google.javascript.rhino.head.LazilyLoadedCtor;
import com.google.javascript.rhino.head.MemberBox;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeBoolean;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeDate;
import com.google.javascript.rhino.head.NativeError;
import com.google.javascript.rhino.head.NativeGenerator;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJavaConstructor;
import com.google.javascript.rhino.head.NativeJavaMethod;
import com.google.javascript.rhino.head.NativeJavaTopPackage;
import com.google.javascript.rhino.head.NativeMath;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.NativeWith;
import com.google.javascript.rhino.head.Script;
import com.google.javascript.rhino.head.ScriptRuntime;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.Synchronizer;
import com.google.javascript.rhino.head.TopLevel;
import com.google.javascript.rhino.head.debug.Debugger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ScriptableObject_ESTest extends ScriptableObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Synchronizer synchronizer0 = new Synchronizer(nativeContinuation0);
      ContextFactory contextFactory0 = new ContextFactory();
      NativeError nativeError0 = new NativeError();
      Context context0 = new Context();
      Context context1 = Context.enter(context0, contextFactory0);
      BoundFunction boundFunction0 = new BoundFunction(context1, nativeError0, nativeContinuation0, synchronizer0, (Object[]) null);
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(nativeError0, boundFunction0, 115);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeContinuation0, context1, 5, 999);
      idFunctionObject0.isGenericDescriptor(scriptableObject0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      nativeError0.getClassName();
      ScriptableObject.defineConstProperty(nativeError0, "Error");
      Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptableObject("Error");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type string
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      importerTopLevel0.isDataDescriptor(nativeContinuation0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Synchronizer synchronizer0 = new Synchronizer(nativeContinuation0);
      Class<NativeContinuation> class0 = NativeContinuation.class;
      ScriptableObject.getTypedProperty((Scriptable) synchronizer0, 2, class0);
      synchronizer0.getIds();
      NativeNumber nativeNumber0 = new NativeNumber(13);
      NativeError nativeError0 = new NativeError();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test04()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(topLevel0, topLevel0, 59, 0);
      idFunctionObject0.isGenericDescriptor(topLevel0);
      ScriptableObject.isTrue(idFunctionObject0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test05()  throws Throwable  {
      Context.getContext();
      NativeArray nativeArray0 = new NativeArray(180);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.defineConst("error reporter", nativeArray0);
      NativeError nativeError0 = new NativeError();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test06()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Synchronizer synchronizer0 = new Synchronizer(nativeContinuation0);
      synchronizer0.getIds();
      nativeContinuation0.initImplementation(synchronizer0);
      NativeNumber nativeNumber0 = new NativeNumber(13);
      nativeNumber0.getClassName();
      Class<NativeError> class0 = NativeError.class;
      // Undeclared exception!
      try { 
        ScriptableObject.defineClass((Scriptable) nativeNumber0, class0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.NativeError\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Synchronizer synchronizer0 = new Synchronizer(nativeContinuation0);
      nativeContinuation0.initImplementation(synchronizer0);
      NativeNumber nativeNumber0 = new NativeNumber(2);
      String string0 = "JavaClass";
      // Undeclared exception!
      try { 
        nativeNumber0.putConst("JavaClass", synchronizer0, (Object) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      objectArray0[1] = (Object) null;
      Class<Arguments> class0 = Arguments.class;
      // Undeclared exception!
      try { 
        ScriptableObject.buildClassCtor((Scriptable) nativeArray0, class0, true, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.Arguments\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test09()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Context context0 = Context.getContext();
      nativeContinuation0.getOwnPropertyDescriptor(context0, context0);
      NativeString nativeString0 = new NativeString("error reporter");
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context0, (Scriptable) null, (String) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Synchronizer synchronizer0 = new Synchronizer(nativeContinuation0);
      synchronizer0.setParentScope(nativeContinuation0);
      nativeContinuation0.initImplementation(synchronizer0);
      NativeNumber nativeNumber0 = new NativeNumber(2);
      nativeNumber0.putConst("JavaClass", nativeContinuation0, synchronizer0);
      NativeString nativeString0 = new NativeString("JavaClass");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      NativeString nativeString0 = new NativeString((CharSequence) null);
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.get((long) 2);
      objectArray0[1] = (Object) null;
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod((Scriptable) nativeString0, (String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeString", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeNumber nativeNumber0 = new NativeNumber(180);
      nativeNumber0.getGetterOrSetter((String) null, 204, false);
      // Undeclared exception!
      try { 
        nativeNumber0.exportAsJSClass(4, nativeJavaTopPackage0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test13()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(topLevel0, topLevel0, 8, 8);
      Class<NativeBoolean> class0 = NativeBoolean.class;
      // Undeclared exception!
      try { 
        ScriptableObject.defineClass((Scriptable) topLevel0, class0, false, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.NativeBoolean\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test14()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      Script script0 = null;
      // Undeclared exception!
      try { 
        JavaAdapter.runScript((Script) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.JavaAdapter$2", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeArray nativeArray0 = new NativeArray(1);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      // Undeclared exception!
      try { 
        nativeBoolean0.setAttributes(4, (-1515));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1515
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Long long0 = new Long(1);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeIterator_StopIteration0.checkPropertyDefinition(nativeObject0);
      Context.getCurrentContext();
      try { 
        Double.valueOf("error reporter");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-3389.176));
      NativeError nativeError0 = new NativeError();
      nativeNumber0.isGetterOrSetter("\"", 4, false);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      Context context1 = Context.enter(context0, contextFactory0);
      Context.toNumber(contextFactory0);
      NativeCall nativeCall1 = (NativeCall)context1.initStandardObjects((ScriptableObject) nativeCall0, true);
      nativeCall0.defineConst("X!n`QoYJZY", nativeCall1);
      NativeDate.init(nativeCall0, true);
      nativeCall0.getClassName();
      nativeCall0.applyDescriptorToAttributeBitset(130, nativeCall1);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.cacheBuiltins();
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(importerTopLevel0, "V*Up?->1 gI", "error reporter", true);
      lazilyLoadedCtor0.init();
      context1.instructionThreshold = (-1);
      // Undeclared exception!
      try { 
        nativeCall1.addLazilyInitializedValue("msg.change.enumerable.with.configurable.false", (-1689), lazilyLoadedCtor0, (-1349));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // msg.change.enumerable.with.configurable.false
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      String string0 = "L%M";
      ScriptableObject.putConstProperty(nativeJavaTopPackage0, "L%M", (Object) null);
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(0.0);
      NativeWith nativeWith0 = new NativeWith(nativeNumber0, nativeNumber0);
      int int0 = (-438);
      nativeWith0.hasInstance(nativeNumber0);
      nativeWith0.get("OP", (Scriptable) nativeNumber0);
      IdFunctionObject idFunctionObject0 = null;
      try {
        idFunctionObject0 = new IdFunctionObject(nativeWith0, nativeNumber0, 2534, (-438));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test21()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ScriptableObject.getPropertyIds(importerTopLevel0);
      JavaAdapter.createAdapterWrapper(importerTopLevel0, "getTyp");
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel();
      ScriptableObject.ensureScriptableObject(importerTopLevel0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test22()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ScriptableObject.getPropertyIds(importerTopLevel0);
      ScriptableObject.getArrayPrototype(importerTopLevel0);
      ScriptableObject.redefineProperty(importerTopLevel0, "getTyp", true);
      Context.getCurrentContext();
      NativeError nativeError0 = new NativeError();
      ScriptableObject.ensureScriptableObject(nativeError0);
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test23()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      ScriptableObject.putConstProperty(scriptableObject0, "T.=RiR", context0);
      NativeString nativeString0 = new NativeString("error reporter");
      // Undeclared exception!
      try { 
        nativeString0.defineOwnProperties(context0, scriptableObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type com.google.javascript.rhino.head.Context
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeArray nativeArray0 = new NativeArray(4);
      nativeArray0.setGetterOrSetter(">>u0?", 0, nativeContinuation0, false);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getCurrentContext();
      NativeError nativeError0 = new NativeError();
      BoundFunction boundFunction0 = new BoundFunction(context0, nativeContinuation0, nativeContinuation0, nativeError0, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.put(1, (Scriptable) nativeContinuation0, (Object) null);
      nativeIterator_StopIteration0.checkPropertyDefinition(nativeContinuation0);
      Integer integer0 = new Integer(4);
      ScriptableObject.deleteProperty((Scriptable) nativeIterator_StopIteration0, "Property table overflow");
      nativeIterator_StopIteration0.applyDescriptorToAttributeBitset(2, nativeContinuation0);
      nativeIterator_StopIteration0.hasInstance(nativeContinuation0);
      nativeIterator_StopIteration0.isDataDescriptor(nativeContinuation0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test26()  throws Throwable  {
      Context.getContext();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Class<NativeBoolean> class0 = NativeBoolean.class;
      // Undeclared exception!
      try { 
        nativeContinuation0.defineProperty("error reporter", class0, 160);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 161
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Delegator delegator1 = delegator0.newInstance();
      // Undeclared exception!
      try { 
        NativeDate.init(delegator1, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test28()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      Class<Arguments> class0 = Arguments.class;
      ScriptableObject.getTypedProperty((Scriptable) importerTopLevel0, "language version", class0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.hasInstance(importerTopLevel0);
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration1.addLazilyInitializedValue("tE:Gk@.ld$_", 150, (LazilyLoadedCtor) null, 4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // tE:Gk@.ld$_
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeArray nativeArray0 = new NativeArray(8);
      ScriptableObject.putProperty((Scriptable) nativeContinuation0, 65, (Object) nativeArray0);
      ScriptableObject.deleteProperty((Scriptable) nativeContinuation0, 8);
      Context context0 = new Context();
      Debugger debugger0 = context0.debugger;
      // Undeclared exception!
      try { 
        nativeArray0.get((long) 8);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test30()  throws Throwable  {
      ContextFactory.getGlobal();
      NativeNumber nativeNumber0 = new NativeNumber(640.95820592);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = new Context();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      Object object0 = importerTopLevel0.get("error reporter", (Scriptable) nativeNumber0);
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptable(object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type com.google.javascript.rhino.head.UniqueTag
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Synchronizer synchronizer0 = new Synchronizer(nativeContinuation0);
      Class<NativeContinuation> class0 = NativeContinuation.class;
      ScriptableObject.getTypedProperty((Scriptable) synchronizer0, 2, class0);
      synchronizer0.getIds();
      nativeContinuation0.initImplementation("VOID");
      NativeNumber nativeNumber0 = new NativeNumber((-3175.63684207244));
      boolean boolean0 = true;
      boolean boolean1 = false;
      nativeNumber0.getGetterOrSetter("VOID", 0, false);
      // Undeclared exception!
      try { 
        nativeNumber0.exportAsJSClass(0, nativeContinuation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject$PrototypeValues", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test32()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Context.getContext();
      NativeError nativeError0 = new NativeError();
      ScriptableObject.buildDataDescriptor(nativeContinuation0, nativeContinuation0, 13);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeContinuation0, nativeContinuation0, 111972719, 170);
      idFunctionObject0.isGenericDescriptor(nativeContinuation0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      ScriptableObject.deleteProperty((Scriptable) nativeArray0, 4);
      Context context0 = new Context();
      Debugger debugger0 = context0.debugger;
      context0.debugger = null;
      // Undeclared exception!
      try { 
        nativeArray0.get((long) 9);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      Context context0 = Context.enter();
      Delegator delegator0 = new Delegator(nativeBoolean0);
      BoundFunction boundFunction0 = new BoundFunction(context0, nativeBoolean0, delegator0, nativeBoolean0, (Object[]) null);
      NativeCall nativeCall0 = new NativeCall();
      boundFunction0.getTypeOf();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeIterator_StopIteration0, true);
      NativeString nativeString0 = new NativeString((CharSequence) null);
      nativeString0.defineOwnProperties(context0, nativeGenerator0);
      // Undeclared exception!
      try { 
        nativeString0.getInstanceIdValue(13);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 13
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Context context0 = Context.enter();
      nativeContinuation0.getOwnPropertyDescriptor(context0, context0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.findPrototypeId("QO9Jo,");
      Byte byte0 = new Byte((byte) (-40));
      IdFunctionObject idFunctionObject0 = null;
      try {
        idFunctionObject0 = new IdFunctionObject(nativeBoolean0, byte0, 164, "language version", 1000, (Scriptable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test37()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.makeContext();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "error reporter";
      stringArray0[1] = "language version";
      Class<NativeJavaMethod> class0 = NativeJavaMethod.class;
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.defineFunctionProperties(stringArray0, class0, 3896);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Method \"error reporter\" not found in \"com.google.javascript.rhino.head.NativeJavaMethod\".
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test38()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Synchronizer synchronizer0 = new Synchronizer(nativeContinuation0);
      Class<NativeContinuation> class0 = NativeContinuation.class;
      ScriptableObject.getTypedProperty((Scriptable) synchronizer0, 2, class0);
      synchronizer0.getIds();
      nativeContinuation0.initImplementation(synchronizer0);
      NativeNumber nativeNumber0 = new NativeNumber(13);
      // Undeclared exception!
      try { 
        nativeNumber0.exportAsJSClass(1, (Scriptable) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: Number.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeArray nativeArray0 = new NativeArray(8);
      ScriptableObject.putProperty((Scriptable) nativeContinuation0, 65, (Object) nativeArray0);
      ScriptableObject.deleteProperty((Scriptable) nativeContinuation0, 8);
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.buildClassCtor((Scriptable) nativeArray0, class0, true, true);
      Context context0 = new Context();
      NativeString nativeString0 = new NativeString("language version");
      nativeString0.has(4, (Scriptable) nativeArray0);
      Context context1 = Context.enter();
      nativeString0.defineOwnProperties(context1, nativeArray0);
      // Undeclared exception!
      try { 
        nativeString0.getInstanceIdValue(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(topLevel0, topLevel0, 59, 0);
      idFunctionObject0.isGenericDescriptor(topLevel0);
      // Undeclared exception!
      try { 
        ScriptableObject.hasProperty((Scriptable) idFunctionObject0, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      Context.enter(context0, contextFactory0);
      Synchronizer synchronizer0 = new Synchronizer(scriptableObject0);
      synchronizer0.getIds();
      synchronizer0.delete("<AmXOF-o;^");
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        ScriptableObject.defineConstProperty(synchronizer0, "language version");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration1.replace((Object) context0, (Object) nativeIterator_StopIteration0);
      nativeIterator_StopIteration1.defineConst("9gIq7Z>SeF2)y{9", nativeIterator_StopIteration0);
      NativeError nativeError0 = new NativeError();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      NativeString nativeString0 = new NativeString((CharSequence) null);
      ContextFactory contextFactory0 = new ContextFactory();
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeString0, true);
      nativeGenerator0.sameValue((Object) null, nativeString0);
      Context.getCurrentContext();
      NativeError nativeError0 = new NativeError();
      ScriptableObject.ensureScriptableObject(nativeString0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      ScriptableObject.getArrayPrototype(nativeBoolean0);
      nativeBoolean0.findPrototypeId("W+");
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeBoolean0, "W+", 1278, "W+", 4, nativeBoolean0);
      ScriptableObject.hasProperty((Scriptable) idFunctionObject0, 4);
      NativeContinuation.isContinuationConstructor(idFunctionObject0);
      Object object0 = new Object();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.getAllIds();
      NativeObject nativeObject0 = new NativeObject();
      nativeIterator_StopIteration0.associateValue(nativeObject0, "W+");
      nativeIterator_StopIteration0.getClassName();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Long long0 = new Long(1);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeIterator_StopIteration0.checkPropertyDefinition(nativeObject0);
      nativeIterator_StopIteration0.remove((Object) long0);
      Context.getCurrentContext();
      try { 
        Double.valueOf("error reporter");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.defineProperty("", class0, 8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test47()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      int int0 = 59;
      int int1 = 0;
      // Undeclared exception!
      try { 
        topLevel0.getAttributes((-2801));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property -2801 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test48()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptRuntime.NoSuchMethodShim scriptRuntime_NoSuchMethodShim0 = new ScriptRuntime.NoSuchMethodShim(nativeContinuation0, "com.google.javascript.rhino.head.ast.GeneratorExpression");
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.getAttributes("mwO79");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property mwO79 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(topLevel0, topLevel0, 41, 0);
      idFunctionObject0.isGenericDescriptor(topLevel0);
      // Undeclared exception!
      try { 
        idFunctionObject0.exportAsScopeProperty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      NativeJavaConstructor nativeJavaConstructor0 = new NativeJavaConstructor((MemberBox) null);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test51()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeArray nativeArray0 = new NativeArray(180);
      ContextFactory contextFactory0 = new ContextFactory();
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeArray0, true);
      Float float0 = new Float((double) 8);
      nativeGenerator0.sameValue(context0, float0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ContextFactory.getGlobal();
      Context.getCurrentContext();
      NativeError nativeError0 = new NativeError();
      ScriptableObject.ensureScriptableObject(nativeError0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test53()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-3389.176));
      ScriptableObject.redefineProperty(nativeNumber0, "5SSw1^,f}#", false);
      Context context0 = Context.getCurrentContext();
      NativeError nativeError0 = new NativeError();
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptableObject(context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type com.google.javascript.rhino.head.Context
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Context.enter();
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.findPrototypeId("error reporter");
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeBoolean0, "error reporter", 140, "language version", 140, nativeBoolean0);
      ScriptableObject.hasProperty((Scriptable) idFunctionObject0, 5);
      NativeContinuation.isContinuationConstructor(idFunctionObject0);
      nativeBoolean0.equivalentValues(idFunctionObject0);
      Context.getContext();
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.put(1, (Scriptable) nativeContinuation0, (Object) null);
      nativeIterator_StopIteration0.checkPropertyDefinition(nativeContinuation0);
      Integer integer0 = new Integer(0);
      ScriptableObject.deleteProperty((Scriptable) nativeIterator_StopIteration0, "Property table overflow");
      nativeIterator_StopIteration0.hasInstance(nativeContinuation0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test56()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      NativeError nativeError0 = new NativeError();
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        nativeError0.getOwnPropertyDescriptor(context0, topLevel0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) baseFunction0;
      objectArray0[1] = (Object) baseFunction0;
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.get(4, (Scriptable) baseFunction0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test58()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.put(177, (Scriptable) topLevel0, (Object) null);
      nativeIterator_StopIteration0.checkPropertyDefinition(topLevel0);
      Integer integer0 = new Integer(1368933789);
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration1.remove((Object) integer0);
      ScriptableObject.deleteProperty((Scriptable) nativeIterator_StopIteration1, "Property table overflow");
      Context.getContext();
      nativeIterator_StopIteration1.hasInstance(nativeIterator_StopIteration0);
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration1.getAttributes(26, (Scriptable) topLevel0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 26 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      ScriptableObject.putConstProperty(scriptableObject0, "error reporter", context0);
      scriptableObject0.getTypeOf();
      // Undeclared exception!
      try { 
        FunctionObject.convertArg(context0, (Scriptable) scriptableObject0, (Object) scriptableObject0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.FunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeArray nativeArray0 = new NativeArray(8);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      context0.initStandardObjects();
      Class<NativeContinuation> class0 = NativeContinuation.class;
      // Undeclared exception!
      try { 
        nativeContinuation0.getAttributes("error reporter", (Scriptable) nativeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property error reporter not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeNumber nativeNumber0 = new NativeNumber(2193.20688);
      Integer integer0 = new Integer((-3052));
      ScriptableObject.isFalse(integer0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Scriptable scriptable0 = null;
      Object[] objectArray0 = ScriptableObject.getPropertyIds((Scriptable) null);
      BaseFunction baseFunction0 = new BaseFunction();
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.delete(1);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context();
      contextFactory0.enterContext(context0);
      Object[] objectArray1 = new Object[7];
      objectArray1[0] = (Object) contextFactory0;
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Class<NativeMath> class0 = NativeMath.class;
      // Undeclared exception!
      try { 
        nativeBoolean0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeMath
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test63()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      Context.getContext();
      // Undeclared exception!
      try { 
        ScriptableObject.redefineProperty(nativeJavaTopPackage0, "error reporter", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: redeclaration of var error reporter.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test64()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      Synchronizer synchronizer0 = new Synchronizer(scriptableObject0);
      synchronizer0.getIds();
      NativeNumber nativeNumber0 = new NativeNumber(5);
      // Undeclared exception!
      nativeNumber0.exportAsJSClass(10, synchronizer0, false);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test65()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      context0.initStandardObjects();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      Class<NativeBoolean> class0 = NativeBoolean.class;
      // Undeclared exception!
      try { 
        nativeBoolean0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeBoolean
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      Synchronizer synchronizer0 = new Synchronizer(scriptableObject0);
      synchronizer0.getIds();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        ScriptableObject.defineConstProperty(synchronizer0, "language version");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeArray nativeArray0 = new NativeArray(8);
      ScriptableObject.putProperty((Scriptable) nativeContinuation0, 65, (Object) nativeArray0);
      NativeError nativeError0 = new NativeError();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      Context.getCurrentContext();
      Short short0 = new Short((short) (-1363));
      nativeError0.getOwnPropertyDescriptor(context0, short0);
      nativeError0.getClassName();
      NativeArray nativeArray1 = null;
      try {
        nativeArray1 = new NativeArray((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      NativeString nativeString0 = new NativeString((CharSequence) null);
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.get((long) 2);
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod((Context) null, (Scriptable) nativeString0, "", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000004 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      ScriptableObject.ensureScriptable(nativeIterator_StopIteration1);
      NativeArray nativeArray0 = new NativeArray(1L);
      nativeArray0.has(8, (Scriptable) null);
      nativeArray0.getClassName();
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) topLevel0;
      objectArray0[1] = (Object) topLevel0;
      objectArray0[2] = (Object) topLevel0;
      objectArray0[3] = (Object) topLevel0;
      objectArray0[4] = (Object) topLevel0;
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      Class<Short> class0 = Short.class;
      // Undeclared exception!
      try { 
        nativeBoolean0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Context.getCurrentContext();
      NativeArray nativeArray0 = new NativeArray((-1));
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeArray0, nativeArray0, 5, 1400);
      // Undeclared exception!
      try { 
        nativeArray0.setGetterOrSetter("error reporter", 150, idFunctionObject0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // error reporter
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterWrapper(nativeIterator_StopIteration0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeArray nativeArray0 = new NativeArray(4);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.size();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test74()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      ScriptableObject.buildDataDescriptor(nativeContinuation0, context0, 115);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test75()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.keySet();
      Context context0 = Context.getCurrentContext();
      NativeError nativeError0 = new NativeError();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      // Undeclared exception!
      try { 
        importerTopLevel0.getGetterOrSetter("language version", 2, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // language version
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Synchronizer synchronizer0 = new Synchronizer(nativeContinuation0);
      ScriptableObject.putConstProperty(nativeContinuation0, "msg.invalid.type", nativeContinuation0);
      NativeString nativeString0 = new NativeString("msg.invalid.type");
      ContextFactory.getGlobal();
      Context context0 = Context.getCurrentContext();
      Context.enter(context0);
      nativeString0.defineOwnProperties(context0, nativeContinuation0);
      Object[] objectArray0 = new Object[0];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Class<NativeContinuation> class0 = NativeContinuation.class;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      ScriptableObject.getTypedProperty((Scriptable) scriptableObject0, (-1227053771), class0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test78()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeString nativeString0 = new NativeString("error reporter");
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context0, (Scriptable) importerTopLevel0, (String) null, (Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: null is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test79()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      nativeBoolean0.findPrototypeId("W+");
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.checkPropertyDefinition(nativeBoolean0);
      Integer integer0 = new Integer(0);
      nativeIterator_StopIteration0.remove((Object) "W+");
      ScriptableObject.deleteProperty((Scriptable) nativeBoolean0, ">?FES!@");
      Context.getContext();
      nativeIterator_StopIteration0.hasInstance(nativeBoolean0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptableObject.putProperty((Scriptable) nativeContinuation0, 2500, (Object) nativeContinuation0);
      ScriptableObject.deleteProperty((Scriptable) nativeContinuation0, 65);
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.buildClassCtor((Scriptable) nativeContinuation0, class0, true, true);
      Context context0 = new Context();
      NativeString nativeString0 = new NativeString("error reporter");
      nativeString0.has((-1792621099), (Scriptable) nativeContinuation0);
      Context.enter();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context1 = contextFactory0.enterContext();
      nativeString0.defineOwnProperties(context1, nativeContinuation0);
      // Undeclared exception!
      try { 
        nativeString0.getInstanceIdValue(131);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 131
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test81()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptableObject.buildDataDescriptor(nativeContinuation0, nativeContinuation0, (-800));
      ScriptableObject.hasProperty((Scriptable) nativeContinuation0, (-2));
      Context context0 = Context.getContext();
      nativeContinuation0.getOwnPropertyDescriptor(context0, context0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.getClassName();
      NativeString nativeString0 = new NativeString("global");
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context0, (Scriptable) nativeString0, (String) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeString", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.deleteProperty((Scriptable) nativeIterator_StopIteration0, "jsGet_getIds");
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      Context.enter(context0, contextFactory0);
      Synchronizer synchronizer0 = new Synchronizer(scriptableObject0);
      synchronizer0.getIds();
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterWrapper(synchronizer0, contextFactory0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test84()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      Context.getContext();
      ScriptableObject.redefineProperty(nativeJavaTopPackage0, "error reporter", false);
      Context.getCurrentContext();
      NativeError nativeError0 = new NativeError();
      ScriptableObject.ensureScriptableObject(nativeJavaTopPackage0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Synchronizer synchronizer0 = new Synchronizer(nativeContinuation0);
      nativeContinuation0.initImplementation(synchronizer0);
      NativeNumber nativeNumber0 = new NativeNumber(13);
      synchronizer0.getIds();
      nativeContinuation0.defineConst("(?:)", synchronizer0);
      Class<BoundFunction> class0 = BoundFunction.class;
      nativeContinuation0.defineProperty("3K:::", class0, 13);
      BaseFunction baseFunction0 = new BaseFunction();
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Class<NativeContinuation> class0 = NativeContinuation.class;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      contextFactory0.onContextCreated(context0);
      ScriptableObject.getTypedProperty((Scriptable) scriptableObject0, (-1227053771), class0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      String string0 = null;
      // Undeclared exception!
      try { 
        scriptableObject0.setAttributes("setMinutes", (Scriptable) nativeIterator_StopIteration0, 120);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 120
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }
}
