/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 23:45:25 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Arguments;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.BoundFunction;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.Delegator;
import com.google.javascript.rhino.head.FunctionObject;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.InterpreterData;
import com.google.javascript.rhino.head.JavaAdapter;
import com.google.javascript.rhino.head.JavaMembers;
import com.google.javascript.rhino.head.LazilyLoadedCtor;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeBoolean;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeDate;
import com.google.javascript.rhino.head.NativeError;
import com.google.javascript.rhino.head.NativeFunction;
import com.google.javascript.rhino.head.NativeGenerator;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJSON;
import com.google.javascript.rhino.head.NativeJavaArray;
import com.google.javascript.rhino.head.NativeJavaClass;
import com.google.javascript.rhino.head.NativeJavaConstructor;
import com.google.javascript.rhino.head.NativeJavaMethod;
import com.google.javascript.rhino.head.NativeJavaPackage;
import com.google.javascript.rhino.head.NativeJavaTopPackage;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.NativeScript;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.Script;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.Synchronizer;
import com.google.javascript.rhino.head.TopLevel;
import java.util.Set;
import java.util.TreeSet;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ScriptableObject_ESTest extends ScriptableObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      assertTrue(nativeIterator_StopIteration0.isExtensible());
      
      Class<Double> class0 = Double.TYPE;
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Short short0 = new Short((short)768);
      nativeContinuation0.sameValue(nativeIterator_StopIteration0, short0);
      nativeIterator_StopIteration0.remove((Object) class0);
      nativeContinuation0.getImplementation();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      // Undeclared exception!
      try { 
        nativeArray0.setAttributes(1039, 1039);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1039
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test002()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getCurrentContext();
      context0.initStandardObjects((ScriptableObject) null, true);
      ScriptableObject.getPropertyIds((Scriptable) null);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      NativeCall nativeCall0 = new NativeCall();
      Class<InterpretedFunction> class0 = InterpretedFunction.class;
      nativeCall0.defineProperty("]`", class0, 4);
      ContextFactory.getGlobal();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test004()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects((ScriptableObject) null, true);
      Context.reportRuntimeError("getClassNam");
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.isDataDescriptor(scriptableObject0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      Context context0 = Context.enter();
      context0.instructionThreshold = 1981;
      Class<NativeJSON> class0 = NativeJSON.class;
      NativeFunction nativeFunction0 = null;
      nativeCall0.setAttributes("`YUh0At9{", (Scriptable) null, 9);
      // Undeclared exception!
      try { 
        nativeCall0.defineProperty("`YUh0At9{", class0, 1981);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1981
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      ScriptableObject.deleteProperty((Scriptable) nativeJavaTopPackage0, "4F'C%v[RknS,EF`@//");
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.isDataDescriptor(nativeJavaTopPackage0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      Context context0 = Context.enter();
      context0.instructionThreshold = 1981;
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("error reporter", classLoader1);
      NativeJavaPackage nativeJavaPackage1 = nativeJavaPackage0.forcePackage("setStack", nativeContinuation0);
      nativeContinuation0.checkPropertyChange("z(C<DTK2;N", nativeJavaPackage1, nativeJavaPackage1);
      NativeGenerator.init(nativeContinuation0, false);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test008()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      Class<NativeError> class0 = NativeError.class;
      // Undeclared exception!
      try { 
        nativeBoolean0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeError
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeCall0, nativeCall0, 4, 4);
      Context context0 = Context.enter();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      nativeBoolean0.putConst("error reporter", nativeCall0, context0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test010()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(28L);
      NativeArray nativeArray1 = new NativeArray((-8575712306248138270L));
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.isConst("?\"ps-n?u~W{nE*Th");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      BiFunction<NativeJavaPackage, NativeArray, IdFunctionObject> biFunction0 = (BiFunction<NativeJavaPackage, NativeArray, IdFunctionObject>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      nativeIterator_StopIteration0.computeIfPresent(importerTopLevel0, biFunction0);
      contextFactory0.makeContext();
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel();
      Delegator delegator0 = new Delegator(nativeArray1);
      contextFactory0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("?\"ps-n?u~W{nE*Th", (ClassLoader) null);
      ScriptableObject.putProperty((Scriptable) nativeJavaPackage0, "?\"ps-n?u~W{nE*Th", (Object) null);
      importerTopLevel0.delete("(1Og[,>5zu)<q'x}!");
      Class<NativeArray> class0 = NativeArray.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) delegator0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeArray
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      ScriptableObject.getPropertyIds(nativeArray0);
      Class<Integer> class0 = Integer.TYPE;
      ContextFactory contextFactory0 = new ContextFactory();
      NativeJavaClass nativeJavaClass0 = null;
      try {
        nativeJavaClass0 = new NativeJavaClass(nativeArray0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Context context0 = new Context();
      NativeCall nativeCall0 = context0.currentActivationCall;
      NativeGenerator nativeGenerator0 = NativeGenerator.init((ScriptableObject) null, true);
      nativeGenerator0.size();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.delete((-3822));
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      NativeBoolean nativeBoolean1 = new NativeBoolean(false);
      nativeBoolean1.getGetterOrSetter("msg.constTrdec+", 0, false);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test014()  throws Throwable  {
      Context.getCurrentContext();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      // Undeclared exception!
      try { 
        ScriptableObject.redefineProperty(nativeJavaTopPackage0, "language version", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: redeclaration of var language version.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test015()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(importerTopLevel0, "language version", "error reporter", false, true);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      importerTopLevel0.defineOwnProperty(context0, lazilyLoadedCtor0, nativeIterator_StopIteration0);
      ScriptableObject.isFalse(importerTopLevel0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test016()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptableObject.putProperty((Scriptable) nativeContinuation0, 1, (Object) nativeContinuation0);
      Class<NativeJSON> class0 = NativeJSON.class;
      // Undeclared exception!
      try { 
        ScriptableObject.defineClass((Scriptable) nativeContinuation0, class0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.NativeJSON\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test017()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeArray nativeArray0 = new NativeArray(0L);
      Class<Object> class0 = Object.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeArray0, 7, class0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.putConstProperty(nativeIterator_StopIteration0, "error reporter", nativeArray0);
      ScriptableObject scriptableObject0 = context0.initStandardObjects((ScriptableObject) nativeIterator_StopIteration0, true);
      ScriptableObject.getPropertyIds(scriptableObject0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.isDataDescriptor(nativeContinuation0);
      Context context0 = Context.getCurrentContext();
      nativeIterator_StopIteration0.put("error reporter", (Scriptable) nativeContinuation0, (Object) context0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test019()  throws Throwable  {
      CharSequence charSequence0 = null;
      NativeString nativeString0 = new NativeString((CharSequence) null);
      int int0 = 644;
      Class<NativeArray> class0 = NativeArray.class;
      // Undeclared exception!
      try { 
        ScriptableObject.defineClass((Scriptable) nativeString0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.NativeArray\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test020()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.sealObject();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(importerTopLevel0, "LlUb+", 2, "LlUb+", 2, nativeIterator_StopIteration0);
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.put((-1162194728), (Scriptable) importerTopLevel0, (Object) idFunctionObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: -1162194728.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test021()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptableObject.deleteProperty((Scriptable) nativeContinuation0, 140);
      Context.enter(context0);
      Integer integer0 = new Integer(150);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptableObject.putProperty((Scriptable) nativeContinuation0, 1, (Object) nativeContinuation0);
      Context context0 = Context.enter();
      Context.enter(context0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.delete("error reporter");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test023()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      // Undeclared exception!
      try { 
        nativeObject0.getAttributes("", (Scriptable) nativeObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property  not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test024()  throws Throwable  {
      Context context0 = new Context();
      NativeCall nativeCall0 = context0.currentActivationCall;
      NativeGenerator nativeGenerator0 = NativeGenerator.init((ScriptableObject) null, true);
      nativeGenerator0.defineConst("nJV3,QBoKNe", (Scriptable) null);
      nativeGenerator0.size();
      nativeGenerator0.size();
      TopLevel topLevel0 = new TopLevel();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.getBuiltinCtor((TopLevel.Builtins) null);
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      ScriptableObject.getTopScopeValue(importerTopLevel0, nativeBoolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.putConstProperty(nativeIterator_StopIteration0, "sKG=O8iF'", "sKG=O8iF'");
      Set<Object> set0 = new TreeSet<Object>();
      nativeIterator_StopIteration0.isConst("sKG=O8iF'");
      ContextFactory contextFactory0 = new ContextFactory();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeNumber nativeNumber0 = new NativeNumber(8);
      Integer.getInteger("jsFunction_setImmunePrototypeProperty", 2);
      ScriptableObject.buildDataDescriptor(nativeNumber0, nativeIterator_StopIteration0, (-172));
      nativeIterator_StopIteration0.isEmpty();
      NativeString nativeString0 = new NativeString("(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;");
      nativeString0.getMaxInstanceId();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Context context0 = new Context();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      NativeScript.init(scriptableObject0, false);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test028()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.getApplicationClassLoader();
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Class<NativeDate> class0 = NativeDate.class;
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass(importerTopLevel0, class0);
      importerTopLevel0.has("com.google.javascript.rhino.head.DToA", (Scriptable) nativeJavaClass0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Context context1 = new Context(contextFactory0);
      nativeBoolean0.defineOwnProperties(context1, importerTopLevel0);
      Context.enter(context0);
      Integer integer0 = new Integer(5);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      ScriptableObject.deleteProperty((Scriptable) nativeJavaTopPackage0, "4F'C%v[RknS,EF`@//");
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Integer integer0 = new Integer(2);
      NativeError nativeError0 = new NativeError();
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeIterator_StopIteration0, (String) null, "getClassName", false, false);
      // Undeclared exception!
      try { 
        Context.reportRuntimeError2("getClassName", classLoader0, lazilyLoadedCtor0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property getClassName
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeIterator_StopIteration0.isDataDescriptor(nativeContinuation0);
      nativeIterator_StopIteration0.isEmpty();
      nativeContinuation0.checkPropertyChange(";{BW%_t)jozL]Z", nativeIterator_StopIteration0, nativeIterator_StopIteration0);
      NativeGenerator.init(nativeIterator_StopIteration0, false);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.hasProperty((Scriptable) nativeIterator_StopIteration0, 4);
      ContextFactory contextFactory0 = new ContextFactory();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      nativeBoolean0.getAllIds();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeNumber nativeNumber0 = new NativeNumber(8);
      ScriptableObject.buildDataDescriptor(nativeIterator_StopIteration0, 1, 3);
      nativeNumber0.isGetterOrSetter("(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;", 8, false);
      NativeString nativeString0 = new NativeString("js4un<t4on_setImmuneProotypePrperty");
      nativeString0.getMaxInstanceId();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Context.enter();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      ScriptableObject.redefineProperty(nativeJavaTopPackage0, "language version", false);
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.keySet();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration1.isConst("4F'C%v[RknS,EF`@//");
      ContextFactory contextFactory0 = new ContextFactory();
      NativeIterator.getStopIterationObject(nativeIterator_StopIteration1);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) nativeIterator_StopIteration0;
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeArray0, "4F'C%v[RknS,EF`@//", "&Q", false, false);
      nativeArray0.indexOf(lazilyLoadedCtor0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.hasProperty((Scriptable) nativeIterator_StopIteration0, 4);
      NativeArray nativeArray0 = new NativeArray(1);
      Class<Integer> class0 = Integer.TYPE;
      // Undeclared exception!
      try { 
        nativeArray0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeIterator_StopIteration0.isDataDescriptor(nativeContinuation0);
      ScriptableObject.getFunctionPrototype(nativeIterator_StopIteration0);
      Context.enter();
      // Undeclared exception!
      try { 
        JavaAdapter.runScript((Script) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.JavaAdapter$2", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(false, "0d", classLoader0);
      ScriptableObject.putConstProperty(nativeJavaPackage0, "0d", "0d");
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.isConst("0d");
      ContextFactory contextFactory0 = new ContextFactory();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test038()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects((ScriptableObject) null, true);
      ScriptableObject.getPropertyIds(scriptableObject0);
      // Undeclared exception!
      try { 
        NativeObject.init((Scriptable) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: Object.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeArray nativeArray0 = new NativeArray(8);
      ContextFactory contextFactory0 = new ContextFactory();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      Context context0 = new Context(contextFactory0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Integer integer0 = new Integer(8);
      importerTopLevel0.defineOwnProperty(context0, integer0, nativeIterator_StopIteration0);
      Long long0 = new Long(0L);
      ScriptableObject.isFalse(long0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test040()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.isFalse(importerTopLevel0);
      Class<Object> class0 = Object.class;
      ScriptableObject.getTypedProperty((Scriptable) importerTopLevel0, 0, class0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.keySet();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test041()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      importerTopLevel0.sealObject();
      Delegator delegator0 = new Delegator(importerTopLevel0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.keySet();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(3, "uRF1Bly(g#od", (String) null, true);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      String string0 = null;
      NativeJavaTopPackage nativeJavaTopPackage1 = new NativeJavaTopPackage(classLoader0);
      nativeJavaTopPackage0.setAttributes(3, (Scriptable) nativeJavaTopPackage1, 4);
      IdFunctionObject idFunctionObject0 = null;
      try {
        idFunctionObject0 = new IdFunctionObject(nativeJavaTopPackage0, classLoader0, (-1712), (String) null, 3, nativeJavaTopPackage0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      String string0 = "msg.obj.getter.parms";
      Synchronizer synchronizer0 = new Synchronizer(importerTopLevel0);
      Synchronizer synchronizer1 = new Synchronizer(importerTopLevel0, synchronizer0);
      NativeJavaArray nativeJavaArray0 = null;
      try {
        nativeJavaArray0 = new NativeJavaArray(synchronizer1, synchronizer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test044()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      topLevel0.sealObject();
      // Undeclared exception!
      try { 
        topLevel0.delete((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: 0.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      NativeBoolean nativeBoolean1 = new NativeBoolean(false);
      // Undeclared exception!
      try { 
        nativeBoolean0.getGetterOrSetter("*G;#&4", 2, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // *G;#&4
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test046()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      Scriptable scriptable0 = ScriptableObject.ensureScriptable(nativeBoolean0);
      nativeBoolean0.hasInstance(scriptable0);
      Class<NativeError> class0 = NativeError.class;
      // Undeclared exception!
      try { 
        nativeBoolean0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeError
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeNumber nativeNumber0 = new NativeNumber(8);
      ScriptableObject.buildDataDescriptor(nativeIterator_StopIteration0, 1, 0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<Double> class0 = Double.class;
      NativeArray nativeArray0 = new NativeArray(0L);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      nativeArray0.getOwnPropertyDescriptor(context0, class0);
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.isDataDescriptor((ScriptableObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeBoolean0, true);
      nativeGenerator0.defineConst("", nativeBoolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test050()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.defineOwnProperties(context0, nativeJavaTopPackage0);
      ScriptableObject.getPropertyIds(nativeJavaTopPackage0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<TopLevel> class0 = TopLevel.class;
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      ScriptableObject.defineClass((Scriptable) nativeIterator_StopIteration0, class0, true);
      nativeIterator_StopIteration0.keySet();
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        Context.checkLanguageVersion(2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad language version: 2
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test052()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Class<NativeJavaConstructor> class0 = NativeJavaConstructor.class;
      ScriptableObject.getTypedProperty((Scriptable) importerTopLevel0, "language version", class0);
      importerTopLevel0.getClassName();
      ScriptableObject.putProperty((Scriptable) importerTopLevel0, 2, (Object) "global");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Context context0 = new Context();
      ImporterTopLevel.init(context0, (Scriptable) null, false);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test054()  throws Throwable  {
      boolean boolean0 = true;
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "split";
      stringArray0[1] = "h6g";
      stringArray0[2] = "split";
      Class<InterpretedFunction> class0 = InterpretedFunction.class;
      // Undeclared exception!
      try { 
        nativeBoolean0.defineFunctionProperties(stringArray0, class0, 2200);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Method \"split\" not found in \"com.google.javascript.rhino.head.InterpretedFunction\".
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeContinuation0.size();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.activatePrototypeMap(4);
      Integer integer0 = new Integer(0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test056()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      NativeCall nativeCall0 = new NativeCall();
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeCall0, true);
      Context.getContext();
      Class<FunctionObject> class0 = FunctionObject.class;
      NativeJavaClass nativeJavaClass0 = null;
      try {
        nativeJavaClass0 = new NativeJavaClass(nativeGenerator0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test057()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Class<ImporterTopLevel> class0 = ImporterTopLevel.class;
      ScriptableObject.defineClass((Scriptable) nativeObject0, class0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      NativeBoolean nativeBoolean1 = new NativeBoolean(true);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.putConstProperty(nativeIterator_StopIteration0, "sKG=O8iF'", "sKG=O8iF'");
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      nativeIterator_StopIteration0.isEmpty();
      ContextFactory contextFactory0 = new ContextFactory();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      NativeCall nativeCall0 = new NativeCall();
      Delegator delegator0 = new Delegator();
      // Undeclared exception!
      try { 
        nativeCall0.setGetterOrSetter("\tat script", 1, delegator0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // \tat script
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Long long0 = new Long(2);
      nativeContinuation0.sameValue(long0, long0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Integer integer0 = new Integer(0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeCall0, nativeCall0, 13, 13);
      idFunctionObject0.isConst(":W?zcG8W");
      Context context0 = Context.enter();
      Context context1 = Context.enter(context0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context1);
      Class<Object> class0 = Object.class;
      ScriptableObject.getTypedProperty((Scriptable) importerTopLevel0, 4, class0);
      Integer integer0 = new Integer(120);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptableObject.putProperty((Scriptable) nativeContinuation0, 1, (Object) nativeContinuation0);
      Context.enter();
      NativeCall nativeCall0 = new NativeCall();
      nativeCall0.defineConst("language version", nativeContinuation0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      Context context1 = Context.enter(context0);
      // Undeclared exception!
      try { 
        nativeBoolean0.defineOwnProperties(context1, nativeContinuation0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type object
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeContinuation0.sameValue(nativeBoolean0, nativeBoolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<Double> class0 = Double.TYPE;
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeContinuation0.sameValue(class0, nativeIterator_StopIteration0);
      nativeIterator_StopIteration0.remove((Object) nativeContinuation0);
      nativeContinuation0.getImplementation();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test065()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      context0.getClassShutterSetter();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      // Undeclared exception!
      try { 
        nativeJavaTopPackage0.getAttributes("error reporter");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property error reporter not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod((Scriptable) nativeCall0, (String) null, (Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: null is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<Object> class0 = Object.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeIterator_StopIteration0, 2, class0);
      Integer integer0 = new Integer(4);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptableObject.putProperty((Scriptable) nativeContinuation0, 1, (Object) nativeContinuation0);
      Context.enter();
      Context.enter();
      Integer integer0 = new Integer(120);
      nativeContinuation0.getIds(false);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeNumber nativeNumber0 = new NativeNumber(8);
      Synchronizer synchronizer0 = new Synchronizer(nativeIterator_StopIteration0, nativeIterator_StopIteration0);
      nativeIterator_StopIteration0.isDataDescriptor(nativeIterator_StopIteration0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      nativeCall0.setAttributes("lV<p!k+FqH", (Scriptable) null, 0);
      nativeCall0.function = null;
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      String string0 = "";
      ScriptableObject.defineConstProperty(nativeArray0, "");
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        nativeArray0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      nativeIterator_StopIteration0.put((-1227053771), (Scriptable) importerTopLevel0, (Object) importerTopLevel0);
      assertFalse(importerTopLevel0.isEmpty());
      
      Context context0 = Context.enter();
      Context context1 = Context.enter(context0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      nativeBoolean0.putConst("language version", importerTopLevel0, context1);
      assertTrue(nativeBoolean0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptableObject.putProperty((Scriptable) nativeContinuation0, 1, (Object) nativeContinuation0);
      Context context0 = Context.enter();
      Context.enter(context0);
      long long0 = new Integer(120);
      nativeContinuation0.getIds(false);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test074()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, context0.generateObserverCount);
      Class<NativeJavaConstructor> class0 = NativeJavaConstructor.class;
      NativeJavaConstructor nativeJavaConstructor0 = ScriptableObject.getTypedProperty((Scriptable) importerTopLevel0, context0.languageVersionProperty, class0);
      importerTopLevel0.getClassName();
      String string0 = "msg.varargs.ctor";
      int int0 = 1;
      String string1 = "execIdCall";
      String string2 = "W<x";
      boolean boolean0 = true;
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(importerTopLevel0, string1, string2, context0.generateObserverCount, boolean0);
      // Undeclared exception!
      try { 
        importerTopLevel0.addLazilyInitializedValue(string0, int0, lazilyLoadedCtor0, nativeJavaConstructor0.EMPTY);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // msg.varargs.ctor
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test075()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      BaseFunction baseFunction0 = new BaseFunction();
      ScriptableObject.ensureScriptableObject(baseFunction0);
      Class<NativeError> class0 = NativeError.class;
      // Undeclared exception!
      try { 
        nativeBoolean0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeError
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<Double> class0 = Double.TYPE;
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeContinuation0.isDataDescriptor(nativeIterator_StopIteration0);
      nativeContinuation0.sameValue(class0, (Object) null);
      Float float0 = new Float((float) 4);
      nativeIterator_StopIteration0.remove((Object) float0);
      nativeContinuation0.getImplementation();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test077()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeCall nativeCall0 = context0.currentActivationCall;
      NativeGenerator nativeGenerator0 = NativeGenerator.init((ScriptableObject) null, false);
      nativeGenerator0.defineConst("language version", (Scriptable) null);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test078()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      TopLevel topLevel0 = new TopLevel();
      Class<NativeJavaMethod> class0 = NativeJavaMethod.class;
      topLevel0.delete((String) null);
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) nativeIterator_StopIteration0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeJavaMethod
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptableObject.putProperty((Scriptable) nativeContinuation0, 1, (Object) nativeContinuation0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.defineOwnProperties(context0, nativeContinuation0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.getClassName();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      importerTopLevel0.sealObject();
      Class<String> class0 = String.class;
      ScriptableObject.getDefaultValue((Scriptable) importerTopLevel0, (Class<?>) class0);
      Delegator delegator0 = new Delegator(importerTopLevel0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.keySet();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      String string0 = null;
      Class<Arguments> class0 = Arguments.class;
      JavaMembers javaMembers0 = new JavaMembers(nativeCall0, class0, false);
      NativeJavaMethod nativeJavaMethod0 = javaMembers0.ctors;
      nativeCall0.setGetterOrSetter((String) null, (-4341), nativeJavaMethod0, false);
      Arguments arguments0 = null;
      try {
        arguments0 = new Arguments(nativeCall0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.isDataDescriptor(nativeContinuation0);
      Context context0 = Context.getCurrentContext();
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeIterator_StopIteration0, false);
      nativeGenerator0.size();
      BoundFunction boundFunction0 = new BoundFunction(context0, nativeIterator_StopIteration0, nativeContinuation0, nativeGenerator0, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeArray nativeArray0 = new NativeArray(8);
      ContextFactory contextFactory0 = new ContextFactory();
      NativeArray nativeArray1 = new NativeArray(2);
      ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      // Undeclared exception!
      try { 
        nativeArray0.getOwnPropertyDescriptor(context0, nativeIterator_StopIteration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.getApplicationClassLoader();
      Context context0 = contextFactory0.enter();
      Context.enter(context0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      String[] stringArray0 = new String[0];
      Class<NativeJavaPackage> class0 = NativeJavaPackage.class;
      nativeBoolean0.defineFunctionProperties(stringArray0, class0, 140);
      // Undeclared exception!
      try { 
        contextFactory0.removeListener((ContextFactory.Listener) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test085()  throws Throwable  {
      Context.getCurrentContext();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      Class<BaseFunction> class0 = BaseFunction.class;
      // Undeclared exception!
      try { 
        ScriptableObject.buildClassCtor((Scriptable) nativeJavaTopPackage0, class0, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.sealObject();
      Class<Byte> class0 = Byte.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) importerTopLevel0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test087()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptableObject(context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type com.google.javascript.rhino.head.Context
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        nativeArray0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptableObject.putProperty((Scriptable) nativeContinuation0, 1, (Object) nativeContinuation0);
      Context context0 = Context.enter();
      NativeArray.getLengthProperty(context0, nativeContinuation0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<Double> class0 = Double.class;
      NativeArray nativeArray0 = new NativeArray(15L);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptable("getFunctionName");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type string
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      TopLevel topLevel0 = new TopLevel();
      topLevel0.isExtensible();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel(context0);
      ScriptableObject.getTypedProperty((Scriptable) importerTopLevel1, 3, class0);
      Integer integer0 = new Integer(1);
      // Undeclared exception!
      try { 
        importerTopLevel0.initStandardObjects(context0, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test093()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.getArrayPrototype(nativeIterator_StopIteration0);
      boolean boolean0 = ScriptableObject.isFalse(nativeIterator_StopIteration0);
      assertFalse(boolean0);
      
      Class<Object> class0 = Object.class;
      Object object0 = ScriptableObject.getTypedProperty((Scriptable) nativeIterator_StopIteration0, (-2811), class0);
      assertTrue(nativeIterator_StopIteration0.isEmpty());
      assertNull(object0);
      
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      assertTrue(nativeIterator_StopIteration1.isExtensible());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeNumber nativeNumber0 = new NativeNumber(8);
      assertFalse(nativeNumber0.isSealed());
      
      ScriptableObject.buildDataDescriptor(nativeIterator_StopIteration0, 1, 3);
      assertTrue(nativeIterator_StopIteration0.isEmpty());
      
      ScriptableObject.getPropertyIds(nativeNumber0);
      assertTrue(nativeNumber0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.redefineProperty(nativeIterator_StopIteration0, "Q\"jozDe/DWVQRI^", false);
      Class<Object> class0 = Object.class;
      Object object0 = ScriptableObject.getTypedProperty((Scriptable) nativeIterator_StopIteration0, 2, class0);
      assertTrue(nativeIterator_StopIteration0.isEmpty());
      assertNull(object0);
      
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      assertTrue(nativeIterator_StopIteration1.isExtensible());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeCall0, nativeCall0, 13, 13);
      idFunctionObject0.isConst(":W?zcG8W");
      idFunctionObject0.isGenericDescriptor(nativeCall0);
      Class<Integer> class0 = Integer.TYPE;
      Context context0 = new Context();
      assertEquals(160, Context.VERSION_1_6);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      NativeGenerator nativeGenerator0 = NativeGenerator.init((ScriptableObject) null, true);
      assertTrue(nativeGenerator0.isEmpty());
      assertTrue(nativeGenerator0.isSealed());
      assertTrue(nativeGenerator0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.deleteProperty((Scriptable) nativeIterator_StopIteration0, "setImm");
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      Integer integer0 = new Integer(0);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      Object object0 = nativeBoolean0.getGetterOrSetter("msg.constTredec+", 0, false);
      assertNull(object0);
      assertTrue(nativeBoolean0.isExtensible());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test100()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ScriptableObject scriptableObject0 = null;
      NativeObject nativeObject0 = (NativeObject)context0.initStandardObjects((ScriptableObject) null, true);
      ScriptableObject.getPropertyIds(nativeObject0);
      TopLevel topLevel0 = new TopLevel();
      ScriptableObject.getFunctionPrototype(topLevel0);
      IdFunctionObject idFunctionObject0 = null;
      try {
        idFunctionObject0 = new IdFunctionObject(nativeObject0, topLevel0, 41, "language version", (-3441), (Scriptable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeCall0, nativeCall0, 1981, 1981);
      idFunctionObject0.isConst("oo%5");
      idFunctionObject0.isGenericDescriptor(nativeCall0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) idFunctionObject0;
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Class<Float> class0 = Float.class;
      // Undeclared exception!
      try { 
        nativeArray0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test102()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.getApplicationClassLoader();
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Class<NativeJavaConstructor> class0 = NativeJavaConstructor.class;
      ScriptableObject.getTypedProperty((Scriptable) importerTopLevel0, "error reporter", class0);
      importerTopLevel0.getClassName();
      contextFactory0.makeContext();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test103()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeArray nativeArray0 = new NativeArray(8);
      ContextFactory contextFactory0 = new ContextFactory();
      nativeIterator_StopIteration0.put("Be3rNC/V", (Scriptable) nativeArray0, (Object) "Be3rNC/V");
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.getAttributes(4096, (Scriptable) nativeBoolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 4096 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test104()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.getApplicationClassLoader();
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      contextFactory0.enterContext();
      Class<NativeJavaConstructor> class0 = NativeJavaConstructor.class;
      ScriptableObject.getTypedProperty((Scriptable) importerTopLevel0, "error reporter", class0);
      importerTopLevel0.getClassName();
      contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        ScriptableObject.defineConstProperty((Scriptable) null, "tY1IsfMQ9a{R|,Q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test105()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      NativeCall nativeCall0 = new NativeCall();
      String string0 = "]`";
      // Undeclared exception!
      try { 
        nativeCall0.getAttributes(5);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Property 5 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Context.getCurrentContext();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.keySet();
      boolean boolean0 = nativeIterator_StopIteration0.isConst("error reporter");
      assertFalse(boolean0);
      assertTrue(nativeIterator_StopIteration0.isEmpty());
      assertTrue(nativeIterator_StopIteration0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      ScriptableObject.redefineProperty(nativeCall0, "p5-=dLhi}6i5s4", true);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.isDataDescriptor(nativeCall0);
      NativeCall nativeCall1 = new NativeCall();
      nativeCall1.setAttributes("toString", (Scriptable) nativeCall0, 1);
      NativeArray nativeArray0 = new NativeArray(0);
      // Undeclared exception!
      try { 
        nativeArray0.setInstanceIdValue(1, nativeCall0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }
}
