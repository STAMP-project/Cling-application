/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 15:02:41 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.InterpreterData;
import com.google.javascript.rhino.head.NativeContinuation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Interpreter_ESTest extends Interpreter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Context.getCurrentContext();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Context context0 = new Context();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context.getCurrentContext();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(12, (String) null, (String) null, false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData((-2585), "", "", false);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(13, "language version", "language version", true);
      byte[] byteArray0 = new byte[14];
      byteArray0[1] = (byte)121;
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(13, "language version", "language version", true);
      byte[] byteArray0 = new byte[12];
      byteArray0[1] = (byte) (-28);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  @Ignore
  public void test07()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(13, "language version", "language version", true);
      byte[] byteArray0 = new byte[12];
      byteArray0[1] = (byte) (-39);
      interpreterData0.itsICode = byteArray0;
      // Undeclared exception!
      try { 
        interpreterData0.getLineNumbers();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/javascript/rhino/head/Interpreter
         //
         verifyException("com.google.javascript.rhino.head.InterpreterData", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(13, "language version", "language version", true);
      byte[] byteArray0 = new byte[12];
      byteArray0[8] = (byte) (-40);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(13, "language version", "language version", false);
      byte[] byteArray0 = new byte[14];
      byteArray0[1] = (byte) (-46);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(13, "language version", "language version", true);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-48);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(13, "language version", "language version", true);
      byte[] byteArray0 = new byte[12];
      byteArray0[1] = (byte) (-26);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(139, "", "", true);
  }
}
