/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 14:00:11 GMT 2019
 */

package org.mockito.cglib.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.asm.ClassReader;
import org.mockito.asm.ClassWriter;
import org.mockito.asm.Type;
import org.mockito.cglib.core.ClassEmitter;
import org.mockito.cglib.core.CodeEmitter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ClassEmitter_ESTest extends ClassEmitter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(677);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.LONG_TYPE;
      ClassEmitter.FieldInfo classEmitter_FieldInfo0 = new ClassEmitter.FieldInfo(0, "0$BQ\"A~7N", type0, (Object) null);
      // Undeclared exception!
      try { 
        classEmitter0.declare_field(10, "0$BQ\"A~7N", type0, classEmitter_FieldInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.mockito.cglib.core.ClassEmitter$FieldInfo@98117b88
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Type type0 = Type.SHORT_TYPE;
      Object object0 = new Object();
      ClassEmitter.FieldInfo classEmitter_FieldInfo0 = new ClassEmitter.FieldInfo((-77), "y)2h`Mic", type0, object0);
      ClassWriter classWriter0 = new ClassWriter(3);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      // Undeclared exception!
      try { 
        classEmitter0.declare_field(2, "y)2h`Mic", type0, classEmitter_FieldInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.mockito.cglib.core.ClassEmitter$FieldInfo@12799f81
         //
         verifyException("org.mockito.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2686));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.declare_field(2, ".s.IFJDCS", type0, type0);
      // Undeclared exception!
      try { 
        classEmitter0.declare_field(2, ".s.IFJDCS", type0, ".s.IFJDCS");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Field \".s.IFJDCS\" has been declared differently
         //
         verifyException("org.mockito.cglib.core.ClassEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Type type0 = Type.BYTE_TYPE;
      Object object0 = new Object();
      ClassEmitter.FieldInfo classEmitter_FieldInfo0 = new ClassEmitter.FieldInfo(2447, "ByRthRt4Li", type0, object0);
      classEmitter_FieldInfo0.value = null;
      boolean boolean0 = classEmitter_FieldInfo0.equals(classEmitter_FieldInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Type type0 = Type.CHAR_TYPE;
      Object object0 = new Object();
      ClassReader classReader0 = new ClassReader("org.mockito.cglib.core.ClassEmitter$1");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 10);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.declare_field(8, "org.mockito.cglib.core.ClassEmitter$1", type0, type0);
      Type type1 = Type.INT_TYPE;
      // Undeclared exception!
      try { 
        classEmitter0.declare_field(8, "org.mockito.cglib.core.ClassEmitter$1", type1, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Field \"org.mockito.cglib.core.ClassEmitter$1\" has been declared differently
         //
         verifyException("org.mockito.cglib.core.ClassEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Type type0 = Type.CHAR_TYPE;
      Object object0 = new Object();
      ClassEmitter.FieldInfo classEmitter_FieldInfo0 = new ClassEmitter.FieldInfo((-26), "Synthetic", type0, object0);
      classEmitter_FieldInfo0.access = 0;
      ClassEmitter.FieldInfo classEmitter_FieldInfo1 = new ClassEmitter.FieldInfo(0, "", type0, "U`F/0H");
      boolean boolean0 = classEmitter_FieldInfo1.equals(classEmitter_FieldInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Type type0 = Type.BYTE_TYPE;
      ClassEmitter.FieldInfo classEmitter_FieldInfo0 = new ClassEmitter.FieldInfo(1, "?", type0, "?");
      ClassEmitter.FieldInfo classEmitter_FieldInfo1 = new ClassEmitter.FieldInfo(6, "?", type0, type0);
      boolean boolean0 = classEmitter_FieldInfo0.equals(classEmitter_FieldInfo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Type type0 = Type.getObjectType("n@E");
      ClassEmitter.FieldInfo classEmitter_FieldInfo0 = new ClassEmitter.FieldInfo(155, (String) null, type0, (Object) null);
      boolean boolean0 = classEmitter_FieldInfo0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassEmitter classEmitter1 = new ClassEmitter(classEmitter0);
      // Undeclared exception!
      try { 
        classEmitter1.getFieldInfo("Xrb$jeZ)8p3vF");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.ClassEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2623));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.BYTE_TYPE;
      classEmitter0.declare_field(2, "D)RS:xY*VOt+C[hPX", type0, type0);
      ClassEmitter.FieldInfo classEmitter_FieldInfo0 = classEmitter0.getFieldInfo("D)RS:xY*VOt+C[hPX");
      boolean boolean0 = classEmitter_FieldInfo0.equals("D)RS:xY*VOt+C[hPX");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Type type0 = Type.SHORT_TYPE;
      ClassWriter classWriter0 = new ClassWriter(3);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.declare_field(8, "org.mockito.cglib.core.ClassEmitter$FieldInfo", type0, type0);
      boolean boolean0 = classEmitter0.isFieldDeclared("org.mockito.cglib.core.ClassEmitter$FieldInfo");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      boolean boolean0 = classEmitter0.isFieldDeclared("org.mockito.asm.Type");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2666));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.declare_field(2, ".s.IFAJDCS", type0, type0);
      // Undeclared exception!
      try { 
        classEmitter0.declare_field(2, ".s.IFAJDCS", type0, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Field \".s.IFAJDCS\" has been declared differently
         //
         verifyException("org.mockito.cglib.core.ClassEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Type type0 = Type.getObjectType("=s>&p`<");
      ClassWriter classWriter0 = new ClassWriter(544);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.begin_class(1604, (-2233), "=s>&p`<", type0, (Type[]) null, "=s>&p`<");
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Type type0 = Type.getObjectType("=s>&p`<");
      ClassWriter classWriter0 = new ClassWriter(6);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.begin_class(4, 9, "dh,QB3^^Hi,iCciM", type0, (Type[]) null, "dh,QB3^^Hi,iCciM");
      classEmitter0.getStaticHook();
      classEmitter0.end_class();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Type type0 = Type.getObjectType("=s>&p`<");
      ClassWriter classWriter0 = new ClassWriter(6);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.begin_class((-29), 9, "dh,QB3^^Hi,iCciM", type0, (Type[]) null, "dh,QB3^^Hi,iCciM");
      classEmitter0.begin_static();
      classEmitter0.end_class();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Type type0 = Type.getObjectType("=s>&p`<");
      ClassWriter classWriter0 = new ClassWriter(6);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.begin_class((-29), 9, "=s>&p`<", type0, (Type[]) null, "=s>&p`<");
      classEmitter0.getStaticHook();
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      assertEquals(155, CodeEmitter.LT);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Type type0 = Type.getObjectType("=s>&p`<");
      ClassWriter classWriter0 = new ClassWriter(6);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.begin_class((-1950), 3908, "]T_L4f5h", type0, (Type[]) null, "]T_L4f5h");
      // Undeclared exception!
      try { 
        classEmitter0.getStaticHook();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // static hook is invalid for this class
         //
         verifyException("org.mockito.cglib.core.ClassEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-1));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(0, 90, "CGLIB$STATICHOOK", "CGLIB$STATICHOOK", "CGLIB$STATICHOOK", (String[]) null);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Type[] typeArray0 = new Type[4];
      // Undeclared exception!
      try { 
        classEmitter0.begin_class((-2721), (-2721), "", (Type) null, typeArray0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.TypeUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      classEmitter0.setTarget(classEmitter0);
      Type type0 = Type.BOOLEAN_TYPE;
      classEmitter0.declare_field(3, "+P", type0, type0);
      assertEquals(7, Type.LONG);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      // Undeclared exception!
      try { 
        classEmitter0.visitMethod(255, "E-f:!1", "E-f:!1", "", (String[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // classInfo is null! org.mockito.cglib.core.ClassEmitter@1
         //
         verifyException("org.mockito.cglib.core.ClassEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      // Undeclared exception!
      try { 
        classEmitter0.getSuperType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.ClassEmitter", e);
      }
  }
}
