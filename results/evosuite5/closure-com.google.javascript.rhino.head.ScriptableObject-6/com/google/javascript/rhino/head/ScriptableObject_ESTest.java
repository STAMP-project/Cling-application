/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 25 08:03:30 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Arguments;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.BoundFunction;
import com.google.javascript.rhino.head.Callable;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.Delegator;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.JavaAdapter;
import com.google.javascript.rhino.head.LazilyLoadedCtor;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeBoolean;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeGenerator;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJSON;
import com.google.javascript.rhino.head.NativeJavaArray;
import com.google.javascript.rhino.head.NativeJavaClass;
import com.google.javascript.rhino.head.NativeJavaObject;
import com.google.javascript.rhino.head.NativeJavaPackage;
import com.google.javascript.rhino.head.NativeJavaTopPackage;
import com.google.javascript.rhino.head.NativeMath;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.NativeScript;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.NativeWith;
import com.google.javascript.rhino.head.ObjToIntMap;
import com.google.javascript.rhino.head.Script;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.Synchronizer;
import com.google.javascript.rhino.head.TopLevel;
import com.google.javascript.rhino.head.WrapFactory;
import java.lang.reflect.Method;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ScriptableObject_ESTest extends ScriptableObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Context context0 = new Context();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      nativeJavaTopPackage0.isGetterOrSetter("8m'^_", 13, false);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test001()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      importerTopLevel0.setAttributes(1368933789, 6);
      Context context0 = contextFactory0.makeContext();
      context0.initStandardObjects((ScriptableObject) importerTopLevel0, false);
      Object[] objectArray0 = Context.emptyArgs;
      StringBuffer stringBuffer0 = new StringBuffer(8);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test002()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("jsGet_getLength");
      WrapFactory wrapFactory0 = new WrapFactory();
      Context context0 = Context.getCurrentContext();
      Context context1 = Context.enter(context0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context1, true);
      Scriptable scriptable0 = wrapFactory0.wrapNewObject(context1, importerTopLevel0, "jsGet_getLength");
      NativeJavaPackage nativeJavaPackage1 = nativeJavaPackage0.forcePackage("jsGet_getLength", scriptable0);
      nativeJavaPackage1.forcePackage("language version", importerTopLevel0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.buildDataDescriptor(importerTopLevel0, importerTopLevel0, 421);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      nativeJavaTopPackage0.isGetterOrSetter("8m3'^_", 4, true);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test004()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Context context1 = Context.getCurrentContext();
      BoundFunction boundFunction0 = new BoundFunction(context1, importerTopLevel0, (Callable) null, importerTopLevel0, context0.emptyArgs);
      ScriptableObject.isFalse(boundFunction0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = new Context();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeIterator_StopIteration0, nativeIterator_StopIteration0, 3, "language version", 7, nativeIterator_StopIteration0);
      idFunctionObject0.putConst("error reporter", nativeIterator_StopIteration0, (Object) null);
      ScriptableObject.deleteProperty((Scriptable) nativeIterator_StopIteration0, "error reporter");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test006()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      context0.getLocale();
      NativeWith nativeWith0 = new NativeWith(nativeIterator_StopIteration0, nativeIterator_StopIteration0);
      ScriptableObject.putProperty((Scriptable) nativeIterator_StopIteration0, "error reporter", (Object) nativeWith0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      // Undeclared exception!
      try { 
        nativeBoolean0.defineOwnProperties(context0, nativeIterator_StopIteration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type object
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test007()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("h`43~r?Gs3(");
      NativeString nativeString0 = new NativeString("h`43~r?Gs3(");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.delete("msg.method.not.found");
      NativeGenerator nativeGenerator0 = NativeGenerator.init(importerTopLevel0, true);
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel();
      nativeString0.put(9, (Scriptable) nativeGenerator0, (Object) importerTopLevel1);
      ScriptableObject.getArrayPrototype(nativeGenerator0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<Byte> class0 = Byte.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) importerTopLevel1, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(219.1522200630101);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.isConst((String) null);
      nativeNumber0.getGetterOrSetter((String) null, 4, false);
      ScriptableObject.deleteProperty((Scriptable) importerTopLevel0, (String) null);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test009()  throws Throwable  {
      Context context0 = Context.getContext();
      Context.toBoolean(context0);
      NativeArray nativeArray0 = new NativeArray((-6513398903789220827L));
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.defineConst("|5vRwpfmDd2QH]Oa<Hh", nativeArray0);
      nativeArray0.defineOwnProperty(context0, (Object) "|5vRwpfmDd2QH]Oa<Hh", (ScriptableObject) importerTopLevel0, false);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test010()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("hasI6rta/ce");
      NativeObject nativeObject0 = new NativeObject();
      Long long0 = new Long(0L);
      Byte byte0 = new Byte((byte) (-99));
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.sameValue(byte0, long0);
      // Undeclared exception!
      try { 
        NativeGenerator.init(nativeJavaPackage0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.isGenericDescriptor(importerTopLevel0);
      NativeString nativeString0 = new NativeString("4");
      ScriptableObject.hasProperty((Scriptable) importerTopLevel0, 4);
      NativeGenerator nativeGenerator0 = NativeGenerator.init(importerTopLevel0, true);
      nativeString0.put((-104), (Scriptable) importerTopLevel0, (Object) nativeGenerator0);
      ScriptableObject.getArrayPrototype(importerTopLevel0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test012()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      context0.initStandardObjects((ScriptableObject) nativeIterator_StopIteration0, true);
      Class<Integer> class0 = Integer.class;
      ScriptableObject.getDefaultValue((Scriptable) nativeIterator_StopIteration0, (Class<?>) class0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(429L);
      ScriptableObject.getArrayPrototype(nativeArray0);
      nativeArray0.toArray();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test014()  throws Throwable  {
      NativeString.init((Scriptable) null, false);
      Context context0 = new Context();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test015()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      context0.getLocale();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      // Undeclared exception!
      try { 
        importerTopLevel0.setAttributes(1368933789, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      String string0 = "4\\";
      importerTopLevel0.isGenericDescriptor(importerTopLevel0);
      NativeString nativeString0 = new NativeString("4");
      int int0 = (-104);
      ScriptableObject.hasProperty((Scriptable) importerTopLevel0, 4);
      ScriptableObject.defineConstProperty(importerTopLevel0, "4");
      boolean boolean0 = true;
      Class<NativeContinuation> class0 = NativeContinuation.class;
      // Undeclared exception!
      try { 
        importerTopLevel0.defineProperty("4", class0, 722);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 723
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test017()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("]\"X=u>f^Zgd%$]?");
      // Undeclared exception!
      try { 
        ScriptableObject.redefineProperty(nativeJavaPackage0, "]\"X=u>f^Zgd%$]?", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: redeclaration of var ]\"X=u>f^Zgd%$]?.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test018()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("hasInstance");
      BaseFunction baseFunction0 = new BaseFunction(nativeJavaPackage0, nativeJavaPackage0);
      ScriptableObject.deleteProperty((Scriptable) baseFunction0, "jsetEse8ImmunePrototypePropert/");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.isGenericDescriptor(importerTopLevel0);
      NativeObject nativeObject0 = new NativeObject();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Class<Integer> class0 = Integer.class;
      nativeContinuation0.defineProperty("3Cj", (Object) null, 4);
      ScriptableObject.getTypedProperty((Scriptable) nativeContinuation0, 2, class0);
      NativeObject.init(nativeContinuation0, true);
      nativeContinuation0.defineConst("3Cj", nativeObject0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test020()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("Bh`43~Jr?Gs3(");
      BaseFunction baseFunction0 = new BaseFunction(nativeJavaPackage0, nativeJavaPackage0);
      Long long0 = new Long(356L);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.isDataDescriptor(nativeJavaPackage0);
      Context context0 = new Context();
      NativeNumber nativeNumber0 = new NativeNumber(1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test021()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.deleteProperty((Scriptable) importerTopLevel0, 13);
      ScriptableObject.redefineProperty(importerTopLevel0, "", true);
      NativeGenerator nativeGenerator0 = NativeGenerator.init(importerTopLevel0, true);
      NativeString nativeString0 = new NativeString("");
      // Undeclared exception!
      try { 
        nativeString0.put(256, (Scriptable) nativeGenerator0, (Object) nativeGenerator0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: 256.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.put((String) null, (Scriptable) importerTopLevel0, (Object) importerTopLevel0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test023()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        importerTopLevel0.getAttributes((-1), (Scriptable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property -1 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      ScriptableObject.putProperty((Scriptable) nativeJavaTopPackage0, "o", (Object) "o");
      ContextFactory.getGlobal();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test025()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("hasI6rta/ce");
      nativeJavaPackage0.equivalentValues("hasI6rta/ce");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test026()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context.getContext();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Class<Integer> class0 = Integer.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeContinuation0, 0, class0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      Arguments arguments0 = null;
      try {
        arguments0 = new Arguments(nativeCall0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.buildDataDescriptor(importerTopLevel0, importerTopLevel0, 3);
      ScriptableObject.deleteProperty((Scriptable) importerTopLevel0, 13);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test029()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("h`43~r?Gs3(");
      BaseFunction baseFunction0 = new BaseFunction(nativeJavaPackage0, nativeJavaPackage0);
      nativeJavaPackage0.setPrototype(baseFunction0);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        baseFunction0.defineOwnProperty(context0, nativeJavaPackage0, nativeJavaPackage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test030()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.redefineProperty(importerTopLevel0, "", true);
      NativeArray nativeArray0 = new NativeArray(4);
      nativeArray0.defaultPut("", importerTopLevel0);
      nativeArray0.getIndexIds();
      // Undeclared exception!
      try { 
        importerTopLevel0.defineConst("", nativeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: redeclaration of var .
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test031()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("]\"X=u>f^Zgd%$]?");
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.isAccessorDescriptor(nativeJavaPackage0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.preventExtensions();
      Context.enter();
      ScriptableObject.defineConstProperty(nativeBoolean0, "language version");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test033()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      nativeIterator_StopIteration0.getAllIds();
      context0.getLocale();
      NativeWith nativeWith0 = new NativeWith(nativeIterator_StopIteration0, nativeIterator_StopIteration0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.delete("unescape");
      NativeGenerator.init(importerTopLevel0, true);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test034()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      context0.getLocale();
      NativeWith nativeWith0 = new NativeWith(nativeIterator_StopIteration0, nativeIterator_StopIteration0);
      ScriptableObject.putProperty((Scriptable) nativeIterator_StopIteration0, "error reporter", (Object) nativeWith0);
      NativeCall nativeCall0 = context0.currentActivationCall;
      BaseFunction baseFunction0 = new BaseFunction(nativeIterator_StopIteration0, (Scriptable) null);
      // Undeclared exception!
      try { 
        ScriptableObject.redefineProperty(nativeWith0, "error reporter", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: redeclaration of var error reporter.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test035()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = new Context();
      context0.getLocale();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeString nativeString0 = new NativeString("language version");
      nativeString0.equivalentValues(classLoader0);
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getTypedProperty((Scriptable) nativeString0, 5, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert a to java.lang.Integer
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test036()  throws Throwable  {
      Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.hasProperty((Scriptable) importerTopLevel0, 1);
      BaseFunction baseFunction0 = new BaseFunction(importerTopLevel0, importerTopLevel0);
      importerTopLevel0.checkPropertyChange("error reporter", baseFunction0, baseFunction0);
      ScriptableObject.isFalse(importerTopLevel0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.isFalse((Object) null);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      // Undeclared exception!
      try { 
        JavaAdapter.runScript((Script) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.JavaAdapter$2", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test039()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      boolean boolean0 = true;
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      // Undeclared exception!
      try { 
        nativeJavaTopPackage0.getAttributes(1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 1 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test040()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Class<ImporterTopLevel> class0 = ImporterTopLevel.class;
      ScriptableObject.defineClass((Scriptable) importerTopLevel0, class0, false);
      ScriptableObject.isFalse(importerTopLevel0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.getPropertyIds(importerTopLevel0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test042()  throws Throwable  {
      String string0 = "hasInstance";
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("hasInstance");
      BaseFunction baseFunction0 = new BaseFunction(nativeJavaPackage0, nativeJavaPackage0);
      baseFunction0.setImmunePrototypeProperty("hasInstance");
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptable("hasInstance");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type string
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Context context0 = Context.enter();
      NativeNumber nativeNumber0 = new NativeNumber(9);
      NativeWith nativeWith0 = new NativeWith(nativeNumber0, nativeNumber0);
      ScriptableObject.putProperty((Scriptable) nativeWith0, "error reporter", (Object) nativeWith0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.delete("error reporter");
      NativeGenerator.init(importerTopLevel0, true);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeArray nativeArray0 = new NativeArray(2);
      importerTopLevel0.defineConst("", nativeArray0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = new Context();
      Locale.forLanguageTag("language version");
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeString nativeString0 = new NativeString("language version");
      nativeString0.equivalentValues(classLoader0);
      ScriptableObject.putProperty((Scriptable) nativeIterator_StopIteration0, "O,\"\"_A.*TcDI-;:Y}`", (Object) classLoader0);
      nativeIterator_StopIteration0.isEmpty();
      StringBuffer stringBuffer0 = new StringBuffer(11);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test046()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      NativeWith nativeWith0 = new NativeWith(nativeIterator_StopIteration0, nativeIterator_StopIteration0);
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(nativeIterator_StopIteration0, nativeWith0, 11);
      nativeIterator_StopIteration0.checkPropertyChange("language version", scriptableObject0, scriptableObject0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.defineOwnProperties(context0, nativeIterator_StopIteration0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = new Context();
      Locale locale0 = Locale.forLanguageTag("language version");
      context0.getApplicationClassLoader();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeIterator_StopIteration0, locale0, 13, 116);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.String;
      importerTopLevel0.getBuiltinPrototype(topLevel_Builtins0);
      // Undeclared exception!
      try { 
        idFunctionObject0.putConst("error reporter", (Scriptable) null, importerTopLevel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test048()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.isFalse(importerTopLevel0);
      NativeArray nativeArray0 = new NativeArray(importerTopLevel0.READONLY);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        nativeArray0.defineOwnProperty(context0, (Object) importerTopLevel0, (ScriptableObject) importerTopLevel0, boolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.redefineProperty(importerTopLevel0, "", false);
      NativeArray nativeArray0 = new NativeArray(2);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        importerTopLevel0.setGetterOrSetter("", 4, nativeContinuation0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test050()  throws Throwable  {
      Context context0 = new Context();
      context0.getApplicationClassLoader();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.isConst("");
      NativeNumber nativeNumber0 = new NativeNumber(0.0);
      importerTopLevel0.sealObject();
      // Undeclared exception!
      try { 
        nativeNumber0.getGetterOrSetter("sG^qTOF/BG", 2, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // sG^qTOF/BG
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Class<NativeObject> class0 = NativeObject.class;
      BaseFunction baseFunction0 = ScriptableObject.buildClassCtor((Scriptable) importerTopLevel0, class0, false, false);
      Short short0 = new Short((short) (-2416));
      // Undeclared exception!
      try { 
        baseFunction0.setAttributes("jsStaticFunction_", (Scriptable) importerTopLevel0, 1311);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1311
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Class<NativeObject> class0 = NativeObject.class;
      Short short0 = new Short((short) (-2416));
      importerTopLevel0.sameValue(class0, short0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.preventExtensions();
      Context context0 = Context.enter();
      NativeArray nativeArray0 = new NativeArray(context0.emptyArgs);
      nativeArray0.getOwnPropertyDescriptor(context0, context0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test054()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ScriptableObject.isFalse(importerTopLevel0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.preventExtensions();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = new Context();
      context0.getLocale();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context1 = Context.enter(context0, contextFactory0);
      Delegator delegator0 = new Delegator(nativeIterator_StopIteration0);
      ScriptableObject scriptableObject0 = context1.initStandardObjects();
      BoundFunction boundFunction0 = new BoundFunction(context1, scriptableObject0, delegator0, delegator0, context1.emptyArgs);
      boundFunction0.defineOwnProperties(context0, nativeIterator_StopIteration0);
      Synchronizer synchronizer0 = new Synchronizer(boundFunction0);
      ScriptableObject.putConstProperty(delegator0, "[v-^]\"^%3oYs3%I", synchronizer0);
      contextFactory0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("jsFunction_getClassName", (ClassLoader) null);
      ContextFactory.getGlobalSetter();
      Class<NativeJavaArray> class0 = NativeJavaArray.class;
      nativeJavaPackage0.getDefaultValue(class0);
      boundFunction0.hasInstance(scriptableObject0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test057()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Long long0 = new Long(0);
      nativeIterator_StopIteration0.sameValue(long0, long0);
      Context context0 = Context.getContext();
      context0.initStandardObjects((ScriptableObject) nativeIterator_StopIteration0, true);
      Class<Integer> class0 = Integer.class;
      ScriptableObject.getDefaultValue((Scriptable) nativeIterator_StopIteration0, (Class<?>) class0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeArray nativeArray0 = new NativeArray(2);
      ScriptableObject.putConstProperty(nativeArray0, "", nativeArray0);
      importerTopLevel0.defineConst("", nativeArray0);
      NativeScript.init(importerTopLevel0, false);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Short short0 = new Short((short) (-2416));
      ScriptableObject.putProperty((Scriptable) importerTopLevel0, 2, (Object) short0);
      ScriptableObject.getPropertyIds(importerTopLevel0);
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel();
      NativeNumber nativeNumber0 = new NativeNumber(13);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        ScriptableObject.defineConstProperty(nativeJavaObject0, "msg.change.value.with.writable.false");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test061()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      String string0 = "";
      NativeArray nativeArray0 = new NativeArray(2);
      Class<NativeMath> class0 = NativeMath.class;
      // Undeclared exception!
      try { 
        ScriptableObject.defineClass((Scriptable) importerTopLevel0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.NativeMath\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeNumber nativeNumber0 = new NativeNumber(2);
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel();
      ScriptableObject.getTopScopeValue(importerTopLevel1, "=k;J52p>)%Au");
      importerTopLevel0.isDataDescriptor(importerTopLevel1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test063()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Context context0 = Context.getCurrentContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(false, "4", classLoader0);
      importerTopLevel0.isGenericDescriptor(nativeJavaPackage0);
      ScriptableObject.putProperty((Scriptable) nativeJavaPackage0, "(Ljava/lang/Object;)Z", (Object) classLoader0);
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel();
      importerTopLevel1.isDataDescriptor(importerTopLevel0);
      Context context1 = new Context();
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context1, (Scriptable) importerTopLevel1, "language version", context1.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000008 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test064()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      Context.enter();
      ScriptableObject scriptableObject0 = context0.initStandardObjects((ScriptableObject) nativeIterator_StopIteration0, true);
      Delegator delegator0 = new Delegator(scriptableObject0);
      Synchronizer synchronizer0 = new Synchronizer(nativeIterator_StopIteration0, delegator0);
      // Undeclared exception!
      try { 
        NativeObject.init(synchronizer0, true);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.preventExtensions();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeBoolean0, nativeBoolean0, 2, "jsStaticFunction_getFunctionName", 8, nativeBoolean0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.setGetterOrSetter("jsStaticFunction_getFunctionName", 0, idFunctionObject0, true);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Context context0 = new Context();
      ClassLoader.getSystemClassLoader();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context0, (Scriptable) nativeBoolean0, "error reporter", context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000004 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test067()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.preventExtensions();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeBoolean0, nativeBoolean0, 2, "XqY-1C0H90L$", 8, nativeBoolean0);
      Context context0 = new Context();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      importerTopLevel0.delete("get");
      NativeGenerator.init(importerTopLevel0, false);
      NativeString nativeString0 = new NativeString("language version");
      Class<Integer> class0 = Integer.class;
      ScriptableObject.getTypedProperty((Scriptable) importerTopLevel0, 5, class0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.redefineProperty(importerTopLevel0, "", true);
      NativeArray nativeArray0 = new NativeArray(4);
      importerTopLevel0.defineConst("", nativeArray0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        nativeBoolean0.defineOwnProperties(context0, nativeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type object
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test069()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Class<NativeContinuation> class0 = NativeContinuation.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) importerTopLevel0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeContinuation
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(4519.10743764439);
      Long long0 = new Long(2);
      Long.getLong("getTyp");
      nativeNumber0.sameValue(long0, long0);
      ScriptableObject.getPropertyIds(nativeNumber0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      nativeNumber0.size();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test071()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Long long0 = new Long(0);
      Long.getLong("R", (-4586705114244317184L));
      nativeIterator_StopIteration0.sameValue(long0, long0);
      Context context0 = Context.getContext();
      context0.initStandardObjects((ScriptableObject) nativeIterator_StopIteration0, true);
      nativeIterator_StopIteration0.getIds(true);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Context context0 = new Context();
      ClassLoader.getSystemClassLoader();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeBoolean0, "hC9=EBH-~^T", ":=NSJMB_D65xEMyZ", false);
      // Undeclared exception!
      try { 
        nativeBoolean0.addLazilyInitializedValue("&a5fF", (-892), lazilyLoadedCtor0, 101);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // &a5fF
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test073()  throws Throwable  {
      Class<NativeGenerator> class0 = NativeGenerator.class;
      // Undeclared exception!
      try { 
        ScriptableObject.buildClassCtor((Scriptable) null, class0, false, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.NativeGenerator\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = new Context();
      ClassLoader.getSystemClassLoader();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeIterator_StopIteration0, nativeIterator_StopIteration0, 3, "language version", 7, nativeIterator_StopIteration0);
      idFunctionObject0.putConst("error reporter", nativeIterator_StopIteration0, (Object) null);
      Class<Float> class0 = Float.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) nativeIterator_StopIteration0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test075()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeNumber nativeNumber0 = new NativeNumber(2);
      ScriptableObject.ensureScriptableObject(importerTopLevel0);
      Class<NativeContinuation> class0 = NativeContinuation.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) importerTopLevel0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeContinuation
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.preventExtensions();
      Context context0 = Context.enter();
      NativeArray nativeArray0 = new NativeArray(context0.emptyArgs);
      Class<BaseFunction> class0 = BaseFunction.class;
      // Undeclared exception!
      try { 
        nativeArray0.defineProperty("error reporter", class0, (-2943));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2943
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(219.1522200630101);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.isConst("msg.no.with.strict");
      nativeNumber0.getGetterOrSetter("", 0, false);
      importerTopLevel0.get((Object) null);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.delete(2123345812);
      NativeCall nativeCall0 = new NativeCall();
      Arguments arguments0 = null;
      try {
        arguments0 = new Arguments(nativeCall0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test079()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.buildClassCtor((Scriptable) nativeIterator_StopIteration0, class0, true, false);
      NativeArray nativeArray0 = new NativeArray(context0.emptyArgs);
      // Undeclared exception!
      try { 
        nativeArray0.listIterator(160);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 160
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.deleteProperty((Scriptable) importerTopLevel0, 13);
      NativeGenerator nativeGenerator0 = NativeGenerator.init(importerTopLevel0, true);
      nativeGenerator0.size();
      importerTopLevel0.get(0, (Scriptable) nativeGenerator0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test081()  throws Throwable  {
      Context context0 = new Context();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version");
      ScriptableObject.redefineProperty(nativeJavaPackage0, "com.google.javascript.rhino.head.jdk13.VMBridge_jdk13", false);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test082()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects((ScriptableObject) nativeIterator_StopIteration0, true);
      ScriptableObject.deleteProperty((Scriptable) scriptableObject0, 11);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test083()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeArray nativeArray0 = new NativeArray(4);
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("KY'+pfn48&k3Q");
      importerTopLevel0.sameValue(nativeJavaPackage0, "");
      Delegator delegator0 = new Delegator();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test084()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.isFalse(importerTopLevel0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Context context0 = Context.enter();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      Scriptable scriptable0 = context0.initStandardObjects(scriptableObject0);
      ScriptableObject.deleteProperty(scriptable0, 1);
      ImporterTopLevel.init(context0, scriptableObject0, true);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      BaseFunction baseFunction0 = new BaseFunction(importerTopLevel0, importerTopLevel0);
      importerTopLevel0.get(97, (Scriptable) baseFunction0);
      ScriptableObject.deleteProperty((Scriptable) importerTopLevel0, 13);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      BaseFunction baseFunction0 = new BaseFunction(nativeObject0, nativeObject0);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) nativeObject0;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) null;
      BoundFunction boundFunction0 = new BoundFunction((Context) null, nativeObject0, baseFunction0, baseFunction0, objectArray0);
      ScriptableObject.putProperty((Scriptable) nativeObject0, "com.google.javascript.rhino.head.Interpreter$GeneratorState", (Object) boundFunction0);
      nativeObject0.isEmpty();
      StringBuffer stringBuffer0 = new StringBuffer(2);
      Class<BoundFunction> class0 = BoundFunction.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeObject0, "com.google.javascript.rhino.head.Interpreter$GeneratorState", class0);
      Short short0 = new Short((short)44);
      baseFunction0.setImmunePrototypeProperty(short0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Class<NativeObject> class0 = NativeObject.class;
      ScriptableObject.buildClassCtor((Scriptable) importerTopLevel0, class0, false, true);
      Short short0 = new Short((short) (-2416));
      ScriptableObject.putProperty((Scriptable) importerTopLevel0, 2, (Object) short0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.defineClass((Scriptable) nativeContinuation0, class0);
      Integer.min((-1792621099), (-523));
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptableObject((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type object
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test090()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      nativeIterator_StopIteration0.preventExtensions();
      // Undeclared exception!
      try { 
        context0.initStandardObjects((ScriptableObject) nativeIterator_StopIteration0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test091()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.defineOwnProperties(context0, nativeIterator_StopIteration0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      BaseFunction baseFunction0 = new BaseFunction(nativeCall0, nativeCall0);
      baseFunction0.addLazilyInitializedValue((String) null, 355, (LazilyLoadedCtor) null, 1);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) null;
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.get(4, (Scriptable) nativeCall0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test093()  throws Throwable  {
      Context.getContext();
      NativeNumber nativeNumber0 = new NativeNumber(120);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.isConst("language version");
      NativeNumber nativeNumber1 = new NativeNumber(10);
      // Undeclared exception!
      try { 
        nativeNumber1.getGetterOrSetter("error reporter", 4, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // error reporter
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test094()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      context0.getLocale();
      NativeWith nativeWith0 = new NativeWith(nativeIterator_StopIteration0, nativeIterator_StopIteration0);
      ScriptableObject.putProperty((Scriptable) nativeIterator_StopIteration0, "error reporter", (Object) nativeWith0);
      NativeString nativeString0 = new NativeString("language version");
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      ScriptableObject.getClassPrototype(nativeIterator_StopIteration0, "error reporter");
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.defineOwnProperties(context0, nativeString0);
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel();
      StringBuffer stringBuffer0 = new StringBuffer(1259);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test095()  throws Throwable  {
      Context context0 = Context.getContext();
      Locale locale0 = context0.getLocale();
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptableObject(locale0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type java.util.Locale
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Context context0 = Context.enter();
      ScriptableObject scriptableObject0 = context0.initStandardObjects((ScriptableObject) nativeBoolean0, true);
      ScriptableObject.getPropertyIds(scriptableObject0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Short short0 = new Short((short) (-2416));
      // Undeclared exception!
      try { 
        importerTopLevel0.defineProperty("jsConstructor", (Object) short0, (Method) null, (Method) null, (int) (short) (-2416));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2416
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<Arguments> class0 = Arguments.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeIterator_StopIteration0, "B^u", class0);
      StringBuffer stringBuffer0 = new StringBuffer(1);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.buildDataDescriptor(nativeIterator_StopIteration0, nativeIterator_StopIteration0, 0);
      Context context0 = new Context();
      Locale.forLanguageTag("language version");
      context0.getApplicationClassLoader();
      nativeIterator_StopIteration0.getClassName();
      NativeString nativeString0 = new NativeString("error reporter");
      StringBuffer stringBuffer0 = new StringBuffer("StopIteration");
      nativeIterator_StopIteration0.checkPropertyChange("language version", nativeString0, nativeString0);
      nativeString0.toString();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Class<NativeObject> class0 = NativeObject.class;
      BaseFunction baseFunction0 = ScriptableObject.buildClassCtor((Scriptable) importerTopLevel0, class0, false, true);
      Short short0 = new Short((short) (-2416));
      importerTopLevel0.setGetterOrSetter((String) null, 0, baseFunction0, false);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test101()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      Context.enter();
      context0.initStandardObjects((ScriptableObject) nativeIterator_StopIteration0, true);
      Class<Integer> class0 = Integer.TYPE;
      ScriptableObject.getDefaultValue((Scriptable) nativeIterator_StopIteration0, (Class<?>) class0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.isGenericDescriptor(importerTopLevel0);
      Short short0 = new Short((short)183);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      ScriptableObject.putProperty((Scriptable) importerTopLevel0, (-1605), (Object) nativeBoolean0);
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(true, "getCla", (ClassLoader) null);
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      ScriptableObject.getTopScopeValue(nativeBoolean0, importerTopLevel0);
      nativeJavaTopPackage0.has("getCla", (Scriptable) nativeBoolean0);
      String[] stringArray0 = new String[0];
      Class<Object> class0 = Object.class;
      nativeJavaTopPackage0.defineFunctionProperties(stringArray0, class0, 4);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test103()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("h`43~r?Gs3(");
      BaseFunction baseFunction0 = new BaseFunction(nativeJavaPackage0, nativeJavaPackage0);
      ScriptableObject.getPropertyIds(baseFunction0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeNumber nativeNumber0 = new NativeNumber(1);
      ScriptableObject.getPropertyIds(importerTopLevel0);
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel();
      nativeNumber0.size();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.isGenericDescriptor(importerTopLevel0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      String string0 = "q?d";
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("q?d", classLoader0);
      nativeJavaPackage0.sealObject();
      Context context0 = new Context();
      NativeNumber nativeNumber0 = new NativeNumber(2);
      // Undeclared exception!
      try { 
        NativeJSON.stringify(context0, importerTopLevel0, nativeNumber0, context0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      String string0 = null;
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeNumber nativeNumber0 = new NativeNumber(2687.89029569631);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) nativeBoolean0;
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod((Scriptable) importerTopLevel0, (String) null, objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: null is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Context.enter();
      ScriptableObject.defineConstProperty(importerTopLevel0, "importPackage");
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      Class<String> class0 = String.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeCall0, 103, class0);
      // Undeclared exception!
      try { 
        nativeCall0.associateValue((Object) null, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Context context0 = new Context();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      nativeJavaTopPackage0.hasInstance(nativeBoolean0);
      nativeJavaTopPackage0.isGetterOrSetter("[object ", 12, true);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test110()  throws Throwable  {
      // Undeclared exception!
      try { 
        NativeString.init((Scriptable) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: String.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.preventExtensions();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeBoolean0, nativeBoolean0, 2, "jsStaticFunction_getFunctionName", 8, nativeBoolean0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Float float0 = new Float(1135.9F);
      importerTopLevel0.get((Object) float0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test112()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("hasI6rta/ce");
      NativeJavaPackage nativeJavaPackage1 = new NativeJavaPackage("hasI6rta/ce");
      nativeJavaPackage1.equivalentValues(nativeJavaPackage0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test113()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "getFunction";
      stringArray0[0] = "getFunction";
      Class<Delegator> class0 = Delegator.class;
      // Undeclared exception!
      try { 
        nativeJavaPackage0.defineFunctionProperties(stringArray0, class0, 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Method \"getFunction\" not found in \"com.google.javascript.rhino.head.Delegator\".
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test114()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = new Context();
      ClassLoader.getSystemClassLoader();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeIterator_StopIteration0, nativeIterator_StopIteration0, 3, "language version", 7, nativeIterator_StopIteration0);
      Class<NativeJavaObject> class0 = NativeJavaObject.class;
      // Undeclared exception!
      try { 
        ScriptableObject.buildClassCtor((Scriptable) idFunctionObject0, class0, false, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't define constructor or class com.google.javascript.rhino.head.NativeJavaObject since more than one constructor has multiple parameters.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test115()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Scriptable scriptable0 = ScriptableObject.ensureScriptable(nativeIterator_StopIteration0);
      nativeIterator_StopIteration0.put(2637, scriptable0, (Object) scriptable0);
      Context context0 = Context.getContext();
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.defineOwnProperties(context0, nativeIterator_StopIteration0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.getCurrentContext();
      Context context1 = Context.enter(context0);
      Context context2 = contextFactory0.enterContext(context1);
      ClassLoader classLoader0 = context2.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      Class<NativeJavaClass> class0 = NativeJavaClass.class;
      NativeJavaClass nativeJavaClass1 = null;
      try {
        nativeJavaClass1 = new NativeJavaClass(nativeJavaClass0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test117()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.hasProperty((Scriptable) importerTopLevel0, 1);
      ScriptableObject scriptableObject0 = context0.initStandardObjects((ScriptableObject) importerTopLevel0, false);
      ScriptableObject.deleteProperty((Scriptable) scriptableObject0, 5);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test118()  throws Throwable  {
      Context context0 = new Context();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) nativeJavaTopPackage0, (Class<?>) class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test119()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      context0.getLocale();
      NativeWith nativeWith0 = new NativeWith(nativeIterator_StopIteration0, nativeIterator_StopIteration0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.delete("unescape");
      NativeGenerator.init(importerTopLevel0, true);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test120()  throws Throwable  {
      Context context0 = new Context();
      context0.getLocale();
      Double double0 = new Double(55.271286671);
      ObjToIntMap objToIntMap0 = new ObjToIntMap();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel(context0, false);
      importerTopLevel0.get((Object) importerTopLevel1);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null, classLoader0);
      Long.valueOf((long) 5);
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      importerTopLevel1.sameValue(double0, nativeIterator_StopIteration0);
      nativeJavaPackage0.isConst("|~Mhzp*|NU^bXjeO2P0");
      Long.remainderUnsigned(110, 2);
      ScriptableObject.getTopScopeValue(importerTopLevel1, classLoader0);
      nativeIterator_StopIteration0.put((String) null, (Scriptable) nativeJavaPackage0, (Object) null);
      Delegator delegator0 = new Delegator(nativeIterator_StopIteration0);
      delegator0.get(0, (Scriptable) nativeJavaObject0);
      ImporterTopLevel importerTopLevel2 = new ImporterTopLevel(context0, true);
      NativeNumber nativeNumber0 = new NativeNumber(4);
      NativeArray nativeArray0 = new NativeArray(130);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.deleteProperty((Scriptable) importerTopLevel0, (String) null);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      String string0 = "";
      ScriptableObject.deleteProperty((Scriptable) importerTopLevel0, 13);
      boolean boolean0 = true;
      ScriptableObject.redefineProperty(importerTopLevel0, "", true);
      Class<TopLevel> class0 = TopLevel.class;
      // Undeclared exception!
      try { 
        importerTopLevel0.defineProperty("", class0, 722);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test123()  throws Throwable  {
      Context context0 = new Context();
      context0.getLocale();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null, classLoader0);
      nativeJavaPackage0.sealObject();
      // Undeclared exception!
      try { 
        ScriptableObject.putConstProperty(nativeJavaPackage0, "msg.varargs.fun", classLoader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: msg.varargs.fun.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.preventExtensions();
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      // Undeclared exception!
      try { 
        importerTopLevel0.setAttributes(120, (Scriptable) nativeBoolean0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test125()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects((ScriptableObject) nativeIterator_StopIteration0, true);
      NativeArray nativeArray0 = new NativeArray(3);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      ScriptableObject.ensureScriptable(nativeIterator_StopIteration0);
      importerTopLevel0.defineConst("@iNb@Uyg#", scriptableObject0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test126()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      NativeWith nativeWith0 = new NativeWith(nativeIterator_StopIteration0, nativeIterator_StopIteration0);
      ScriptableObject.putProperty((Scriptable) nativeWith0, "language version", (Object) context0);
      assertFalse(nativeIterator_StopIteration0.isEmpty());
      
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.delete("language version");
      NativeGenerator nativeGenerator0 = NativeGenerator.init(importerTopLevel0, true);
      assertTrue(nativeGenerator0.isSealed());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.isEmpty();
      StringBuffer stringBuffer0 = new StringBuffer(2);
      assertEquals("", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test128()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      Class<BaseFunction> class0 = BaseFunction.class;
      BaseFunction baseFunction0 = ScriptableObject.buildClassCtor((Scriptable) nativeIterator_StopIteration0, class0, true, false);
      NativeArray nativeArray0 = new NativeArray(context0.emptyArgs);
      Class<Short> class1 = Short.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) baseFunction0, (Class<?>) class1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test129()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context.getContext();
      BaseFunction baseFunction0 = null;
      try {
        baseFunction0 = new BaseFunction((Scriptable) null, (Scriptable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test130()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        importerTopLevel0.getAttributes(";8U$)[opDtT;3", (Scriptable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property ;8U$)[opDtT;3 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.redefineProperty(importerTopLevel0, "", true);
      Context context0 = new Context();
      assertEquals(4, Context.FEATURE_TO_STRING_AS_SOURCE);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      boolean boolean0 = importerTopLevel0.isConst((String) null);
      assertFalse(boolean0);
      
      Object object0 = importerTopLevel0.get((Object) null);
      assertTrue(importerTopLevel0.isEmpty());
      assertNull(object0);
      assertTrue(importerTopLevel0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = new Context();
      ClassLoader.getSystemClassLoader();
      ScriptableObject.putProperty((Scriptable) nativeIterator_StopIteration0, "language version", (Object) nativeIterator_StopIteration0);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeIterator_StopIteration0, nativeIterator_StopIteration0, 3, "language version", 7, nativeIterator_StopIteration0);
      assertFalse(nativeIterator_StopIteration0.isSealed());
      
      idFunctionObject0.putConst("error reporter", nativeIterator_StopIteration0, (Object) null);
      assertTrue(idFunctionObject0.isEmpty());
      assertTrue(idFunctionObject0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      ScriptableObject.getPropertyIds((Scriptable) null);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      NativeNumber nativeNumber0 = new NativeNumber((-1683.688412576));
      int int0 = nativeNumber0.size();
      assertEquals(0, int0);
  }
}
