/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 10:14:05 GMT 2019
 */

package org.apache.commons.math.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.DormandPrince853Integrator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class DormandPrince853Integrator_ESTest extends DormandPrince853Integrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator(0.0, (-937.7685750384143), (-937.7685750384143), (-937.7685750384143));
      double[][] doubleArray1 = new double[17][1];
      dormandPrince853Integrator0.vecAbsoluteTolerance = doubleArray0;
      // Undeclared exception!
      try { 
        dormandPrince853Integrator0.estimateError(doubleArray1, doubleArray0, doubleArray0, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.DormandPrince853Integrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-937.7685750384143), (-937.7685750384143), (-937.7685750384143), (-937.7685750384143));
      double[][] doubleArray1 = new double[17][1];
      // Undeclared exception!
      try { 
        dormandPrince853Integrator0.estimateError(doubleArray1, doubleArray0, doubleArray0, (-937.7685750384143));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.math.ode.DormandPrince853Integrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-937.7685750384143), (-937.7685750384143), (-937.7685750384143), (-937.7685750384143));
      double[][] doubleArray0 = new double[17][1];
      double[] doubleArray1 = new double[0];
      double double0 = dormandPrince853Integrator0.estimateError(doubleArray0, doubleArray1, (double[]) null, (-937.7685750384143));
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(8, dormandPrince853Integrator0.getOrder());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      double[] doubleArray0 = new double[20];
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-937.7685750384143), (-937.7685750384143), doubleArray0, doubleArray0);
      double[][] doubleArray1 = new double[17][1];
      double double0 = dormandPrince853Integrator0.estimateError(doubleArray1, doubleArray1[2], doubleArray1[2], (-937.7685750384143));
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DormandPrince853Integrator dormandPrince853Integrator0 = new DormandPrince853Integrator((-1535.9721454669138), (-1535.9721454669138), (-937.48451623), (-1535.9721454669138));
      String string0 = dormandPrince853Integrator0.getName();
      assertEquals(8, dormandPrince853Integrator0.getOrder());
      assertEquals("Dormand-Prince 8 (5, 3)", string0);
  }
}
