/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 18 06:02:33 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.Callable;
import com.google.javascript.rhino.head.ClassShutter;
import com.google.javascript.rhino.head.CompilerEnvirons;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextAction;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.ContextListener;
import com.google.javascript.rhino.head.DefaultErrorReporter;
import com.google.javascript.rhino.head.Delegator;
import com.google.javascript.rhino.head.ErrorReporter;
import com.google.javascript.rhino.head.Evaluator;
import com.google.javascript.rhino.head.EvaluatorException;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.Interpreter;
import com.google.javascript.rhino.head.InterpreterData;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJavaClass;
import com.google.javascript.rhino.head.NativeJavaTopPackage;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.PolicySecurityController;
import com.google.javascript.rhino.head.RegExpProxy;
import com.google.javascript.rhino.head.Script;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.SecurityController;
import com.google.javascript.rhino.head.TopLevel;
import com.google.javascript.rhino.head.WrapFactory;
import com.google.javascript.rhino.head.debug.DebuggableScript;
import com.google.javascript.rhino.head.debug.Debugger;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.io.Reader;
import java.io.StringReader;
import java.lang.reflect.InvocationTargetException;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockError;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Context_ESTest extends Context_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Context context0 = new Context();
      context0.removeActivationName("error reporter");
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertTrue(context0.isGeneratingSource());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test001()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        context0.removeActivationName("error reporter");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test002()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      boolean boolean0 = context0.isActivationNeeded("language version");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test003()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        context0.addActivationName("P9 NP}k?a");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Context context0 = new Context();
      context0.addActivationName("L-e^\"(|i`g=n9");
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test005()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      boolean boolean0 = context0.isVersionECMA1();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Context context0 = new Context();
      boolean boolean0 = context0.isVersionECMA1();
      assertTrue(boolean0);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test007()  throws Throwable  {
      Context context0 = Context.enter();
      context0.getRegExpProxy();
      assertTrue(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test008()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.reportError("JavaImporter");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JavaImporter
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test009()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Interpreter interpreter0 = new Interpreter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      NativeNumber nativeNumber0 = new NativeNumber(120);
      // Undeclared exception!
      try { 
        context0.compileFunction((Scriptable) nativeNumber0, "com.google.javaHcript.rhino.head.tools.debugger.Main", (Evaluator) interpreter0, (ErrorReporter) defaultErrorReporter0, "com.google.javaHcript.rhino.head.tools.debugger.Main", 13, (Object) interpreter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test010()  throws Throwable  {
      Context.getContext();
      InterpreterData interpreterData0 = new InterpreterData(160, "language version", "language version", false);
      // Undeclared exception!
      try { 
        InterpretedFunction.createScript(interpreterData0, interpreterData0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test011()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        context0.evaluateString(nativeIterator_StopIteration0, "error reporter", "error reporter", 0, "error reporter");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test012()  throws Throwable  {
      Context context0 = new Context();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        context0.setApplicationClassLoader(classLoader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Loader can not resolve Rhino classes
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test013()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        context0.setApplicationClassLoader(classLoader0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Context context0 = new Context();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ClassLoader classLoader0 = contextFactory0.getApplicationClassLoader();
      context0.setApplicationClassLoader(classLoader0);
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Context context0 = new Context();
      context0.setInstructionObserverThreshold(0);
      assertEquals(0, context0.getInstructionObserverThreshold());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setInstructionObserverThreshold((-297));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test017()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      assertEquals(0, context0.getInstructionObserverThreshold());
      
      // Undeclared exception!
      try { 
        context0.setInstructionObserverThreshold(8);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Context context0 = new Context();
      context0.setInstructionObserverThreshold(8);
      assertTrue(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test019()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      InterpreterData interpreterData0 = new InterpreterData(4, "error reporter", "com/google/javascript/rhino/head/JavaAdapter", false);
      // Undeclared exception!
      try { 
        InterpretedFunction.createScript(interpreterData0, contextFactory0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DebuggableScript debuggableScript0 = Context.getDebuggableView((Script) null);
      assertNull(debuggableScript0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test021()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        context0.setDebugger((Debugger) null, (Object) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Context context0 = new Context();
      context0.setDebugger((Debugger) null, (Object) null);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Context context0 = new Context();
      context0.getWrapFactory();
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      WrapFactory wrapFactory0 = new WrapFactory();
      context0.setWrapFactory(wrapFactory0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test025()  throws Throwable  {
      Context context0 = Context.getContext();
      WrapFactory wrapFactory0 = context0.getWrapFactory();
      // Undeclared exception!
      try { 
        context0.setWrapFactory(wrapFactory0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      // Undeclared exception!
      try { 
        context0.setWrapFactory((WrapFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test027()  throws Throwable  {
      ContextListener contextListener0 = mock(ContextListener.class, new ViolatedAssumptionAnswer());
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.removeThreadLocal(contextListener0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ContextListener contextListener0 = mock(ContextListener.class, new ViolatedAssumptionAnswer());
      Context context0 = new Context();
      context0.removeThreadLocal(contextListener0);
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test029()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      WrapFactory wrapFactory0 = new WrapFactory();
      // Undeclared exception!
      try { 
        context0.putThreadLocal((Object) null, wrapFactory0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Context context0 = new Context();
      Float float0 = new Float((float) 140);
      context0.putThreadLocal(float0, float0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context();
      context0.getThreadLocal(contextFactory0);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
      assertFalse(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Context context0 = Context.enter();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Object object0 = context0.getThreadLocal(nativeIterator_StopIteration0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test033()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      Context.ClassShutterSetter context_ClassShutterSetter0 = context0.getClassShutterSetter();
      assertNull(context_ClassShutterSetter0);
      assertEquals(5, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test034()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.setClassShutter((ClassShutter) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setClassShutter((ClassShutter) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Context context0 = new Context();
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      SecurityController.initGlobal(policySecurityController0);
      // Undeclared exception!
      try { 
        context0.setSecurityController(policySecurityController0);
        fail("Expecting exception: SecurityException");
      
      } catch(SecurityException e) {
         //
         // Can not overwrite existing global SecurityController object
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test037()  throws Throwable  {
      Context context0 = new Context();
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      context0.setSecurityController(policySecurityController0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertTrue(context0.isGeneratingSource());
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test038()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.setSecurityController((SecurityController) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setSecurityController((SecurityController) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test040()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.setMaximumInterpreterStackDepth(150);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setMaximumInterpreterStackDepth(40);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot set maximumInterpreterStackDepth when optimizationLevel != -1
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setOptimizationLevel(120);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Optimization level outside [-1..9]: 120
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setOptimizationLevel((-1862));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Optimization level outside [-1..9]: -1862
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Context context0 = new Context();
      context0.setOptimizationLevel((-2));
      assertEquals((-1), context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test045()  throws Throwable  {
      Context context0 = Context.getContext();
      assertEquals(0, context0.getOptimizationLevel());
      
      // Undeclared exception!
      try { 
        context0.setOptimizationLevel(5);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test046()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      assertTrue(context0.isGeneratingSource());
      
      // Undeclared exception!
      try { 
        context0.setGeneratingSource(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test047()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      assertFalse(context0.isGeneratingDebug());
      
      // Undeclared exception!
      try { 
        context0.setGeneratingDebug(true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Context context0 = new Context();
      context0.setGeneratingDebug(true);
      assertTrue(context0.isGeneratingDebug());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Context context0 = new Context();
      context0.setGeneratingDebug(false);
      assertTrue(context0.isGeneratingDebugChanged());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.throwAsScriptRuntimeEx((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.WrappedException", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test051()  throws Throwable  {
      MockError mockError0 = new MockError();
      InvocationTargetException invocationTargetException0 = new InvocationTargetException(mockError0);
      // Undeclared exception!
      try { 
        Context.throwAsScriptRuntimeEx(invocationTargetException0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test052()  throws Throwable  {
      Context context0 = new Context();
      NativeString nativeString0 = new NativeString("error reporter");
      // Undeclared exception!
      try { 
        Context.javaToJS(context0, nativeString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = (NativeIterator.StopIteration)Context.javaToJS(nativeIterator_StopIteration0, nativeIterator_StopIteration0);
      assertTrue(nativeIterator_StopIteration1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Context context0 = Context.enter();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      Context.javaToJS(context0.generateObserverCount, scriptableObject0);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Float float0 = new Float((double) 150);
      Object object0 = Context.javaToJS(float0, (Scriptable) null);
      assertEquals(150.0F, object0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Object object0 = Context.javaToJS("tl", (Scriptable) null);
      assertEquals("tl", object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test057()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      assertNotNull(classLoader0);
      
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      BaseFunction baseFunction0 = new BaseFunction(nativeJavaTopPackage0, nativeJavaTopPackage0);
      String string0 = context0.decompileFunctionBody(baseFunction0, 2);
      assertEquals("[native code, arity=0]\n", string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Context context0 = new Context();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      String string0 = context0.decompileFunctionBody(nativeJavaTopPackage0, 8);
      assertEquals("[native code]\n", string0);
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Context context0 = new Context();
      NativeString nativeString0 = new NativeString("error reporter");
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeString0, nativeString0, 170, 588);
      context0.decompileFunction(idFunctionObject0, (-3178));
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Context context0 = Context.enter();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      String string0 = context0.decompileFunction(nativeContinuation0, 0);
      assertEquals("function Continuation() {\n\t[native code]\n}\n", string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        context0.evaluateString((Scriptable) null, (String) null, (String) null, (-346), (Object) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test062()  throws Throwable  {
      Context context0 = Context.getContext();
      StringReader stringReader0 = new StringReader("error reporter");
      // Undeclared exception!
      try { 
        context0.compileReader((Reader) stringReader0, "error reporter", (-2319), (Object) stringReader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Context context0 = new Context();
      boolean boolean0 = context0.stringIsCompilableUnit("language version");
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getOptimizationLevel());
      assertFalse(boolean0);
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Context context0 = new Context();
      boolean boolean0 = context0.stringIsCompilableUnit("com.google.javascript.rhino.head.Context");
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertTrue(boolean0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test065()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData(160, "language version", "language version", false);
      // Undeclared exception!
      try { 
        InterpretedFunction.createScript(interpreterData0, context0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Context context0 = Context.enter();
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      // Undeclared exception!
      try { 
        context0.callFunctionWithContinuations(nativeJavaClass0, nativeJavaClass0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Function argument was not created by interpreted mode 
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test067()  throws Throwable  {
      Context context0 = Context.enter();
      NativeObject nativeObject0 = new NativeObject();
      Interpreter interpreter0 = new Interpreter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      // Undeclared exception!
      try { 
        context0.compileString("com.google.javaHcript.rhino.head.tools.debugger.Main", (Evaluator) interpreter0, (ErrorReporter) defaultErrorReporter0, "com.google.javaHcript.rhino.head.tools.debugger.Main", 4, (Object) nativeObject0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test068()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      TopLevel topLevel0 = new TopLevel();
      // Undeclared exception!
      try { 
        context0.executeScriptWithContinuations((Script) null, topLevel0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Script argument was not a script or was not created by interpreted mode 
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test069()  throws Throwable  {
      EvaluatorException evaluatorException0 = Context.reportRuntimeError((String) null, (String) null, 120, "error reporter", 5);
      assertEquals(5, evaluatorException0.getColumnNumber());
      assertEquals(120, evaluatorException0.lineNumber());
      assertEquals("error reporter", evaluatorException0.lineSource());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test070()  throws Throwable  {
      Context.reportWarning("language version", "language version", 170, "error reporter", 120);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test071()  throws Throwable  {
      Context context0 = Context.getContext();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("language version", propertyChangeListener0);
      // Undeclared exception!
      try { 
        context0.removePropertyChangeListener(propertyChangeListenerProxy0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Context context0 = new Context();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("language version", propertyChangeListener0);
      context0.removePropertyChangeListener(propertyChangeListenerProxy0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
      assertFalse(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test073()  throws Throwable  {
      Context context0 = Context.getContext();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("language version", propertyChangeListener0);
      // Undeclared exception!
      try { 
        context0.addPropertyChangeListener(propertyChangeListenerProxy0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.addPropertyChangeListener((PropertyChangeListener) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test075()  throws Throwable  {
      Context context0 = Context.getContext();
      Locale locale0 = Locale.TAIWAN;
      // Undeclared exception!
      try { 
        context0.setLocale(locale0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Context context0 = new Context();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      context0.setLocale(locale0);
      assertEquals(0, context0.getLanguageVersion());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertFalse(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Context context0 = new Context();
      Locale locale0 = context0.getLocale();
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
      assertNotNull(locale0);
      assertEquals(0, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = context0.setErrorReporter(defaultErrorReporter0);
      assertNotNull(errorReporter0);
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setErrorReporter((ErrorReporter) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Context context0 = new Context();
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ErrorReporter errorReporter1 = context0.setErrorReporter(errorReporter0);
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
      assertNotNull(errorReporter1);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Context context0 = new Context();
      context0.getImplementationVersion();
      String string0 = context0.getImplementationVersion();
      assertTrue(context0.isGeneratingSource());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
      assertNotNull(string0);
      assertEquals("Rhino 1.7 release 4 PRERELEASE 2019 07 12", string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.checkLanguageVersion(114);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad language version: 114
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Context.checkLanguageVersion(160);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      boolean boolean0 = Context.isValidLanguageVersion(150);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Context.checkLanguageVersion(140);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Context.checkLanguageVersion(130);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Context.checkLanguageVersion(120);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Context.checkLanguageVersion(110);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Context.checkLanguageVersion(100);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      assertEquals(0, context0.getLanguageVersion());
      
      context0.setLanguageVersion(180);
      assertEquals(180, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test091()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.setLanguageVersion((-5080));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test092()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        context0.unseal(context0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test093()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.unseal((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Context context0 = new Context();
      RegExpProxy regExpProxy0 = context0.getRegExpProxy();
      // Undeclared exception!
      try { 
        context0.unseal(regExpProxy0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test095()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Long long0 = new Long(5);
      // Undeclared exception!
      try { 
        context0.seal(long0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Context context0 = new Context();
      context0.seal(context0);
      assertTrue(context0.isSealed());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ContextListener contextListener0 = mock(ContextListener.class, new ViolatedAssumptionAnswer());
      Context.addContextListener(contextListener0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeArray nativeArray0 = new NativeArray(150);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeArray0, (Object) null, 110, "4=l73K\"C~hu@TbO1v7", 8, nativeArray0);
      TopLevel topLevel0 = new TopLevel();
      // Undeclared exception!
      try { 
        Context.call((ContextFactory) null, (Callable) idFunctionObject0, (Scriptable) topLevel0, (Scriptable) idFunctionObject0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=110 MASTER=com.google.javascript.rhino.head.NativeArray@2
         //
         verifyException("com.google.javascript.rhino.head.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Context context0 = null;
      try {
        context0 = new Context((ContextFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // factory == null
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Object object0 = Context.getUndefinedValue();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test101()  throws Throwable  {
      Context.getCurrentContext();
      Interpreter interpreter0 = new Interpreter();
      // Undeclared exception!
      try { 
        InterpretedFunction.createScript((InterpreterData) null, interpreter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        Context.reportRuntimeError3("error reporter", context0, context0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property error reporter
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Context context0 = new Context();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      assertNotNull(classLoader0);
      
      context0.createClassLoader(classLoader0);
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Context.setCachingEnabled(true);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test105()  throws Throwable  {
      Context context0 = Context.enter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      // Undeclared exception!
      try { 
        context0.setErrorReporter(defaultErrorReporter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Context context0 = new Context();
      context0.getDebuggerContextData();
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertTrue(context0.isGeneratingSource());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test107()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      Context.reportWarning("language version", (Throwable) mockThrowable0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Context context0 = new Context();
      context0.getDebugger();
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Context context0 = new Context();
      NativeArray nativeArray0 = new NativeArray(12);
      // Undeclared exception!
      try { 
        Context.reportRuntimeError4("error reporter", context0, context0, nativeArray0, nativeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property error reporter
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ContextAction contextAction0 = mock(ContextAction.class, new ViolatedAssumptionAnswer());
      doReturn("language version").when(contextAction0).run(any(com.google.javascript.rhino.head.Context.class));
      Object object0 = Context.call(contextAction0);
      assertEquals("language version", object0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Context context0 = new Context();
      context0.isSealed();
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Context context0 = new Context();
      context0.getClassShutter();
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      context0.observeInstructionCount(5);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertTrue(context0.isGeneratingSource());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test114()  throws Throwable  {
      Context context0 = Context.getContext();
      Delegator delegator0 = new Delegator();
      Class<NativeObject> class0 = NativeObject.class;
      // Undeclared exception!
      try { 
        Context.toObject((Object) context0, (Scriptable) delegator0, (Class<?>) class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test115()  throws Throwable  {
      Context context0 = Context.getContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      Character character0 = new Character('c');
      Object object0 = Context.javaToJS(character0, scriptableObject0);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals("c", object0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.captureContinuation();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Interpreter frames not found
         //
         verifyException("com.google.javascript.rhino.head.Interpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ContextListener contextListener0 = mock(ContextListener.class, new ViolatedAssumptionAnswer());
      Context.removeContextListener(contextListener0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test118()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.newArray((Scriptable) null, 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test119()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      // Undeclared exception!
      try { 
        context0.resumeContinuation(importerTopLevel0, importerTopLevel0, context0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.head.ImporterTopLevel cannot be cast to com.google.javascript.rhino.head.NativeContinuation
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        context0.compileFunction((Scriptable) null, "4e1}0fn<C5q{}v", "4e1}0fn<C5q{}v", 6, (Object) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test121()  throws Throwable  {
      Context context0 = Context.getContext();
      context0.initStandardObjects((ScriptableObject) null);
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test122()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.enter();
      StringReader stringReader0 = new StringReader("language version");
      // Undeclared exception!
      try { 
        context0.evaluateReader(nativeIterator_StopIteration0, stringReader0, "error reporter", 0, nativeIterator_StopIteration0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Context context0 = Context.enter();
      boolean boolean0 = Context.toBoolean(context0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = (NativeIterator.StopIteration)Context.toObject((Object) nativeIterator_StopIteration0, (Scriptable) nativeIterator_StopIteration0);
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test125()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        context0.newObject((Scriptable) nativeIterator_StopIteration0, "error reporter");
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Constructor for \"error reporter\" not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.reportRuntimeError0("language version");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property language version
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Context context0 = new Context();
      Context.toString((Object) context0);
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertFalse(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      double double0 = Context.toNumber((Object) null);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Context context0 = new Context();
      Class<NativeCall> class0 = NativeCall.class;
      try { 
        Context.toType(context0, class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot convert com.google.javascript.rhino.head.Context@1 to com.google.javascript.rhino.head.NativeCall
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test130()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        context0.evaluateString((Scriptable) null, "math", "math", 120, "math");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Context context0 = new Context();
      ContextFactory contextFactory0 = new ContextFactory();
      NativeString nativeString0 = new NativeString("language version");
      // Undeclared exception!
      try { 
        Context.call(contextFactory0, (Callable) null, (Scriptable) nativeString0, (Scriptable) nativeString0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Context context0 = new Context();
      Context.ClassShutterSetter context_ClassShutterSetter0 = context0.getClassShutterSetter();
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertNotNull(context_ClassShutterSetter0);
      assertEquals(0, context0.getOptimizationLevel());
  }
}
