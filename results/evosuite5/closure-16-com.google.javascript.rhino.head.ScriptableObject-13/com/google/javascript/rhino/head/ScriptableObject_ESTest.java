/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 23:52:30 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Arguments;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.BoundFunction;
import com.google.javascript.rhino.head.Callable;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.Delegator;
import com.google.javascript.rhino.head.EcmaError;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.Interpreter;
import com.google.javascript.rhino.head.InterpreterData;
import com.google.javascript.rhino.head.JavaAdapter;
import com.google.javascript.rhino.head.JavaMembers;
import com.google.javascript.rhino.head.LazilyLoadedCtor;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeBoolean;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeError;
import com.google.javascript.rhino.head.NativeFunction;
import com.google.javascript.rhino.head.NativeGlobal;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJavaArray;
import com.google.javascript.rhino.head.NativeJavaMethod;
import com.google.javascript.rhino.head.NativeJavaPackage;
import com.google.javascript.rhino.head.NativeJavaTopPackage;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.NativeWith;
import com.google.javascript.rhino.head.ScriptRuntime;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.TopLevel;
import com.google.javascript.rhino.head.UniqueTag;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.lang.annotation.Annotation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ScriptableObject_ESTest extends ScriptableObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Object[] objectArray0 = new Object[11];
      objectArray0[6] = (Object) nativeObject0;
      NativeArray nativeArray0 = new NativeArray(8);
      nativeArray0.sealObject();
      nativeArray0.get((long) 2);
      String string0 = "do ";
      ScriptableObject.deleteProperty((Scriptable) nativeObject0, "do ");
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod((Scriptable) nativeObject0, "YHHVKx", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000004 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Delegator delegator0 = new Delegator();
      // Undeclared exception!
      try { 
        nativeBoolean0.setGetterOrSetter("jsFunction_getClassName", 75, delegator0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // jsFunction_getClassName
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      Context context1 = Context.enter(context0, contextFactory0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context1);
      // Undeclared exception!
      try { 
        importerTopLevel0.getGetterOrSetter("\"e!%=)q?", 120, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // \"e!%=)q?
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test03()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1305L);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "76(zVqs.;U";
      Class<TopLevel> class0 = TopLevel.class;
      // Undeclared exception!
      try { 
        nativeArray0.defineFunctionProperties(stringArray0, class0, 800);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Method \"76(zVqs.;U\" not found in \"com.google.javascript.rhino.head.TopLevel\".
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      nativeBoolean0.getIds();
      nativeBoolean0.isConst("bu|h05>W(=,T$U)");
      ScriptableObject.hasProperty((Scriptable) nativeBoolean0, "MOD");
      NativeBoolean nativeBoolean1 = new NativeBoolean(false);
      NativeObject nativeObject0 = new NativeObject();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Integer integer0 = new Integer(0);
      nativeObject0.remove((Object) integer0);
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enter();
      Interpreter interpreter0 = new Interpreter();
      InterpreterData interpreterData0 = interpreter0.itsData;
      InterpreterData interpreterData1 = null;
      try {
        interpreterData1 = new InterpreterData((InterpreterData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpreterData", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      nativeBoolean0.getIds();
      ScriptableObject.defineConstProperty(nativeBoolean0, "bu|h05>W(=,T$U)");
      nativeBoolean0.isConst("bu|h05>W(=,T$U)");
      ScriptableObject.hasProperty((Scriptable) nativeBoolean0, "bu|h05>W(=,T$U)");
      NativeBoolean nativeBoolean1 = new NativeBoolean(true);
      NativeObject nativeObject0 = new NativeObject();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1305L);
      ScriptableObject.getFunctionPrototype(nativeArray0);
      // Undeclared exception!
      try { 
        nativeArray0.setAttributes("msg.bad.object.init", (Scriptable) nativeArray0, (-410));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -410
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test08()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Object[] objectArray0 = new Object[0];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      ScriptableObject.isTrue(classLoader0);
      ScriptableObject.putProperty((Scriptable) nativeArray0, 4, (Object) classLoader0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.defineConst("z=Vkdhq#f", nativeArray0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      ScriptableObject.putConstProperty(nativeArray0, "getClassNam", nativeBoolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1305L);
      Class<Arguments> class0 = Arguments.class;
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      // Undeclared exception!
      try { 
        nativeBoolean0.setAttributes(2, (Scriptable) nativeArray0, (-31));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -31
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Object[] objectArray0 = new Object[11];
      objectArray0[3] = (Object) nativeObject0;
      NativeArray nativeArray0 = new NativeArray(8);
      nativeArray0.sealObject();
      nativeArray0.get((long) 2);
      ScriptableObject.deleteProperty((Scriptable) nativeObject0, ",u-*@-");
      nativeArray0.isEmpty();
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.defineClass((Scriptable) nativeObject0, class0);
      NativeObject nativeObject1 = new NativeObject();
      nativeArray0.getClassName();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeArray nativeArray0 = new NativeArray(0);
      Class<Annotation> class0 = Annotation.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeArray0, "msg.change.enumerable.with.configurable.false", class0);
      Class<Object> class1 = Object.class;
      // Undeclared exception!
      try { 
        nativeArray0.defineFunctionProperties((String[]) null, class1, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test12()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Class<Arguments> class0 = Arguments.class;
      // Undeclared exception!
      try { 
        nativeBoolean0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.Arguments
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test13()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Object[] objectArray0 = new Object[0];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      ScriptableObject.isTrue(classLoader0);
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeArray0, (String) null, (String) null, true);
      ScriptableObject.putProperty((Scriptable) nativeArray0, 1977, (Object) lazilyLoadedCtor0);
      Context context0 = Context.enter();
      context0.initStandardObjects((ScriptableObject) nativeArray0, false);
      NativeNumber nativeNumber0 = new NativeNumber(120);
      nativeNumber0.getIds(true);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      ContextFactory contextFactory0 = new ContextFactory();
      // Undeclared exception!
      try { 
        nativeArray0.toArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test14()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      NativeString nativeString0 = new NativeString("language version");
      Context context1 = new Context(contextFactory0);
      InterpreterData interpreterData0 = new InterpreterData(164, "language version", "error reporter", false);
      JavaAdapter.getFunction(nativeString0, "jsGet_call");
      ScriptRuntime.NoSuchMethodShim scriptRuntime_NoSuchMethodShim0 = new ScriptRuntime.NoSuchMethodShim((Callable) null, "nKGr<9S!|2U39");
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel(context1, false);
      NativeNumber nativeNumber0 = new NativeNumber(0.0);
      // Undeclared exception!
      try { 
        nativeNumber0.putConst("jsGet_call", (Scriptable) null, "jsGet_call");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Context context0 = new Context();
      context0.setGenerateObserverCount(false);
      NativeNumber nativeNumber0 = new NativeNumber(110);
      context0.initStandardObjects((ScriptableObject) nativeNumber0, false);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      nativeNumber0.getIds(false);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("language version", propertyChangeListener0);
      context0.removePropertyChangeListener(propertyChangeListenerProxy0);
      Class<NativeBoolean> class0 = NativeBoolean.class;
      // Undeclared exception!
      try { 
        nativeNumber0.defineProperty("", class0, 130);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test16()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) classLoader0;
      objectArray0[1] = (Object) classLoader0;
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      ScriptableObject.isTrue(nativeArray0);
      Context context0 = Context.getCurrentContext();
      Context context1 = Context.enter(context0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context1);
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Function;
      Scriptable scriptable0 = importerTopLevel0.getBuiltinPrototype(topLevel_Builtins0);
      Integer integer0 = new Integer(21);
      ScriptableObject.putProperty(scriptable0, (-66), (Object) integer0);
      Context.enter();
      context1.initStandardObjects((ScriptableObject) importerTopLevel0, false);
      NativeNumber nativeNumber0 = new NativeNumber(120);
      nativeNumber0.getIds(false);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      ContextFactory contextFactory0 = new ContextFactory();
      nativeArray0.toArray();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ContextFactory.getGlobal();
      Context context0 = Context.enter();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context1 = Context.enter(context0, contextFactory0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context1);
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context0, (Scriptable) importerTopLevel0, "^3XADgywiH '-_Re", (Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000358 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Context context0 = new Context();
      NativeNumber nativeNumber0 = new NativeNumber(170);
      ScriptableObject.redefineProperty(nativeNumber0, "R7E", true);
      ScriptableObject.getClassPrototype(nativeNumber0, ",&1i[:Yq-=>,H1M");
      context0.initStandardObjects((ScriptableObject) nativeNumber0, true);
      nativeNumber0.getIds(true);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1305L);
      NativeString nativeString0 = new NativeString((CharSequence) null);
      NativeError nativeError0 = new NativeError();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      Context context1 = contextFactory0.enterContext(context0);
      nativeError0.defineOwnProperty(context1, (Object) null, (ScriptableObject) nativeArray0, false);
      NativeError nativeError1 = new NativeError();
      // Undeclared exception!
      try { 
        nativeError1.initPrototypeId(100);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 100
         //
         verifyException("com.google.javascript.rhino.head.NativeError", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      NativeObject nativeObject0 = new NativeObject();
      NativeArray nativeArray0 = new NativeArray(0L);
      nativeArray0.getAllIds();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test21()  throws Throwable  {
      Class<IdFunctionObject> class0 = IdFunctionObject.class;
      // Undeclared exception!
      try { 
        ScriptableObject.buildClassCtor((Scriptable) null, class0, true, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.IdFunctionObject\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test22()  throws Throwable  {
      Class<NativeIterator.StopIteration> class0 = NativeIterator.StopIteration.class;
      // Undeclared exception!
      try { 
        ScriptableObject.defineClass((Scriptable) null, class0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.NativeIterator$StopIteration\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test23()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Object[] objectArray0 = new Object[0];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      ScriptableObject.isTrue(classLoader0);
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeArray0, (String) null, (String) null, true);
      ScriptableObject.putProperty((Scriptable) nativeArray0, 1977, (Object) lazilyLoadedCtor0);
      Context.enter();
      Class<Annotation> class0 = Annotation.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeArray0, 1, class0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test24()  throws Throwable  {
      Context context0 = new Context();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      importerTopLevel0.sealObject();
      ScriptableObject.buildDataDescriptor(importerTopLevel0, context0, 2);
      ContextFactory.getGlobal();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("language version", (PropertyChangeListener) null);
      context0.removePropertyChangeListener(propertyChangeListenerProxy0);
      NativeNumber nativeNumber0 = new NativeNumber(815.6);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setPackageAssertionStatus("g<M", false);
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      Context context1 = Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(9, "msg.zero.arg.ctor", "jsFunction_getTypeOf", true);
      // Undeclared exception!
      try { 
        InterpretedFunction.createScript(interpreterData0, context1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1305L);
      nativeArray0.iterator();
      ScriptableObject.hasProperty((Scriptable) nativeArray0, 1);
      // Undeclared exception!
      try { 
        nativeArray0.get(1305L);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      NativeString nativeString0 = new NativeString("language version");
      // Undeclared exception!
      try { 
        nativeError0.defineOwnProperty(context0, (Object) nativeString0, (ScriptableObject) nativeString0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ContextFactory.getGlobal();
      Context context0 = Context.enter();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context.enter(context0, contextFactory0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.getGetterOrSetter((String) null, 2263, false);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test28()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      String string0 = "!W&Sln\\)iaXTo";
      Context context0 = Context.getCurrentContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      NativeJavaArray nativeJavaArray0 = null;
      try {
        nativeJavaArray0 = new NativeJavaArray(scriptableObject0, contextFactory0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Array expected
         //
         verifyException("com.google.javascript.rhino.head.NativeJavaArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(3045L);
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.defineClass((Scriptable) nativeArray0, class0);
      NativeObject nativeObject0 = new NativeObject();
      nativeArray0.getClassName();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test30()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(true, "Lu7Szkn1w^H%kuN_\tz", classLoader0);
      nativeBoolean0.isDataDescriptor(nativeJavaPackage0);
      Class<Arguments> class0 = Arguments.class;
      // Undeclared exception!
      try { 
        nativeBoolean0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.Arguments
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ContextFactory.getGlobal();
      Context context0 = Context.enter();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context1 = Context.enter(context0, contextFactory0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context1);
      ScriptableObject.isTrue(context0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects((ScriptableObject) nativeIterator_StopIteration0, true);
      nativeIterator_StopIteration0.isGenericDescriptor(scriptableObject0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test33()  throws Throwable  {
      Context context0 = new Context();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(importerTopLevel0, importerTopLevel0, 4083);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context1 = contextFactory0.enter();
      ContextFactory.initGlobal(contextFactory0);
      Double double0 = new Double((-1));
      importerTopLevel0.defineOwnProperty(context1, double0, scriptableObject0);
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      contextFactory0.removeListener(contextFactory_Listener0);
      ClassLoader.getSystemClassLoader();
      NativeObject nativeObject0 = new NativeObject();
      contextFactory0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(true, "com.google.javascript.rhino.head.ClassCach)", (ClassLoader) null);
      Context context2 = Context.enter(context0);
      nativeJavaPackage0.defineOwnProperties(context2, importerTopLevel0);
      int int0 = 739;
      Class<NativeString> class0 = NativeString.class;
      // Undeclared exception!
      try { 
        ScriptableObject.buildClassCtor((Scriptable) importerTopLevel0, class0, true, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.NativeString\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test34()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Object[] objectArray0 = new Object[11];
      objectArray0[3] = (Object) nativeObject0;
      NativeArray nativeArray0 = new NativeArray(8);
      Context context0 = Context.getCurrentContext();
      nativeObject0.defineOwnProperties(context0, nativeArray0);
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1305L);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context0, (Scriptable) nativeIterator_StopIteration0, "error reporter", (Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000004 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      String string0 = "!W&Sln\\)iaXTo";
      NativeJavaArray nativeJavaArray0 = null;
      try {
        nativeJavaArray0 = new NativeJavaArray(nativeJavaTopPackage0, nativeJavaTopPackage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Context context0 = new Context();
      NativeNumber nativeNumber0 = new NativeNumber(170);
      ScriptableObject.redefineProperty(nativeNumber0, "R7E", true);
      ScriptableObject.getClassPrototype(nativeNumber0, ",&1i[:Yq-=>,H1M");
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test38()  throws Throwable  {
      Context context0 = new Context();
      NativeNumber nativeNumber0 = new NativeNumber(170);
      ScriptableObject.getPropertyIds(nativeNumber0);
      Context.reportWarning("error reporter", "finishInit", 5, (String) null, (-1939501217));
      Class<NativeNumber> class0 = NativeNumber.class;
      nativeNumber0.defineProperty("finishInit", class0, 2);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test39()  throws Throwable  {
      Context context0 = new Context();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(importerTopLevel0, context0, 2);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      contextFactory0.enter();
      ContextFactory.initGlobal(contextFactory1);
      importerTopLevel0.defineOwnProperty(context0, contextFactory1, scriptableObject0);
      NativeObject nativeObject0 = new NativeObject();
      // Undeclared exception!
      try { 
        nativeObject0.fillConstructorProperties((IdFunctionObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Byte byte0 = new Byte((byte)6);
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptableObject(byte0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type number
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test41()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-1L));
      ScriptableObject.ensureScriptable(nativeArray0);
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes((-60591803));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property -60591803 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test42()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      ScriptableObject.buildDataDescriptor(importerTopLevel0, nativeBoolean0, 8);
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel(context0);
      String string0 = "jsStaticFunction_createObject";
      // Undeclared exception!
      try { 
        importerTopLevel1.activatePrototypeMap(1109);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test43()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1305L);
      String string0 = "76(zVqs.;U";
      int int0 = 800;
      String[] stringArray0 = new String[1];
      String string1 = "getFun";
      Context context0 = new Context();
      Scriptable scriptable0 = context0.topCallScope;
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes("getFun", (Scriptable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property getFun not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      ScriptableObject.hasProperty((Scriptable) nativeBoolean0, "MOD");
      NativeObject nativeObject0 = (NativeObject)ScriptableObject.buildDataDescriptor(importerTopLevel0, nativeBoolean0, 8);
      nativeObject0.replace((Object) null, (Object) "MOD");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod((Context) null, (Scriptable) nativeBoolean0, "MOD", (Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000011 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test45()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      Context context0 = Context.getContext();
      Delegator delegator0 = new Delegator(nativeArray0);
      BoundFunction boundFunction0 = new BoundFunction(context0, nativeArray0, delegator0, delegator0, (Object[]) null);
      // Undeclared exception!
      try { 
        context0.initStandardObjects((ScriptableObject) boundFunction0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      NativeObject nativeObject0 = new NativeObject();
      nativeError0.defineOwnProperty((Context) null, (Object) null, (ScriptableObject) nativeObject0, false);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      NativeString nativeString0 = new NativeString("language version");
      ScriptableObject.deleteProperty((Scriptable) nativeError0, 1);
      // Undeclared exception!
      try { 
        nativeError0.defineOwnProperty(context0, (Object) nativeString0, (ScriptableObject) nativeString0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1305L);
      ScriptableObject.defineConstProperty(nativeArray0, "(I)Z");
      ContextFactory.getGlobal();
      NativeNumber nativeNumber0 = new NativeNumber(4);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeObject nativeObject0 = new NativeObject();
      importerTopLevel0.defineConst("jsGet_construct", nativeObject0);
      ContextFactory contextFactory0 = new ContextFactory();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test49()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1305L);
      ScriptableObject.hasProperty((Scriptable) nativeArray0, (-448));
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      Class<NativeContinuation> class0 = NativeContinuation.class;
      // Undeclared exception!
      try { 
        nativeBoolean0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeContinuation
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Integer integer0 = new Integer(0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = Context.enter((Context) null, contextFactory0);
      Scriptable scriptable0 = context0.topCallScope;
      Integer.getInteger("msg.default.value", (Integer) 2);
      IdFunctionObject idFunctionObject0 = null;
      try {
        idFunctionObject0 = new IdFunctionObject(nativeIterator_StopIteration0, integer0, 13, "", 4, (Scriptable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Context context0 = new Context();
      NativeNumber nativeNumber0 = new NativeNumber(1612.5823387070102);
      ScriptableObject.getClassPrototype(nativeNumber0, "error reporter");
      context0.initStandardObjects((ScriptableObject) nativeNumber0, false);
      nativeNumber0.getIds(false);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      ContextFactory contextFactory0 = new ContextFactory();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      nativeBoolean0.isConst("bu|h05>W(=,T$U)");
      ScriptableObject.buildDataDescriptor(nativeBoolean0, importerTopLevel0, 3253);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.replace((Object) "9Dt1&MF", (Object) importerTopLevel0);
      NativeBoolean nativeBoolean1 = new NativeBoolean(true);
      nativeBoolean0.put("9Dt1&MF", (Scriptable) nativeBoolean1, (Object) null);
      NativeObject nativeObject0 = new NativeObject();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(3045L);
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.defineClass((Scriptable) nativeArray0, class0);
      NativeObject nativeObject0 = new NativeObject();
      String[] stringArray0 = new String[0];
      nativeArray0.defineFunctionProperties(stringArray0, class0, 2);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      NativeCall nativeCall1 = nativeCall0.parentActivationCall;
      ScriptableObject.getProperty((Scriptable) nativeCall0, 224);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(3045L);
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) nativeArray0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ContextFactory.getGlobal();
      Context context0 = Context.enter();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context1 = Context.enter(context0, contextFactory0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context1);
      importerTopLevel0.getGetterOrSetter("&@pDAxr2", 0, false);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      Arguments arguments0 = null;
      try {
        arguments0 = new Arguments(nativeCall0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ContextFactory.getGlobal();
      Context context0 = Context.enter();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context1 = Context.enter(context0, contextFactory0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context1);
      ScriptableObject.getClassPrototype(importerTopLevel0, "error reporter");
      importerTopLevel0.defineConst("jsStaticFunction_createObject", (Scriptable) null);
      // Undeclared exception!
      try { 
        importerTopLevel0.getGetterOrSetter("jsStaticFunction_createObject", 1, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // jsStaticFunction_createObject
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      ScriptableObject.hasProperty((Scriptable) nativeBoolean0, "MOD");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      contextFactory0.makeContext();
      contextFactory0.checkNotSealed();
      NativeNumber nativeNumber0 = new NativeNumber(1901.0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      nativeNumber0.getOwnPropertyDescriptor(context0, classLoader0);
      NativeArray nativeArray0 = new NativeArray(4);
      // Undeclared exception!
      try { 
        nativeArray0.get((long) 6);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test60()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Object[] objectArray0 = new Object[11];
      objectArray0[3] = (Object) nativeObject0;
      NativeArray nativeArray0 = new NativeArray(8);
      nativeArray0.sealObject();
      nativeArray0.get((long) 2);
      String string0 = ",u-*@-";
      ScriptableObject.deleteProperty((Scriptable) nativeObject0, ",u-*@-");
      nativeArray0.get(627, (Scriptable) nativeObject0);
      // Undeclared exception!
      try { 
        nativeObject0.put((-494), (Scriptable) nativeArray0, (Object) nativeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: -494.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1305L);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ContextFactory.initGlobal(contextFactory0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.defineOwnProperty(context0, context0, nativeArray0);
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      NativeObject nativeObject0 = new NativeObject();
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      NativeFunction nativeFunction0 = null;
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptable((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type object
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test63()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      NativeArray nativeArray0 = new NativeArray(0);
      Class<TopLevel> class0 = TopLevel.class;
      String[] stringArray0 = new String[2];
      nativeArray0.get((Object) "76(zVqs.;U");
      stringArray0[0] = "76(zVqs.;U";
      stringArray0[1] = "76(zVqs.;U";
      // Undeclared exception!
      try { 
        nativeArray0.defineFunctionProperties(stringArray0, class0, 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Method \"76(zVqs.;U\" not found in \"com.google.javascript.rhino.head.TopLevel\".
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      nativeBoolean0.defaultPut("jsStaticFunction_execIdCall", "jsStaticFunction_execIdCall");
      String string0 = "bu|h05>W(=,T$U\\)";
      ScriptableObject.getPropertyIds(nativeBoolean0);
      // Undeclared exception!
      try { 
        nativeBoolean0.getGetterOrSetter(" ", 1576, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         //  
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test65()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      ScriptableObject.isFalse(classLoader0);
      // Undeclared exception!
      try { 
        ScriptableObject.getArrayPrototype(nativeJavaTopPackage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test66()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      // Undeclared exception!
      try { 
        importerTopLevel0.getAttributes("language version");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property language version not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptRuntime.NoSuchMethodShim scriptRuntime_NoSuchMethodShim0 = new ScriptRuntime.NoSuchMethodShim((Callable) null, "object");
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(importerTopLevel0, scriptRuntime_NoSuchMethodShim0, 4);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ContextFactory.initGlobal(contextFactory0);
      importerTopLevel0.defineOwnProperty(context0, context0, scriptableObject0);
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      contextFactory0.removeListener(contextFactory_Listener0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      context0.scratchScriptable = (Scriptable) scriptableObject0;
      NativeObject nativeObject0 = new NativeObject();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(false, "error reporter", classLoader0);
      NativeJavaPackage nativeJavaPackage1 = new NativeJavaPackage("object");
      // Undeclared exception!
      try { 
        nativeJavaPackage1.put(3812, (Scriptable) importerTopLevel0, (Object) contextFactory0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Java package names may not be numbers.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      Object[] objectArray0 = nativeBoolean0.getIds();
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.isEmpty();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test69()  throws Throwable  {
      Context context0 = new Context();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(importerTopLevel0, context0, 2);
      ContextFactory.getGlobal();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("language version", (PropertyChangeListener) null);
      context0.removePropertyChangeListener(propertyChangeListenerProxy0);
      Context.reportWarning("d_A%PGYHj_^JEAuz%", "language version", (-1588406278), "language version", 1073741824);
      Class<NativeJavaMethod> class0 = NativeJavaMethod.class;
      scriptableObject0.defineProperty("configurable", class0, 0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.defineConst("jsGet_construct", nativeObject0);
      ScriptableObject.putConstProperty(importerTopLevel0, "getClassNam", importerTopLevel0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test71()  throws Throwable  {
      Context context0 = new Context();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(importerTopLevel0, context0, 1736);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
      ContextFactory.initGlobal(contextFactory0);
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      contextFactory1.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      importerTopLevel0.defineOwnProperty(context0, nativeJavaTopPackage0, scriptableObject0);
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      contextFactory0.removeListener(contextFactory_Listener0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeObject nativeObject0 = new NativeObject();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(true, "language version", classLoader0);
      // Undeclared exception!
      try { 
        nativeJavaPackage0.put(2, (Scriptable) scriptableObject0, (Object) nativeObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Java package names may not be numbers.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test72()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      NativeObject nativeObject0 = new NativeObject();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) nativeError0;
      objectArray0[1] = (Object) nativeObject0;
      objectArray0[2] = (Object) nativeObject0;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) nativeObject0;
      objectArray0[5] = (Object) null;
      objectArray0[6] = (Object) nativeObject0;
      objectArray0[7] = (Object) nativeError0;
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.delete("msg.change.enumerable.with.configurable.false");
      nativeArray0.iterator();
      ScriptableObject.hasProperty((Scriptable) nativeArray0, 1);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeObject nativeObject1 = new NativeObject();
      Context context0 = new Context();
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel(context0);
      importerTopLevel1.defineConst("jsGet_getFunctionName", nativeArray0);
      // Undeclared exception!
      try { 
        nativeArray0.add((Object) nativeObject0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test73()  throws Throwable  {
      Context context0 = new Context();
      NativeNumber nativeNumber0 = new NativeNumber(170);
      ScriptableObject.redefineProperty(nativeNumber0, "R7E", false);
      ScriptableObject.getClassPrototype(nativeNumber0, ",&1i[:Yq-=>,H1M");
      context0.initStandardObjects((ScriptableObject) nativeNumber0, true);
      nativeNumber0.getIds(false);
      EcmaError ecmaError0 = new EcmaError(nativeNumber0, "language version", 12, 11, "error reporter");
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      Object[] objectArray0 = Context.emptyArgs;
      ScriptableObject.defineConstProperty(nativeBoolean0, "bu|h05>W(=,T$U)");
      nativeBoolean0.isConst("bu|h05>W(=,T$U)");
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.defineConst("bu|h05>W(=,T$U)", nativeBoolean0);
      ContextFactory contextFactory0 = new ContextFactory();
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1305L);
      Class<Annotation> class0 = Annotation.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeArray0, 212, class0);
      NativeCall nativeCall0 = new NativeCall();
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Class<Byte> class1 = Byte.class;
      // Undeclared exception!
      try { 
        nativeBoolean0.getDefaultValue(class1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1305L);
      Class<Annotation> class0 = Annotation.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeArray0, "msg.change.enumerable.with.configurable.false", class0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      NativeError nativeError0 = new NativeError();
      EcmaError ecmaError0 = NativeGlobal.constructError(context0, "language version", "I~Gd8GUQ0", (Scriptable) nativeError0);
      nativeError0.setStackProvider(ecmaError0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1305L);
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.defineClass((Scriptable) nativeArray0, class0);
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      NativeObject nativeObject0 = new NativeObject();
      nativeArray0.getClassName();
      nativeArray0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      Context context1 = Context.enter(context0, contextFactory0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context1);
      String string0 = "\"e!%=)q?";
      // Undeclared exception!
      try { 
        importerTopLevel0.initStandardObjects(context1, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1305L);
      nativeArray0.delete("jsGet_construct");
      NativeObject nativeObject0 = new NativeObject();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.defineConst("jsGet_construct", nativeObject0);
      ContextFactory.getGlobal();
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Object[] objectArray0 = new Object[11];
      objectArray0[3] = (Object) nativeObject0;
      ScriptableObject.deleteProperty((Scriptable) nativeObject0, ",u-*@-");
      ScriptableObject.getFunctionPrototype(nativeObject0);
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.seal();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test81()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      NativeArray nativeArray0 = new NativeArray(0);
      Class<TopLevel> class0 = TopLevel.class;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "76(zVqs.;U";
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      nativeObject0.put((-199), (Scriptable) nativeArray0, (Object) nativeWith0);
      stringArray0[1] = "76(zVqs.;U";
      // Undeclared exception!
      try { 
        nativeArray0.defineFunctionProperties(stringArray0, class0, 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Method \"76(zVqs.;U\" not found in \"com.google.javascript.rhino.head.TopLevel\".
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      ScriptableObject.hasProperty((Scriptable) nativeBoolean0, "MOD");
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(importerTopLevel0, nativeBoolean0, 8);
      NativeBoolean nativeBoolean1 = new NativeBoolean(false);
      ScriptableObject.ensureScriptableObject(nativeBoolean1);
      nativeBoolean1.put("9Dt1&MF", (Scriptable) scriptableObject0, (Object) importerTopLevel0);
      NativeObject nativeObject0 = new NativeObject();
      Class<NativeJavaTopPackage> class0 = NativeJavaTopPackage.class;
      JavaMembers javaMembers0 = new JavaMembers(nativeBoolean0, class0, false);
      NativeJavaMethod nativeJavaMethod0 = javaMembers0.ctors;
      nativeJavaMethod0.getFunctionName();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test83()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Object[] objectArray0 = new Object[10];
      objectArray0[5] = (Object) nativeObject0;
      NativeArray nativeArray0 = new NativeArray(8);
      nativeArray0.sealObject();
      nativeArray0.get((long) 2);
      ScriptableObject.deleteProperty((Scriptable) nativeObject0, ",u-*@-");
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        importerTopLevel0.defineConst(",u-*@-", nativeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: ,u-*@-.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      Class<Annotation> class0 = Annotation.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeJavaTopPackage0, 1, class0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(importerTopLevel0, nativeBoolean0, 8);
      NativeBoolean nativeBoolean1 = new NativeBoolean(false);
      nativeBoolean1.put("9Dt1&MF", (Scriptable) scriptableObject0, (Object) importerTopLevel0);
      NativeObject nativeObject0 = new NativeObject();
      // Undeclared exception!
      try { 
        nativeObject0.fillConstructorProperties((IdFunctionObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.preventExtensions();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeIterator_StopIteration0, nativeIterator_StopIteration0, 0, "finally", 1, nativeIterator_StopIteration0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      Context.enter(context0, contextFactory0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ScriptableObject.buildDataDescriptor(importerTopLevel0, contextFactory0, 2);
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      ContextFactory.initGlobal(contextFactory1);
      Context.enter(context0, contextFactory1);
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel(context0);
      // Undeclared exception!
      try { 
        importerTopLevel0.getGetterOrSetter("error reporter", 57, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // error reporter
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      Context context0 = new Context();
      Context context1 = Context.enter(context0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context1, false);
      NativeNumber nativeNumber0 = new NativeNumber(5402.20461544304);
      nativeNumber0.putConst("jsFunction_setImmunePrototypeProperty", importerTopLevel0, importerTopLevel0);
      assertSame(context1, context0);
      assertSame(context0, context1);
  }
}
