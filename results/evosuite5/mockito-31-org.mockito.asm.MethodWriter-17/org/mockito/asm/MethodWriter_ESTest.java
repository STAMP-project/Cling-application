/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 21 15:47:38 GMT 2019
 */

package org.mockito.asm;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.asm.AnnotationVisitor;
import org.mockito.asm.Attribute;
import org.mockito.asm.ByteVector;
import org.mockito.asm.ClassReader;
import org.mockito.asm.ClassVisitor;
import org.mockito.asm.ClassWriter;
import org.mockito.asm.Label;
import org.mockito.asm.MethodVisitor;
import org.mockito.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2087);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2087, "L", "L", "L", stringArray0, false, false);
      methodWriter0.visitFrame(2, (-1025), stringArray0, 4, stringArray0);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 185, "", "", "", stringArray0, false, false);
      Label label0 = new Label();
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1011));
      ClassReader classReader0 = new ClassReader("org.mockito.asm.MethodWriter");
      classReader0.accept((ClassVisitor) classWriter0, 4);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      ByteVector byteVector0 = classWriter0.pool;
      ClassWriter classWriter1 = new ClassWriter(2);
      methodWriter0.visitAnnotation("org.mockito.asm.MethodWriter", true);
      Label label0 = new Label();
      Label label1 = label0.next;
      classWriter0.toByteArray();
      methodWriter0.visitParameterAnnotation(8, (String) null, true);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      ClassReader classReader0 = new ClassReader("org.mockito.asm.Type");
      classReader0.accept((ClassVisitor) classWriter0, 2);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "<init>");
      methodWriter1.visitVarInsn(873, 873);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1011));
      ClassReader classReader0 = new ClassReader("org.mockito.asm.MethodWriter");
      classReader0.accept((ClassVisitor) classWriter0, 4);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      ByteVector byteVector0 = new ByteVector(4);
      methodWriter0.put(byteVector0);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 1);
      classWriter0.newClassItem("org.mockito.asm.MethodWriter");
      Label label0 = new Label();
      Label label1 = label0.next;
      classWriter0.toByteArray();
      classReader0.getClassName();
      methodWriter0.visitParameterAnnotation(2, "writeShort", false);
      methodWriter0.visitParameterAnnotation((-1265), "org.mockito.asm.MethodWriter", false);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2087);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2087, "L", "L", "L", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitMethodInsn(2, "Zw_FB_'bGejw4", "Zw_FB_'bGejw4", "Zw_FB_'bGejw4");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2087);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "L", "AnnotationDefault", "L", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitInsn(2087);
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter2.visitVarInsn(2087, 2087);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-237));
      String[] stringArray0 = new String[4];
      classWriter0.newFloat(0.0F);
      classWriter0.newClassItem("vWF)X:F~u`L");
      stringArray0[0] = "Zn>W|tsZ[V.fU[9j";
      stringArray0[1] = "3[{eH)ilvpR";
      stringArray0[2] = "3[{eH)ilvpR";
      stringArray0[3] = "visitVarInsn";
      MethodWriter methodWriter0 = (MethodWriter)classWriter0.visitMethod((-324), "visitVarInsn", "3[{eH)ilvpR", "3[{eH)ilvpR", stringArray0);
      methodWriter0.visitMultiANewArrayInsn("E`[qi!XC", 2);
      methodWriter0.visitInsn(2);
      MethodWriter methodWriter1 = methodWriter0.next;
      methodWriter0.visitFrame((-324), (-324), stringArray0, 8, stringArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1036));
      ClassReader classReader0 = new ClassReader("org.mockito.asm.MethodWriter");
      classReader0.accept((ClassVisitor) classWriter0, (-1036));
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      methodWriter0.visitInsn((-1036));
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitVarInsn(285212682, 4);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2087);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "L", "L", "L", stringArray0, false, false);
      methodWriter0.visitFrame(3, 1, stringArray0, 3, stringArray0);
      methodWriter0.getSize();
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 2, stringArray0, 1044, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-195));
      String[] stringArray0 = new String[4];
      classWriter0.newFloat(0.0F);
      classWriter0.newClassItem("vWF)X:F~u`L");
      stringArray0[0] = "vWF)X:F~u`L";
      stringArray0[1] = "3[{eH)ilvpR";
      stringArray0[2] = "LocalVariableTable";
      stringArray0[3] = "LocalVariableTable";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod((-324), "LocalVariableTable", "3[{eH)ilvpR", "3[{eH)ilvpR", stringArray0);
      methodVisitor0.visitMultiANewArrayInsn("E`[qi!XC", 2);
      Label label0 = new Label();
      methodVisitor0.visitAnnotation("3[{eH)ilvpR", false);
      methodVisitor0.visitLocalVariable("Zn>W|tsZ[V.fU[9j", "LocalVariableTable", "AnnotationDefault", label0, label0, 13);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2087);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2087, "L", "L", "L", stringArray0, false, false);
      Attribute attribute0 = new Attribute("L");
      methodWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        MethodWriter.getArgumentsAndReturnSizes("RuntimeVisibleAnnotations");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      ClassReader classReader0 = new ClassReader("org.mockito.asm.Type");
      classReader0.accept((ClassVisitor) classWriter0, 2);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      classWriter0.newClassItem("M]Hk6*%d~x8VR@y`my");
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(8, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[1] = 0;
      MethodWriter.getNewOffset(intArray0, intArray0, (-3457), (-50));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1011));
      ClassReader classReader0 = new ClassReader("org.mockito.asm.MethodWriter");
      classReader0.accept((ClassVisitor) classWriter0, 4);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      Attribute attribute0 = new Attribute("org.mockito.asm.MethodWriter");
      methodWriter0.visitAttribute(attribute0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1011));
      ClassReader classReader0 = new ClassReader("org.mockito.asm.MethodWriter");
      classReader0.accept((ClassVisitor) classWriter0, 4);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      ByteVector byteVector0 = new ByteVector(4);
      byteVector0.put11(17, (-1503));
      methodWriter0.put(byteVector0);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 1);
      classWriter0.newClassItem("org.mockito.asm.MethodWriter");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "3{Tcy.`AU;G.mF1v!";
      stringArray0[1] = "StackMap";
      methodWriter0.visitAnnotationDefault();
      stringArray0[0] = "StackMap";
      methodWriter0.visitFrame(41, 415, stringArray0, 86, stringArray0);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 2260;
      MethodWriter.getNewOffset(intArray0, intArray0, 0, 2260);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2087);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2087, "L", "L", "L", stringArray0, false, false);
      Attribute attribute0 = new Attribute("L");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitAnnotationDefault();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-3457);
      intArray0[2] = 99;
      MethodWriter.getNewOffset(intArray0, intArray0, 19, 74);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte) (-1);
      byte byte0 = (byte)5;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte) (-103);
      byteArray0[4] = (byte) (-93);
      byteArray0[5] = (byte)17;
      byteArray0[6] = (byte)80;
      MethodWriter.readUnsignedShort(byteArray0, 4);
      String string0 = "";
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.mockito.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String string0 = "L";
      String[] stringArray0 = new String[5];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-1009), "L", "L", "L", stringArray0, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[3] = (byte)85;
      MethodWriter.writeShort(byteArray0, (byte)0, 52);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1009), "", "", "", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitAnnotation("", true);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[11];
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      label0.next = label1;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1009), "L", "org.mockito.asm.FieldWriter", "org.mockito.asm.FieldWriter", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("org.mockito.asm.FieldWriter", (-268435456));
      Label label2 = new Label();
      methodWriter0.visitInsn((-1009));
      Label label3 = label0.getFirst();
      methodWriter0.visitTryCatchBlock(label0, label2, label2, "org.mockito.asm.FieldWriter");
      methodWriter0.visitFieldInsn((-1009), "2d|rNH)p[", "L", "!UPzn3':/Ck");
      methodWriter0.visitTryCatchBlock(label1, label3, label3, "org.mockito.asm.FieldWriter");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2087);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2087, "L", "L", "L", stringArray0, false, false);
      Attribute attribute0 = new Attribute("L");
      methodWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 2, stringArray0, 2, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2061, "L", "L", "L", stringArray0, false, false);
      methodWriter0.visitMethodInsn(89, "L", "w5xb\"", "w5xb\"");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1011));
      ClassReader classReader0 = new ClassReader("org.mockito.asm.MethodWriter");
      classReader0.accept((ClassVisitor) classWriter0, 4);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.newClassItem("org.mockito.asm.MethodWriter");
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitVarInsn(8, 1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Label label0 = new Label();
      ClassWriter classWriter0 = new ClassWriter((-1028));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1028), "L", "L", "L", stringArray0, false, false);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1009), "L", "L", "L", stringArray0, false, false);
      Attribute attribute0 = new Attribute("L");
      methodWriter0.visitInsn(16777225);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2087);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "L", "L", "L", stringArray0, false, false);
      methodWriter0.visitFrame(3, 1, stringArray0, 3, stringArray0);
      methodWriter0.getSize();
      classWriter0.toByteArray();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(3, "L", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, 94);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 94
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1011));
      ClassReader classReader0 = new ClassReader("org.mockito.asm.MethodWriter");
      classReader0.accept((ClassVisitor) classWriter0, 4);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      ByteVector byteVector0 = classWriter0.pool;
      String[] stringArray0 = new String[4];
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame(4, 2, stringArray0, 1, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1009), "L", "L", "L", stringArray0, false, false);
      Attribute attribute0 = new Attribute("L");
      methodWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.putLong(2);
      ByteVector byteVector2 = byteVector1.put11((-1009), (-127));
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2087);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "L", "L", "L", stringArray0, false, false);
      methodWriter0.visitFrame(3, 1, stringArray0, 3, stringArray0);
      methodWriter0.getSize();
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 2, stringArray0, 1312, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1002));
      String string0 = "org.mockito.asm.MethodWriter";
      ClassReader classReader0 = new ClassReader("org.mockito.asm.MethodWriter");
      classReader0.accept((ClassVisitor) classWriter0, 4);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      Attribute attribute0 = new Attribute(string0);
      methodWriter0.visitAttribute(attribute0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      ClassReader classReader0 = new ClassReader("org.mockito.asm.Type");
      classReader0.accept((ClassVisitor) classWriter0, 2);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      methodWriter0.visitInsn(154);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitFieldInsn((-3), "visitLabel", "org.mockito.asm.Type", "visitLabel");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "0}.l^1s{?R%";
      stringArray0[1] = "Ljava/lang/Synthetic;";
      stringArray0[2] = "visitLabel";
      stringArray0[3] = ">E9";
      MethodWriter methodWriter3 = new MethodWriter(classWriter0, 3097, ".s.IFJDCS", "0}.l^1s{?R%", ">E9", stringArray0, false, false);
      methodWriter3.visitMethodInsn(183, "visitLabel", "C&:K2iXK55[)q(", "ajjBc_7<");
      Label label0 = new Label();
      methodWriter2.visitLabel(label0);
      methodWriter0.visitMaxs(3097, (-249));
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1009), "L", "L", "L", stringArray0, false, false);
      methodWriter0.visitInsn(1);
      Attribute attribute0 = new Attribute("L");
      methodWriter0.visitAttribute(attribute0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1009), "", "", "", stringArray0, false, false);
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1009), "", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int[] intArray0 = new int[11];
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "org.mockito.asm.FieldWriter";
      stringArray0[1] = "dL";
      stringArray0[2] = "org.mockito.asm.FieldWriter";
      stringArray0[3] = "Synthetic";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-128), "dL", "org.mockito.asm.FieldWriter", "org.mockito.asm.FieldWriter", stringArray0, false, false);
      methodWriter0.visitAnnotation("org.mockito.asm.FieldWriter", false);
      Label label0 = new Label();
      Label label1 = label0.next;
      Label label2 = new Label();
      methodWriter0.visitInsn(920);
      Label label3 = label2.getFirst();
      methodWriter0.visitTryCatchBlock(label3, label3, label2, (String) null);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1011));
      String string0 = "org.mockito.asm.MethodWriter";
      ClassReader classReader0 = new ClassReader("org.mockito.asm.MethodWriter");
      classReader0.accept((ClassVisitor) classWriter0, 4);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      ByteVector byteVector0 = classWriter0.pool;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "org.mockito.asm.MethodWriter";
      methodWriter0.visitInsn(1);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 2, stringArray0, 251658240, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      ClassReader classReader0 = new ClassReader("org.mockito.asm.AnnotationWriter");
      ClassWriter classWriter1 = new ClassWriter(classReader0, 2343);
      classReader0.accept((ClassVisitor) classWriter1, 7);
      MethodWriter methodWriter0 = classWriter1.firstMethod;
      ByteVector byteVector0 = classWriter0.pool;
      ClassWriter classWriter2 = new ClassWriter(2);
      methodWriter0.visitFrame(20, 7, stringArray0, 16777226, stringArray0);
      methodWriter0.getSize();
      ByteVector byteVector1 = new ByteVector(1);
      byteVector0.put12(128, (-1210));
      MethodWriter methodWriter1 = methodWriter0.next;
      methodWriter1.put(byteVector1);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-195));
      String[] stringArray0 = new String[4];
      classWriter0.newClassItem("vWF)X:F~u`L");
      stringArray0[0] = "Zn>W|tsZ[V.fU[9j";
      stringArray0[1] = "3[{eH)ilvpR";
      stringArray0[2] = "3[{eH)ilvpR";
      stringArray0[3] = "LocalVariableTable";
      MethodWriter methodWriter0 = (MethodWriter)classWriter0.visitMethod(2, "LocalVariableTable", "3[{eH)ilvpR", "3[{eH)ilvpR", stringArray0);
      methodWriter0.visitInsn(2);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.classReaderOffset = 24;
      methodWriter0.visitFrame(2, 2, stringArray0, (-195), stringArray0);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2087);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2087, "L", "L", "L", stringArray0, false, false);
      Attribute attribute0 = new Attribute("L");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitVarInsn(2087, 1);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-195));
      String string0 = "<init>";
      String string1 = "C?";
      String[] stringArray0 = new String[7];
      stringArray0[0] = "LocalVariableTable";
      stringArray0[1] = "C?";
      stringArray0[2] = "LocalVariableTable";
      stringArray0[3] = "<init>";
      stringArray0[4] = "C?";
      stringArray0[5] = "<init>";
      String string2 = "`,fGbC^j_.*]d6ub";
      stringArray0[6] = "`,fGbC^j_.*]d6ub";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3460), "<init>", "C?", "LocalVariableTable", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitVarInsn(169, (-1468674010));
      Label label0 = new Label();
      int int0 = 2270;
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter0.visitAnnotation("C?", true);
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(169, "endFrame", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 99;
      byte byte0 = (byte)50;
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        MethodWriter.readInt((byte[]) null, (byte)50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1009), "L", "L", "L", stringArray0, false, false);
      methodWriter0.visitMaxs((-1009), 184);
      methodWriter0.signature = "L";
      Attribute attribute0 = new Attribute("L");
      methodWriter0.visitIincInsn(128, 128);
      methodWriter0.visitInsn(16777225);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1036));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1036), "L", "L", "L", stringArray0, false, false);
      Label label0 = new Label();
      int int0 = MethodWriter.SAME_FRAME_EXTENDED;
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(185, "L", "L", "L");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Label label0 = new Label();
      ClassWriter classWriter0 = new ClassWriter((-1028));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1028), "L", "L", "L", stringArray0, false, false);
      Label label1 = label0.next;
      classWriter0.newLong((-458L));
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitAnnotation("L", true);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2087);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2087, "L", "L", "L", stringArray0, false, false);
      Attribute attribute0 = new Attribute("L");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitFieldInsn(2087, "L", ")_fd>s", "L");
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-195));
      String[] stringArray0 = new String[4];
      classWriter0.newFloat(0.0F);
      classWriter0.newClassItem("vWF)X:F~u`L");
      stringArray0[0] = "3[{eH)ilvpR";
      stringArray0[1] = "3[{eH)ilvpR";
      stringArray0[2] = "3[{eH)ilvpR";
      stringArray0[3] = "3[{eH)ilvpR";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod((-324), "3[{eH)ilvpR", "3[{eH)ilvpR", "3[{eH)ilvpR", stringArray0);
      methodVisitor0.visitMultiANewArrayInsn("E`[qi!XC", 2);
      Label label0 = new Label();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Label label0 = new Label();
      ClassWriter classWriter0 = new ClassWriter((-1028));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1028), "L", "L", "L", stringArray0, false, false);
      methodWriter0.visitLocalVariable("L", "L", "L", label0, label0, 2);
      methodWriter0.getSize();
      methodWriter0.visitJumpInsn((-1028), label0);
      methodWriter0.visitLocalVariable("E'!,=h.Ce'aMTxU$\"", "3[", "4@^ @", label0, label0, 2);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2537);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 2537, "", "", "", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1043));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1043), "L", "L", "L", stringArray0, false, false);
      Label label0 = new Label();
      Label label1 = label0.next;
      methodWriter0.visitMultiANewArrayInsn("L", (-1043));
      Attribute attribute0 = new Attribute("");
      methodWriter0.visitAttribute(attribute0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1036));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1036), "L", "L", "L", stringArray0, false, false);
      methodWriter0.visitAnnotation("L", false);
      Label label0 = new Label();
      methodWriter0.visitInsn(1);
      methodWriter0.visitFrame(2, 2, stringArray0, 2, stringArray0);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 99;
      intArray0[1] = 0;
      MethodWriter.getNewOffset(intArray0, intArray0, 0, (-50));
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      classWriter0.visitMethod(57, "G1[)rMEFJv#", "G1[)rMEFJv#", "I'?ZQ#;", stringArray0);
      classWriter0.newLong(32L);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      methodWriter0.visitFrame(57, (-438), stringArray0, (-3306), stringArray0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1009), "", "", "", stringArray0, false, false);
      Label label0 = new Label();
      classWriter0.version = (-448);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1009), "", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", ";ea%/n", "visitAttribute", stringArray0, false, false);
      Attribute attribute0 = new Attribute("Exceptions");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitFrame(1, (-1009), stringArray0, 2, stringArray0);
      methodWriter0.visitAttribute(attribute0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1014));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "resizeInstructions";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 128, "L", "resizeInstructions", "resizeInstructions", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1011));
      ClassReader classReader0 = new ClassReader("org.mockito.asm.MethodWriter");
      classReader0.accept((ClassVisitor) classWriter0, 4);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      ByteVector byteVector0 = new ByteVector(4);
      methodWriter0.visitMultiANewArrayInsn("Deprecated", 2);
      Label label0 = new Label();
      label0.resolve(methodWriter0, 172, classReader0.b);
      Label label1 = label0.getFirst();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      label0.resolve(methodWriter1, (byte)0, (byte[]) null);
      methodWriter0.visitTryCatchBlock(label0, label0, label1, "visitAnnotationDefault");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) classReader0;
      objectArray0[1] = (Object) byteVector0;
      objectArray0[2] = (Object) "E`[qi!XC";
      objectArray0[3] = (Object) label0;
      objectArray0[4] = (Object) label1;
      methodWriter1.visitFrame(172, (byte)83, objectArray0, 191, objectArray0);
      methodWriter1.getSize();
      methodWriter1.visitIincInsn(557, 172);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1009), "", "", "", stringArray0, false, false);
      methodWriter0.visitIincInsn(103, (-1127));
      Label label0 = new Label();
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1009), "", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      ClassReader classReader0 = new ClassReader("org.mockito.asm.Type");
      classReader0.accept((ClassVisitor) classWriter0, 2);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "<init>");
      Object object0 = new Object();
      Object[] objectArray0 = new Object[2];
      objectArray0[1] = (Object) "<init>";
      methodWriter0.visitFrame((-1009), 1, objectArray0, (-2665), objectArray0);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1011));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "org.mockito.asm.MethodWriter";
      stringArray0[1] = "=cCb\"ZHc#vZx";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "L", "org.mockito.asm.MethodWriter", "org.mockito.asm.Type", stringArray0, false, false);
      Label label0 = new Label();
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "=cCb\"ZHc#vZx", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 28
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1009), "", "", "", stringArray0, false, false);
      Object object0 = new Object();
      methodWriter0.visitFrame(101, 2, stringArray0, 101, stringArray0);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1011));
      ClassReader classReader0 = new ClassReader("org.mockito.asm.MethodWriter");
      classReader0.accept((ClassVisitor) classWriter0, 4);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitMethodInsn(1, "org.mockito.asm.MethodWriter", "org.mockito.asm.MethodWriter", "org.mockito.asm.MethodWriter");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1009), "", "", "", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitMaxs((-821), 2);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(103);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 99, "Synthetic", "Synthetic", "org.mockito.asm.FieldWriter", stringArray0, false, false);
      methodWriter0.visitAnnotation("f7vlQ|so4V=Fz!y", false);
      Label label0 = new Label();
      Label label1 = label0.next;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitAnnotation("#pm&/0m,c4WDb;", true);
      methodWriter1.visitParameterAnnotation(60, "Ljava/lang/Synthetic;", false);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test68()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1011));
      ClassReader classReader0 = new ClassReader("org.mockito.asm.MethodWriter");
      classReader0.accept((ClassVisitor) classWriter0, 4);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      ByteVector byteVector0 = classWriter0.pool;
      String[] stringArray0 = new String[4];
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitFrame(4, 2, stringArray0, 1, stringArray0);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1043));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1043), "f", "f", "Synthetic", stringArray0, false, false);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("f", false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotation("f", false);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      int[] intArray0 = new int[11];
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      classWriter0.version = 4778;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1009), "L", "org.mockito.asm.FieldWriter", "Synthetic", stringArray0, false, false);
      methodWriter0.visitAnnotation("L", false);
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      methodWriter0.visitTypeInsn((-1009), "Synthetic");
      methodWriter0.visitLocalVariable("L", "org.mockito.asm.FieldWriter", "L", label0, label0, 4778);
      int int0 = methodWriter0.getSize();
      assertEquals(103, int0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Label label0 = new Label();
      ClassWriter classWriter0 = new ClassWriter((-1028));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1028), "L", "L", "Synthetic", stringArray0, false, false);
      methodWriter0.visitAnnotation("L", false);
      methodWriter0.visitLocalVariable("L", "Synthetic", "L", label0, label0, 2);
      int int0 = methodWriter0.getSize();
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1009), "", "", "", stringArray0, false, false);
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1009), "", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        MethodWriter.getArgumentsAndReturnSizes("\"`vcD8@G");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2087);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2087, "L", "L", "L", stringArray0, false, false);
      Attribute attribute0 = new Attribute("L");
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1009));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1009), "", "", "", stringArray0, false, false);
      classWriter0.toByteArray();
      int int0 = methodWriter0.getSize();
      assertEquals(28, int0);
  }
}
