/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 09:48:37 GMT 2019
 */

package org.mockito.cglib.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mockito.asm.ClassWriter;
import org.mockito.asm.Label;
import org.mockito.asm.MethodAdapter;
import org.mockito.asm.MethodVisitor;
import org.mockito.asm.Type;
import org.mockito.cglib.core.Block;
import org.mockito.cglib.core.ClassEmitter;
import org.mockito.cglib.core.CodeEmitter;
import org.mockito.cglib.core.Local;
import org.mockito.cglib.core.MethodInfo;
import org.mockito.cglib.core.ProcessSwitchCallback;
import org.mockito.cglib.core.Signature;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class CodeEmitter_ESTest extends CodeEmitter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      Type type0 = Type.INT_TYPE;
      classEmitter0.visit(4, 4, "mZl,,y2", "mZl,,y2", "mZl,,y2", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("mZl,,y2", type0, typeArray0);
      CodeEmitter codeEmitter1 = new CodeEmitter(classEmitter0, codeEmitter0, (-1887), signature0, typeArray0);
      MethodInfo methodInfo0 = codeEmitter1.getMethodInfo();
      // Undeclared exception!
      try { 
        codeEmitter1.invoke(methodInfo0, type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-22));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.visit(4, 4, "<init>", "<init>", "<init>", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type[] typeArray0 = new Type[5];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = type0;
      typeArray0[3] = type0;
      typeArray0[4] = type0;
      Signature signature0 = new Signature("<init>", type0, typeArray0);
      CodeEmitter codeEmitter1 = new CodeEmitter(classEmitter0, codeEmitter0, 158, signature0, typeArray0);
      MethodInfo methodInfo0 = codeEmitter1.getMethodInfo();
      codeEmitter1.invoke(methodInfo0, type0);
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^'DDnCXbht";
      stringArray0[1] = "^'DDnCXbht";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(864, "^'DDnCXbht", "^'DDnCXbht", "^'DDnCXbht", stringArray0);
      Type type0 = Type.INT_TYPE;
      Type[] typeArray0 = new Type[6];
      Type[] typeArray1 = new Type[2];
      typeArray1[0] = type0;
      typeArray1[1] = type0;
      Signature signature0 = new Signature("lOiiWC/kDs+1zv", type0, typeArray1);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, methodVisitor0, 1175, signature0, typeArray0);
      codeEmitter0.end_method();
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(854);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[3];
      Type type0 = Type.VOID_TYPE;
      classEmitter0.visit(3, 5, "^'DDn7Xbh", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(0, Type.VOID);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2147483645);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      Type type0 = Type.SHORT_TYPE;
      classEmitter0.visit(3, 5, "void", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.zero_or_null(type0);
      assertEquals(4, Type.SHORT);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^NDDD^bht";
      stringArray0[1] = "^NDDD^bht";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(864, "^NDDD^bht", "^NDDD^bht", "^NDDD^bht", stringArray0);
      Type type0 = Type.getObjectType("dl\"rM:<i Yy<g");
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("dobleValue", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, methodVisitor0, 864, signature0, typeArray0);
      codeEmitter0.zero_or_null(type0);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^'DDnCXbht";
      stringArray0[1] = "^'DDnCXbht";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(864, "^'DDnCXbht", "^'DDnCXbht", "^'DDnCXbht", stringArray0);
      Type type0 = Type.BYTE_TYPE;
      Type[] typeArray0 = new Type[6];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = type0;
      typeArray0[3] = type0;
      typeArray0[4] = type0;
      typeArray0[5] = type0;
      Signature signature0 = new Signature("^'DDnCXbht", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, methodVisitor0, 864, signature0, typeArray0);
      codeEmitter0.create_arg_array();
      assertFalse(codeEmitter0.isStaticHook());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Class<InputStream> class0 = InputStream.class;
      Type type0 = Type.getType(class0);
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("doubleValue", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, (-1035), signature0, typeArray0);
      // Undeclared exception!
      try { 
        codeEmitter0.unbox(type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(838);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[4];
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.visit(4, 4, "m-l,,y2", "m-l,,y2", "m-l,,y2", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Type type0 = Type.BYTE_TYPE;
      Type type1 = Type.FLOAT_TYPE;
      Type[] typeArray0 = new Type[2];
      typeArray0[0] = type0;
      typeArray0[1] = type1;
      Signature signature0 = new Signature("%v=sgfW;Y]xm9$*Wp>0", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 4, signature0, typeArray0);
      // Undeclared exception!
      try { 
        codeEmitter0.unbox(type1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      Type type0 = Type.INT_TYPE;
      classEmitter0.visit(3, 5, "^'DDn7CXbht", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(116, CodeEmitter.NEG);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2147483645);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      Type type0 = Type.SHORT_TYPE;
      classEmitter0.visit(3, 5, "void", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.unbox(type0);
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777145);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visit(1, 1, "4BTa7@U[", "4BTa7@U[", "4BTa7@U[", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.BYTE_TYPE;
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(854);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[3];
      Type type0 = Type.CHAR_TYPE;
      classEmitter0.visit(3, 5, "^'DDn7Xbh", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2147483611);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.BOOLEAN_TYPE;
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 6, "[A", "[A", "y$vp$MG)EFVK\" ", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(10, Type.OBJECT);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^'DDnCXbht";
      stringArray0[1] = "^'DDnCXbht";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(864, "^'DDnCXbht", "^'DDnCXbht", "^'DDnCXbht", stringArray0);
      Type type0 = Type.INT_TYPE;
      Type[] typeArray0 = new Type[6];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = type0;
      typeArray0[3] = type0;
      typeArray0[4] = type0;
      typeArray0[5] = type0;
      Signature signature0 = new Signature("^'DDnCXbht", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, methodVisitor0, 864, signature0, typeArray0);
      Type type1 = Type.VOID_TYPE;
      codeEmitter0.unbox(type1);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-45));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      Type type0 = Type.VOID_TYPE;
      classEmitter0.visit(4, 4, "mZl,,y2", "mZl,,y2", "mZl,,y2", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.box(type0);
      assertEquals(154, CodeEmitter.NE);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(827);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      Type type0 = Type.getObjectType("^'DDn7CXbht");
      classEmitter0.visit(4, 4, "^'DDn7CXbht", "^'DDn7CXbht", "^'DDn7CXbht", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.box(type0);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-22));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[8];
      classEmitter0.visit(4, 4, "YZl)7y2", "YZl)7y2", "YZl)7y2", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push(true);
      assertEquals(100, CodeEmitter.SUB);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2147483615);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[13];
      classEmitter0.visit(3, 5, "void", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push(false);
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^NDDD^bht";
      stringArray0[1] = "^NDDD^bht";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(864, "^NDDD^bht", "^NDDD^bht", "^NDDD^bht", stringArray0);
      Type type0 = Type.getObjectType("dl\"rM:<i Yy<g");
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("dobleValue", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, methodVisitor0, 864, signature0, typeArray0);
      int[] intArray0 = new int[3];
      intArray0[2] = 156;
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      codeEmitter0.process_switch(intArray0, processSwitchCallback0, true);
      assertEquals(155, CodeEmitter.LT);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "P";
      stringArray0[1] = "^'DDnCXbht";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(864, "P", "P", "^'DDnCXbht", stringArray0);
      Type type0 = Type.DOUBLE_TYPE;
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("P", type0, typeArray0);
      MethodAdapter methodAdapter0 = new MethodAdapter(methodVisitor0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, methodAdapter0, 10, signature0, typeArray0);
      int[] intArray0 = new int[1];
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      codeEmitter0.process_switch(intArray0, processSwitchCallback0, false);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Class<InputStream> class0 = InputStream.class;
      Type type0 = Type.getType(class0);
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("e,'<`Vl^0", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 8, signature0, typeArray0);
      int[] intArray0 = new int[2];
      intArray0[0] = 3;
      // Undeclared exception!
      try { 
        codeEmitter0.process_switch(intArray0, (ProcessSwitchCallback) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // keys to switch must be sorted ascending
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777217);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[6];
      classEmitter0.visit(16777217, 2, "Zl7yj{G", "Zl7yj{G", "Zl7yj{G", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      int[] intArray0 = new int[0];
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      codeEmitter0.process_switch(intArray0, processSwitchCallback0);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777222);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visit(2470, 4, "<@@m|_U!`;/9$~+bJ", "[*zYq$", "[*zYq$", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      int[] intArray0 = new int[1];
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      codeEmitter0.process_switch(intArray0, processSwitchCallback0);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Type type0 = Type.BOOLEAN_TYPE;
      Type[] typeArray0 = new Type[2];
      Class<Object> class0 = Object.class;
      Type type1 = Type.getType(class0);
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      Signature signature0 = new Signature("%v=sgfW;Y]xm9$*Wp>0", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 4, signature0, typeArray0);
      codeEmitter0.unbox_or_zero(type1);
      assertEquals(6, Type.FLOAT);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-22));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.visit(4, 4, "<init>", "<init>", "<init>", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type[] typeArray0 = new Type[5];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = type0;
      typeArray0[3] = type0;
      typeArray0[4] = type0;
      Signature signature0 = new Signature("<init>", type0, typeArray0);
      codeEmitter0.invoke_static_this(signature0);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(827);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.getObjectType("^'DDn7@CXbh");
      classEmitter0.declare_field(827, "^'DDn7@CXbh", type0, type0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(870, 2, "org.mockito.cgVib.core.LocalVariFblesSorter$1", (String) null, (String) null, stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.putfield("^'DDn7@CXbh");
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(855);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.INT_TYPE;
      classEmitter0.declare_field(1, "^'DDn7@CXbh", type0, "org.mockito.cgVib.core.LocalVariFblesSorter$1");
      String[] stringArray0 = new String[6];
      classEmitter0.visit(3, 5, "^'DDn7@CXbh", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.putfield("^'DDn7@CXbh");
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(851);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.LONG_TYPE;
      classEmitter0.declare_field((-3464), "S", type0, type0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(87, (-1277), "S", "S", "S", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.getfield("S");
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(838);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.declare_field(1, "*'D7@CXbh", type0, "org.mockito.cgVib.core.LocalVariFblesSorter$1");
      String[] stringArray0 = new String[6];
      classEmitter0.visit(3, 5, "*'D7@CXbh", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.getfield("*'D7@CXbh");
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777218);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visit(1, 1, "[4uuY0($", "[4uuY0($", "[4uuY0($", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      // Undeclared exception!
      try { 
        codeEmitter0.load_args((-1457), 4932);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1457
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Class<InputStream> class0 = InputStream.class;
      Type type0 = Type.getType(class0);
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("e,`El^0", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 8, signature0, typeArray0);
      // Undeclared exception!
      try { 
        codeEmitter0.load_this();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no 'this' pointer within static method
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Type type0 = Type.INT_TYPE;
      Type[] typeArray0 = new Type[2];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      Signature signature0 = new Signature("q", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 1431655765, signature0, typeArray0);
      // Undeclared exception!
      try { 
        codeEmitter0.load_this();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-22));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      Type type0 = Type.INT_TYPE;
      classEmitter0.visit(4, 4, "mZl)7y2", "mZl)7y2", "mZl)7y2", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.newarray(type0);
      assertEquals(1, Type.BOOLEAN);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(838);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(4, 4, "m-l,,y2", "m-l,,y2", "m-l,,y2", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push((double) 1);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777182);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visit(1, 1, "4bTa7@U ", "4bTa7@U ", "4bTa7@U ", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push((double) 2);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-36));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(1, 4, "Long", "Long", "Long", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push((float) 3);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^'DDnCXbht";
      stringArray0[1] = "^'DDnCXbht";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(864, "P", "P", "^'DDnCXbht", stringArray0);
      Type type0 = Type.DOUBLE_TYPE;
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("P", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, methodVisitor0, 60, signature0, typeArray0);
      codeEmitter0.push(1.0F);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-35));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(1, 1, "mZl7y2", "mZl7y2", "mZl7y2", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push((float) 2);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777192);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.getType("F9Y-6Jyg5^G(V");
      classEmitter0.visit(1, 1, "F9Y-6Jyg5^G(V", "F9Y-6Jyg5^G(V", "F9Y-6Jyg5^G(V", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.zero_or_null(type0);
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^'DDnCXbht";
      stringArray0[1] = "^'DDnCXbht";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(864, "^'DDnCXbht", "^'DDnCXbht", "^'DDnCXbht", stringArray0);
      Type type0 = Type.getObjectType("^'DDnCXbht");
      Type[] typeArray0 = new Type[6];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = type0;
      typeArray0[3] = type0;
      typeArray0[4] = type0;
      typeArray0[5] = type0;
      Signature signature0 = new Signature("^'DDnCXbht", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, methodVisitor0, 864, signature0, typeArray0);
      codeEmitter0.push(1L);
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777218);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visit(7, 1, "[4uY$", "[4uY$", "[4uY$", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push(32L);
      assertFalse(codeEmitter0.isStaticHook());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(3, 5, "^'DDn7CXbht", "k2$Hw}d1jcq3/+:", "^'DDn7CXbht", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.aaload(1717986918);
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1055);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(1, 4, "Zl7yjPG", "Zl7yjPG", "Zl7yjPG", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push(1055);
      assertEquals(100, CodeEmitter.SUB);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-42));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(4, 4, "String", "String", "String", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.aaload((-1607));
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(827);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      Type type0 = Type.INT_TYPE;
      classEmitter0.visit(3, 5, "[&9!9KUY+AA|7=[", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type1 = Type.SHORT_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(6, Type.FLOAT);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Type type0 = Type.LONG_TYPE;
      Type type1 = Type.getObjectType("7vcY^l");
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("doubleValue", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 8, signature0, typeArray0);
      // Undeclared exception!
      try { 
        codeEmitter0.cast_numeric(type1, type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Class<InputStream> class0 = InputStream.class;
      Type type0 = Type.getType(class0);
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("e,'<`Vl^0", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 8, signature0, typeArray0);
      Type type1 = Type.FLOAT_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.cast_numeric(type0, type1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Class<InputStream> class0 = InputStream.class;
      Type type0 = Type.getType(class0);
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("booleanValue", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 9, signature0, typeArray0);
      Type type1 = Type.DOUBLE_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.cast_numeric(type0, type1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Type type0 = Type.VOID_TYPE;
      Type type1 = Type.getObjectType("7vcY{^l");
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("7vcY{^l", type1, typeArray0);
      Type[] typeArray1 = new Type[0];
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 9, signature0, typeArray1);
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(112, CodeEmitter.REM);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(863);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[7];
      Type type0 = Type.BOOLEAN_TYPE;
      classEmitter0.visit(3, 5, "H'DDn7CZXb*", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type1 = Type.BYTE_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(8, Type.DOUBLE);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Type type0 = Type.LONG_TYPE;
      Type[] typeArray0 = new Type[3];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = type0;
      Signature signature0 = new Signature("7vcY^l", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 183, signature0, typeArray0);
      Type type1 = Type.FLOAT_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.cast_numeric(type0, type1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Type type0 = Type.LONG_TYPE;
      Type type1 = Type.getObjectType("7vcY^l");
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("7vcY^l", type1, typeArray0);
      Type[] typeArray1 = new Type[0];
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 9, signature0, typeArray1);
      // Undeclared exception!
      try { 
        codeEmitter0.cast_numeric(type0, type1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(843);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.DOUBLE_TYPE;
      String[] stringArray0 = new String[6];
      classEmitter0.visit(1, 5, "Fnq]w}Wd3", ";", "6%G\"RN(EdD5&-A6", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type1 = Type.LONG_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(7, Type.LONG);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Class<InputStream> class0 = InputStream.class;
      Type type0 = Type.getType(class0);
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("e,'<`Vl^0", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 8, signature0, typeArray0);
      Type type1 = Type.FLOAT_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.cast_numeric(type1, type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Type type0 = Type.DOUBLE_TYPE;
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("e,'<`Vl^", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 8, signature0, typeArray0);
      Type type1 = Type.FLOAT_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.cast_numeric(type1, type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.LONG_TYPE;
      Type[] typeArray0 = new Type[3];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = type0;
      Signature signature0 = new Signature("^'DDn7CXbht", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 2, signature0, typeArray0);
      Type type1 = Type.FLOAT_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.cast_numeric(type1, type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^NDDD^bht";
      stringArray0[1] = "^NDDD^bht";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(864, "^NDDD^bht", "^NDDD^bht", "^NDDD^bht", stringArray0);
      Type type0 = Type.LONG_TYPE;
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("dobleValue", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, methodVisitor0, 864, signature0, typeArray0);
      Type type1 = Type.DOUBLE_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(4, Type.SHORT);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(10, (-4063), "(.!VoS{#flQw.r%", "(.!VoS{#flQw.r%", "charValue", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.DOUBLE_TYPE;
      Type type1 = Type.FLOAT_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      Type type0 = Type.INT_TYPE;
      classEmitter0.visit(10, (-4063), "(.!VoS{#flQw.r%", "(.!VoS{#flQw.r%", "charValue", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type1 = Type.DOUBLE_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(858);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[7];
      Type type0 = Type.CHAR_TYPE;
      classEmitter0.visit(3, 5, "^'DDn7CXbht", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type1 = Type.INT_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(8, Type.DOUBLE);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "P";
      stringArray0[1] = "^'DDnCXbht";
      stringArray0[2] = ":+~,P^g";
      stringArray0[3] = "P";
      stringArray0[4] = "^'DDnCXbht";
      stringArray0[5] = "P";
      stringArray0[6] = "^'DDnCXbht";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(1461, "^'DDnCXbht", "P", ":+~,P^g", stringArray0);
      Type type0 = Type.DOUBLE_TYPE;
      Type[] typeArray0 = new Type[1];
      typeArray0[0] = type0;
      Signature signature0 = new Signature(">5s~o!LH880Q", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, methodVisitor0, 4, signature0, typeArray0);
      Type type1 = Type.BYTE_TYPE;
      codeEmitter0.swap(type1, type0);
      assertNotSame(type0, type1);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777201);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[19];
      Type type0 = Type.VOID_TYPE;
      classEmitter0.visit(1, 4, "rj", "rj", "rj", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.swap(type0, type0);
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777268);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.visit(1, 4, "Zl7yj{G", "Zl7yj{G", "Zl7yj{G", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type1 = Type.getObjectType("Zl7yj{G");
      codeEmitter0.swap(type0, type1);
      assertEquals(1, Type.BOOLEAN);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(827);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.INT_TYPE;
      classEmitter0.visit(4, 4, "m-~;H]W*", "m-~;H]W*", (String) null, (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = codeEmitter0.make_label();
      codeEmitter0.if_cmp(type0, 157, label0);
      assertEquals(5, type0.getSort());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-22));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[8];
      Type type0 = Type.CHAR_TYPE;
      classEmitter0.visit(4, 4, "YZl)7y2", "YZl)7y2", "YZl)7y2", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = codeEmitter0.mark();
      codeEmitter0.if_cmp(type0, 155, label0);
      assertEquals(6, Type.FLOAT);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777201);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[19];
      Type type0 = Type.VOID_TYPE;
      classEmitter0.visit(1, 4, "rj", "rj", "rj", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, 154, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-7));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      Type type0 = Type.CHAR_TYPE;
      classEmitter0.visit(5, 4, ",+", ",+", ",+", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Label label0 = new Label();
      codeEmitter0.if_cmp(type0, 153, label0);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^NDDD^bht";
      stringArray0[1] = "^NDDD^bht";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(864, "^NDDD^bht", "^NDDD^bht", "^NDDD^bht", stringArray0);
      Type type0 = Type.getObjectType("dl\"rM:<i Yy<g");
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("dobleValue", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, methodVisitor0, 864, signature0, typeArray0);
      Label label0 = new Label();
      codeEmitter0.if_cmp(type0, 154, label0);
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-36));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(4, 4, "mZl,,y2", "mZl,,y2", "mZl,,y2", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = classEmitter0.getClassType();
      Label label0 = codeEmitter0.make_label();
      codeEmitter0.if_cmp(type0, 153, label0);
      assertEquals(10, type0.getSort());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777177);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visit(1, 1, "[4uuY0($", "[4uuY0($", "[4uuY0($", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.getType("[4uuY0($");
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, (-1382), (Label) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad comparison for type [4
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777268);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 4, "Zl7yj{G", "Zl7yj{G", "Zl7yj{G", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = new Label();
      Type type0 = Type.LONG_TYPE;
      codeEmitter0.if_cmp(type0, 154, label0);
      assertEquals(7, type0.getSort());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Type type0 = Type.FLOAT_TYPE;
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("e,`El^0", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 8, signature0, typeArray0);
      Label label0 = codeEmitter0.make_label();
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, 8, label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(863);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[10];
      Type type0 = Type.VOID_TYPE;
      classEmitter0.visit(3, 5, "^'DDn7CXbht", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = codeEmitter0.make_label();
      codeEmitter0.if_cmp(type0, 158, label0);
      assertEquals(116, CodeEmitter.NEG);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(823);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      Type type0 = Type.INT_TYPE;
      classEmitter0.visit(4, 4, "m-l;,yW*", "m-l;,yW*", "m-l;,yW*", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Label label0 = codeEmitter0.mark();
      codeEmitter0.if_cmp(type0, 156, label0);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777230);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.visit(2, 3, "[*zYq$", "[*zYq$", "[*zYq$", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Block block0 = codeEmitter0.begin_block();
      // Undeclared exception!
      try { 
        codeEmitter0.catch_exception(block0, type0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // end of block is unset
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^'DDnCXbht";
      stringArray0[1] = "^'DDnCXbht";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(864, "^'DDnCXbht", "^'DDnCXbht", "^'DDnCXbht", stringArray0);
      Type type0 = Type.getObjectType("^'DDnCXbht");
      Type[] typeArray0 = new Type[6];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = type0;
      typeArray0[3] = type0;
      typeArray0[4] = type0;
      typeArray0[5] = type0;
      Signature signature0 = new Signature("^'DDnCXbht", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, methodVisitor0, 864, signature0, typeArray0);
      Block block0 = codeEmitter0.begin_block();
      block0.end();
      codeEmitter0.catch_exception(block0, type0);
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777201);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visit(1, 1, "org.mockito.asm.Edge", "org.mockito.asm.Edge", "org.mockito.asm.Edge", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.load_args();
      assertEquals(154, CodeEmitter.NE);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Type type0 = Type.getObjectType("7vcY{^l");
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("7vcY{^l", type0, typeArray0);
      Type[] typeArray1 = new Type[0];
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 9, signature0, typeArray1);
      // Undeclared exception!
      try { 
        codeEmitter0.putstatic(type0, "7vcY{^l", type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      Type type0 = Type.CHAR_TYPE;
      classEmitter0.visit(3, 5, "^'DDn7CXbht", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      // Undeclared exception!
      try { 
        codeEmitter0.instance_of(type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-14));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(4, 4, "mZl,,y2", "mZl,,y2", "mZl,,y2", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.monitorenter();
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(823);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      Type type0 = Type.INT_TYPE;
      classEmitter0.visit(4, 4, "m-l,,y2", "m-l,,y2", "m-l,,y2", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      // Undeclared exception!
      try { 
        codeEmitter0.getfield(type0, "m-l,,y2", type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^'DDnCXbht";
      stringArray0[1] = "^'DDnCXbht";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(864, "^'DDnCXbht", "^'DDnCXbht", "^'DDnCXbht", stringArray0);
      Type type0 = Type.INT_TYPE;
      Type[] typeArray0 = new Type[3];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = type0;
      Signature signature0 = new Signature("longValue", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, methodVisitor0, 92, signature0, typeArray0);
      ClassEmitter classEmitter1 = codeEmitter0.getClassEmitter();
      assertSame(classEmitter1, classEmitter0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(854);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[3];
      classEmitter0.visit(3, 5, "^'DDn7Xbh", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.invoke_constructor_this();
      assertEquals(155, CodeEmitter.LT);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      Type type0 = Type.CHAR_TYPE;
      classEmitter0.visit(3, 5, "^'DDn7CXbht", stringArray0[0], stringArray0[1], (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.super_getstatic("^'DDn7CXbht", type0);
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-42));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.visit(7, (-228), "String", "String", "String", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      MethodInfo methodInfo0 = codeEmitter0.getMethodInfo();
      codeEmitter0.invoke(methodInfo0, type0);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(827);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visit(4, 1, "^'DDn7C\bht", "^'DDn7C\bht", "^'DDn7C\bht", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.new_instance_this();
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-7));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(5, 4, ",+", ",+", ",+", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      // Undeclared exception!
      try { 
        codeEmitter0.array_load((Type) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-22));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(4, 4, "<init>", "<init>", "<init>", stringArray0);
      classEmitter0.getStaticHook();
      classEmitter0.end_class();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-22));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.visit(4, 4, "<init>", "<init>", "<init>", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = codeEmitter0.mark();
      codeEmitter0.if_cmp(type0, 154, label0);
      assertEquals(8, type0.getSort());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(848);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(8, 7, "^'DDn7CXbht", "^'DDn7CXbht", "I'DDn7CXbht", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.super_invoke_constructor();
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(855);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[11];
      Type type0 = Type.CHAR_TYPE;
      classEmitter0.visit(3, 5, "^'DDn7@rCXbh", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      // Undeclared exception!
      try { 
        codeEmitter0.getstatic(type0, "^'DDn7@rCXbh", type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777201);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.visit(1, 1, "org.mockito.asm.Edge", "org.mockito.asm.Edge", "org.mockito.asm.Edge", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.super_putfield("org.mockito.asm.Edge", type0);
      assertEquals(6, Type.FLOAT);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(838);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(4, 4, "m-l,,y2", "m-l,,y2", "m-l,,y2", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.not();
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2147483624);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      Type type0 = Type.BYTE_TYPE;
      classEmitter0.visit(3, 5, "*g", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Local local0 = new Local(0, type0);
      codeEmitter0.load_local(local0);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(823);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(4, 4, "C_)Y$SJ{RSA", "C_)Y$SJ{RSA", "C_)Y$SJ{RSA", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = codeEmitter0.getReturnType();
      assertEquals(0, type0.getSort());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(827);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(4, 4, "^'DDn7CXbht", "^'DDn7CXbht", "^'DDn7CXbht", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Local local0 = codeEmitter0.make_local();
      codeEmitter0.store_local(local0);
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Class<InputStream> class0 = InputStream.class;
      Type type0 = Type.getType(class0);
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("e,`El^0", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 8, signature0, typeArray0);
      // Undeclared exception!
      try { 
        codeEmitter0.super_invoke_constructor(signature0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.ClassEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(827);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(4, 4, "^'DDn7CXbht", "^'DDn7CXbht", "^'DDn7CXbht", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = codeEmitter0.make_label();
      codeEmitter0.ifnull(label0);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-43));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(4, 4, "mZl,,y2", "mZl,,y2", "mZl,,y2", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.super_invoke();
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(3, 5, "^'DDn7CXbht", "k2$Hw}d1jcq3/+:", "^'DDn7CXbht", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.dup2();
      assertEquals(154, CodeEmitter.NE);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Class<InputStream> class0 = InputStream.class;
      Type type0 = Type.getType(class0);
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("e,'<`Vl^", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 8, signature0, typeArray0);
      // Undeclared exception!
      try { 
        codeEmitter0.invoke_constructor_this(signature0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.ClassEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(810);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(4, 4, "^'DDn7C\bht", "^'DDn7C\bht", "^'DDn7C\bht", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        codeEmitter0.if_icmp(7, label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(827);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      Type type0 = Type.INT_TYPE;
      classEmitter0.visit(4, 4, "^'DDn7CXbht", "^'DDn7CXbht", "^'DDn7CXbht", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      // Undeclared exception!
      try { 
        codeEmitter0.throw_exception(type0, "java/lang/Class");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Type type0 = Type.INT_TYPE;
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("e,'<`Vl^0", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 8, signature0, typeArray0);
      // Undeclared exception!
      try { 
        codeEmitter0.invoke_virtual_this(signature0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.ClassEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Class<InputStream> class0 = InputStream.class;
      Type type0 = Type.getType(class0);
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("e,`Vl^0", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 8, signature0, typeArray0);
      // Undeclared exception!
      try { 
        codeEmitter0.instance_of_this();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.ClassEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777218);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.visit(2, 1, "[*zYq$", "[*zYq$", "[*zYq$", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.super_putstatic("[*zYq$", type0);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Type type0 = Type.LONG_TYPE;
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("7vcY^l", type0, typeArray0);
      Type[] typeArray1 = new Type[0];
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 9, signature0, typeArray1);
      // Undeclared exception!
      try { 
        codeEmitter0.athrow();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-22));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.visit(4, 4, "<init>", "<init>", "<init>", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.box(type0);
      assertEquals(4, Type.SHORT);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777192);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visit(1, 1, "F9Y-6Jyg5^G(V", "F9Y-6Jyg5^G(V", "F9Y-6Jyg5^G(V", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push("F9Y-6Jyg5^G(V");
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-7));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(5, 4, ",+", ",+", ",+", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      MethodInfo methodInfo0 = codeEmitter0.getMethodInfo();
      codeEmitter0.invoke(methodInfo0);
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-22));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(4, 4, "<init>", "<init>", "<init>", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      CodeEmitter codeEmitter1 = new CodeEmitter(codeEmitter0);
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[6];
      Type type0 = Type.LONG_TYPE;
      classEmitter0.visit(5, 4, ",+", ",+", ",+", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.super_getfield(",+", type0);
      assertEquals(7, type0.getSort());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-22));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(4, 4, "<init>", "<init>", "<init>", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Local local0 = codeEmitter0.make_local();
      codeEmitter0.iinc(local0, 2);
      assertEquals(100, CodeEmitter.SUB);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(4, 4, "mZl,,y#R2", "mZl,,y#R2", "mZl,,y#R2", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.checkcast_this();
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-22));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[8];
      Type type0 = Type.SHORT_TYPE;
      classEmitter0.visit(4, 4, "mZl)7y2", "mZl)7y2", "mZl)7y2", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      // Undeclared exception!
      try { 
        codeEmitter0.putfield(type0, "mZl)7y2", type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(864);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^'DDnCXbht";
      stringArray0[1] = "^'DDnCXbht";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(864, "^'DDnCXbht", "^'DDnCXbht", "^'DDnCXbht", stringArray0);
      Type type0 = Type.INT_TYPE;
      Type[] typeArray0 = new Type[6];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = type0;
      typeArray0[3] = type0;
      typeArray0[4] = type0;
      typeArray0[5] = type0;
      Signature signature0 = new Signature("^'DDnCXbht", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, methodVisitor0, 864, signature0, typeArray0);
      Signature signature1 = codeEmitter0.getSignature();
      assertSame(signature1, signature0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777201);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[19];
      Type type0 = Type.VOID_TYPE;
      classEmitter0.visit(1, 4, "rj", "rj", "rj", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.zero_or_null(type0);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(858);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[7];
      classEmitter0.visit(3, 5, "^'DDn7CXbht", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.monitorexit();
      assertEquals(154, CodeEmitter.NE);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Class<InputStream> class0 = InputStream.class;
      Type type0 = Type.getType(class0);
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("e,`Vl^0", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 8, signature0, typeArray0);
      boolean boolean0 = codeEmitter0.isStaticHook();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(827);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      Type type0 = Type.INT_TYPE;
      classEmitter0.visit(4, 4, "^'DDn7CXbht", "^'DDn7CXbht", "^'DDn7CXbht", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.array_store(type0);
      assertEquals(10, Type.OBJECT);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Type type0 = Type.VOID_TYPE;
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("e,`El^0", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 8, signature0, typeArray0);
      // Undeclared exception!
      try { 
        codeEmitter0.arraylength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-46));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.visit(4, 4, "mZl,,y2", "mZl,,y2", "mZl,,y2", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.swap(type0, type0);
      assertEquals(10, Type.OBJECT);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2147483615);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[13];
      Type type0 = Type.LONG_TYPE;
      classEmitter0.visit(3, 5, "%acMad!Q", stringArray0[0], stringArray0[1], stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(0, Type.VOID);
  }
}
