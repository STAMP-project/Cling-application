/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 18 06:11:13 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.BoundFunction;
import com.google.javascript.rhino.head.Callable;
import com.google.javascript.rhino.head.ClassShutter;
import com.google.javascript.rhino.head.CompilerEnvirons;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextAction;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.ContextListener;
import com.google.javascript.rhino.head.DefaultErrorReporter;
import com.google.javascript.rhino.head.ErrorReporter;
import com.google.javascript.rhino.head.Evaluator;
import com.google.javascript.rhino.head.EvaluatorException;
import com.google.javascript.rhino.head.Function;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.IdScriptableObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.Interpreter;
import com.google.javascript.rhino.head.InterpreterData;
import com.google.javascript.rhino.head.JavaAdapter;
import com.google.javascript.rhino.head.MemberBox;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeBoolean;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeError;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJavaClass;
import com.google.javascript.rhino.head.NativeJavaMethod;
import com.google.javascript.rhino.head.NativeJavaObject;
import com.google.javascript.rhino.head.NativeJavaTopPackage;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.PolicySecurityController;
import com.google.javascript.rhino.head.RegExpProxy;
import com.google.javascript.rhino.head.Script;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.SecurityController;
import com.google.javascript.rhino.head.Synchronizer;
import com.google.javascript.rhino.head.TopLevel;
import com.google.javascript.rhino.head.WrapFactory;
import com.google.javascript.rhino.head.debug.DebuggableScript;
import com.google.javascript.rhino.head.debug.Debugger;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.io.StringReader;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockError;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Context_ESTest extends Context_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      context0.addActivationName("language version");
      context0.removeActivationName("error reporter");
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test001()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.removeActivationName("error reporter");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Context context0 = new Context();
      context0.removeActivationName("error reporter");
      assertFalse(context0.generateObserverCount);
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      context0.isActivationNeeded("language version");
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getOptimizationLevel());
      assertFalse(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      context0.addActivationName("error reporter");
      context0.addActivationName("error reporter");
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test005()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.addActivationName("com.google.jascript.rhinoheadregexp.ReExpImpl");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Context context0 = new Context();
      context0.addActivationName("3");
      boolean boolean0 = context0.isActivationNeeded("3");
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
      assertTrue(boolean0);
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test007()  throws Throwable  {
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      SecurityController.initGlobal(policySecurityController0);
      Class<?> class0 = SecurityController.getStaticSecurityDomainClass();
      assertFalse(class0.isArray());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test008()  throws Throwable  {
      Context context0 = Context.getContext();
      boolean boolean0 = context0.isVersionECMA1();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Context context0 = Context.enter();
      boolean boolean0 = context0.isVersionECMA1();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Context context0 = new Context();
      boolean boolean0 = context0.isVersionECMA1();
      assertTrue(boolean0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Context context0 = new Context();
      context0.getRegExpProxy();
      RegExpProxy regExpProxy0 = context0.getRegExpProxy();
      assertNotNull(regExpProxy0);
      assertTrue(context0.isGeneratingSource());
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test012()  throws Throwable  {
      EvaluatorException evaluatorException0 = Context.reportRuntimeError("com.google.javascript.rhino.head.ContextListener$MockitoMock$1063498569");
      assertEquals(0, evaluatorException0.getColumnNumber());
      assertEquals(0, evaluatorException0.lineNumber());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(0.0);
      Short short0 = new Short((short)0);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeNumber0, short0, 140, "%Y", 3, nativeNumber0);
      // Undeclared exception!
      try { 
        IdScriptableObject.incompatibleCallError(idFunctionObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"%Y\" called on incompatible object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Context context0 = new Context();
      NativeString nativeString0 = new NativeString("error reporter");
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Evaluator evaluator0 = Context.createInterpreter();
      // Undeclared exception!
      try { 
        context0.compileFunction((Scriptable) nativeString0, ";X|fhl", evaluator0, (ErrorReporter) defaultErrorReporter0, "error reporter", 0, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // compileFunction only accepts source with single JS function: ;X|fhl
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test015()  throws Throwable  {
      Context context0 = Context.getContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Evaluator evaluator0 = Context.createInterpreter();
      // Undeclared exception!
      try { 
        context0.compileFunction((Scriptable) null, "language version", evaluator0, (ErrorReporter) defaultErrorReporter0, (String) null, 369, (Object) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Context context0 = new Context();
      NativeString nativeString0 = new NativeString("error reporter");
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Interpreter interpreter0 = new Interpreter();
      // Undeclared exception!
      try { 
        context0.compileFunction((Scriptable) nativeString0, "", (Evaluator) interpreter0, (ErrorReporter) defaultErrorReporter0, "", 9480, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // compileFunction only accepts source with single JS function: 
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Context context0 = new Context();
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      context0.setSecurityController(policySecurityController0);
      StringReader stringReader0 = new StringReader("language version");
      // Undeclared exception!
      try { 
        context0.evaluateReader((Scriptable) null, stringReader0, "s#vP2HmY", 2, "s#vP2HmY");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (s#vP2HmY#2)
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.evaluateString((Scriptable) null, (String) null, (String) null, 252, (Object) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      context0.setApplicationClassLoader(classLoader0);
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test020()  throws Throwable  {
      Context context0 = new Context();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        context0.setApplicationClassLoader(classLoader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Loader can not resolve Rhino classes
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test021()  throws Throwable  {
      Context context0 = Context.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      // Undeclared exception!
      try { 
        context0.setApplicationClassLoader(classLoader0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Context context0 = new Context();
      context0.setApplicationClassLoader((ClassLoader) null);
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
      assertTrue(context0.isGeneratingSource());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Context context0 = new Context();
      context0.setInstructionObserverThreshold(75);
      assertEquals(75, context0.getInstructionObserverThreshold());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setInstructionObserverThreshold((-1964));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test025()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.setInstructionObserverThreshold((-3017));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Context context0 = new Context();
      context0.setInstructionObserverThreshold(0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getInstructionObserverThreshold());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test027()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(2829, "language version", "82", true);
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createScript(interpreterData0, (Object) null);
      DebuggableScript debuggableScript0 = Context.getDebuggableView(interpretedFunction0);
      assertFalse(debuggableScript0.isGeneratedScript());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DebuggableScript debuggableScript0 = Context.getDebuggableView((Script) null);
      assertNull(debuggableScript0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test029()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        context0.setDebugger((Debugger) null, (Object) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Context context0 = new Context();
      context0.setDebugger((Debugger) null, (Object) null);
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertFalse(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Context context0 = new Context();
      WrapFactory wrapFactory0 = context0.getWrapFactory();
      assertNotNull(wrapFactory0);
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Context context0 = new Context();
      WrapFactory wrapFactory0 = new WrapFactory();
      context0.setWrapFactory(wrapFactory0);
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test033()  throws Throwable  {
      Context context0 = Context.getContext();
      WrapFactory wrapFactory0 = new WrapFactory();
      // Undeclared exception!
      try { 
        context0.setWrapFactory(wrapFactory0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setWrapFactory((WrapFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test035()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Scriptable scriptable0 = context0.newObject((Scriptable) nativeContinuation0);
      BoundFunction boundFunction0 = new BoundFunction(context0, nativeContinuation0, nativeContinuation0, nativeContinuation0, context0.emptyArgs);
      Synchronizer synchronizer0 = new Synchronizer(scriptable0, boundFunction0);
      // Undeclared exception!
      try { 
        context0.removeThreadLocal(synchronizer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Context context0 = new Context();
      NativeString nativeString0 = new NativeString("language version");
      context0.removeThreadLocal(nativeString0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test037()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        context0.putThreadLocal((Object) null, (Object) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Context context0 = new Context();
      TopLevel topLevel0 = new TopLevel();
      Synchronizer synchronizer0 = new Synchronizer(topLevel0);
      context0.putThreadLocal(topLevel0, synchronizer0);
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Context context0 = new Context();
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      context0.getThreadLocal(policySecurityController0);
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test040()  throws Throwable  {
      Context context0 = Context.getContext();
      Interpreter interpreter0 = new Interpreter();
      Object object0 = context0.getThreadLocal(interpreter0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test041()  throws Throwable  {
      Context context0 = Context.getContext();
      Context.ClassShutterSetter context_ClassShutterSetter0 = context0.getClassShutterSetter();
      assertNull(context_ClassShutterSetter0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test042()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        context0.setClassShutter((ClassShutter) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setClassShutter((ClassShutter) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Context context0 = new Context();
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      SecurityController.initGlobal(policySecurityController0);
      // Undeclared exception!
      try { 
        context0.setSecurityController(policySecurityController0);
        fail("Expecting exception: SecurityException");
      
      } catch(SecurityException e) {
         //
         // Can not overwrite existing global SecurityController object
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setSecurityController((SecurityController) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test046()  throws Throwable  {
      Context context0 = Context.enter();
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      // Undeclared exception!
      try { 
        context0.setSecurityController(policySecurityController0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test047()  throws Throwable  {
      Context context0 = new Context();
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      context0.setSecurityController(policySecurityController0);
      // Undeclared exception!
      try { 
        context0.setSecurityController(policySecurityController0);
        fail("Expecting exception: SecurityException");
      
      } catch(SecurityException e) {
         //
         // Can not overwrite existing SecurityController object
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Context context0 = new Context();
      context0.setOptimizationLevel((-1));
      // Undeclared exception!
      try { 
        context0.setMaximumInterpreterStackDepth((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot set maximumInterpreterStackDepth to less than 1
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Context context0 = new Context();
      context0.setOptimizationLevel((-1));
      context0.setMaximumInterpreterStackDepth(237);
      assertEquals(237, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        context0.setMaximumInterpreterStackDepth(3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setMaximumInterpreterStackDepth(237);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot set maximumInterpreterStackDepth when optimizationLevel != -1
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setOptimizationLevel(130);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Optimization level outside [-1..9]: 130
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setOptimizationLevel((-280));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Optimization level outside [-1..9]: -280
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Context context0 = new Context();
      assertEquals(0, context0.getOptimizationLevel());
      
      context0.setOptimizationLevel((-2));
      assertEquals((-1), context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test055()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.setOptimizationLevel(13);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test056()  throws Throwable  {
      Context context0 = Context.enter();
      assertTrue(context0.isGeneratingSource());
      
      // Undeclared exception!
      try { 
        context0.setGeneratingSource(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Context context0 = new Context();
      assertTrue(context0.isGeneratingSource());
      
      context0.setGeneratingSource(false);
      assertFalse(context0.isGeneratingSource());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Context context0 = new Context();
      context0.setOptimizationLevel(5);
      context0.setGeneratingDebug(true);
      assertTrue(context0.isGeneratingDebug());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Context context0 = new Context();
      context0.setGeneratingDebug(false);
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.isGeneratingDebug());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test060()  throws Throwable  {
      Context context0 = Context.getContext();
      assertFalse(context0.isGeneratingDebugChanged());
      
      // Undeclared exception!
      try { 
        context0.setGeneratingDebug(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Context context0 = new Context();
      context0.setGeneratingDebug(true);
      assertTrue(context0.isGeneratingDebug());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.throwAsScriptRuntimeEx((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.WrappedException", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test063()  throws Throwable  {
      MockError mockError0 = new MockError();
      InvocationTargetException invocationTargetException0 = new InvocationTargetException(mockError0);
      // Undeclared exception!
      try { 
        Context.throwAsScriptRuntimeEx(invocationTargetException0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test064()  throws Throwable  {
      Context context0 = new Context();
      NativeString nativeString0 = new NativeString("error reporter");
      // Undeclared exception!
      try { 
        Context.javaToJS(context0, nativeString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      NativeString nativeString0 = new NativeString("error reporter");
      Object object0 = Context.javaToJS(nativeString0, nativeString0);
      assertEquals("error reporter", object0.toString());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test066()  throws Throwable  {
      Context context0 = Context.getContext();
      Interpreter interpreter0 = new Interpreter();
      InterpretedFunction interpretedFunction0 = (InterpretedFunction)interpreter0.createScriptObject((Object) null, (Object) null);
      NativeObject nativeObject0 = (NativeObject)context0.newObject((Scriptable) interpretedFunction0);
      Boolean boolean0 = (Boolean)Context.javaToJS(context0.generateObserverCount, nativeObject0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Context context0 = new Context();
      NativeString nativeString0 = new NativeString("error reporter");
      Context.javaToJS(context0.VERSION_DEFAULT, nativeString0);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Character character0 = new Character('/');
      Object object0 = Context.javaToJS(character0, (Scriptable) null);
      assertEquals("/", object0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Object object0 = Context.javaToJS("$'", nativeJavaObject0);
      assertEquals("$'", object0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Method[] methodArray0 = new Method[0];
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      NativeArray nativeArray0 = new NativeArray(context0.emptyArgs);
      // Undeclared exception!
      try { 
        context0.newArray((Scriptable) nativeArray0, (Object[]) methodArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeArray nativeArray0 = (NativeArray)context0.newArray((Scriptable) nativeContinuation0, context0.emptyArgs);
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Context context0 = Context.enter();
      BaseFunction baseFunction0 = new BaseFunction();
      String string0 = context0.decompileFunctionBody(baseFunction0, 2);
      assertEquals("[native code, arity=0]\n", string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Context context0 = Context.enter();
      NativeObject nativeObject0 = new NativeObject();
      Synchronizer synchronizer0 = new Synchronizer(nativeObject0);
      String string0 = context0.decompileFunctionBody(synchronizer0, 2);
      assertEquals("[native code]\n", string0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      MemberBox[] memberBoxArray0 = new MemberBox[0];
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(memberBoxArray0, "error reporter");
      String string0 = context0.decompileFunction(nativeJavaMethod0, 130);
      assertEquals("function error reporter() {/*\n*/}\n", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test075()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.decompileFunction((Function) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test076()  throws Throwable  {
      Context context0 = new Context();
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      // Undeclared exception!
      try { 
        context0.compileString("", "", (-29), nativeJavaClass0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test077()  throws Throwable  {
      Context context0 = new Context();
      StringReader stringReader0 = new StringReader("error reporter");
      TopLevel topLevel0 = new TopLevel();
      // Undeclared exception!
      try { 
        context0.evaluateReader(topLevel0, stringReader0, "error reporter", (-1344), stringReader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test078()  throws Throwable  {
      Context context0 = Context.getContext();
      boolean boolean0 = context0.stringIsCompilableUnit("language version");
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertFalse(boolean0);
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test079()  throws Throwable  {
      Context context0 = Context.getContext();
      boolean boolean0 = context0.stringIsCompilableUnit("");
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertTrue(boolean0);
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test080()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      BaseFunction baseFunction0 = new BaseFunction();
      Context context0 = new Context(contextFactory0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      // Undeclared exception!
      try { 
        context0.callFunctionWithContinuations(baseFunction0, importerTopLevel0, (Object[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Function argument was not created by interpreted mode 
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test081()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = (ImporterTopLevel)context0.scratchScriptable;
      // Undeclared exception!
      try { 
        context0.executeScriptWithContinuations((Script) null, importerTopLevel0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Script argument was not a script or was not created by interpreted mode 
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test082()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.reportError("language version", "language version", 100, "error reporter", 8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // language version (language version#100)
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test083()  throws Throwable  {
      Context context0 = Context.enter();
      context0.firePropertyChange("error reporter", "error reporter", "error reporter");
      assertTrue(context0.isSealed());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Context context0 = new Context();
      Interpreter interpreter0 = new Interpreter();
      context0.firePropertyChange(" & ", (Object) null, interpreter0);
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Context context0 = new Context();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("error reporter", propertyChangeListener0);
      context0.removePropertyChangeListener(propertyChangeListenerProxy0);
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test086()  throws Throwable  {
      Context context0 = Context.getContext();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("error reporter", propertyChangeListener0);
      // Undeclared exception!
      try { 
        context0.addPropertyChangeListener(propertyChangeListenerProxy0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Context context0 = new Context();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("error reporter", propertyChangeListener0);
      context0.addPropertyChangeListener(propertyChangeListenerProxy0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test088()  throws Throwable  {
      Context context0 = Context.getContext();
      Locale locale0 = new Locale("error reporter");
      // Undeclared exception!
      try { 
        context0.setLocale(locale0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Context context0 = new Context();
      Locale locale0 = Locale.ROOT;
      context0.setLocale(locale0);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Context context0 = new Context();
      Locale locale0 = context0.getLocale();
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
      assertTrue(context0.isGeneratingSource());
      assertFalse(context0.generateObserverCount);
      assertNotNull(locale0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      context0.setErrorReporter(defaultErrorReporter0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertFalse(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setErrorReporter((ErrorReporter) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      ErrorReporter errorReporter1 = context0.setErrorReporter(errorReporter0);
      ErrorReporter errorReporter2 = context0.setErrorReporter(errorReporter1);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertNotSame(errorReporter2, defaultErrorReporter0);
      assertFalse(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Context context0 = new Context();
      String string0 = context0.getImplementationVersion();
      assertEquals(0, context0.getOptimizationLevel());
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getLanguageVersion());
      assertNotNull(string0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals("Rhino 1.7 release 4 PRERELEASE 2019 07 12", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      boolean boolean0 = Context.isValidLanguageVersion(166);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      boolean boolean0 = Context.isValidLanguageVersion(180);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      assertTrue(compilerEnvirons0.getWarnTrailingComma());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      boolean boolean0 = Context.isValidLanguageVersion(150);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      boolean boolean0 = Context.isValidLanguageVersion(140);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      boolean boolean0 = Context.isValidLanguageVersion(130);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      boolean boolean0 = Context.isValidLanguageVersion(120);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      boolean boolean0 = Context.isValidLanguageVersion(110);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Context context0 = new Context();
      assertEquals(0, context0.getLanguageVersion());
      
      context0.setLanguageVersion(100);
      assertEquals(100, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      boolean boolean0 = Context.isValidLanguageVersion(160);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test105()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.setLanguageVersion((-1179));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test106()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.unseal((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test107()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        context0.seal(nativeIterator_StopIteration0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Context context0 = new Context();
      context0.seal("error reporter");
      assertTrue(context0.isSealed());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ContextListener contextListener0 = mock(ContextListener.class, new ViolatedAssumptionAnswer());
      Context.addContextListener(contextListener0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Context context0 = new Context();
      ContextFactory contextFactory0 = new ContextFactory();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Context.call(contextFactory0, (Callable) nativeContinuation0, (Scriptable) nativeContinuation0, (Scriptable) nativeContinuation0, context0.emptyArgs);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test111()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        context0.removePropertyChangeListener((PropertyChangeListener) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Context context0 = null;
      try {
        context0 = new Context((ContextFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // factory == null
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Object object0 = Context.getUndefinedValue();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test114()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        context0.decompileScript((Script) null, 770);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.reportRuntimeError3("@[xzD@*", "@[xzD@*", "@[xzD@*", "@[xzD@*");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property @[xzD@*
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test116()  throws Throwable  {
      Context context0 = new Context();
      NativeCall nativeCall0 = new NativeCall();
      // Undeclared exception!
      try { 
        context0.evaluateString(nativeCall0, "cm.googl.javascript.rhino.head.tools.debugger.Main", "error reporter", 13, (Object) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Context.setCachingEnabled(false);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Context context0 = Context.enter();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        context0.newObject((Scriptable) nativeContinuation0, "}KOL6D");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Constructor for \"}KOL6D\" not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test119()  throws Throwable  {
      Context context0 = Context.enter();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      // Undeclared exception!
      try { 
        context0.setErrorReporter(errorReporter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Context context0 = Context.enter();
      Object object0 = context0.getDebuggerContextData();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test121()  throws Throwable  {
      MockError mockError0 = new MockError("language version");
      Context.reportWarning("error reporter", (Throwable) mockError0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Context context0 = Context.enter();
      Debugger debugger0 = context0.getDebugger();
      assertNull(debugger0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeError nativeError0 = new NativeError();
      // Undeclared exception!
      try { 
        Context.reportRuntimeError4("error reporter", context0, context0, context0, nativeError0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property error reporter
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.call((ContextAction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test125()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      boolean boolean0 = context0.isSealed();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test126()  throws Throwable  {
      Context context0 = new Context();
      Interpreter interpreter0 = new Interpreter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Script script0 = context0.compileString("QljEm", (Evaluator) interpreter0, (ErrorReporter) defaultErrorReporter0, "QljEm", 110, (Object) null);
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      // Undeclared exception!
      try { 
        context0.executeScriptWithContinuations(script0, nativeJavaTopPackage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test127()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      context0.observeInstructionCount(4);
      assertEquals(130, Context.VERSION_1_3);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Context context0 = Context.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      Class<NativeBoolean> class0 = NativeBoolean.class;
      NativeJavaTopPackage nativeJavaTopPackage1 = (NativeJavaTopPackage)Context.toObject((Object) nativeJavaTopPackage0, (Scriptable) nativeJavaTopPackage0, (Class<?>) class0);
      assertEquals(0, ScriptableObject.EMPTY);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ContextListener contextListener0 = mock(ContextListener.class, new ViolatedAssumptionAnswer());
      Context.removeContextListener(contextListener0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      // Undeclared exception!
      try { 
        JavaAdapter.runScript((Script) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.JavaAdapter$2", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Context context0 = new Context();
      NativeString nativeString0 = new NativeString("error reporter");
      // Undeclared exception!
      try { 
        context0.resumeContinuation(nativeString0, nativeString0, nativeString0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.head.NativeString cannot be cast to com.google.javascript.rhino.head.NativeContinuation
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test132()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.reportError("language version");
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // language version
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      boolean boolean0 = Context.toBoolean(context0);
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test134()  throws Throwable  {
      Context context0 = new Context();
      NativeCall nativeCall0 = new NativeCall();
      // Undeclared exception!
      try { 
        Context.toObject((Object) context0, (Scriptable) nativeCall0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.reportRuntimeError0("language version");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property language version
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Context context0 = new Context();
      Context.toString((Object) context0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
      assertTrue(context0.isGeneratingSource());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Class<IdFunctionObject> class0 = IdFunctionObject.class;
      try { 
        Context.toType(fileSystemHandling0, class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot convert org.evosuite.runtime.testdata.FileSystemHandling@5dc699ad to com.google.javascript.rhino.head.IdFunctionObject
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Context context0 = Context.enter();
      Interpreter interpreter0 = new Interpreter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      InterpretedFunction interpretedFunction0 = (InterpretedFunction)context0.compileString("QljEm", (Evaluator) interpreter0, (ErrorReporter) defaultErrorReporter0, "QljEm", 110, (Object) null);
      // Undeclared exception!
      try { 
        context0.executeScriptWithContinuations(interpretedFunction0, interpretedFunction0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"QljEm\" is not defined. (QljEm#110)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Context context0 = new Context();
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      // Undeclared exception!
      try { 
        Context.call((ContextFactory) null, (Callable) nativeJavaClass0, (Scriptable) nativeJavaClass0, (Scriptable) nativeJavaClass0, context0.emptyArgs);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.Reflection", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      Context.ClassShutterSetter context_ClassShutterSetter0 = context0.getClassShutterSetter();
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertNotNull(context_ClassShutterSetter0);
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getOptimizationLevel());
  }
}
