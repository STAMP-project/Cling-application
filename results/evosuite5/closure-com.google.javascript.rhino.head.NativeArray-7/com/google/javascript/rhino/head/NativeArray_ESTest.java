/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 22:18:26 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.FunctionObject;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJavaClass;
import com.google.javascript.rhino.head.NativeJavaPackage;
import com.google.javascript.rhino.head.NativeJavaTopPackage;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.NativeWith;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.TopLevel;
import java.util.Collection;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class NativeArray_ESTest extends NativeArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.findPrototypeId("reverse");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-794L));
      nativeArray0.findPrototypeId("fIhO,Pi");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(2467L);
      nativeArray0.findPrototypeId("B@:k[0QV#,r");
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(874L);
      nativeArray0.findPrototypeId("=Pnuiy.*");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test004()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      // Undeclared exception!
      try { 
        nativeArray0.exportAsJSClass(20, nativeArray0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: Array.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-8500279345513818784L));
      nativeArray0.findPrototypeId("asHn");
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(874L);
      nativeArray0.findPrototypeId("asi");
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-747L));
      nativeArray0.findPrototypeId("m=a");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test008()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-2089L));
      nativeArray0.findPrototypeId("JavaException");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.findPrototypeId("rightContext");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1431655764L);
      nativeArray0.findPrototypeId("Fd]nn=vLV>");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-747L));
      nativeArray0.findPrototypeId("decodeURI");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-747L));
      Consumer<ImporterTopLevel> consumer0 = (Consumer<ImporterTopLevel>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        nativeArray0.forEach(consumer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(881L);
      // Undeclared exception!
      try { 
        nativeArray0.listIterator((-2394));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2394
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(4294967295L);
      // Undeclared exception!
      try { 
        nativeArray0.listIterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-794L));
      Object[] objectArray0 = new Object[9];
      objectArray0[2] = (Object) nativeArray0;
      NativeArray nativeArray1 = new NativeArray(objectArray0);
      nativeArray1.lastIndexOf(nativeArray0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-3156152948152813503L));
      Object[] objectArray0 = new Object[7];
      objectArray0[6] = (Object) nativeArray0;
      NativeArray nativeArray1 = new NativeArray(objectArray0);
      nativeArray1.lastIndexOf((Object) null);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1362L);
      nativeArray0.lastIndexOf("asin");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeArray nativeArray0 = new NativeArray(4294967295L);
      // Undeclared exception!
      try { 
        nativeArray0.lastIndexOf(nativeContinuation0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-3156152948152813503L));
      nativeArray0.lastIndexOf((Object) null);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      nativeArray0.indexOf(consumer0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(9218868437227405312L);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeArray0, nativeArray0, 0, 4);
      // Undeclared exception!
      try { 
        nativeArray0.indexOf(idFunctionObject0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(874L);
      // Undeclared exception!
      try { 
        nativeArray0.get(2695L);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(904L);
      // Undeclared exception!
      try { 
        nativeArray0.get((-5702008784649933400L));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(4294967295L);
      // Undeclared exception!
      try { 
        nativeArray0.size();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-3156152948152813503L));
      nativeArray0.size();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-794L));
      NativeArray nativeArray1 = new NativeArray(2147483647L);
      nativeArray0.containsAll(nativeArray1);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.containsAll(nativeArray0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(4294967295L);
      // Undeclared exception!
      try { 
        nativeArray0.toArray((Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Double double0 = new Double(2);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) double0;
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.contains((Object) null);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      NativeArray.getLengthProperty(context0, nativeContinuation0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      NativeString nativeString0 = new NativeString("msg.bad.backref");
      NativeArray.getLengthProperty((Context) null, nativeString0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test033()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1412L);
      Predicate<NativeJavaPackage> predicate0 = Predicate.isEqual((Object) null);
      // Undeclared exception!
      try { 
        nativeArray0.setInstanceIdValue(1, predicate0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // RangeError: Inappropriate array length.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(2147483626L);
      // Undeclared exception!
      try { 
        nativeArray0.setDenseOnly(true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NativeArray nativeArray0 = new NativeArray((-3156152948152813503L));
      Short short0 = Short.valueOf((short) (-417));
      objectArray0[0] = (Object) short0;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      IdFunctionObject idFunctionObject0 = nativeArray0.exportAsJSClass(1203, nativeArray0, false);
      // Undeclared exception!
      try { 
        nativeArray0.execIdCall(idFunctionObject0, context0, idFunctionObject0, nativeArray0, objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // RangeError: Inappropriate array length.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Object[] objectArray0 = new Object[20];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Context context0 = Context.enter();
      NativeCall nativeCall0 = new NativeCall();
      IdFunctionObject idFunctionObject0 = nativeArray0.exportAsJSClass(5, nativeCall0, true);
      nativeArray0.execIdCall(idFunctionObject0, context0, idFunctionObject0, nativeCall0, objectArray0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test037()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-747L));
      Context context0 = new Context();
      IdFunctionObject idFunctionObject0 = nativeArray0.exportAsJSClass(5, nativeArray0, false);
      // Undeclared exception!
      try { 
        nativeArray0.execIdCall(idFunctionObject0, context0, idFunctionObject0, idFunctionObject0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Context context0 = new Context();
      NativeObject nativeObject0 = new NativeObject();
      // Undeclared exception!
      try { 
        nativeArray0.defineOwnProperty(context0, (Object) nativeObject0, (ScriptableObject) nativeObject0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-816L));
      Context context0 = Context.enter();
      NativeObject nativeObject0 = new NativeObject();
      nativeArray0.defineOwnProperty(context0, (Object) nativeArray0.PERMANENT, (ScriptableObject) nativeObject0, true);
      // Undeclared exception!
      try { 
        nativeArray0.defineOwnProperty(context0, (Object) nativeArray0, (ScriptableObject) nativeArray0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-794L));
      Context context0 = new Context();
      Double double0 = new Double(8);
      nativeArray0.getOwnPropertyDescriptor(context0, double0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Double double0 = new Double(2);
      Context context0 = new Context();
      nativeArray0.getOwnPropertyDescriptor(context0, double0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1431655764L);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        nativeArray0.getOwnPropertyDescriptor(context0, nativeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.getAttributes(0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test044()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes(6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 6 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test045()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(454L);
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes((-2306));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property -2306 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test046()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-794L));
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes(4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 4 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test047()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1431655764L);
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes(104);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 104 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(2028L);
      ScriptableObject.putProperty((Scriptable) nativeArray0, "reverse", (Object) nativeArray0);
      nativeArray0.getIndexIds();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.getIndexIds();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.getIndexIds();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(2L);
      nativeArray0.getIndexIds();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-747L));
      nativeArray0.exportAsJSClass(5, nativeArray0, false);
      nativeArray0.delete(0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test053()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-747L));
      TopLevel topLevel0 = new TopLevel();
      nativeArray0.exportAsJSClass(120, topLevel0, true);
      // Undeclared exception!
      try { 
        nativeArray0.delete(4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: 4.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(874L);
      nativeArray0.delete(13);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-747L));
      nativeArray0.delete((-3));
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1412L);
      nativeArray0.delete(1604);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1431655764L);
      nativeArray0.delete(1575);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-154L));
      Class<Integer> class0 = Integer.TYPE;
      ScriptableObject.putProperty((Scriptable) nativeArray0, 2, (Object) class0);
      nativeArray0.contains(class0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test059()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.sealObject();
      // Undeclared exception!
      try { 
        ScriptableObject.putProperty((Scriptable) nativeArray0, 1, (Object) nativeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: 1.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeArray nativeArray0 = new NativeArray(1);
      nativeArray0.put(1, (Scriptable) nativeContinuation0, (Object) nativeContinuation0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      ScriptableObject.putProperty((Scriptable) nativeArray0, 1, (Object) nativeArray0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      nativeArray0.put("TypeError", (Scriptable) nativeJavaTopPackage0, (Object) classLoader0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test063()  throws Throwable  {
      Double double0 = new Double(4.294966879E9);
      Context context0 = new Context();
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Double double0 = new Double(2);
      Context context0 = new Context();
      nativeArray0.getOwnPropertyDescriptor(context0, double0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test065()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-154L));
      Context context0 = Context.getContext();
      context0.initStandardObjects((ScriptableObject) nativeArray0, true);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      ScriptableObject.putProperty((Scriptable) nativeArray0, "3", (Object) null);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-747L));
      Context context0 = new Context();
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      // Undeclared exception!
      try { 
        nativeArray0.getOwnPropertyDescriptor(context0, nativeWith0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      ScriptableObject.putProperty((Scriptable) nativeArray0, 1, (Object) nativeArray0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(874L);
      ScriptableObject.putProperty((Scriptable) nativeArray0, (-1066), (Object) nativeArray0);
      nativeArray0.getIndexIds();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(4294967295L);
      ScriptableObject.putProperty((Scriptable) nativeArray0, 4, (Object) nativeArray0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test071()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-747L));
      nativeArray0.exportAsJSClass(5, nativeArray0, false);
      ScriptableObject.putProperty((Scriptable) nativeArray0, 180, (Object) nativeArray0);
      Class<Integer> class0 = Integer.class;
      nativeArray0.getDefaultValue(class0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeArray nativeArray0 = new NativeArray(0);
      nativeArray0.get((-1), (Scriptable) nativeContinuation0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test073()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      Context context0 = Context.getCurrentContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      Float float0 = new Float(0.0F);
      nativeArray0.defineOwnProperty(context0, float0, scriptableObject0);
      nativeArray0.toArray();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NativeArray nativeArray0 = new NativeArray((-3156152948152813503L));
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      IdFunctionObject idFunctionObject0 = nativeArray0.exportAsJSClass(1203, nativeArray0, false);
      nativeArray0.execIdCall(idFunctionObject0, context0, idFunctionObject0, nativeArray0, objectArray0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test075()  throws Throwable  {
      Context context0 = new Context();
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test076()  throws Throwable  {
      Context context0 = Context.enter();
      TopLevel topLevel0 = new TopLevel();
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test077()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      // Undeclared exception!
      try { 
        nativeArray0.setInstanceIdValue(1, nativeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        nativeArray0.setInstanceIdValue(8, nativeIterator_StopIteration0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 8
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.getInstanceIdValue(1);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1412L);
      // Undeclared exception!
      try { 
        nativeArray0.getInstanceIdName((-13));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -13
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-1146L));
      nativeArray0.setInstanceIdAttributes(1, 0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1400L);
      nativeArray0.setInstanceIdAttributes(15, 15);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(874L);
      Predicate<NativeJavaPackage> predicate0 = Predicate.isEqual((Object) nativeArray0);
      Predicate<NativeJavaPackage> predicate1 = predicate0.negate();
      // Undeclared exception!
      try { 
        nativeArray0.removeIf(predicate1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray$3", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      UnaryOperator<Short> unaryOperator0 = UnaryOperator.identity();
      // Undeclared exception!
      try { 
        nativeArray0.replaceAll(unaryOperator0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray$3", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Float float0 = new Float((double) 13);
      // Undeclared exception!
      try { 
        nativeArray0.add((Object) float0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-794L));
      // Undeclared exception!
      try { 
        nativeArray0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(5L);
      // Undeclared exception!
      try { 
        nativeArray0.remove(1272);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      LinkedList<NativeNumber> linkedList0 = new LinkedList<NativeNumber>();
      // Undeclared exception!
      try { 
        nativeArray0.addAll(1380, (Collection) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      NativeArray.getMaximumInitialCapacity();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Object[] objectArray0 = new Object[11];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      // Undeclared exception!
      try { 
        nativeArray0.subList(3751, (-1445364414));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(874L);
      // Undeclared exception!
      try { 
        nativeArray0.retainAll((Collection) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1431655764L);
      nativeArray0.getAllIds();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-7698142301602209613L));
      nativeArray0.jsGet_length();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-3156152948152813503L));
      Object[] objectArray0 = new Object[1];
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      ScriptableObject.putProperty((Scriptable) nativeArray0, 863, (Object) nativeJavaClass0);
      nativeArray0.toArray(objectArray0);
      assertFalse(nativeArray0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      // Undeclared exception!
      try { 
        nativeArray0.set(9, nativeArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(881L);
      LinkedList<FunctionObject> linkedList0 = new LinkedList<FunctionObject>();
      // Undeclared exception!
      try { 
        nativeArray0.addAll((Collection) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      Object[] objectArray0 = nativeArray0.toArray();
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        nativeArray0.add((-160), (Object) nativeIterator_StopIteration0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      // Undeclared exception!
      try { 
        nativeArray0.remove((Object) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(881L);
      // Undeclared exception!
      try { 
        nativeArray0.removeAll((Collection) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      NativeArray.setMaximumInitialCapacity(13);
  }
}
