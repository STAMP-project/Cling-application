/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 15:06:22 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.EvaluatorException;
import com.google.javascript.rhino.head.Interpreter;
import com.google.javascript.rhino.head.InterpreterData;
import com.google.javascript.rhino.head.NativeContinuation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Interpreter_ESTest extends Interpreter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Interpreter.GeneratorState interpreter_GeneratorState0 = new Interpreter.GeneratorState((-1954), (Object) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData(7, "error reporter", "error reporter", false);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData(0, "language version", "language version", false);
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-40);
      interpreterData0.itsMaxFrameArray = (int) (byte) (-40);
      interpreterData0.itsMaxLocals = 8;
      byteArray0[4] = (byte)0;
      byteArray0[0] = (byte) (-40);
      byteArray0[6] = (byte)0;
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Context.enter();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData(0, "^L}r,&NYc8{m=tN", "^L}r,&NYc8{m=tN", false);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-50);
      byteArray0[3] = (byte) (-10);
      byteArray0[5] = (byte) (-23);
      byteArray0[6] = (byte)25;
      byteArray0[7] = (byte) (-50);
      interpreterData0.itsICode = byteArray0;
      int[] intArray0 = interpreterData0.itsExceptionTable;
      int[] intArray1 = interpreterData0.itsExceptionTable;
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData((-267), (String) null, (String) null, true);
      InterpreterData interpreterData1 = new InterpreterData(interpreterData0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "zr&LfX+[v\\As_.6P\"a1";
      InterpreterData interpreterData0 = new InterpreterData(190, "zr&LfX+[vAs_.6P\"a1", ")F", false);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte)50;
      byteArray0[4] = (byte) (-7);
      byteArray0[5] = (byte)62;
      byteArray0[6] = (byte)6;
      byteArray0[7] = (byte) (-2);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(0, "", "", true);
      byte[] byteArray0 = new byte[18];
      byteArray0[4] = (byte)0;
      byteArray0[0] = (byte) (-62);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = (-228);
      String string0 = "A;qPkse";
      String string1 = "";
      InterpreterData interpreterData0 = new InterpreterData(105, "", (String) null, false);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData(0, "", "", false);
      byte[] byteArray0 = new byte[32];
      byteArray0[4] = (byte)0;
      byteArray0[15] = (byte) (-8);
      byteArray0[7] = (byte)0;
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(0, "language version", "language version", true);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-11);
      byteArray0[1] = (byte) (-57);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData(0, "language version", "language version", false);
      byte[] byteArray0 = new byte[6];
      byteArray0[4] = (byte) (-47);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData(0, "language version", "language version", false);
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-27);
      interpreterData0.itsMaxFrameArray = (int) (byte) (-27);
      interpreterData0.itsMaxLocals = 8;
      byteArray0[6] = (byte) (-27);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData(0, "language version", "language version", false);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)6;
      byteArray0[4] = (byte)6;
      byteArray0[4] = (byte)0;
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData(0, "language version", "language version", false);
      byte[] byteArray0 = new byte[8];
      byteArray0[7] = (byte) (-21);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(0, "language version", "language version", true);
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte)7;
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(0, "language version", "language version", true);
      byte[] byteArray0 = new byte[20];
      interpreterData0.itsMaxStack = 9;
      byteArray0[0] = (byte) (-23);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  @Ignore
  public void test17()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      String string0 = "Interpreter frames not found";
      EvaluatorException evaluatorException0 = null;
      try {
        evaluatorException0 = new EvaluatorException("Interpreter frames not found");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData(0, "language version", "language version", false);
      byte[] byteArray0 = new byte[20];
      byteArray0[10] = (byte)0;
      byteArray0[4] = (byte)50;
      byteArray0[7] = (byte)50;
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData(0, "language version", "language version", false);
      byte[] byteArray0 = new byte[8];
      byteArray0[7] = (byte) (-45);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData(0, "language version", "language version", false);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-48);
      byteArray0[4] = (byte) (-48);
      byteArray0[4] = (byte)0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      interpreterData0.itsICode = byteArray0;
  }
}
