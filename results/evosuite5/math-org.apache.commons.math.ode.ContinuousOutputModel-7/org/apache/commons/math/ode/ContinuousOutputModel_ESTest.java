/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 22 11:42:52 GMT 2019
 */

package org.apache.commons.math.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ConcurrentModificationException;
import org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator;
import org.apache.commons.math.ode.ContinuousOutputModel;
import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math.ode.GillStepInterpolator;
import org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator;
import org.apache.commons.math.ode.StepInterpolator;
import org.apache.commons.math.ode.ThreeEighthesStepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ContinuousOutputModel_ESTest extends ContinuousOutputModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      continuousOutputModel0.requiresDenseOutput();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      double[] doubleArray0 = new double[0];
      double[][] doubleArray1 = new double[1][6];
      GraggBulirschStoerStepInterpolator graggBulirschStoerStepInterpolator0 = new GraggBulirschStoerStepInterpolator(doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray1, false);
      continuousOutputModel0.handleStep(graggBulirschStoerStepInterpolator0, false);
      continuousOutputModel0.setInterpolatedTime((-2034.188506770808));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      // Undeclared exception!
      try { 
        continuousOutputModel0.getInterpolatedTime();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      continuousOutputModel0.append(continuousOutputModel0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      GillStepInterpolator gillStepInterpolator0 = new GillStepInterpolator();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassicalRungeKuttaStepInterpolator classicalRungeKuttaStepInterpolator0 = new ClassicalRungeKuttaStepInterpolator();
      classicalRungeKuttaStepInterpolator0.previousTime = (-1203.60534308);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = classicalRungeKuttaStepInterpolator0.equations;
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[8][5];
      gillStepInterpolator0.reinitialize((FirstOrderDifferentialEquations) null, doubleArray0, doubleArray1, false);
      gillStepInterpolator0.currentTime = 884.0847567168782;
      classicalRungeKuttaStepInterpolator0.currentTime = (-1203.60534308);
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      continuousOutputModel0.handleStep(classicalRungeKuttaStepInterpolator0, false);
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      continuousOutputModel0.handleStep(classicalRungeKuttaStepInterpolator0, false);
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      continuousOutputModel0.handleStep(classicalRungeKuttaStepInterpolator0, false);
      continuousOutputModel0.handleStep(classicalRungeKuttaStepInterpolator0, false);
      // Undeclared exception!
      try { 
        continuousOutputModel0.setInterpolatedTime(395.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      GillStepInterpolator gillStepInterpolator0 = new GillStepInterpolator();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassicalRungeKuttaStepInterpolator classicalRungeKuttaStepInterpolator0 = new ClassicalRungeKuttaStepInterpolator();
      classicalRungeKuttaStepInterpolator0.previousTime = (-1203.60534308);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = classicalRungeKuttaStepInterpolator0.equations;
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[5][5];
      gillStepInterpolator0.reinitialize((FirstOrderDifferentialEquations) null, doubleArray0, doubleArray1, false);
      gillStepInterpolator0.currentTime = 886.0;
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      continuousOutputModel0.handleStep(classicalRungeKuttaStepInterpolator0, false);
      // Undeclared exception!
      try { 
        continuousOutputModel0.setInterpolatedTime(180.98128);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      continuousOutputModel0.handleStep(threeEighthesStepInterpolator0, false);
      ContinuousOutputModel continuousOutputModel1 = new ContinuousOutputModel();
      continuousOutputModel1.append(continuousOutputModel0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      continuousOutputModel0.getFinalTime();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      // Undeclared exception!
      try { 
        continuousOutputModel0.getInterpolatedState();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      GillStepInterpolator gillStepInterpolator0 = new GillStepInterpolator();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      double[] doubleArray0 = new double[5];
      double[][] doubleArray1 = new double[5][5];
      gillStepInterpolator0.currentTime = 104.82814665332437;
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      // Undeclared exception!
      try { 
        continuousOutputModel0.setInterpolatedTime(1179.75482510525);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.GillStepInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      threeEighthesStepInterpolator0.previousTime = 2.0;
      continuousOutputModel0.handleStep(threeEighthesStepInterpolator0, false);
      // Undeclared exception!
      try { 
        continuousOutputModel0.setInterpolatedTime((-2034.188506770808));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.ThreeEighthesStepInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      continuousOutputModel0.handleStep(threeEighthesStepInterpolator0, true);
      continuousOutputModel0.handleStep(threeEighthesStepInterpolator0, false);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      double[] doubleArray0 = new double[3];
      double[][] doubleArray1 = new double[2][6];
      GraggBulirschStoerStepInterpolator graggBulirschStoerStepInterpolator0 = new GraggBulirschStoerStepInterpolator(doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray1, false);
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      continuousOutputModel0.handleStep(threeEighthesStepInterpolator0, true);
      continuousOutputModel0.handleStep(graggBulirschStoerStepInterpolator0, true);
      double double0 = (-906.31);
      ContinuousOutputModel continuousOutputModel1 = new ContinuousOutputModel();
      continuousOutputModel1.handleStep(graggBulirschStoerStepInterpolator0, true);
      // Undeclared exception!
      try { 
        continuousOutputModel0.append(continuousOutputModel1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // propagation direction mismatch
         //
         verifyException("org.apache.commons.math.ode.ContinuousOutputModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      continuousOutputModel0.handleStep(threeEighthesStepInterpolator0, false);
      // Undeclared exception!
      try { 
        continuousOutputModel0.setInterpolatedTime((-3161.85690782));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.ThreeEighthesStepInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      FileSystemHandling.shouldAllThrowIOExceptions();
      GillStepInterpolator gillStepInterpolator0 = new GillStepInterpolator();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      double double0 = 885.8591389904313;
      ClassicalRungeKuttaStepInterpolator classicalRungeKuttaStepInterpolator0 = new ClassicalRungeKuttaStepInterpolator();
      FileSystemHandling.shouldAllThrowIOExceptions();
      classicalRungeKuttaStepInterpolator0.previousTime = (-1203.60534308);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = classicalRungeKuttaStepInterpolator0.equations;
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[8][5];
      gillStepInterpolator0.reinitialize((FirstOrderDifferentialEquations) null, doubleArray0, doubleArray1, false);
      gillStepInterpolator0.doCopy();
      gillStepInterpolator0.currentTime = (-1203.60534308);
      classicalRungeKuttaStepInterpolator0.currentTime = 885.8591389904313;
      gillStepInterpolator0.shift();
      gillStepInterpolator0.storeTime(885.8591389904313);
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      continuousOutputModel0.handleStep(classicalRungeKuttaStepInterpolator0, false);
      ContinuousOutputModel continuousOutputModel1 = new ContinuousOutputModel();
      continuousOutputModel0.append(continuousOutputModel1);
      continuousOutputModel1.append(continuousOutputModel0);
      continuousOutputModel0.setInterpolatedTime(885.8591389904313);
      continuousOutputModel1.setInterpolatedTime(930.5650339701346);
      // Undeclared exception!
      try { 
        continuousOutputModel0.append(continuousOutputModel1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // hole between time ranges
         //
         verifyException("org.apache.commons.math.ode.ContinuousOutputModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      continuousOutputModel0.reset();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      double[] doubleArray0 = new double[7];
      double[][] doubleArray1 = new double[1][6];
      boolean boolean0 = true;
      GraggBulirschStoerStepInterpolator graggBulirschStoerStepInterpolator0 = new GraggBulirschStoerStepInterpolator(doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray1, true);
      continuousOutputModel0.handleStep(graggBulirschStoerStepInterpolator0, true);
      // Undeclared exception!
      try { 
        continuousOutputModel0.append(continuousOutputModel0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      continuousOutputModel0.handleStep(threeEighthesStepInterpolator0, false);
      // Undeclared exception!
      try { 
        continuousOutputModel0.append(continuousOutputModel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.AbstractStepInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      GillStepInterpolator gillStepInterpolator0 = new GillStepInterpolator();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassicalRungeKuttaStepInterpolator classicalRungeKuttaStepInterpolator0 = new ClassicalRungeKuttaStepInterpolator();
      classicalRungeKuttaStepInterpolator0.previousTime = (-1203.60534308);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = classicalRungeKuttaStepInterpolator0.equations;
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[8][5];
      gillStepInterpolator0.reinitialize((FirstOrderDifferentialEquations) null, doubleArray0, doubleArray1, false);
      StepInterpolator stepInterpolator0 = gillStepInterpolator0.doCopy();
      gillStepInterpolator0.currentTime = 885.8591389904313;
      classicalRungeKuttaStepInterpolator0.currentTime = 885.8591389904313;
      gillStepInterpolator0.shift();
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      continuousOutputModel0.handleStep(classicalRungeKuttaStepInterpolator0, false);
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      continuousOutputModel0.handleStep(classicalRungeKuttaStepInterpolator0, false);
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      continuousOutputModel0.handleStep(stepInterpolator0, false);
      gillStepInterpolator0.reinitialize((FirstOrderDifferentialEquations) null, doubleArray0, doubleArray1, false);
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      continuousOutputModel0.handleStep(classicalRungeKuttaStepInterpolator0, false);
      // Undeclared exception!
      try { 
        continuousOutputModel0.setInterpolatedTime(180.98128);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      GillStepInterpolator gillStepInterpolator0 = new GillStepInterpolator();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassicalRungeKuttaStepInterpolator classicalRungeKuttaStepInterpolator0 = new ClassicalRungeKuttaStepInterpolator();
      classicalRungeKuttaStepInterpolator0.previousTime = (-1207.7192332035336);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = classicalRungeKuttaStepInterpolator0.equations;
      double[] doubleArray0 = new double[4];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      double[][] doubleArray1 = new double[7][5];
      gillStepInterpolator0.reinitialize((FirstOrderDifferentialEquations) null, doubleArray0, doubleArray1, false);
      gillStepInterpolator0.currentTime = 854.4443166517299;
      classicalRungeKuttaStepInterpolator0.currentTime = 854.4443166517299;
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      continuousOutputModel0.handleStep(classicalRungeKuttaStepInterpolator0, false);
      gillStepInterpolator0.currentTime = (-1207.7192332035336);
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      continuousOutputModel0.handleStep(classicalRungeKuttaStepInterpolator0, false);
      continuousOutputModel0.handleStep(gillStepInterpolator0, true);
      continuousOutputModel0.handleStep(classicalRungeKuttaStepInterpolator0, false);
      continuousOutputModel0.handleStep(classicalRungeKuttaStepInterpolator0, false);
      continuousOutputModel0.setInterpolatedTime((-945.4));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      double[] doubleArray0 = new double[9];
      double[][] doubleArray1 = new double[5][6];
      GraggBulirschStoerStepInterpolator graggBulirschStoerStepInterpolator0 = new GraggBulirschStoerStepInterpolator(doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray1, false);
      graggBulirschStoerStepInterpolator0.storeTime(1332.13076597);
      continuousOutputModel0.handleStep(graggBulirschStoerStepInterpolator0, false);
      // Undeclared exception!
      try { 
        continuousOutputModel0.setInterpolatedTime((-10.533139507221025));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.math.ode.GraggBulirschStoerStepInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      continuousOutputModel0.getInitialTime();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      ContinuousOutputModel continuousOutputModel1 = new ContinuousOutputModel();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-3073.73597);
      doubleArray0[1] = 0.5;
      doubleArray0[2] = (-3073.73597);
      doubleArray0[3] = 0.5;
      doubleArray0[4] = 1078.036384744;
      double[] doubleArray1 = new double[0];
      double[][] doubleArray2 = new double[2][2];
      double[] doubleArray3 = new double[1];
      doubleArray3[0] = (-3073.73597);
      doubleArray2[1] = doubleArray0;
      GraggBulirschStoerStepInterpolator graggBulirschStoerStepInterpolator0 = new GraggBulirschStoerStepInterpolator(doubleArray0, doubleArray1, doubleArray1, doubleArray1, doubleArray2, false);
      StepInterpolator stepInterpolator0 = graggBulirschStoerStepInterpolator0.doCopy();
      continuousOutputModel0.handleStep(stepInterpolator0, false);
      double[] doubleArray4 = new double[0];
      double[][] doubleArray5 = new double[5][6];
      doubleArray5[0] = doubleArray4;
      doubleArray5[2] = doubleArray4;
      doubleArray5[4] = doubleArray4;
      GraggBulirschStoerStepInterpolator graggBulirschStoerStepInterpolator1 = new GraggBulirschStoerStepInterpolator(doubleArray4, doubleArray4, doubleArray4, doubleArray4, doubleArray5, false);
      GraggBulirschStoerStepInterpolator graggBulirschStoerStepInterpolator2 = new GraggBulirschStoerStepInterpolator(graggBulirschStoerStepInterpolator1);
      GraggBulirschStoerStepInterpolator graggBulirschStoerStepInterpolator3 = new GraggBulirschStoerStepInterpolator(graggBulirschStoerStepInterpolator2);
      continuousOutputModel1.handleStep(graggBulirschStoerStepInterpolator1, false);
      // Undeclared exception!
      try { 
        continuousOutputModel0.append(continuousOutputModel1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // state vector dimension mismatch
         //
         verifyException("org.apache.commons.math.ode.ContinuousOutputModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      GillStepInterpolator gillStepInterpolator0 = new GillStepInterpolator();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassicalRungeKuttaStepInterpolator classicalRungeKuttaStepInterpolator0 = new ClassicalRungeKuttaStepInterpolator();
      classicalRungeKuttaStepInterpolator0.previousTime = (-1203.60534308);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = classicalRungeKuttaStepInterpolator0.equations;
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[8][5];
      gillStepInterpolator0.reinitialize((FirstOrderDifferentialEquations) null, doubleArray0, doubleArray1, false);
      gillStepInterpolator0.currentTime = 884.0847567168782;
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      continuousOutputModel0.handleStep(classicalRungeKuttaStepInterpolator0, false);
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      continuousOutputModel0.handleStep(classicalRungeKuttaStepInterpolator0, false);
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      continuousOutputModel0.handleStep(gillStepInterpolator0, false);
      continuousOutputModel0.handleStep(classicalRungeKuttaStepInterpolator0, false);
      // Undeclared exception!
      try { 
        continuousOutputModel0.setInterpolatedTime(96.74055672253378);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator", e);
      }
  }
}
