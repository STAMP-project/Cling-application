/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 15:03:16 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.DefaultErrorReporter;
import com.google.javascript.rhino.head.EcmaError;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.Interpreter;
import com.google.javascript.rhino.head.InterpreterData;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.UintMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Interpreter_ESTest extends Interpreter_ESTest_scaffolding {

  @Test(timeout = 4000)
  @Ignore
  public void test0()  throws Throwable  {
      Context.getContext();
      InterpreterData interpreterData0 = new InterpreterData(160, "error reporter", "language version", true);
      byte[] byteArray0 = new byte[19];
      UintMap uintMap0 = interpreterData0.longJumps;
      interpreterData0.longJumps = null;
      byteArray0[1] = (byte) (-45);
      byteArray0[3] = (byte)3;
      byteArray0[3] = (byte) (-4);
      byteArray0[5] = (byte) (-45);
      byteArray0[7] = (byte) (-61);
      interpreterData0.itsICode = byteArray0;
      // Undeclared exception!
      try { 
        interpreterData0.getLineNumbers();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int int0 = 3161;
      InterpreterData interpreterData0 = new InterpreterData(3161, "|_HSv\"N/", "|_HSv\"N/", false);
      Interpreter.getEncodedSource(interpreterData0);
      Interpreter interpreter0 = new Interpreter();
      Context.getCurrentContext();
      String string0 = "";
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      String string1 = "===";
      EcmaError ecmaError0 = new EcmaError("===", "", (String) null, 3, "error reporter", 582);
      // Undeclared exception!
      try { 
        Context.throwAsScriptRuntimeEx(ecmaError0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Context context0 = Context.enter();
      Object[] objectArray0 = new Object[1];
      Interpreter interpreter0 = new Interpreter();
      InterpreterData interpreterData0 = interpreter0.itsData;
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createScript((InterpreterData) null, (Object) null);
      // Undeclared exception!
      try { 
        Interpreter.interpret(interpretedFunction0, context0, interpretedFunction0, interpretedFunction0, context0.emptyArgs);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        Interpreter.restartContinuation((NativeContinuation) null, context0, (Scriptable) null, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        Interpreter.captureContinuation(context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Interpreter frames not found
         //
         verifyException("com.google.javascript.rhino.head.Interpreter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test5()  throws Throwable  {
      Context.getContext();
      InterpreterData interpreterData0 = new InterpreterData(160, "error reporter", "language version", true);
      byte[] byteArray0 = new byte[12];
      byteArray0[11] = (byte) (-10);
      interpreterData0.itsICode = byteArray0;
      // Undeclared exception!
      try { 
        Interpreter.getLineNumbers(interpreterData0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test6()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Interpreter.restartContinuation(nativeContinuation0, context0, nativeContinuation0, context0.emptyArgs);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      com.google.javascript.rhino.head.Context context0 = new com.google.javascript.rhino.head.Context();
      com.google.javascript.rhino.head.InterpreterData interpreterData0 = new com.google.javascript.rhino.head.InterpreterData(160, "error reporter", "language version", false);
      byte[] byteArray0 = new byte[19];
      byteArray0[3] = (byte)28;
      byteArray0[7] = (byte) (-61);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      com.google.javascript.rhino.head.InterpreterData interpreterData0 = new com.google.javascript.rhino.head.InterpreterData(3161, "|_HSv\"N/", "|_HSv\"N/", false);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      com.google.javascript.rhino.head.Context.getCurrentContext();
      com.google.javascript.rhino.head.NativeContinuation nativeContinuation0 = new com.google.javascript.rhino.head.NativeContinuation();
      Object[] objectArray0 = new Object[2];
  }
}
