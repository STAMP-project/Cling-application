/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 22:10:14 GMT 2019
 */

package org.mockito.cglib.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mockito.asm.ClassAdapter;
import org.mockito.asm.ClassWriter;
import org.mockito.asm.Label;
import org.mockito.asm.MethodVisitor;
import org.mockito.asm.Type;
import org.mockito.cglib.core.Block;
import org.mockito.cglib.core.ClassEmitter;
import org.mockito.cglib.core.CodeEmitter;
import org.mockito.cglib.core.Local;
import org.mockito.cglib.core.MethodInfo;
import org.mockito.cglib.core.ProcessSwitchCallback;
import org.mockito.cglib.core.Signature;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class CodeEmitter_ESTest extends CodeEmitter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2767));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit((-2767), 2230, "gWscs~", "gWscs~", "gWscs~", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.CHAR_TYPE;
      Type[] typeArray0 = new Type[1];
      typeArray0[0] = type0;
      Signature signature0 = new Signature("gWscs~", type0, typeArray0);
      CodeEmitter codeEmitter1 = new CodeEmitter(classEmitter0, codeEmitter0, 0, signature0, typeArray0);
      MethodInfo methodInfo0 = codeEmitter1.getMethodInfo();
      // Undeclared exception!
      try { 
        codeEmitter0.invoke(methodInfo0, type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(2, 0, "~l%", "~l%", "~l%", stringArray0);
      Type type0 = Type.BYTE_TYPE;
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("GW!fovf}K~|EGp", type0, typeArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_method((-952), signature0, typeArray0);
      codeEmitter0.visitMaxs(2, 1);
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(0, 1, "~l%", "~l%", (String) null, stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = codeEmitter0.getReturnType();
      codeEmitter0.unbox_or_zero(type0);
      assertFalse(codeEmitter0.isStaticHook());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(89);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(2, 2, "EH!_k(K1", "EH!_k(K1", "EH!_k(K1", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.getObjectType("EH!_k(K1");
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(64);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[18];
      classEmitter0.visit(2, 64, "SxQHSLo42`th}dn{", "SxQHSLo42`th}dn{", "SxQHSLo42`th}dn{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.INT_TYPE;
      codeEmitter0.zero_or_null(type0);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(2, 0, "~l%", "~l%", "~l%", stringArray0);
      Type type0 = Type.BYTE_TYPE;
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("GW!fovf}K~|EGp", type0, typeArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_method((-952), signature0, typeArray0);
      Type type1 = Type.SHORT_TYPE;
      codeEmitter0.zero_or_null(type1);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      Type type0 = Type.BYTE_TYPE;
      Type[] typeArray0 = new Type[2];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      Signature signature0 = new Signature("Z@qfH", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, 1932735283, signature0, typeArray0);
      // Undeclared exception!
      try { 
        codeEmitter0.zero_or_null(type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(81);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[16];
      classEmitter0.visit(2, 81, "Ou", "Ou", "Ou", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.CHAR_TYPE;
      codeEmitter0.zero_or_null(type0);
      assertEquals(4, Type.SHORT);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(27);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[18];
      classEmitter0.visit(2, 27, "SxQHSLo42`th}dn{", "SxQHSLo42`th}dn{", "SxQHSLo42`th}dn{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.BOOLEAN_TYPE;
      codeEmitter0.zero_or_null(type0);
      assertEquals(7, Type.LONG);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(2, 1, "DR9=~", "1", ">ps)P/b)JgiD=", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.VOID_TYPE;
      codeEmitter0.zero_or_null(type0);
      assertEquals(1, Type.BOOLEAN);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(27);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[18];
      classEmitter0.visit(2, 27, "SxQHSLo42`th}dn{", "SxQHSLo42`th}dn{", "SxQHSLo42`th}dn{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      codeEmitter0.unbox(type0);
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(64);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[18];
      classEmitter0.visit(2, 64, "SxQHSLo42`th}dn{", "SxQHSLo42`th}dn{", "SxQHSLo42`th}dn{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.INT_TYPE;
      codeEmitter0.unbox(type0);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[11];
      classEmitter0.visit(2, 0, "StringBuffer", "1", "1", stringArray0);
      Type type0 = Type.SHORT_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.unbox(type0);
      assertEquals(6, Type.FLOAT);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(2, 0, "~l%", "~l%", "~l%", stringArray0);
      Type type0 = Type.BYTE_TYPE;
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("GW!fovf}K~|EGp", type0, typeArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_method((-952), signature0, typeArray0);
      codeEmitter0.unbox(type0);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(81);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[16];
      classEmitter0.visit(2, 81, "Ou", "Ou", "Ou", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.CHAR_TYPE;
      codeEmitter0.unbox(type0);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(27);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[18];
      classEmitter0.visit(2, 27, "SxQHSLo42`th}dn{", "SxQHSLo42`th}dn{", "SxQHSLo42`th}dn{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.BOOLEAN_TYPE;
      codeEmitter0.unbox(type0);
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(2, 1, "DR9=~", "1", ">ps)P/b)JgiD=", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.VOID_TYPE;
      codeEmitter0.unbox(type0);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(97);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[4];
      classEmitter0.visit(2, 1, "Character", "Character", "Character", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = codeEmitter0.getReturnType();
      codeEmitter0.box(type0);
      assertEquals(8, Type.DOUBLE);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[10];
      classEmitter0.visit(2, 0, "StringBuffer", "StringBuffer", "StringBuffer", stringArray0);
      Type type0 = classEmitter0.getSuperType();
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.box(type0);
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(2, 83, "gWscsH", "gWscsH", "gWscsH", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push(true);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(2, (-2756), "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push(false);
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2789));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[7];
      classEmitter0.visit(2, (-2789), "<init>", "<init>", "<init>", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      int[] intArray0 = new int[2];
      intArray0[1] = 1645;
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      codeEmitter0.process_switch(intArray0, processSwitchCallback0, true);
      assertEquals(2, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(2, (-2756), "~SrjwLo528th{", "~SrjwLo528th{", "~SrjwLo528th{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      int[] intArray0 = new int[3];
      intArray0[0] = (-2756);
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      codeEmitter0.process_switch(intArray0, processSwitchCallback0);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(2, (-2756), "~SrjwLo528th{", "~SrjwLo528th{", "~SrjwLo528th{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      int[] intArray0 = new int[3];
      intArray0[1] = 108;
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        codeEmitter0.process_switch(intArray0, processSwitchCallback0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // keys to switch must be sorted ascending
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(842, 842, "~l%", "~l%", "~l%", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      int[] intArray0 = new int[0];
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      codeEmitter0.process_switch(intArray0, processSwitchCallback0);
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(2, 0, "~l%", "~l%", "~l%", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Class<Object> class0 = Object.class;
      Type type0 = Type.getType(class0);
      codeEmitter0.unbox(type0);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(2, (-2756), "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", stringArray0);
      Type type0 = Type.getObjectType("TF5_P9,t#tbqG");
      classEmitter0.declare_field((-2756), "~SrQHwLo528th}n{", type0, type0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.putfield("~SrQHwLo528th}n{");
      assertEquals(154, CodeEmitter.NE);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(587);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(183, 155, "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", stringArray0);
      Type type0 = Type.getObjectType("boolean booleanValue()");
      classEmitter0.declare_field(1, "org.mockito.asm.MethodAdapter", type0, "~SrQHwLo528th}n{");
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.putfield("org.mockito.asm.MethodAdapter");
      assertEquals(153, CodeEmitter.EQ);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[7];
      classEmitter0.visit(2, (-2756), "org.mockito.asm.ClassReader", "org.mockito.asm.ClassReader", "org.mockito.asm.ClassReader", stringArray0);
      Type type0 = Type.getObjectType("org.mockito.asm.ClassReader");
      classEmitter0.declare_field((-2756), "org.mockito.asm.ClassReader", type0, type0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.getfield("org.mockito.asm.ClassReader");
      assertEquals(155, CodeEmitter.LT);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2765));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[7];
      classEmitter0.visit(2, (-2765), "org.mockito.asm.ClassReader", "org.mockito.asm.ClassReader", "org.mockito.asm.ClassReader", stringArray0);
      Type type0 = Type.getObjectType("org.mockito.asm.ClassReader");
      classEmitter0.declare_field((-2765), "org.mockito.asm.ClassReader", type0, type0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.getfield("org.mockito.asm.ClassReader");
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2789));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[7];
      classEmitter0.visit(2, (-2789), "~>;r\"u&#C-^C", "~>;r\"u&#C-^C", "~>;r\"u&#C-^C", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      // Undeclared exception!
      try { 
        codeEmitter0.load_args(2, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(2, (-2756), "=et8", "=et8", "=et8", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      // Undeclared exception!
      try { 
        codeEmitter0.load_args((-1), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2789));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(2, (-2789), "t9", "t9", "t9", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      // Undeclared exception!
      try { 
        codeEmitter0.load_this();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no 'this' pointer within static method
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2767));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit((-2767), 2230, "gWscs~", "gWscs~", "gWscs~", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.CHAR_TYPE;
      Type[] typeArray0 = new Type[1];
      typeArray0[0] = type0;
      Signature signature0 = new Signature("gWscs~", type0, typeArray0);
      CodeEmitter codeEmitter1 = new CodeEmitter(classEmitter0, codeEmitter0, 0, signature0, typeArray0);
      codeEmitter1.load_this();
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1879048192);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(2, 1879048192, "SxQHSLoo2}t}dn={", "SxQHSLoo2}t}dn={", "SxQHSLoo2}t}dn={", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.getReturnType("SxQHSLoo2}t}dn={");
      codeEmitter0.newarray(type0);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[22];
      classEmitter0.visit(2, (-2756), "~SrQHSLo528th}n{", "~SrQHSLo528th}n{", "~SrQHSLo528th}n{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push((double) (-2756));
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[22];
      classEmitter0.visit(2, 11, "<init>", "<init>", "<init>", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push((double) 1);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(2, 2, "floatValue", "floatValue", "floatValue", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.DOUBLE_TYPE;
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(155, CodeEmitter.LT);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[16];
      classEmitter0.visit(2, 83, "gWscsH", "gWscsH", "gWscsH", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push((float) 2);
      assertEquals(155, CodeEmitter.LT);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2789));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[7];
      classEmitter0.visit(2, (-2789), "~f>w*\"&#C-TTBC", "~f>w*\"&#C-TTBC", "~f>w*\"&#C-TTBC", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push((float) 1);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(79);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[15];
      classEmitter0.visit(2, 1, "88IWqafH", "88IWqafH", "88IWqafH", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push((float) 79);
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(2, 2, "EH!_k(K1", "EH!_k(K1", "EH!_k(K1", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.FLOAT_TYPE;
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1879048192);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(2, 1879048192, "SxQHSLoo2}t}dn={", "SxQHSLoo2}t}dn={", "SxQHSLoo2}t}dn={", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push(4103L);
      assertEquals(155, CodeEmitter.LT);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(2, 0, "boolean booleanValue()", "boolean booleanValue()", "boolean booleanValue()", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push((long) 1);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2754));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[18];
      classEmitter0.visit(2, (-2754), "L", "L", "L", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      codeEmitter0.zero_or_null(type0);
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[25];
      classEmitter0.visit(2, (-2756), "~SrQHSLo528th}n{", "~SrQHSLo528th}n{", "~SrQHSLo528th}n{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push(16777218);
      assertEquals(155, CodeEmitter.LT);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[4];
      classEmitter0.visit(57, 2, "6(3eMW", "6(3eMW", "6(3eMW", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push(57);
      assertEquals(100, CodeEmitter.SUB);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2736));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[3];
      classEmitter0.visit(2, (-2736), "~f>wr\"uH&#C-1C", "~f>wr\"uH&#C-1C", "~f>wr\"uH&#C-1C", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push((-2736));
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(2, 0, "~l", "~l", "~l", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.VOID_TYPE;
      Type type1 = Type.SHORT_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[37];
      classEmitter0.visit(2, 0, "SxQ[SLo42th}dn{", "SxQ[SLo42th}dn{", "SxQ[SLo42th}dn{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      Type type1 = Type.VOID_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(9, Type.ARRAY);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[14];
      classEmitter0.visit(2, 0, "SxQHSLo42`th}dn{", "SxQHSLo42`th}dn{", "SxQHSLo42`th}dn{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Class<Object> class0 = Object.class;
      Type type0 = Type.getType(class0);
      Type type1 = Type.FLOAT_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(6, Type.FLOAT);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[26];
      classEmitter0.visit(2, 0, "SxQ[SLo42th}dn{", "SxQ[SLo42th}dn{", "SxQ[SLo42th}dn{", stringArray0);
      Type type0 = Type.DOUBLE_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type1 = Type.VOID_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(112, CodeEmitter.REM);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[10];
      classEmitter0.visit(2, 0, "SxQHSLoo2}th}dn{", "SxQHSLoo2}th}dn{", "SxQHSLoo2}th}dn{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.CHAR_TYPE;
      Type type1 = Type.VOID_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[26];
      classEmitter0.visit(2, 0, "SxQ[SLo42th}dn{", "SxQ[SLo42th}dn{", "SxQ[SLo42th}dn{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.DOUBLE_TYPE;
      Type type1 = Type.BYTE_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[11];
      classEmitter0.visit(2, 0, "StringBuffer", "StringBuffer", "StringBuffer", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      Type type1 = classEmitter0.getClassType();
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(2, Type.CHAR);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      classEmitter0.visit(533, 1, "jGKs^#_}", "SxQ[SLo42th}dn{", "SxQ[SLo42th}dn{", (String[]) null);
      Type type0 = Type.DOUBLE_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type1 = Type.LONG_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(3, Type.BYTE);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[15];
      classEmitter0.visit(2, 0, "StringBuffer", "StringBuffer", "StringBuffer", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      Type type1 = Type.FLOAT_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(2, 2, "~l%", "~l%", "~l%", stringArray0);
      Type type0 = Type.FLOAT_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type1 = Type.LONG_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2754));
      String[] stringArray0 = new String[1];
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visit(1, (-2754), "Bad comparison for type ", "Bad comparison for type ", "Bad comparison for type ", stringArray0);
      Type type0 = Type.DOUBLE_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type1 = Type.FLOAT_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(2, 2, "EH!_k(K1", "EH!_k(K1", "EH!_k(K1", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.getObjectType("EH!_k(K1");
      Type type1 = Type.FLOAT_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertNotSame(type0, type1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(2, 2, "floatValue", "floatValue", "floatValue", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.LONG_TYPE;
      Type type1 = Type.DOUBLE_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(6, Type.FLOAT);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2754));
      String[] stringArray0 = new String[1];
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visit(1, (-2754), "Bad comparison for type ", "Bad comparison for type ", "Bad comparison for type ", stringArray0);
      Type type0 = Type.DOUBLE_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type1 = Type.FLOAT_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(64);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[18];
      classEmitter0.visit(2, 64, "SxQHSLo42`th}dn{", "SxQHSLo42`th}dn{", "SxQHSLo42`th}dn{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.INT_TYPE;
      codeEmitter0.cast_numeric(type0, type0);
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(842, 190, "~l%", "~l%", "~l%", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.LONG_TYPE;
      codeEmitter0.swap(type0, type0);
      assertEquals(3, Type.BYTE);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 0, "U", "U", "A^t@8z<Ji=o$", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.BYTE_TYPE;
      Type type1 = Type.LONG_TYPE;
      codeEmitter0.swap(type1, type0);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      classEmitter0.visit(1, (-2010), "U", (String) null, "ZUg($7+-dk", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.BYTE_TYPE;
      codeEmitter0.swap(type0, type0);
      assertEquals(10, Type.OBJECT);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(842, 842, "~l%", "~l%", "~l%", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.FLOAT_TYPE;
      Type type1 = Type.DOUBLE_TYPE;
      codeEmitter0.swap(type0, type1);
      assertEquals(2, Type.CHAR);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(1, 2071, "~l%", "~l%", "y2:.G_D$rUPUk[I", stringArray0);
      Type type0 = Type.BYTE_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Block block0 = new Block(codeEmitter0);
      Label label0 = block0.getStart();
      codeEmitter0.if_cmp(type0, 158, label0);
      assertEquals(5, Type.INT);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2767));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[11];
      classEmitter0.visit(2, (-2767), "~SrQHSLo528th}n{", "~SrQHSLo528th}n{", "~SrQHSLo528th}n{", stringArray0);
      Type type0 = Type.VOID_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Label label0 = new Label();
      codeEmitter0.if_cmp(type0, 157, label0);
      assertEquals(8, Type.DOUBLE);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[26];
      classEmitter0.visit(2, 0, "SxQ[SLo42th}dn{", "SxQ[SLo42th}dn{", "SxQ[SLo42th}dn{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.VOID_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, 156, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2762));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[3];
      classEmitter0.visit(1, 2, "gWscs~", "gWscs~", "gWscs~", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.CHAR_TYPE;
      Label label0 = codeEmitter0.make_label();
      codeEmitter0.if_cmp(type0, 155, label0);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-26));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[15];
      classEmitter0.visit((-26), 154, "StringBuffer", "StringBuffer", "StringBuffer", stringArray0);
      Type type0 = Type.CHAR_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = new Label();
      codeEmitter0.if_cmp(type0, 154, label0);
      assertEquals(6, Type.FLOAT);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[7];
      classEmitter0.visit((-1471), (-1471), "U", "Throwable", "U", stringArray0);
      Type type0 = Type.BYTE_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Block block0 = new Block(codeEmitter0);
      Label label0 = block0.getStart();
      codeEmitter0.if_cmp(type0, 153, label0);
      assertEquals(2, Type.CHAR);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-26));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[19];
      classEmitter0.visit((-26), 154, "SFtringBuffer", "SFtringBuffer", "SFtringBuffer", stringArray0);
      Type type0 = classEmitter0.getClassType();
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = codeEmitter0.make_label();
      codeEmitter0.if_cmp(type0, 154, label0);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-26));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[19];
      classEmitter0.visit((-26), 154, "SFtringBuffer", "SFtringBuffer", "SFtringBuffer", stringArray0);
      Type type0 = classEmitter0.getClassType();
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = codeEmitter0.make_label();
      codeEmitter0.if_cmp(type0, 153, label0);
      assertEquals(1, type0.getDimensions());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[10];
      classEmitter0.visit(2, 0, "[[4TrsQB&lgAq", "[[4TrsQB&lgAq", "[[4TrsQB&lgAq", stringArray0);
      Type type0 = Type.getObjectType("[[4TrsQB&lgAq");
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, 10, label0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad comparison for type [[4TrsQB&lgAq
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[11];
      classEmitter0.visit(2, 0, "StringBuffer", "StringBuffer", "StringBuffer", stringArray0);
      Type type0 = Type.LONG_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = new Label();
      codeEmitter0.if_cmp(type0, 2, label0);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[26];
      classEmitter0.visit(2, 0, "SxQ[SLo42th}dn{", "SxQ[SLo42th}dn{", "SxQ[SLo42th}dn{", stringArray0);
      Type type0 = Type.DOUBLE_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, 156, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2755));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[11];
      classEmitter0.visit(2, (-2755), "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Block block0 = codeEmitter0.begin_block();
      Type type0 = Type.SHORT_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.catch_exception(block0, type0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // end of block is unset
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(1, 0, "~l%", "1", "1", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Block block0 = codeEmitter0.begin_block();
      block0.end();
      Type type0 = Type.DOUBLE_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.catch_exception(block0, type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(97);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[4];
      classEmitter0.visit(2, 1, "Character", "Character", "Character", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.end_method();
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2767));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[10];
      classEmitter0.visit(2, (-2767), "~SrQHSLo528th}n{", "~SrQHSLo528th}n{", "~SrQHSLo528th}n{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.load_args();
      assertEquals(100, CodeEmitter.SUB);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[4];
      classEmitter0.visit(57, 2, "6(3eMW", "6(3eMW", "6(3eMW", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Local local0 = new Local(116, (Type) null);
      // Undeclared exception!
      try { 
        codeEmitter0.load_local(local0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(2, 0, "~l%", "~l%", "~l%", stringArray0);
      Type type0 = Type.DOUBLE_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      // Undeclared exception!
      try { 
        codeEmitter0.putstatic(type0, "~l%", type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-409));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(2, (-409), "~SrQwLo528th{", "~SrQwLo528th{", "~SrQwLo528th{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.monitorenter();
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(2, (-2756), "~SrQwLo528th{", "~SrQwLo528th{", "~SrQwLo528th{", stringArray0);
      Type type0 = Type.FLOAT_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      // Undeclared exception!
      try { 
        codeEmitter0.getfield(type0, "D@_16@1}Z", type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      classEmitter0.visit(1, (-2010), "U", (String) null, "ZUg($7+-dk", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      ClassEmitter classEmitter1 = codeEmitter0.getClassEmitter();
      assertSame(classEmitter1, classEmitter0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(80);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[3];
      classEmitter0.visit(2, 1, "String", "String", "String", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.invoke_constructor_this();
      assertEquals(112, CodeEmitter.REM);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2804));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(2, (-2804), "Bad comparison for type ", "Bad comparison for type ", "Bad comparison for type ", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.FLOAT_TYPE;
      codeEmitter0.super_getstatic("j", type0);
      assertEquals(1, Type.BOOLEAN);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1004);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(2, 1004, "~SrQwLo528th{", "~SrQwLo528th{", "~SrQwLo528th{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      MethodInfo methodInfo0 = codeEmitter0.getMethodInfo();
      Type type0 = Type.LONG_TYPE;
      codeEmitter0.invoke(methodInfo0, type0);
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2767));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[21];
      classEmitter0.visit(2, (-2767), "~SrQHSLo528th}n{", "~SrQHSLo528th}n{", "~SrQHSLo528th}n{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.new_instance_this();
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[26];
      classEmitter0.visit(2, 0, "SxQ[SLo42th}dn{", "SxQ[SLo42th}dn{", "SxQ[SLo42th}dn{", stringArray0);
      Type type0 = Type.DOUBLE_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Local local0 = codeEmitter0.make_local(type0);
      codeEmitter0.store_local(local0);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(79);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[15];
      classEmitter0.visit(2, 1, "88IWqafH", "88IWqafH", "88IWqafH", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      // Undeclared exception!
      try { 
        codeEmitter0.array_load((Type) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2789));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[7];
      classEmitter0.visit(2, (-2789), "~f>wr\"u&#C-^C", "~f>wr\"u&#C-^C", "~f>wr\"u&#C-^C", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.return_value();
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2767));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[15];
      classEmitter0.visit(2, (-2767), "~SrQHSLo528th}n{", "~SrQHSLo528th}n{", "~SrQHSLo528th}n{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = new Label();
      Type type0 = Type.FLOAT_TYPE;
      codeEmitter0.if_cmp(type0, 1, label0);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(87);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[3];
      classEmitter0.visit(2, 87, "~f>wr\"uH&#C-1C", "~f>wr\"uH&#C-1C", "~f>wr\"uH&#C-1C", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.super_invoke_constructor();
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(79);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(2, 1, "88IWqafH", "88IWqafH", "88IWqafH", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = classEmitter0.getClassType();
      codeEmitter0.getstatic(type0, "88IWqafH", type0);
      assertEquals(8, Type.DOUBLE);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(95);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[3];
      classEmitter0.visit(2, 1, "String", "String", "String", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.VOID_TYPE;
      codeEmitter0.super_putfield("String", type0);
      assertEquals(5, Type.INT);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(79);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[15];
      classEmitter0.visit(2, 1, "88IWqafH", "88IWqafH", "88IWqafH", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.not();
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2762));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[3];
      classEmitter0.visit(1, 2, "gWscsH", "gWscsH", "gWscsH", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.SHORT_TYPE;
      Type[] typeArray0 = new Type[1];
      typeArray0[0] = type0;
      Signature signature0 = new Signature("gWscsH", type0, typeArray0);
      CodeEmitter codeEmitter1 = new CodeEmitter(classEmitter0, codeEmitter0, 2, signature0, typeArray0);
      codeEmitter1.create_arg_array();
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[10];
      classEmitter0.visit(2, 0, "SxQHSLoo2}th}dn={", "SxQHSLoo2}th}dn={", "SxQHSLoo2}th}dn={", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Signature signature0 = new Signature("SxQHSLoo2}th}dn={", "SxQHSLoo2}th}dn={");
      codeEmitter0.super_invoke_constructor(signature0);
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(2, (-2756), "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = codeEmitter0.make_label();
      codeEmitter0.ifnull(label0);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(98);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[27];
      classEmitter0.visit(2, 98, "gWscsH", "gWscsH", "gWscsH", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.super_invoke();
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2789));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[7];
      classEmitter0.visit(2, (-2789), "~f>w*\"&#C-TTBPC", "~f>w*\"&#C-TTBPC", "~f>w*\"&#C-TTBPC", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.dup2();
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(2, (-2756), "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Signature signature0 = new Signature("SxQHSLoo2}th}dw@{", "s*vF");
      codeEmitter0.invoke_constructor_this(signature0);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[11];
      classEmitter0.visit(2, (-2756), "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Label label0 = codeEmitter0.mark();
      codeEmitter0.if_icmp(18, label0);
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(2, 1, "(V", "(V", "(V", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.aaload(2177);
      assertEquals(112, CodeEmitter.REM);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(90);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[4];
      classEmitter0.visit(2, 1, "@qpfH", "@qpfH", "@qpfH", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Signature signature0 = new Signature("<init>", (String) null);
      // Undeclared exception!
      try { 
        codeEmitter0.invoke_virtual_this(signature0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[11];
      classEmitter0.visit(2, (-2756), "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.instance_of_this();
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(2, (-2756), "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      // Undeclared exception!
      try { 
        codeEmitter0.super_putstatic("~SrQHwLo528th}n{", (Type) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[21];
      classEmitter0.visit(2, (-2756), "~SrQHSLo528th}n{", "~SrQHSLo528th}n{", "~SrQHSLo528th}n{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      codeEmitter0.box(type0);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(98);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[27];
      classEmitter0.visit(2, 98, "gWscsH", "gWscsH", "gWscsH", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      CodeEmitter codeEmitter1 = new CodeEmitter(codeEmitter0);
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[30];
      classEmitter0.visit(2, (-2756), "SxQHSLoo2}th}d@{", "SxQHSLoo2}th}d@{", "SxQHSLoo2}th}d@{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.VOID_TYPE;
      codeEmitter0.super_getfield("54", type0);
      assertEquals(112, CodeEmitter.REM);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[38];
      classEmitter0.visit(2, 57, "<init>", "<init>", "<init>", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Local local0 = codeEmitter0.make_local();
      codeEmitter0.iinc(local0, 2);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(80);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[3];
      classEmitter0.visit(2, 1, "String", "String", "String", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.checkcast_this();
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2756));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[11];
      classEmitter0.visit(2, (-2756), "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", "~SrQHwLo528th}n{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      // Undeclared exception!
      try { 
        codeEmitter0.putfield((Type) null, "~SrQHwLo528th}n{", (Type) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(842, 190, "~l%", "~l%", "~l%", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Signature signature0 = codeEmitter0.getSignature();
      assertEquals("<clinit>", signature0.getName());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(81);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[8];
      classEmitter0.visit(2, 81, "Ou", "Ou", "Ou", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = classEmitter0.getClassType();
      codeEmitter0.zero_or_null(type0);
      assertEquals(9, Type.ARRAY);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2804));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(2, (-2804), "Bad comparison for type ", "Bad comparison for type ", "Bad comparison for type ", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.monitorexit();
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(0, 0, "a:R", "a:R", "a:R", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      boolean boolean0 = codeEmitter0.isStaticHook();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2766));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(2, (-2766), "~SrjwLo58th{", "~SrjwLo58th{", "~SrjwLo58th{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.BOOLEAN_TYPE;
      codeEmitter0.array_store(type0);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(79);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(2, 1, "88IWqalH", "88IWqalH", "88IWqalH", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.arraylength();
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(81);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[8];
      classEmitter0.visit(2, 81, "Ou", "Ou", "Ou", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = classEmitter0.getClassType();
      codeEmitter0.throw_exception(type0, "Ou");
      assertEquals(7, Type.LONG);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(113);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[3];
      classEmitter0.visit(2, 113, "~f>wr\"uH&#C-1C", "~f>wr\"uH&#C-1C", "~f>wr\"uH&#C-1C", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      MethodInfo methodInfo0 = codeEmitter0.getMethodInfo();
      codeEmitter0.invoke(methodInfo0);
      assertEquals(153, CodeEmitter.EQ);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[38];
      classEmitter0.visit(2, 57, "<init>", "<init>", "<init>", stringArray0);
      Class<Object> class0 = Object.class;
      Type type0 = Type.getType(class0);
      Type[] typeArray0 = new Type[1];
      typeArray0[0] = type0;
      Signature signature0 = new Signature("<init>", type0, typeArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_method(5, signature0, typeArray0);
      MethodInfo methodInfo0 = codeEmitter0.getMethodInfo();
      codeEmitter0.invoke(methodInfo0, type0);
      assertEquals(128, CodeEmitter.OR);
  }
}
