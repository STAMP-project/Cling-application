/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 23:58:06 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Arguments;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.BoundFunction;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.Delegator;
import com.google.javascript.rhino.head.FunctionObject;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.JavaAdapter;
import com.google.javascript.rhino.head.JavaMembers;
import com.google.javascript.rhino.head.LazilyLoadedCtor;
import com.google.javascript.rhino.head.MemberBox;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeBoolean;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeDate;
import com.google.javascript.rhino.head.NativeError;
import com.google.javascript.rhino.head.NativeGenerator;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJSON;
import com.google.javascript.rhino.head.NativeJavaArray;
import com.google.javascript.rhino.head.NativeJavaClass;
import com.google.javascript.rhino.head.NativeJavaConstructor;
import com.google.javascript.rhino.head.NativeJavaObject;
import com.google.javascript.rhino.head.NativeJavaPackage;
import com.google.javascript.rhino.head.NativeJavaTopPackage;
import com.google.javascript.rhino.head.NativeMath;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.NativeScript;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.NativeWith;
import com.google.javascript.rhino.head.RhinoException;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.Synchronizer;
import com.google.javascript.rhino.head.TopLevel;
import java.lang.reflect.Method;
import java.util.Collection;
import java.util.LinkedHashSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ScriptableObject_ESTest extends ScriptableObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  @Ignore
  public void test000()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeCall nativeCall0 = new NativeCall();
      NativeCall nativeCall1 = nativeCall0.parentActivationCall;
      ScriptableObject.defineConstProperty(nativeIterator_StopIteration0, "<(lsV>ZD 6=OZ1~I_");
      NativeObject nativeObject0 = new NativeObject();
      NativeArray nativeArray0 = new NativeArray(0L);
      NativeArray nativeArray1 = new NativeArray(4);
      // Undeclared exception!
      try { 
        nativeArray1.getAttributes(8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 8 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      Class<FunctionObject> class0 = FunctionObject.class;
      // Undeclared exception!
      try { 
        JavaMembers.lookupClass(nativeJavaClass0, class0, class0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test002()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("jsGet_getTypeOf");
      ScriptableObject.deleteProperty((Scriptable) nativeJavaPackage0, 220);
      NativeWith nativeWith0 = new NativeWith(nativeJavaPackage0, nativeJavaPackage0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      nativeJavaPackage0.putConst(" = ", nativeWith0, importerTopLevel0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.sealObject();
      NativeError nativeError0 = new NativeError();
      NativeString nativeString0 = new NativeString("");
      nativeObject0.put("", (Scriptable) nativeError0, (Object) nativeString0);
      nativeObject0.put("", (Scriptable) nativeError0, (Object) null);
      nativeObject0.isConst("");
      nativeObject0.findPrototypeId("");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeError0, "", "/>Am}?{f54bO.", true);
      nativeObject0.put(5, (Scriptable) nativeError0, (Object) lazilyLoadedCtor0);
      contextFactory0.seal();
      classLoader0.setClassAssertionStatus("", true);
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(false, "", classLoader0);
      NativeCall nativeCall0 = new NativeCall();
      NativeCall nativeCall1 = nativeCall0.parentActivationCall;
      nativeObject0.put(900, (Scriptable) nativeError0, (Object) nativeError0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test004()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext((Context) null);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.isDataDescriptor(nativeJavaPackage0);
      ContextFactory.getGlobal();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration1.hasInstance(importerTopLevel0);
      ScriptableObject.getPropertyIds(importerTopLevel0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      TopLevel topLevel0 = new TopLevel();
      topLevel0.get("(=#^U+|", (Scriptable) nativeJavaTopPackage0);
      nativeJavaTopPackage0.isGenericDescriptor(topLevel0);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) classLoader0;
      objectArray0[1] = (Object) topLevel0;
      objectArray0[2] = (Object) nativeJavaTopPackage0;
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.indexOf(topLevel0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      // Undeclared exception!
      try { 
        NativeMath.init((Scriptable) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      nativeError0.delete(13);
      NativeObject nativeObject0 = new NativeObject();
      Double double0 = new Double(0.0);
      nativeObject0.put("`", (Scriptable) nativeError0, (Object) double0);
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.buildClassCtor((Scriptable) nativeError0, class0, false, false);
      nativeError0.delete((String) null);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      context0.getApplicationClassLoader();
      NativeArray nativeArray0 = new NativeArray(context0.emptyArgs);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test008()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<ImporterTopLevel> class0 = ImporterTopLevel.class;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.getAttributes("configurable", (Scriptable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property configurable not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Class<NativeIterator> class0 = NativeIterator.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeError0, 8, class0);
      ScriptableObject.deleteProperty((Scriptable) nativeError0, 0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      NativeJavaConstructor nativeJavaConstructor0 = new NativeJavaConstructor((MemberBox) null);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ScriptableObject.isFalse(importerTopLevel0);
      topLevel0.isDataDescriptor(nativeJavaConstructor0);
      NativeObject nativeObject0 = new NativeObject();
      importerTopLevel0.getIds(true);
      ContextFactory.getGlobal();
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      Synchronizer synchronizer0 = new Synchronizer(nativeJavaClass0);
      JavaAdapter.getFunction(importerTopLevel0, "error reporter");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.isConst("D");
      int int0 = NativeGenerator.GENERATOR_THROW;
      ContextFactory contextFactory0 = new ContextFactory();
      TopLevel topLevel0 = new TopLevel();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<NativeIterator> class0 = NativeIterator.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeIterator_StopIteration0, (-1468264590), class0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeCall nativeCall0 = new NativeCall();
      Object[] objectArray0 = nativeCall0.getAllIds();
      nativeIterator_StopIteration0.hasInstance(nativeCall0);
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      NativeArray nativeArray1 = new NativeArray(4);
      // Undeclared exception!
      try { 
        nativeArray0.addAll(8, (Collection) nativeArray1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test013()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-6742553186979055798L));
      nativeArray0.defaultPut("createObject", "createObject");
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes(1841);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 1841 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context0, (Scriptable) nativeArray0, "error reporter", context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000004 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Class<InterpretedFunction> class0 = InterpretedFunction.class;
      ContextFactory.getGlobal();
      Context context0 = Context.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      ClassLoader classLoader1 = classLoader0.getParent();
      NativeJavaTopPackage nativeJavaTopPackage1 = new NativeJavaTopPackage(classLoader1);
      NativeJavaTopPackage nativeJavaTopPackage2 = new NativeJavaTopPackage(classLoader0);
      nativeJavaTopPackage2.defineProperty("G", class0, 13);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      nativeJavaTopPackage2.isGenericDescriptor(importerTopLevel0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.sealObject();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      nativeError0.sealObject();
      Class<InterpretedFunction> class0 = InterpretedFunction.class;
      String[] stringArray0 = new String[1];
      String string0 = "i|dd";
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        context0.initStandardObjects((ScriptableObject) nativeError0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: Function.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test018()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null);
      nativeJavaPackage0.size();
      ScriptableObject.putConstProperty(nativeJavaPackage0, ":D~~", nativeJavaPackage0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      context0.getApplicationClassLoader();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test019()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-6742553186979055798L));
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes(1841);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 1841 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Context context0 = Context.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      nativeJavaTopPackage0.getGetterOrSetter((String) null, 6026, false);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.defineOwnProperty(context0, (Object) nativeJavaTopPackage0, (ScriptableObject) nativeObject0, true);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test021()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<ImporterTopLevel> class0 = ImporterTopLevel.class;
      ScriptableObject.defineClass((Scriptable) nativeIterator_StopIteration0, class0, false, false);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      TopLevel topLevel0 = new TopLevel();
      nativeJavaTopPackage0.isGenericDescriptor(topLevel0);
      topLevel0.defineConst("NAME", nativeJavaTopPackage0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<NativeIterator> class0 = NativeIterator.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeIterator_StopIteration0, (-1468264590), class0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.getPropertyIds((Scriptable) null);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test024()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.sealObject();
      NativeError nativeError0 = new NativeError();
      nativeObject0.put("", (Scriptable) nativeError0, (Object) null);
      nativeObject0.isConst("0D@7");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      nativeJavaTopPackage0.isGenericDescriptor(nativeObject0);
      NativeArray nativeArray0 = new NativeArray(2);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeArray0, false);
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.put("QpumCtkWg#Gc", (Scriptable) nativeObject0, (Object) nativeGenerator0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: QpumCtkWg#Gc.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Synchronizer synchronizer0 = new Synchronizer(nativeIterator_StopIteration0);
      nativeIterator_StopIteration0.associateValue(synchronizer0, synchronizer0);
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      nativeIterator_StopIteration0.hasInstance(nativeJavaObject0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-1133L));
      // Undeclared exception!
      try { 
        nativeArray0.getAllIds();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-5643.269852139385));
      ScriptableObject.getProperty((Scriptable) nativeNumber0, 2);
      nativeNumber0.toString();
      NativeObject nativeObject0 = new NativeObject();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      BoundFunction boundFunction0 = new BoundFunction(context0, nativeObject0, nativeJavaClass0, nativeJavaClass0, context0.emptyArgs);
      // Undeclared exception!
      try { 
        nativeObject0.defineOwnProperty(context0, boundFunction0, nativeNumber0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Context context0 = Context.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version", classLoader0);
      String string0 = null;
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod((Scriptable) nativeObject0, "fHLAv!|3=mB1Q", context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000004 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test029()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext((Context) null);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.isDataDescriptor(nativeJavaPackage0);
      ContextFactory.getGlobal();
      Context context1 = new Context(contextFactory0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.checkPropertyDefinition(importerTopLevel0);
      nativeIterator_StopIteration1.hasInstance(importerTopLevel0);
      ScriptableObject.getPropertyIds(importerTopLevel0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test030()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      Float float0 = new Float((float) 13);
      ScriptableObject.putConstProperty(nativeCall0, ":D~~", float0);
      Class<NativeArray> class0 = NativeArray.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getTypedProperty((Scriptable) nativeCall0, ":D~~", class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot convert 13.0 to com.google.javascript.rhino.head.NativeArray
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeError nativeError0 = new NativeError();
      String[] stringArray0 = new String[0];
      Class<NativeDate> class0 = NativeDate.class;
      nativeError0.defineFunctionProperties(stringArray0, class0, (-33));
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.putProperty((Scriptable) nativeIterator_StopIteration0, 0, (Object) nativeIterator_StopIteration0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      contextFactory0.getApplicationClassLoader();
      NativeArray nativeArray0 = new NativeArray(context0.emptyArgs);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      // Undeclared exception!
      try { 
        nativeArray0.getOwnPropertyDescriptor(context0, nativeWith0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Class<InterpretedFunction> class0 = InterpretedFunction.class;
      ContextFactory.getGlobal();
      NativeError nativeError0 = new NativeError();
      BaseFunction baseFunction0 = new BaseFunction(nativeError0, nativeError0);
      ScriptableObject.putProperty((Scriptable) baseFunction0, (-920677432), (Object) class0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Context context0 = Context.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version", classLoader0);
      // Undeclared exception!
      try { 
        nativeJavaPackage0.getGetterOrSetter("error reporter", (-201), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // error reporter
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.buildClassCtor((Scriptable) nativeError0, class0, true, true);
      nativeError0.delete("writable");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      context0.getApplicationClassLoader();
      NativeArray nativeArray0 = new NativeArray(context0.emptyArgs);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test036()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("POS");
      ScriptableObject.deleteProperty((Scriptable) nativeJavaPackage0, 2);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeObject0, "#?}{:3_2R$BQi`ap}", "#?}{:3_2R$BQi`ap}", false);
      ScriptableObject.redefineProperty(nativeObject0, " \u2209 [0, ", false);
      NativeCall nativeCall0 = new NativeCall();
      NativeCall nativeCall1 = nativeCall0.parentActivationCall;
      ScriptableObject.deleteProperty((Scriptable) nativeObject0, "#?}{:3_2R$BQi`ap}");
      nativeCall0.defineConst("#?}{:3_2R$BQi`ap}", nativeObject0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      TopLevel topLevel0 = new TopLevel();
      Integer integer0 = new Integer(4145);
      nativeObject0.put(0, (Scriptable) nativeIterator_StopIteration0, (Object) integer0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.buildClassCtor((Scriptable) nativeError0, class0, false, true);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-5643.269852139385));
      ScriptableObject.getProperty((Scriptable) nativeNumber0, 2);
      nativeNumber0.toString();
      NativeObject nativeObject0 = new NativeObject();
      NativeCall nativeCall0 = new NativeCall();
      NativeCall nativeCall1 = nativeCall0.parentActivationCall;
      // Undeclared exception!
      try { 
        ScriptableObject.defineConstProperty((Scriptable) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test040()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null);
      nativeJavaPackage0.size();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      context0.getApplicationClassLoader();
      NativeArray nativeArray0 = new NativeArray(context0.emptyArgs);
      nativeArray0.getOwnPropertyDescriptor(context0, context0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<ImporterTopLevel> class0 = ImporterTopLevel.class;
      NativeJavaObject nativeJavaObject0 = null;
      try {
        nativeJavaObject0 = new NativeJavaObject(nativeIterator_StopIteration0, nativeIterator_StopIteration0, class0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.putProperty((Scriptable) nativeIterator_StopIteration0, 0, (Object) nativeIterator_StopIteration0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeCall nativeCall0 = new NativeCall();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader1);
      NativeError nativeError0 = new NativeError();
      nativeError0.getClassName();
      NativeArray.getMaximumInitialCapacity();
      NativeJavaTopPackage nativeJavaTopPackage1 = new NativeJavaTopPackage(classLoader1);
      nativeJavaTopPackage0.equivalentValues(nativeJavaTopPackage1);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      NativeError nativeError0 = new NativeError();
      nativeError0.setGetterOrSetter("L1S_P',u", 0, nativeJavaTopPackage0, false);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      TopLevel topLevel0 = new TopLevel();
      nativeIterator_StopIteration0.sameValue("L1S_P',u", topLevel0);
      nativeIterator_StopIteration0.put(4, (Scriptable) nativeError0, (Object) nativeJavaTopPackage0);
      nativeIterator_StopIteration0.hasInstance(nativeError0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test044()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeContinuation0.checkPropertyDefinition(nativeError0);
      ScriptableObject.hasProperty((Scriptable) nativeError0, 0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeArray nativeArray0 = new NativeArray(0L);
      ScriptableObject.isFalse(nativeIterator_StopIteration0);
      Class<Double> class0 = Double.class;
      // Undeclared exception!
      try { 
        nativeArray0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-5643.269852139385));
      Class<NativeObject> class0 = NativeObject.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeNumber0, " ,vwK@qUdD~KYv!D>a", class0);
      ScriptableObject.getProperty((Scriptable) nativeNumber0, 2);
      nativeNumber0.toString();
      NativeObject nativeObject0 = new NativeObject();
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ScriptableObject.redefineProperty(nativeObject0, " \u2209 [0, ", false);
      ScriptableObject.deleteProperty((Scriptable) nativeObject0, "#?}{:3_2R$BQi`ap}");
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test047()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("POS");
      Class<NativeScript> class0 = NativeScript.class;
      // Undeclared exception!
      try { 
        ScriptableObject.defineClass((Scriptable) nativeJavaPackage0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.NativeScript\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test048()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      ScriptableObject.buildDataDescriptor(nativeError0, nativeError0, 0);
      Class<InterpretedFunction> class0 = InterpretedFunction.class;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "msg.iva&iD.type";
      // Undeclared exception!
      try { 
        nativeError0.defineFunctionProperties(stringArray0, class0, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Method \"msg.iva&iD.type\" not found in \"com.google.javascript.rhino.head.InterpretedFunction\".
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test049()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null);
      ContextFactory contextFactory0 = new ContextFactory();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      nativeJavaTopPackage0.isAccessorDescriptor(nativeJavaPackage0);
      TopLevel topLevel0 = new TopLevel();
      nativeJavaTopPackage0.isGenericDescriptor(nativeJavaTopPackage0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeContinuation0.getClassName();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeIterator_StopIteration0.checkPropertyDefinition(nativeContinuation0);
      ScriptableObject.putProperty((Scriptable) nativeIterator_StopIteration0, 0, (Object) nativeIterator_StopIteration0);
      ContextFactory.getGlobal();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeObject nativeObject0 = new NativeObject();
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.put("jsConstructor", (Scriptable) null, (Object) nativeObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.enter();
      Context context1 = Context.enter(context0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context1);
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.put((Object) importerTopLevel0, (Object) importerTopLevel0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-2506L));
      Class<Float> class0 = Float.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) nativeArray0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Context context0 = Context.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version", classLoader0);
      nativeJavaPackage0.getGetterOrSetter((String) null, 6026, false);
      ContextFactory contextFactory0 = new ContextFactory();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.sealObject();
      NativeError nativeError0 = new NativeError();
      nativeObject0.isGetterOrSetter("msg.method.not.found", 8, true);
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.buildClassCtor((Scriptable) nativeError0, class0, false, false);
      nativeObject0.put("msg.method.not.found", (Scriptable) nativeError0, (Object) class0);
      nativeObject0.isConst("msg.method.not.found");
      nativeObject0.findPrototypeId("finishInit");
      ScriptableObject.getPropertyIds(nativeError0);
      LinkedHashSet<NativeArray> linkedHashSet0 = new LinkedHashSet<NativeArray>();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      nativeError0.delete(13);
      NativeObject nativeObject0 = new NativeObject();
      Double double0 = new Double(0.0);
      nativeObject0.put("`", (Scriptable) nativeError0, (Object) double0);
      nativeObject0.isConst((String) null);
      nativeObject0.findPrototypeId("");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(false, "`", classLoader0);
      NativeJavaPackage nativeJavaPackage1 = nativeJavaPackage0.forcePackage("", nativeObject0);
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      nativeJavaTopPackage0.checkPropertyChange("`", nativeJavaPackage1, nativeJavaPackage0);
      NativeCall nativeCall0 = new NativeCall();
      NativeCall nativeCall1 = nativeCall0.parentActivationCall;
      // Undeclared exception!
      try { 
        nativeJavaTopPackage0.isGenericDescriptor((ScriptableObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test058()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ScriptableObject.deleteProperty((Scriptable) importerTopLevel0, 1);
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.String;
      importerTopLevel0.getBuiltinCtor(topLevel_Builtins0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Class<InterpretedFunction> class0 = InterpretedFunction.class;
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeError0, "<exxKH-Zyb1A", "jsGet_execIdCall", false);
      // Undeclared exception!
      try { 
        nativeError0.addLazilyInitializedValue("H6`[g4N:C", (-558), lazilyLoadedCtor0, 54);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // H6`[g4N:C
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test060()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-2506L));
      ScriptableObject.getArrayPrototype(nativeArray0);
      Context context0 = Context.getContext();
      NativeCall nativeCall0 = context0.currentActivationCall;
      NativeError nativeError0 = new NativeError();
      nativeError0.getClassName();
      NativeArray.getMaximumInitialCapacity();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-5643.269852139385));
      ScriptableObject.getProperty((Scriptable) nativeNumber0, 2);
      NativeObject nativeObject0 = new NativeObject();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      BoundFunction boundFunction0 = new BoundFunction(context0, nativeObject0, nativeJavaClass0, nativeJavaClass0, context0.emptyArgs);
      nativeNumber0.defineOwnProperties(context0, boundFunction0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      NativeIterator.StopIteration nativeIterator_StopIteration2 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration2.isEmpty();
      ScriptableObject.getPropertyIds(nativeIterator_StopIteration0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptableObject.hasProperty((Scriptable) nativeError0, 0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Byte byte0 = new Byte((byte) (-107));
      nativeIterator_StopIteration0.remove((Object) byte0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Class<ImporterTopLevel> class0 = ImporterTopLevel.class;
      Synchronizer synchronizer0 = new Synchronizer(nativeError0, class0);
      // Undeclared exception!
      try { 
        nativeError0.setGetterOrSetter("msg.default.value", 1, synchronizer0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // msg.default.value
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      nativeError0.delete(13);
      NativeObject nativeObject0 = new NativeObject();
      Double double0 = new Double(0.0);
      nativeObject0.put("`", (Scriptable) nativeError0, (Object) double0);
      nativeObject0.findPrototypeId("");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(false, "`", classLoader0);
      nativeJavaPackage0.forcePackage("", nativeObject0);
      ClassLoader classLoader1 = classLoader0.getParent();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader1);
      NativeJavaPackage nativeJavaPackage1 = new NativeJavaPackage(true, "0D@7", classLoader0);
      NativeCall nativeCall0 = new NativeCall();
      ScriptableObject.defineProperty((Scriptable) nativeJavaPackage1, "`", (Object) null, 8);
      NativeCall nativeCall1 = nativeCall0.parentActivationCall;
      // Undeclared exception!
      try { 
        ScriptableObject.defineConstProperty(nativeJavaPackage0, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: redeclaration of var .
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Context context0 = Context.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version", classLoader0);
      nativeJavaPackage0.getGetterOrSetter((String) null, 6026, false);
      ScriptableObject.putProperty((Scriptable) nativeJavaPackage0, "error reporter", (Object) nativeJavaPackage0);
      ContextFactory contextFactory0 = new ContextFactory();
      nativeJavaPackage0.getIds(true);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test067()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null);
      ScriptableObject.putConstProperty(nativeJavaPackage0, (String) null, nativeJavaPackage0);
      nativeJavaPackage0.delete((String) null);
      NativeNumber nativeNumber0 = new NativeNumber(1335.938377);
      nativeNumber0.toString();
      NativeObject nativeObject0 = new NativeObject();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      contextFactory0.enterContext(context0);
      context0.initStandardObjects((ScriptableObject) nativeObject0);
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Boolean;
      // Undeclared exception!
      try { 
        TopLevel.getBuiltinCtor(context0, (Scriptable) nativeJavaPackage0, topLevel_Builtins0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeJavaPackage", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test068()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Class<NativeIterator> class0 = NativeIterator.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeError0, 8, class0);
      Class<NativeJavaPackage> class1 = NativeJavaPackage.class;
      // Undeclared exception!
      try { 
        ScriptableObject.defineClass((Scriptable) null, class1, false, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.NativeJavaPackage\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test069()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null);
      nativeJavaPackage0.size();
      Delegator delegator0 = new Delegator(nativeJavaPackage0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.putConstProperty(delegator0, "-:{JRt]TW urJ+U", nativeIterator_StopIteration0);
      Class<NativeArray> class0 = NativeArray.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getTypedProperty((Scriptable) delegator0, ":D~~", class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeJavaPackage", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      // Undeclared exception!
      try { 
        nativeJavaTopPackage0.defineProperty("S(IoQ*6VEa", (Object) "S(IoQ*6VEa", (-909));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -909
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test071()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null);
      nativeJavaPackage0.size();
      ContextFactory.getGlobal();
      ContextFactory.getGlobal();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.sealObject();
      NativeError nativeError0 = new NativeError();
      nativeObject0.put("", (Scriptable) nativeError0, (Object) null);
      ScriptableObject.getTopScopeValue(nativeError0, (Object) null);
      Class<NativeIterator> class0 = NativeIterator.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeObject0, 2, class0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeCall nativeCall0 = new NativeCall();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.putConstProperty(nativeError0, "__iterator__", nativeIterator_StopIteration0);
      nativeIterator_StopIteration0.hasInstance(nativeObject0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      nativeError0.delete(1);
      NativeArray nativeArray0 = new NativeArray(3246L);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeContinuation0.getIds();
      NativeCall nativeCall0 = new NativeCall();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "call";
      objectArray0[1] = (Object) nativeContinuation0;
      objectArray0[2] = (Object) "call";
      objectArray0[3] = (Object) nativeContinuation0;
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.get("call");
      objectArray0[4] = null;
      objectArray0[5] = (Object) nativeContinuation0;
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      // Undeclared exception!
      try { 
        nativeArray0.getOwnPropertyDescriptor(context0, nativeBoolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test075()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      Class<BaseFunction> class0 = BaseFunction.class;
      // Undeclared exception!
      try { 
        ScriptableObject.buildClassCtor((Scriptable) nativeJavaTopPackage0, class0, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test076()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Double double0 = new Double(0.0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context();
      Context.exit();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(true, "`", classLoader0);
      NativeJavaPackage nativeJavaPackage1 = new NativeJavaPackage(true, "0D@7", classLoader0);
      Integer integer0 = new Integer(13);
      Float float0 = new Float((float) 8);
      nativeJavaPackage1.sameValue(integer0, float0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      // Undeclared exception!
      try { 
        importerTopLevel0.initStandardObjects(context0, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      ScriptableObject.ensureScriptable(nativeCall0);
      Arguments arguments0 = null;
      try {
        arguments0 = new Arguments(nativeCall0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.findPrototypeId("ASSIGN");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      contextFactory0.seal();
      String string0 = "jsFunction_getTypeOf";
      classLoader0.setClassAssertionStatus("jsFunction_getTypeOf", false);
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(true, "error reporter", classLoader0);
      NativeCall nativeCall0 = new NativeCall();
      NativeCall nativeCall1 = nativeCall0.parentActivationCall;
      NativeObject nativeObject1 = new NativeObject();
      int int0 = (-1832);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      NativeJavaArray nativeJavaArray0 = null;
      try {
        nativeJavaArray0 = new NativeJavaArray(importerTopLevel0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeJavaArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      String string0 = "HGrOu";
      Class<NativeJavaClass> class0 = NativeJavaClass.class;
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.defineProperty("HGrOu", class0, 55);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 55
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      ContextFactory contextFactory0 = new ContextFactory();
      NativeNumber nativeNumber0 = new NativeNumber(1);
      nativeJavaTopPackage0.setAttributes("OJJ&Yn\"vQF''LHgq5N", (Scriptable) nativeNumber0, 4);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test081()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeCall nativeCall0 = new NativeCall();
      Class<Arguments> class0 = Arguments.class;
      // Undeclared exception!
      try { 
        ScriptableObject.defineClass((Scriptable) importerTopLevel0, class0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.Arguments\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      nativeJavaTopPackage0.isGenericDescriptor(nativeObject0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(true, "D", classLoader0);
      nativeJavaPackage0.forcePackage("", nativeObject0);
      contextFactory0.getApplicationClassLoader();
      NativeObject nativeObject1 = new NativeObject();
      ContextFactory contextFactory1 = new ContextFactory();
      contextFactory1.getApplicationClassLoader();
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      BoundFunction boundFunction0 = new BoundFunction(context0, nativeObject0, nativeJavaClass0, nativeJavaClass0, context0.emptyArgs);
      NativeNumber nativeNumber0 = new NativeNumber(0);
      // Undeclared exception!
      try { 
        nativeNumber0.defineOwnProperties(context0, nativeJavaPackage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: com.google.javascript.rhino.head.NativeJavaPackage@0000000021 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      BaseFunction baseFunction0 = null;
      try {
        baseFunction0 = new BaseFunction((Scriptable) null, (Scriptable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Class<InterpretedFunction> class0 = InterpretedFunction.class;
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        nativeError0.defineFunctionProperties(stringArray0, class0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.FunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      NativeJavaConstructor nativeJavaConstructor0 = new NativeJavaConstructor((MemberBox) null);
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory1);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeGenerator nativeGenerator0 = NativeGenerator.init(topLevel0, true);
      ScriptableObject.putProperty((Scriptable) nativeIterator_StopIteration0, 1, (Object) nativeGenerator0);
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration1.checkPropertyDefinition(nativeJavaConstructor0);
      Object[] objectArray0 = ScriptableObject.getPropertyIds(nativeIterator_StopIteration0);
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      NativeError nativeError0 = new NativeError();
      NativeJSON.stringify(context0, nativeJavaConstructor0, nativeArray0, nativeError0, nativeIterator_StopIteration1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test087()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-2506L));
      Class<TopLevel> class0 = TopLevel.class;
      // Undeclared exception!
      try { 
        nativeArray0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.TopLevel
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test088()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.findPrototypeId("POS");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context();
      Context.exit();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(false, "!U4Hj[>.;cybABdt1~", classLoader0);
      NativeJavaPackage nativeJavaPackage1 = new NativeJavaPackage(false, "POS", classLoader0);
      Integer integer0 = new Integer(717);
      Float float0 = new Float(2023.2F);
      Delegator delegator0 = new Delegator();
      nativeJavaPackage1.sameValue(delegator0, integer0);
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeIterator_StopIteration0.checkPropertyDefinition(nativeContinuation0);
      NativeArray nativeArray0 = new NativeArray(1977L);
      Class<Double> class0 = Double.class;
      // Undeclared exception!
      try { 
        nativeArray0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      NativeObject nativeObject0 = new NativeObject();
      NativeError nativeError0 = new NativeError();
      String[] stringArray0 = new String[0];
      Synchronizer synchronizer0 = new Synchronizer(nativeObject0);
      nativeError0.get((Object) synchronizer0);
      Class<Method> class0 = Method.class;
      nativeError0.defineFunctionProperties(stringArray0, class0, 4);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeCall nativeCall0 = new NativeCall();
      Class<NativeIterator> class0 = NativeIterator.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeIterator_StopIteration0, 2, class0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.preventExtensions();
      NativeCall nativeCall1 = new NativeCall();
      nativeIterator_StopIteration0.hasInstance(importerTopLevel0);
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.associateValue(importerTopLevel1, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test092()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Class<InterpretedFunction> class0 = InterpretedFunction.class;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "msg.invalid.type";
      // Undeclared exception!
      try { 
        nativeError0.defineFunctionProperties(stringArray0, class0, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Method \"msg.invalid.type\" not found in \"com.google.javascript.rhino.head.InterpretedFunction\".
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test093()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null);
      ScriptableObject.deleteProperty((Scriptable) nativeJavaPackage0, "9rJO@O;M)G0$R");
      nativeJavaPackage0.size();
      ContextFactory.getGlobal();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      nativeJavaTopPackage0.setPrototype(nativeJavaPackage0);
      nativeJavaTopPackage0.isGenericDescriptor(nativeJavaPackage0);
      NativeArray nativeArray0 = new NativeArray(1);
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes(4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 4 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeCall nativeCall0 = new NativeCall();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.hasInstance(nativeContinuation0);
      ScriptableObject.deleteProperty((Scriptable) nativeIterator_StopIteration0, "C'.GxXY");
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.putProperty((Scriptable) nativeIterator_StopIteration0, 0, (Object) nativeIterator_StopIteration0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeCall nativeCall0 = new NativeCall();
      NativeCall nativeCall1 = new NativeCall();
      Byte byte0 = new Byte((byte)122);
      nativeIterator_StopIteration0.put(2, (Scriptable) nativeCall0, (Object) byte0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test096()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeContinuation0.getIds();
      NativeError nativeError0 = new NativeError();
      // Undeclared exception!
      try { 
        nativeError0.getAttributes(0, (Scriptable) nativeContinuation0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 0 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      ScriptableObject.isFalse((Object) null);
      NativeObject nativeObject0 = new NativeObject();
      ContextFactory.getGlobal();
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      Synchronizer synchronizer0 = new Synchronizer(nativeObject0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      NativeError nativeError0 = new NativeError();
      nativeError0.setGetterOrSetter("L1S_P',u", 0, nativeJavaTopPackage0, false);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.put(4, (Scriptable) nativeError0, (Object) nativeJavaTopPackage0);
      nativeIterator_StopIteration0.hasInstance(nativeError0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Object[] objectArray0 = ScriptableObject.getPropertyIds(importerTopLevel0);
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.getLength();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptable((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type object
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test101()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "msg.invalid.type";
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("ds8=Y:FMiJqN:d");
      NativeJavaPackage nativeJavaPackage1 = nativeJavaPackage0.forcePackage("ds8=Y:FMiJqN:d", nativeError0);
      nativeJavaPackage1.getGetterOrSetter("ds8=Y:FMiJqN:d", 0, false);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test102()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Context context0 = Context.getContext();
      Scriptable scriptable0 = context0.newObject((Scriptable) nativeError0);
      nativeError0.putConst(" B#26", scriptable0, " B#26");
      NativeCall nativeCall0 = context0.currentActivationCall;
      NativeError nativeError1 = new NativeError();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.putProperty((Scriptable) nativeIterator_StopIteration0, 0, (Object) nativeIterator_StopIteration0);
      nativeIterator_StopIteration0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.getApplicationClassLoader();
      NativeCall nativeCall0 = new NativeCall();
      nativeCall0.get("jsGet_getTypeOf", (Scriptable) nativeError0);
      Class<NativeIterator> class0 = NativeIterator.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeCall0, 1046, class0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeCall nativeCall1 = nativeCall0.parentActivationCall;
      nativeCall0.defineConst("5EJ", (Scriptable) null);
      NativeObject nativeObject0 = new NativeObject();
      NativeCall nativeCall2 = new NativeCall();
      nativeCall2.checkPropertyDefinition(nativeCall0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      ScriptableObject scriptableObject0 = ScriptableObject.ensureScriptableObject(nativeJavaTopPackage0);
      scriptableObject0.has((-199), (Scriptable) nativeJavaTopPackage0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-2514L));
      ScriptableObject.getArrayPrototype(nativeArray0);
      nativeArray0.has(0, (Scriptable) nativeArray0);
      NativeArray nativeArray1 = new NativeArray((-686L));
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeArray1, (String) null, "Property table overflow", false, false);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeArray1, lazilyLoadedCtor0, 2, 13);
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        idFunctionObject0.createObject(context0, nativeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: \"null\" is not a constructor.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test107()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      assertFalse(contextFactory0.hasExplicitGlobal());
      assertFalse(contextFactory0.isSealed());
      assertNotNull(contextFactory0);
      
      Context context0 = contextFactory0.enter();
      assertFalse(contextFactory0.hasExplicitGlobal());
      assertFalse(contextFactory0.isSealed());
      assertFalse(context0.isSealed());
      assertEquals(0, context0.getInstructionObserverThreshold());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertFalse(context0.isGeneratingDebug());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertFalse(context0.isGeneratingDebugChanged());
      assertNotNull(context0);
      assertFalse(context0.generateObserverCount);
      assertEquals(130, Context.VERSION_1_3);
      assertEquals(5, Context.FEATURE_PARENT_PROTO_PROPERTIES);
      assertEquals(170, Context.VERSION_1_7);
      assertEquals(140, Context.VERSION_1_4);
      assertEquals(13, Context.FEATURE_ENHANCED_JAVA_ACCESS);
      assertEquals(180, Context.VERSION_1_8);
      assertEquals(6, Context.FEATURE_E4X);
      assertEquals(3, Context.FEATURE_RESERVED_KEYWORD_AS_IDENTIFIER);
      assertEquals(9, Context.FEATURE_STRICT_EVAL);
      assertEquals(4, Context.FEATURE_TO_STRING_AS_SOURCE);
      assertEquals(11, Context.FEATURE_STRICT_MODE);
      assertEquals(2, Context.FEATURE_MEMBER_EXPR_AS_FUNCTION_NAME);
      assertEquals(10, Context.FEATURE_LOCATION_INFORMATION_IN_ERROR);
      assertEquals(12, Context.FEATURE_WARNING_AS_ERROR);
      assertEquals(8, Context.FEATURE_STRICT_VARS);
      assertEquals((-1), Context.VERSION_UNKNOWN);
      assertEquals(100, Context.VERSION_1_0);
      assertEquals(110, Context.VERSION_1_1);
      assertEquals(150, Context.VERSION_1_5);
      assertEquals(0, Context.VERSION_DEFAULT);
      assertEquals(120, Context.VERSION_1_2);
      assertEquals(5, Context.FEATURE_PARENT_PROTO_PROPRTIES);
      assertEquals(1, Context.FEATURE_NON_ECMA_GET_YEAR);
      assertEquals(7, Context.FEATURE_DYNAMIC_SCOPE);
      assertEquals(160, Context.VERSION_1_6);
      
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      NativeArray nativeArray0 = new NativeArray(8);
      nativeArray0.defineOwnProperty(context0, importerTopLevel0, importerTopLevel0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.findPrototypeId("jsStaticFunction_setImmunePrototypeProperty");
      ContextFactory contextFactory1 = new ContextFactory();
      contextFactory1.enter();
      // Undeclared exception!
      try { 
        contextFactory0.seal();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test108()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      assertFalse(nativeError0.hasPrototypeMap());
      assertEquals("object", nativeError0.getTypeOf());
      assertTrue(nativeError0.isExtensible());
      assertEquals("Error", nativeError0.getClassName());
      assertFalse(nativeError0.avoidObjectDetection());
      assertTrue(nativeError0.isEmpty());
      assertFalse(nativeError0.isSealed());
      assertNotNull(nativeError0);
      assertEquals(1, ScriptableObject.READONLY);
      assertEquals(13, ScriptableObject.CONST);
      assertEquals(4, ScriptableObject.PERMANENT);
      assertEquals(0, ScriptableObject.EMPTY);
      assertEquals(2, ScriptableObject.DONTENUM);
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
      
      NativeArray nativeArray0 = new NativeArray(2);
      assertFalse(nativeArray0.avoidObjectDetection());
      assertEquals("Array", nativeArray0.getClassName());
      assertTrue(nativeArray0.isEmpty());
      assertEquals(2L, nativeArray0.jsGet_length());
      assertEquals(2L, nativeArray0.getLength());
      assertEquals("object", nativeArray0.getTypeOf());
      assertFalse(nativeArray0.isSealed());
      assertFalse(nativeArray0.hasPrototypeMap());
      assertTrue(nativeArray0.isExtensible());
      assertNotNull(nativeArray0);
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
      assertEquals(4, ScriptableObject.PERMANENT);
      assertEquals(1, ScriptableObject.READONLY);
      assertEquals(0, ScriptableObject.EMPTY);
      assertEquals(13, ScriptableObject.CONST);
      assertEquals(2, ScriptableObject.DONTENUM);
      
      boolean boolean0 = nativeArray0.isGetterOrSetter("jsFunction_getClassName", 2, true);
      assertFalse(boolean0);
      assertFalse(nativeArray0.avoidObjectDetection());
      assertEquals("Array", nativeArray0.getClassName());
      assertTrue(nativeArray0.isEmpty());
      assertEquals(2L, nativeArray0.jsGet_length());
      assertEquals(2L, nativeArray0.getLength());
      assertEquals("object", nativeArray0.getTypeOf());
      assertFalse(nativeArray0.isSealed());
      assertFalse(nativeArray0.hasPrototypeMap());
      assertTrue(nativeArray0.isExtensible());
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
      assertEquals(4, ScriptableObject.PERMANENT);
      assertEquals(1, ScriptableObject.READONLY);
      assertEquals(0, ScriptableObject.EMPTY);
      assertEquals(13, ScriptableObject.CONST);
      assertEquals(2, ScriptableObject.DONTENUM);
      
      NativeArray nativeArray1 = new NativeArray(2);
      assertEquals(2L, nativeArray1.jsGet_length());
      assertFalse(nativeArray1.isSealed());
      assertTrue(nativeArray1.isEmpty());
      assertEquals(2L, nativeArray1.getLength());
      assertEquals("object", nativeArray1.getTypeOf());
      assertFalse(nativeArray1.hasPrototypeMap());
      assertTrue(nativeArray1.isExtensible());
      assertEquals("Array", nativeArray1.getClassName());
      assertFalse(nativeArray1.avoidObjectDetection());
      assertNotNull(nativeArray1);
      assertEquals(13, ScriptableObject.CONST);
      assertEquals(0, ScriptableObject.EMPTY);
      assertEquals(2, ScriptableObject.DONTENUM);
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
      assertEquals(1, ScriptableObject.READONLY);
      assertEquals(4, ScriptableObject.PERMANENT);
      assertFalse(nativeArray1.equals((Object)nativeArray0));
      
      Class<ImporterTopLevel> class0 = ImporterTopLevel.class;
      String string0 = ScriptableObject.defineClass((Scriptable) nativeArray0, class0, true, true);
      assertFalse(nativeArray0.avoidObjectDetection());
      assertFalse(nativeArray0.isEmpty());
      assertEquals("Array", nativeArray0.getClassName());
      assertEquals(2L, nativeArray0.jsGet_length());
      assertEquals(2L, nativeArray0.getLength());
      assertEquals("object", nativeArray0.getTypeOf());
      assertFalse(nativeArray0.isSealed());
      assertFalse(nativeArray0.hasPrototypeMap());
      assertTrue(nativeArray0.isExtensible());
      assertNull(string0);
      assertNotSame(nativeArray0, nativeArray1);
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
      assertEquals(4, ScriptableObject.PERMANENT);
      assertEquals(1, ScriptableObject.READONLY);
      assertEquals(0, ScriptableObject.EMPTY);
      assertEquals(13, ScriptableObject.CONST);
      assertEquals(2, ScriptableObject.DONTENUM);
      assertFalse(nativeArray0.equals((Object)nativeArray1));
  }

  @Test(timeout = 4000)
  @Ignore
  public void test109()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.sealObject();
      NativeError nativeError1 = new NativeError();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptableObject.buildDataDescriptor(nativeContinuation0, nativeError1, 23);
      ScriptableObject.hasProperty((Scriptable) nativeError0, 3671);
      Class<NativeDate> class0 = NativeDate.class;
      String[] stringArray0 = new String[0];
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      ScriptableObject.isTrue(importerTopLevel0);
      nativeError0.defineFunctionProperties(stringArray0, class0, (-443));
      ScriptableObject.putProperty((Scriptable) nativeError0, 13, (Object) nativeObject0);
      ContextFactory.getGlobal();
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context0, (Scriptable) nativeObject0, "language version", context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000368 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeContinuation0.getIds();
      NativeError nativeError0 = new NativeError();
      nativeError0.checkPropertyChange("call", nativeContinuation0, nativeContinuation0);
      assertTrue(nativeContinuation0.isEmpty());
      
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      boolean boolean0 = nativeIterator_StopIteration0.isEmpty();
      assertTrue(nativeIterator_StopIteration0.isExtensible());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test111()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      nativeError0.setStackProvider((RhinoException) null);
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeError0, false);
      int int0 = nativeError0.applyDescriptorToAttributeBitset(0, nativeGenerator0);
      assertEquals(0, int0);
      
      nativeError0.findPrototypeId("z!K");
      Float float0 = new Float((double) 8);
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("set");
      boolean boolean0 = ScriptableObject.deleteProperty((Scriptable) nativeGenerator0, 1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-2506L));
      boolean boolean0 = nativeArray0.isGetterOrSetter("?e+", 13, false);
      assertTrue(nativeArray0.isEmpty());
      assertFalse(boolean0);
      
      NativeArray nativeArray1 = new NativeArray(13);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      assertTrue(nativeIterator_StopIteration0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeArray nativeArray0 = new NativeArray(2);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      Long long0 = new Long(48L);
      nativeArray0.defineOwnProperty(context0, long0, nativeIterator_StopIteration0);
      contextFactory0.onContextReleased(context0);
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      contextFactory0.enterContext();
      nativeIterator_StopIteration0.findPrototypeId("error reporter");
      ContextFactory contextFactory1 = new ContextFactory();
      ContextFactory.getGlobalSetter();
      Context context1 = contextFactory1.enter();
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context1, (Scriptable) nativeIterator_StopIteration1, "jsGet_setImmunePrototypeProperty", context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000018 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.sealObject();
      NativeError nativeError0 = new NativeError();
      nativeObject0.put("", (Scriptable) nativeError0, (Object) null);
      nativeObject0.isConst("0D@7");
      nativeObject0.findPrototypeId("");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      contextFactory0.seal();
      classLoader0.setClassAssertionStatus("", true);
      NativeObject nativeObject1 = new NativeObject();
      // Undeclared exception!
      try { 
        nativeObject1.put(401, (Scriptable) nativeObject0, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: 401.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-3286L));
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptableObject(nativeWith0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type object
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test116()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null);
      ContextFactory contextFactory0 = new ContextFactory();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      TopLevel topLevel0 = new TopLevel();
      boolean boolean0 = nativeJavaTopPackage0.isGenericDescriptor(nativeJavaTopPackage0);
      assertTrue(nativeJavaTopPackage0.isExtensible());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(topLevel0, topLevel0, 724, 2);
      // Undeclared exception!
      try { 
        idFunctionObject0.exportAsScopeProperty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeArray nativeArray0 = new NativeArray(1L);
      nativeArray0.setAttributes(1, (Scriptable) nativeContinuation0, 2);
      nativeArray0.delete(4138);
      assertEquals(0, ScriptableObject.EMPTY);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ContextFactory.getGlobal();
      Context context0 = Context.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(false, "Y%ja{X\"WIix!", classLoader0);
      ClassLoader classLoader1 = classLoader0.getParent();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader1);
      NativeJavaTopPackage nativeJavaTopPackage1 = new NativeJavaTopPackage(classLoader0);
      ClassLoader classLoader2 = classLoader0.getParent();
      NativeJavaTopPackage nativeJavaTopPackage2 = new NativeJavaTopPackage(classLoader2);
      NativeError nativeError0 = new NativeError();
      nativeError0.getClassName();
      NativeArray.getMaximumInitialCapacity();
      nativeJavaTopPackage1.equivalentValues(nativeJavaPackage0);
      assertTrue(nativeJavaTopPackage1.isExtensible());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      NativeObject nativeObject1 = new NativeObject();
      ScriptableObject.putConstProperty(nativeObject0, "isScript", nativeObject1);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      assertEquals(140, Context.VERSION_1_4);
  }
}
