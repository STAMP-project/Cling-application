/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 18 06:08:34 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.Callable;
import com.google.javascript.rhino.head.ClassShutter;
import com.google.javascript.rhino.head.CompilerEnvirons;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextAction;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.ContextListener;
import com.google.javascript.rhino.head.DefaultErrorReporter;
import com.google.javascript.rhino.head.ErrorReporter;
import com.google.javascript.rhino.head.Evaluator;
import com.google.javascript.rhino.head.EvaluatorException;
import com.google.javascript.rhino.head.Function;
import com.google.javascript.rhino.head.IdFunctionCall;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.Interpreter;
import com.google.javascript.rhino.head.InterpreterData;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeBoolean;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJavaClass;
import com.google.javascript.rhino.head.NativeJavaObject;
import com.google.javascript.rhino.head.NativeJavaPackage;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeWith;
import com.google.javascript.rhino.head.PolicySecurityController;
import com.google.javascript.rhino.head.RegExpProxy;
import com.google.javascript.rhino.head.Script;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.SecurityController;
import com.google.javascript.rhino.head.TopLevel;
import com.google.javascript.rhino.head.WrapFactory;
import com.google.javascript.rhino.head.debug.DebuggableScript;
import com.google.javascript.rhino.head.debug.Debugger;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.io.StringReader;
import java.lang.reflect.InvocationTargetException;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockError;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Context_ESTest extends Context_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Context context0 = new Context();
      context0.removeActivationName("com.google.javascript.rhino.head.tools.debugger.Main");
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
      assertFalse(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test001()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.removeActivationName("jsStaticFunction must be used with static method.");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test002()  throws Throwable  {
      Context context0 = Context.getContext();
      boolean boolean0 = context0.isActivationNeeded("error reporter");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test003()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        context0.addActivationName("getTime");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test004()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        context0.addActivationName("53,yTV!EoMT0hd");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      context0.addActivationName("=gfEFW<@|%a");
      boolean boolean0 = context0.isActivationNeeded("=gfEFW<@|%a");
      assertTrue(boolean0);
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test006()  throws Throwable  {
      Context context0 = Context.getContext();
      boolean boolean0 = context0.isVersionECMA1();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Context context0 = new Context();
      RegExpProxy regExpProxy0 = context0.getRegExpProxy();
      assertNotNull(regExpProxy0);
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Context context0 = Context.enter();
      RegExpProxy regExpProxy0 = context0.getRegExpProxy();
      assertNotNull(regExpProxy0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test009()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeNumber nativeNumber0 = new NativeNumber(120);
      Interpreter interpreter0 = new Interpreter();
      // Undeclared exception!
      try { 
        context0.compileFunction((Scriptable) nativeNumber0, "", (Evaluator) interpreter0, (ErrorReporter) null, "o", 4, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // compileFunction only accepts source with single JS function: 
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test010()  throws Throwable  {
      Context context0 = new Context();
      Interpreter interpreter0 = new Interpreter();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version");
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      // Undeclared exception!
      try { 
        context0.compileFunction((Scriptable) nativeJavaPackage0, "language version", (Evaluator) interpreter0, (ErrorReporter) defaultErrorReporter0, "language version", 8, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (language version#8)
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Context context0 = Context.enter();
      NativeNumber nativeNumber0 = new NativeNumber(110);
      Interpreter interpreter0 = new Interpreter();
      // Undeclared exception!
      try { 
        context0.compileFunction((Scriptable) nativeNumber0, "Context.java.java", (Evaluator) interpreter0, (ErrorReporter) null, "Context.java.java", 1, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // compileFunction only accepts source with single JS function: Context.java.java
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test012()  throws Throwable  {
      Context context0 = new Context();
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      context0.setSecurityController(policySecurityController0);
      BaseFunction baseFunction0 = new BaseFunction();
      // Undeclared exception!
      try { 
        context0.evaluateString(baseFunction0, "com.google.javascript.rhino.head.ContextListener$MockitoMock$765020483", "~", 2858, baseFunction0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Context context0 = Context.enter();
      NativeCall nativeCall0 = context0.currentActivationCall;
      // Undeclared exception!
      try { 
        context0.evaluateString(nativeCall0, (String) null, (String) null, 2, (Object) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test014()  throws Throwable  {
      Context context0 = new Context();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        context0.setApplicationClassLoader(classLoader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Loader can not resolve Rhino classes
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Context context0 = new Context();
      context0.setApplicationClassLoader((ClassLoader) null);
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test016()  throws Throwable  {
      Context context0 = Context.enter();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      // Undeclared exception!
      try { 
        context0.setApplicationClassLoader(classLoader0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Context context0 = new Context();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      assertNotNull(classLoader0);
      
      context0.setApplicationClassLoader(classLoader0);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Context context0 = new Context();
      context0.setInstructionObserverThreshold(105);
      assertTrue(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setInstructionObserverThreshold((-17));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test020()  throws Throwable  {
      Context context0 = Context.getContext();
      assertEquals(0, context0.getInstructionObserverThreshold());
      
      // Undeclared exception!
      try { 
        context0.setInstructionObserverThreshold(7);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test021()  throws Throwable  {
      Interpreter interpreter0 = new Interpreter();
      Script script0 = interpreter0.createScriptObject((Object) null, (Object) null);
      DebuggableScript debuggableScript0 = Context.getDebuggableView(script0);
      assertNull(debuggableScript0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DebuggableScript debuggableScript0 = Context.getDebuggableView((Script) null);
      assertNull(debuggableScript0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test023()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        context0.setDebugger((Debugger) null, (Object) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Context context0 = new Context();
      context0.setDebugger((Debugger) null, (Object) null);
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Context context0 = new Context();
      WrapFactory wrapFactory0 = context0.getWrapFactory();
      assertEquals(0, context0.getLanguageVersion());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getOptimizationLevel());
      assertNotNull(wrapFactory0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Context context0 = new Context();
      WrapFactory wrapFactory0 = new WrapFactory();
      context0.setWrapFactory(wrapFactory0);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
      assertFalse(context0.generateObserverCount);
      assertTrue(context0.isGeneratingSource());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test027()  throws Throwable  {
      Context context0 = Context.getContext();
      WrapFactory wrapFactory0 = new WrapFactory();
      // Undeclared exception!
      try { 
        context0.setWrapFactory(wrapFactory0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setWrapFactory((WrapFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Context context0 = new Context();
      Long long0 = new Long(2982L);
      context0.putThreadLocal(long0, long0);
      context0.removeThreadLocal("language version");
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test030()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeCall nativeCall0 = context0.currentActivationCall;
      // Undeclared exception!
      try { 
        context0.removeThreadLocal(nativeCall0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Context context0 = new Context();
      context0.removeThreadLocal("language version");
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Context context0 = new Context();
      NativeNumber nativeNumber0 = new NativeNumber(130);
      context0.putThreadLocal(nativeNumber0, nativeNumber0);
      NativeWith nativeWith0 = new NativeWith(nativeNumber0, nativeNumber0);
      context0.putThreadLocal(nativeNumber0, nativeWith0);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test033()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeNumber nativeNumber0 = new NativeNumber(130);
      // Undeclared exception!
      try { 
        context0.putThreadLocal(nativeNumber0, nativeNumber0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test034()  throws Throwable  {
      Context context0 = new Context();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      context0.getThreadLocal(importerTopLevel0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test035()  throws Throwable  {
      Context context0 = new Context();
      NativeNumber nativeNumber0 = new NativeNumber(8);
      context0.putThreadLocal(nativeNumber0, nativeNumber0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      context0.getThreadLocal(importerTopLevel0);
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test036()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Context.ClassShutterSetter context_ClassShutterSetter0 = context0.getClassShutterSetter();
      assertNull(context_ClassShutterSetter0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test037()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.setClassShutter((ClassShutter) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Context context0 = new Context();
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      SecurityController.initGlobal(policySecurityController0);
      // Undeclared exception!
      try { 
        context0.setSecurityController(policySecurityController0);
        fail("Expecting exception: SecurityException");
      
      } catch(SecurityException e) {
         //
         // Can not overwrite existing global SecurityController object
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setSecurityController((SecurityController) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test040()  throws Throwable  {
      Context context0 = Context.getContext();
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      // Undeclared exception!
      try { 
        context0.setSecurityController(policySecurityController0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test041()  throws Throwable  {
      Context context0 = new Context();
      PolicySecurityController policySecurityController0 = new PolicySecurityController();
      context0.setSecurityController(policySecurityController0);
      // Undeclared exception!
      try { 
        context0.setSecurityController(policySecurityController0);
        fail("Expecting exception: SecurityException");
      
      } catch(SecurityException e) {
         //
         // Can not overwrite existing SecurityController object
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Context context0 = new Context();
      context0.setOptimizationLevel((-1));
      // Undeclared exception!
      try { 
        context0.setMaximumInterpreterStackDepth((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot set maximumInterpreterStackDepth to less than 1
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        context0.setMaximumInterpreterStackDepth(13);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setMaximumInterpreterStackDepth(12);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot set maximumInterpreterStackDepth when optimizationLevel != -1
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setOptimizationLevel(140);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Optimization level outside [-1..9]: 140
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setOptimizationLevel((-451));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Optimization level outside [-1..9]: -451
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Context context0 = new Context();
      context0.setOptimizationLevel((-2));
      context0.setMaximumInterpreterStackDepth(12);
      assertEquals(12, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test048()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.setGeneratingSource(true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Context context0 = new Context();
      context0.setGeneratingSource(true);
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getLanguageVersion());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Context context0 = new Context();
      context0.setOptimizationLevel(9);
      context0.setGeneratingDebug(true);
      assertTrue(context0.isGeneratingDebug());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Context context0 = new Context();
      context0.setGeneratingDebug(false);
      assertTrue(context0.isGeneratingDebugChanged());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test052()  throws Throwable  {
      Context context0 = Context.enter();
      assertFalse(context0.isGeneratingDebugChanged());
      
      // Undeclared exception!
      try { 
        context0.setGeneratingDebug(true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Context context0 = new Context();
      context0.setGeneratingDebug(true);
      assertTrue(context0.isGeneratingDebug());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test054()  throws Throwable  {
      MockError mockError0 = new MockError();
      // Undeclared exception!
      try { 
        Context.throwAsScriptRuntimeEx(mockError0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      InvocationTargetException invocationTargetException0 = new InvocationTargetException((Throwable) null);
      // Undeclared exception!
      try { 
        Context.throwAsScriptRuntimeEx(invocationTargetException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.WrappedException", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test056()  throws Throwable  {
      Context context0 = new Context();
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        Context.javaToJS(context0, nativeJavaObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Character character0 = Character.valueOf('f');
      Object object0 = Context.javaToJS(character0, (Scriptable) null);
      assertEquals("f", object0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Object object0 = Context.javaToJS(context0.generateObserverCount, nativeIterator_StopIteration0);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(false, object0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeContinuation nativeContinuation1 = (NativeContinuation)Context.javaToJS(nativeContinuation0, nativeContinuation0);
      assertTrue(nativeContinuation1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Object object0 = Context.javaToJS("^x93HOur|w_Q", nativeIterator_StopIteration0);
      assertEquals("^x93HOur|w_Q", object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test061()  throws Throwable  {
      Context context0 = new Context();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      context0.newObject((Scriptable) scriptableObject0, "Call", (Object[]) null);
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Context context0 = new Context();
      Interpreter interpreter0 = new Interpreter();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject((IdFunctionCall) null, interpreter0, 9, 160);
      String string0 = context0.decompileFunctionBody(idFunctionObject0, 1);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals("[native code for , arity=160]\n", string0);
      assertEquals(0, context0.getOptimizationLevel());
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test063()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      String string0 = context0.decompileFunctionBody((Function) null, 9);
      assertEquals("[native code]\n", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test064()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Error;
      BaseFunction baseFunction0 = importerTopLevel0.getBuiltinCtor(topLevel_Builtins0);
      String string0 = context0.decompileFunction(baseFunction0, 8);
      assertFalse(baseFunction0.isSealed());
      assertEquals("function Error() { [native code for Error.Error, arity=1] }\n", string0);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test065()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      String string0 = context0.decompileFunction(nativeContinuation0, 1610);
      assertEquals("function Continuation() {\n\t[native code]\n}\n", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test066()  throws Throwable  {
      Context context0 = new Context();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        context0.evaluateString(nativeContinuation0, "error reporter", "error reporter", (-84), nativeContinuation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test067()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeNumber nativeNumber0 = new NativeNumber(110);
      StringReader stringReader0 = new StringReader("language version");
      // Undeclared exception!
      try { 
        context0.evaluateReader(nativeNumber0, stringReader0, "language version", 13, stringReader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // securityDomain should be null if setSecurityController() was never called
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Context context0 = new Context();
      boolean boolean0 = context0.stringIsCompilableUnit("com.google.javascript.rhino.head.ContextListener$MockitoMock$765020483");
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertTrue(context0.isGeneratingSource());
      assertTrue(boolean0);
      assertEquals(0, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test069()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData(0, "error reporter", "error reporter", false);
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createScript(interpreterData0, (Object) null);
      // Undeclared exception!
      try { 
        context0.executeScriptWithContinuations(interpretedFunction0, interpretedFunction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test070()  throws Throwable  {
      Context context0 = Context.getContext();
      BaseFunction baseFunction0 = new BaseFunction();
      // Undeclared exception!
      try { 
        context0.callFunctionWithContinuations(baseFunction0, baseFunction0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Function argument was not created by interpreted mode 
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Context context0 = Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(0, "error reporter", "error reporter", true);
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createScript(interpreterData0, (Object) null);
      // Undeclared exception!
      try { 
        context0.executeScriptWithContinuations(interpretedFunction0, interpretedFunction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test072()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeNumber nativeNumber0 = new NativeNumber(130);
      // Undeclared exception!
      try { 
        context0.executeScriptWithContinuations((Script) null, nativeNumber0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Script argument was not a script or was not created by interpreted mode 
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test073()  throws Throwable  {
      EvaluatorException evaluatorException0 = Context.reportRuntimeError("o%5`dl}1z@e~.M", "com.google.javascript.rhino.head.Context", 0, "j!z#H$!ChRt", 2);
      assertEquals("com.google.javascript.rhino.head.Context", evaluatorException0.sourceName());
      assertEquals(2, evaluatorException0.columnNumber());
      assertEquals(0, evaluatorException0.getLineNumber());
      assertEquals("j!z#H$!ChRt", evaluatorException0.getLineSource());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Context context0 = new Context();
      context0.firePropertyChange("error reporter", "error reporter", "error reporter");
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test075()  throws Throwable  {
      Context context0 = Context.getContext();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("language version", propertyChangeListener0);
      // Undeclared exception!
      try { 
        context0.removePropertyChangeListener(propertyChangeListenerProxy0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Context context0 = new Context();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("error reporter", propertyChangeListener0);
      context0.removePropertyChangeListener(propertyChangeListenerProxy0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test077()  throws Throwable  {
      Context context0 = Context.getContext();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("language version", (PropertyChangeListener) null);
      // Undeclared exception!
      try { 
        context0.addPropertyChangeListener(propertyChangeListenerProxy0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.addPropertyChangeListener((PropertyChangeListener) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test079()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Locale locale0 = Locale.ROOT;
      // Undeclared exception!
      try { 
        context0.setLocale(locale0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Context context0 = new Context();
      Locale locale0 = Locale.ROOT;
      Locale locale1 = context0.setLocale(locale0);
      assertEquals(0, context0.getOptimizationLevel());
      assertFalse(context0.generateObserverCount);
      assertTrue(context0.isGeneratingSource());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertNull(locale1);
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Context context0 = new Context();
      context0.getLocale();
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test082()  throws Throwable  {
      Context context0 = Context.getContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      // Undeclared exception!
      try { 
        context0.setErrorReporter(errorReporter1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      context0.setErrorReporter(defaultErrorReporter0);
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.generateObserverCount);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setErrorReporter((ErrorReporter) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test085()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      String string0 = context0.getImplementationVersion();
      assertEquals("Rhino 1.7 release 4 PRERELEASE 2019 07 12", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.setLanguageVersion(4679);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad language version: 4679
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      boolean boolean0 = Context.isValidLanguageVersion(180);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      assertTrue(compilerEnvirons0.isXmlAvailable());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      boolean boolean0 = Context.isValidLanguageVersion(160);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Context.checkLanguageVersion(150);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      boolean boolean0 = Context.isValidLanguageVersion(140);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      boolean boolean0 = Context.isValidLanguageVersion(130);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      boolean boolean0 = Context.isValidLanguageVersion(110);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Context context0 = new Context();
      context0.setLanguageVersion(100);
      assertEquals(100, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Context.checkLanguageVersion(120);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test096()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        context0.setLanguageVersion(1356);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.unseal((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.unseal(context0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test099()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        context0.seal((Object) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ContextListener contextListener0 = mock(ContextListener.class, new ViolatedAssumptionAnswer());
      Context.addContextListener(contextListener0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ContextFactory contextFactory0 = new ContextFactory();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Object object0 = Context.call(contextFactory0, (Callable) nativeContinuation0, (Scriptable) nativeContinuation0, (Scriptable) nativeContinuation0, context0.emptyArgs);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Context context0 = null;
      try {
        context0 = new Context((ContextFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // factory == null
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Object object0 = Context.getUndefinedValue();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test104()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.decompileScript((Script) null, 160);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      // Undeclared exception!
      try { 
        Context.reportRuntimeError3("1@O 07p3O|gje", "1@O 07p3O|gje", "1@O 07p3O|gje", nativeJavaClass0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 1@O 07p3O|gje
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test106()  throws Throwable  {
      EvaluatorException evaluatorException0 = Context.reportRuntimeError("error reporter");
      assertEquals(0, evaluatorException0.getLineNumber());
      assertEquals(0, evaluatorException0.getColumnNumber());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Context.setCachingEnabled(true);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test108()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        context0.newObject((Scriptable) null, "error reporter");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Context context0 = new Context();
      context0.seal((Object) null);
      // Undeclared exception!
      try { 
        context0.setOptimizationLevel((-1));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test110()  throws Throwable  {
      Context context0 = Context.getContext();
      Object object0 = context0.getDebuggerContextData();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test111()  throws Throwable  {
      Context.reportWarning("com.google.javascript.rhino.head.ContextListener$MockitoMock$765020483", (Throwable) null);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test112()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Debugger debugger0 = context0.getDebugger();
      assertNull(debugger0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        Context.reportRuntimeError4("language version", context0, context0, context0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property language version
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ContextAction contextAction0 = mock(ContextAction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(contextAction0).run(any(com.google.javascript.rhino.head.Context.class));
      Object object0 = Context.call(contextAction0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      int int0 = context0.getInstructionObserverThreshold();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test116()  throws Throwable  {
      Context context0 = Context.getContext();
      Interpreter interpreter0 = new Interpreter();
      context0.compileString("CALL", (Evaluator) interpreter0, (ErrorReporter) null, "language version", 10, (Object) null);
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Context context0 = new Context();
      int int0 = context0.getMaximumInterpreterStackDepth();
      assertEquals(Integer.MAX_VALUE, int0);
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getLanguageVersion());
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getOptimizationLevel());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test118()  throws Throwable  {
      Context context0 = Context.getContext();
      boolean boolean0 = context0.isSealed();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Context context0 = new Context();
      context0.getClassShutter();
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getOptimizationLevel());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Context context0 = new Context();
      context0.observeInstructionCount(12);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      Class<NativeBoolean> class0 = NativeBoolean.class;
      Scriptable scriptable0 = Context.toObject((Object) nativeJavaClass0, (Scriptable) nativeJavaClass0, (Class<?>) class0);
      assertEquals("JavaClass", scriptable0.getClassName());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.captureContinuation();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Interpreter frames not found
         //
         verifyException("com.google.javascript.rhino.head.Interpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ContextListener contextListener0 = mock(ContextListener.class, new ViolatedAssumptionAnswer());
      Context.removeContextListener(contextListener0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Context context0 = new Context();
      context0.setInstructionObserverThreshold(0);
      assertEquals(0, context0.getOptimizationLevel());
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(0, context0.getInstructionObserverThreshold());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Context context0 = new Context();
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      // Undeclared exception!
      try { 
        context0.newArray((Scriptable) nativeJavaClass0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeJavaClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Double double0 = new Double((-1056.8448111358057));
      Class<String> class0 = String.class;
      Object object0 = Context.toType(double0, class0);
      assertEquals("-1056.8448111358057", object0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Context context0 = new Context();
      NativeNumber nativeNumber0 = new NativeNumber(130);
      NativeArray nativeArray0 = new NativeArray(0);
      // Undeclared exception!
      try { 
        context0.resumeContinuation(nativeNumber0, nativeNumber0, nativeArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.head.NativeNumber cannot be cast to com.google.javascript.rhino.head.NativeContinuation
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test128()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.reportError("error reporter");
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // error reporter
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.compileFunction((Scriptable) null, "'Ens&UTK6KK~B=", "'Ens&UTK6KK~B=", (-2684), (Object) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Context context0 = new Context();
      context0.initStandardObjects((ScriptableObject) null);
      assertEquals(0, context0.getLanguageVersion());
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        context0.newObject((Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Context context0 = new Context();
      StringReader stringReader0 = new StringReader("error reporter");
      // Undeclared exception!
      try { 
        context0.evaluateReader((Scriptable) null, stringReader0, "LbMzZ1'3/*%Yo", (-1), (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Context context0 = Context.enter();
      boolean boolean0 = Context.toBoolean(context0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      Scriptable scriptable0 = Context.toObject((Object) nativeJavaClass0, (Scriptable) nativeJavaClass0);
      assertEquals("JavaClass", scriptable0.getClassName());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.reportRuntimeError1("error reporter", "error reporter");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property error reporter
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      // Undeclared exception!
      try { 
        Context.reportRuntimeError0("language version");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property language version
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      String string0 = Context.toString((Object) context0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Context context0 = Context.enter();
      double double0 = Context.toNumber(context0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        Context.reportRuntimeError2("error reporter", context0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property error reporter
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        Context.call((ContextFactory) null, (Callable) null, (Scriptable) nativeContinuation0, (Scriptable) nativeContinuation0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Context context0 = new Context();
      Context.ClassShutterSetter context_ClassShutterSetter0 = context0.getClassShutterSetter();
      assertNotNull(context_ClassShutterSetter0);
      assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
      assertFalse(context0.generateObserverCount);
      assertEquals(0, context0.getOptimizationLevel());
      assertTrue(context0.isGeneratingSource());
      assertEquals(0, context0.getLanguageVersion());
  }
}
