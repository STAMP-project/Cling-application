/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 23:52:08 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Arguments;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.BoundFunction;
import com.google.javascript.rhino.head.Callable;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.FunctionObject;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.JavaAdapter;
import com.google.javascript.rhino.head.JavaMembers;
import com.google.javascript.rhino.head.LazilyLoadedCtor;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeBoolean;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeDate;
import com.google.javascript.rhino.head.NativeError;
import com.google.javascript.rhino.head.NativeGenerator;
import com.google.javascript.rhino.head.NativeGlobal;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJavaArray;
import com.google.javascript.rhino.head.NativeJavaClass;
import com.google.javascript.rhino.head.NativeJavaMethod;
import com.google.javascript.rhino.head.NativeJavaObject;
import com.google.javascript.rhino.head.NativeJavaPackage;
import com.google.javascript.rhino.head.NativeJavaTopPackage;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.TopLevel;
import com.google.javascript.rhino.head.xml.XMLLib;
import java.lang.reflect.Field;
import java.util.LinkedList;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ScriptableObject_ESTest extends ScriptableObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      String string0 = ">FCC-1wHWDmo";
      ScriptableObject.isFalse(">FCC-1wHWDmo");
      ScriptableObject.getClassPrototype(nativeIterator_StopIteration0, ">FCC-1wHWDmo");
      Class<InterpretedFunction> class0 = InterpretedFunction.class;
      NativeJavaObject nativeJavaObject0 = null;
      try {
        nativeJavaObject0 = new NativeJavaObject(nativeIterator_StopIteration0, nativeIterator_StopIteration0, class0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test01()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "language version";
      Class<NativeJavaPackage> class0 = NativeJavaPackage.class;
      // Undeclared exception!
      try { 
        importerTopLevel0.defineFunctionProperties(stringArray0, class0, 4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Method \"language version\" not found in \"com.google.javascript.rhino.head.NativeJavaPackage\".
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.deleteProperty((Scriptable) nativeIterator_StopIteration0, "Unexpected opcode for 1 operand");
      TopLevel topLevel0 = new TopLevel();
      topLevel0.findInstanceIdInfo("Unexpected opcode for 1 operand");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      String string0 = ">LT.e5";
      ScriptableObject.getClassPrototype(nativeObject0, ">LT.e5");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      // Undeclared exception!
      try { 
        nativeObject0.put(">LT.e5", (Scriptable) null, (Object) nativeJavaTopPackage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test05()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      ScriptableObject.isTrue(nativeJavaObject0);
      nativeJavaObject0.getPrototype();
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.getPropertyIds(nativeIterator_StopIteration0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.getClassPrototype(nativeIterator_StopIteration0, ">LT5");
      nativeIterator_StopIteration0.getClassName();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.get((Object) nativeIterator_StopIteration1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.buildClassCtor((Scriptable) nativeIterator_StopIteration0, class0, false, false);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<Long> class0 = Long.class;
      boolean boolean0 = false;
      JavaMembers javaMembers0 = new JavaMembers(nativeIterator_StopIteration0, class0, false);
      NativeJavaMethod nativeJavaMethod0 = javaMembers0.ctors;
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.setGetterOrSetter("w", (-1774), nativeJavaMethod0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // w
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.delete(1440);
      Scriptable scriptable0 = ScriptableObject.ensureScriptable(nativeObject0);
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      ScriptableObject.getPropertyIds(scriptable0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test10()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ContextFactory.getGlobalSetter();
      Class<NativeJavaMethod> class0 = NativeJavaMethod.class;
      ScriptableObject.getTypedProperty((Scriptable) importerTopLevel0, "error reporter", class0);
      NativeError nativeError0 = new NativeError();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context1 = contextFactory0.enterContext();
      nativeError0.sameValue(context1, context0);
      NativeString nativeString0 = new NativeString("language version");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test11()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("");
      Context context0 = Context.getContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage1 = new NativeJavaPackage(false, "", classLoader0);
      nativeJavaPackage0.hasInstance(nativeJavaPackage1);
      ScriptableObject.deleteProperty((Scriptable) nativeJavaPackage0, "r3T2llmJpD*Rt_i$uE");
      ScriptableObject.getPropertyIds(nativeJavaPackage0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test12()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.getContext();
      Context context1 = Context.enter(context0);
      Context context2 = contextFactory0.enterContext(context1);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context2);
      ScriptableObject.ensureScriptable(importerTopLevel0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test13()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ContextFactory.getGlobalSetter();
      Class<NativeJavaMethod> class0 = NativeJavaMethod.class;
      ScriptableObject.getTypedProperty((Scriptable) importerTopLevel0, "ex=ecIdCall", class0);
      NativeError nativeError0 = new NativeError();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enterContext();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.getGetterOrSetter("v`kr9", 0, true);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Context context0 = new Context();
      Locale locale0 = Locale.ITALIAN;
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) locale0;
      objectArray0[1] = (Object) locale0;
      objectArray0[2] = (Object) context0;
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Locale.lookup(nativeArray0, nativeArray0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.getClassName();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.get(objectArray0[0]);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ScriptableObject.getClassPrototype(nativeObject0, ">LT.e5");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.enter((Context) null, contextFactory0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.getClassName();
      Long long0 = new Long(130);
      // Undeclared exception!
      try { 
        importerTopLevel0.putConst(">LT.e5", (Scriptable) null, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test16()  throws Throwable  {
      ContextFactory.getGlobalSetter();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("getEncodedSource");
      ScriptableObject.putConstProperty(nativeJavaPackage0, "getEncodedSource", "getEncodedSource");
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      nativeJavaClass0.setPrototype(nativeJavaPackage0);
      // Undeclared exception!
      try { 
        nativeJavaPackage0.isGenericDescriptor((ScriptableObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test17()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("execIdCall");
      TopLevel topLevel0 = new TopLevel();
      // Undeclared exception!
      try { 
        nativeJavaPackage0.getAttributes("mJ.>j?-F#ICGo", (Scriptable) topLevel0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property mJ.>j?-F#ICGo not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.buildClassCtor((Scriptable) nativeIterator_StopIteration0, class0, true, false);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test19()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Float float0 = new Float((float) 1);
      importerTopLevel0.get((Object) float0);
      NativeString nativeString0 = new NativeString("error reporter");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptableObject.checkValidAttributes((-18));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -18
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test21()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("");
      ScriptableObject.deleteProperty((Scriptable) nativeJavaPackage0, "r3T2llmJpD*Rt_i$uE");
      TopLevel topLevel0 = new TopLevel();
      topLevel0.isAccessorDescriptor(nativeJavaPackage0);
      topLevel0.findInstanceIdInfo("com.google.javascript.rhino.head.ScriptableObject$Slot");
      NativeString nativeString0 = new NativeString("");
      nativeString0.getLength();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test22()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      Scriptable scriptable0 = context0.initStandardObjects((ScriptableObject) importerTopLevel0);
      importerTopLevel0.get("", scriptable0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.deleteProperty((Scriptable) nativeIterator_StopIteration0, "error reporter");
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.getClassName();
      importerTopLevel0.putConst("jsGet_call", nativeIterator_StopIteration0, "jsGet_call");
      importerTopLevel0.findInstanceIdInfo("jsGet_call");
      Class<NativeNumber> class0 = NativeNumber.class;
      ScriptableObject.getTypedProperty((Scriptable) importerTopLevel0, 0, class0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test24()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      Context context1 = new Context();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeContinuation0.has(56, (Scriptable) importerTopLevel0);
      ScriptableObject.buildDataDescriptor(nativeContinuation0, (Object) null, 2);
      // Undeclared exception!
      try { 
        XMLLib.extractFromScope(nativeContinuation0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // XML runtime not available
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test25()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      Context context1 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.getPropertyIds(importerTopLevel0);
      NativeObject nativeObject0 = new NativeObject();
      NativeString nativeString0 = new NativeString("language version");
      // Undeclared exception!
      try { 
        nativeString0.getAttributes("error reporter");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property error reporter not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test26()  throws Throwable  {
      ContextFactory.getGlobalSetter();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("getEncodedSource");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      nativeJavaPackage0.getOwnPropertyDescriptor(context0, (Object) null);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.has("msg.change.writable.false.to.true.with.configurable.false", (Scriptable) nativeJavaPackage0);
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel();
      ScriptableObject.deleteProperty((Scriptable) importerTopLevel1, 0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test27()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ContextFactory contextFactory1 = new ContextFactory();
      contextFactory1.enter();
      NativeString nativeString0 = new NativeString("language version");
      Byte byte0 = new Byte((byte) (-93));
      nativeJavaPackage0.getOwnPropertyDescriptor(context0, byte0);
      ContextFactory.getGlobalSetter();
      contextFactory0.disableContextListening();
      NativeJavaPackage nativeJavaPackage1 = nativeJavaPackage0.forcePackage("__lookupSetter__", nativeString0);
      nativeJavaPackage1.getPkgProperty("language version", (Scriptable) null, false);
      NativeString nativeString1 = new NativeString("error reporter");
      String string0 = "com/google/javascript/rhino/head/RegExpProxy";
      // Undeclared exception!
      try { 
        JavaAdapter.createAdapterWrapper(nativeJavaPackage1, byte0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test28()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ScriptableObject.getClassPrototype(importerTopLevel0, "language version");
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.getClassName();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.get((Object) "StopIteration");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      NativeObject nativeObject0 = new NativeObject();
      ScriptableObject.putConstProperty(nativeObject0, "isScript", nativeJavaClass0);
      nativeJavaClass0.setPrototype(nativeObject0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.deleteProperty((Scriptable) nativeIterator_StopIteration0, "valueOf");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.getPropertyIds(nativeIterator_StopIteration0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test31()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ScriptableObject.getClassPrototype(nativeObject0, ">LT.e5");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      nativeObject0.isGenericDescriptor(nativeJavaTopPackage0);
      NativeString nativeString0 = new NativeString(">LT.e5");
      nativeJavaTopPackage0.get(501, (Scriptable) nativeString0);
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(">LT.e5");
      BaseFunction baseFunction0 = new BaseFunction();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeObject0, nativeObject0, 2, 8);
      idFunctionObject0.isConst(">LT.e5");
      ScriptableObject.getFunctionPrototype(nativeObject0);
      Context context0 = new Context();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeContinuation nativeContinuation1 = new NativeContinuation();
      ScriptableObject.getProperty((Scriptable) nativeContinuation1, (-2492));
  }

  @Test(timeout = 4000)
  @Ignore
  public void test33()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("");
      TopLevel topLevel0 = new TopLevel();
      nativeJavaPackage0.checkPropertyChange("", topLevel0, topLevel0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.isGenericDescriptor(nativeIterator_StopIteration0);
      NativeString nativeString0 = new NativeString("");
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.getApplicationClassLoader();
      NativeString nativeString1 = new NativeString("");
      Context context0 = new Context(contextFactory0);
      nativeJavaPackage0.getOwnPropertyDescriptor(context0, (Object) null);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.getProperty((Scriptable) nativeString0, (-1411061670));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeCall nativeCall0 = new NativeCall();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      Locale locale0 = Locale.UK;
      context0.setLocale(locale0);
      NativeCall nativeCall1 = context0.currentActivationCall;
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.put(2003, (Scriptable) nativeCall0, (Object) null);
      // Undeclared exception!
      try { 
        nativeCall0.getAttributes(13, (Scriptable) nativeIterator_StopIteration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 13 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test35()  throws Throwable  {
      String string0 = "w";
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("w");
      LinkedList<Field> linkedList0 = new LinkedList<Field>();
      NativeError nativeError0 = new NativeError();
      Class<NativeArray> class0 = NativeArray.class;
      // Undeclared exception!
      try { 
        ScriptableObject.defineClass((Scriptable) nativeJavaPackage0, class0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.NativeArray\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test36()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ScriptableObject.getClassPrototype(importerTopLevel0, "toSource");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.put("error reporter", (Scriptable) nativeJavaTopPackage0, (Object) importerTopLevel0);
      Class<NativeDate> class0 = NativeDate.class;
      JavaMembers javaMembers0 = new JavaMembers(importerTopLevel0, class0, true);
      NativeJavaMethod nativeJavaMethod0 = javaMembers0.ctors;
      NativeJavaArray nativeJavaArray0 = null;
      try {
        nativeJavaArray0 = new NativeJavaArray(nativeJavaTopPackage0, nativeJavaMethod0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ContextFactory.getGlobalSetter();
      NativeError nativeError0 = new NativeError();
      ScriptableObject.ensureScriptable(nativeError0);
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      ScriptableObject.getPropertyIds((Scriptable) null);
      ScriptableObject.getProperty((Scriptable) nativeError0, 13);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      // Undeclared exception!
      try { 
        nativeBoolean0.setAttributes(113, (-207));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -207
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test39()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      context0.scratchUint32 = (long) 13;
      Context context1 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.getPropertyIds(importerTopLevel0);
      Context context2 = new Context();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeContinuation nativeContinuation1 = new NativeContinuation();
      ScriptableObject.getProperty((Scriptable) importerTopLevel0, (-2031305735));
  }

  @Test(timeout = 4000)
  @Ignore
  public void test40()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("");
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptableObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type string
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test41()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("");
      nativeJavaPackage0.setAttributes("", (Scriptable) null, 11);
      ScriptableObject.deleteProperty((Scriptable) nativeJavaPackage0, "r3T2llmJpD*Rt_i$uE");
      NativeString nativeString0 = new NativeString("");
      nativeString0.getLength();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test42()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "language version";
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Boolean;
      Scriptable scriptable0 = TopLevel.getBuiltinPrototype((Scriptable) importerTopLevel0, topLevel_Builtins0);
      ScriptableObject.getTopScopeValue(scriptable0, context0);
      Class<NativeJavaPackage> class0 = NativeJavaPackage.class;
      // Undeclared exception!
      try { 
        importerTopLevel0.defineFunctionProperties(stringArray0, class0, 4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Method \"language version\" not found in \"com.google.javascript.rhino.head.NativeJavaPackage\".
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test43()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ScriptableObject.deleteProperty((Scriptable) importerTopLevel0, "T@");
      TopLevel topLevel0 = new TopLevel();
      topLevel0.size();
      importerTopLevel0.getClassName();
      importerTopLevel0.findInstanceIdInfo("error reporter");
      NativeArray nativeArray0 = new NativeArray(context0.emptyArgs);
      // Undeclared exception!
      try { 
        nativeArray0.get((-1L));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test44()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.getGetterOrSetter((String) null, (-804), true);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Class<FunctionObject> class0 = FunctionObject.class;
      // Undeclared exception!
      try { 
        ScriptableObject.defineClass((Scriptable) nativeIterator_StopIteration0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.FunctionObject\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test45()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      NativeGlobal nativeGlobal0 = new NativeGlobal();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeGlobal0, nativeJavaObject0, 518, 518);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel();
      idFunctionObject0.defineOwnProperty(context0, importerTopLevel0, importerTopLevel1);
      ScriptableObject.hasProperty((Scriptable) nativeJavaObject0, 150);
      contextFactory0.enter();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test46()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(nativeIterator_StopIteration0, (Object) null, 4);
      // Undeclared exception!
      try { 
        XMLLib.extractFromScope(scriptableObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // XML runtime not available
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test47()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      context0.scratchUint32 = (long) 13;
      Context context1 = new Context();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ScriptableObject.hasProperty((Scriptable) importerTopLevel0, 348);
      contextFactory0.enter();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Context context0 = new Context();
      String string0 = null;
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.getGetterOrSetter("language version", (-1126469914), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // language version
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ScriptableObject.checkValidAttributes(0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test50()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeString nativeString0 = new NativeString(">LT.e5");
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.has("E;WLCV%o<$", (Scriptable) nativeString0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.get((Object) nativeIterator_StopIteration1);
      NativeArray nativeArray0 = new NativeArray(context0.emptyArgs);
      nativeArray0.getAllIds();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      nativeJavaTopPackage0.size();
      classLoader0.clearAssertionStatus();
      nativeJavaTopPackage0.isGetterOrSetter(" in already generated code", (-1121358566), true);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod((Scriptable) nativeIterator_StopIteration0, "error reporter", context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000004 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test53()  throws Throwable  {
      ContextFactory.getGlobalSetter();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("getEncodedSource");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ScriptableObject.hasProperty((Scriptable) nativeJavaPackage0, 2159);
      contextFactory0.enter();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test54()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.getClassPrototype(nativeIterator_StopIteration0, ">LT.e5");
      Class<NativeJavaTopPackage> class0 = NativeJavaTopPackage.class;
      ScriptableObject.defineClass((Scriptable) nativeIterator_StopIteration0, class0, false, false);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ScriptableObject.defineConstProperty(nativeObject0, (String) null);
      nativeObject0.delete(1440);
      Scriptable scriptable0 = ScriptableObject.ensureScriptable(nativeObject0);
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      ScriptableObject.getPropertyIds(scriptable0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test56()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "language version";
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Float float0 = new Float((float) 1);
      NativeString nativeString0 = new NativeString("language version");
      nativeIterator_StopIteration0.put((-1850962679), (Scriptable) importerTopLevel0, (Object) nativeString0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test57()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ContextFactory contextFactory0 = new ContextFactory();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = new Context();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeContinuation nativeContinuation1 = new NativeContinuation();
      Class<NativeNumber> class0 = NativeNumber.class;
      ScriptableObject.getTypedProperty((Scriptable) importerTopLevel0, 13, class0);
      assertTrue(importerTopLevel0.isEmpty());
      assertTrue(importerTopLevel0.isExtensible());
      
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      // Undeclared exception!
      try { 
        nativeBoolean0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeNumber
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test58()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("");
      TopLevel topLevel0 = new TopLevel();
      nativeJavaPackage0.checkPropertyChange("", topLevel0, topLevel0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.getFunctionPrototype(nativeIterator_StopIteration0);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test59()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel(context0);
      String[] stringArray0 = new String[0];
      Class<InterpretedFunction> class0 = InterpretedFunction.class;
      importerTopLevel1.defineFunctionProperties(stringArray0, class0, 7);
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.RegExp;
      importerTopLevel1.getBuiltinCtor(topLevel_Builtins0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test60()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      Context context1 = new Context();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      BoundFunction boundFunction0 = new BoundFunction(context1, importerTopLevel0, (Callable) null, importerTopLevel0, context1.emptyArgs);
      BaseFunction baseFunction0 = new BaseFunction(boundFunction0, importerTopLevel0);
      importerTopLevel0.setAttributes(15, (Scriptable) baseFunction0, 4);
      ScriptableObject.hasProperty((Scriptable) importerTopLevel0, 348);
      contextFactory0.enter();
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.isFalse((Object) null);
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.buildClassCtor((Scriptable) nativeIterator_StopIteration0, class0, true, false);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test62()  throws Throwable  {
      ContextFactory.getGlobalSetter();
      String string0 = "getEncodedSource";
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("getEncodedSource");
      BaseFunction baseFunction0 = new BaseFunction();
      nativeJavaPackage0.checkPropertyDefinition(baseFunction0);
      // Undeclared exception!
      try { 
        ScriptableObject.putProperty((Scriptable) nativeJavaPackage0, 0, (Object) nativeJavaPackage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Java package names may not be numbers.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test63()  throws Throwable  {
      ContextFactory.getGlobalSetter();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("getEncodedSource");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      NativeString nativeString0 = new NativeString("language version");
      nativeJavaPackage0.getOwnPropertyDescriptor(context0, (Object) null);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.getProperty((Scriptable) nativeString0, 13);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test64()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "language version";
      NativeError nativeError0 = new NativeError();
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(nativeError0, context0, (-671));
      // Undeclared exception!
      try { 
        XMLLib.extractFromScope(scriptableObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // XML runtime not available
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test65()  throws Throwable  {
      ContextFactory.getGlobalSetter();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("getEncodedSource");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      NativeString nativeString0 = new NativeString("language version");
      nativeJavaPackage0.getOwnPropertyDescriptor(context0, (Object) null);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.getProperty((Scriptable) importerTopLevel0, 2);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test66()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ContextFactory.getGlobalSetter();
      Class<FunctionObject> class0 = FunctionObject.class;
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject(importerTopLevel0, context0, class0);
      nativeJavaObject0.setPrototype(importerTopLevel0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.deleteProperty((Scriptable) nativeIterator_StopIteration0, "zMD");
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.getGetterOrSetter("valueOf", (-35), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // valueOf
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      BaseFunction baseFunction0 = new BaseFunction();
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context0, (Scriptable) baseFunction0, "language version", context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000005 is not a function, it is function.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test68()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      context0.scratchUint32 = (long) 13;
      Context context1 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.getPropertyIds(importerTopLevel0);
      ScriptableObject.isTrue(nativeIterator_StopIteration0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Context context0 = new Context();
      NativeError nativeError0 = new NativeError();
      Integer integer0 = new Integer(150);
      Integer.sum(170, (-1437));
      Object object0 = nativeError0.equivalentValues(integer0);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeError0, object0, 170, 95);
      idFunctionObject0.isConst("~B}I");
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.isGenericDescriptor(nativeError0);
      NativeString nativeString0 = new NativeString("LN10");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(true, (String) null, classLoader0);
      NativeJavaPackage nativeJavaPackage1 = new NativeJavaPackage("LN10", classLoader0);
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeObject0, (String) null, "getFunction", false, true);
      nativeJavaPackage1.getOwnPropertyDescriptor(context0, lazilyLoadedCtor0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.getProperty((Scriptable) nativeJavaPackage1, 275);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      NativeObject nativeObject0 = new NativeObject();
      ScriptableObject.putConstProperty(nativeObject0, "isScript", nativeJavaClass0);
      nativeJavaClass0.setPrototype(nativeObject0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel();
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Function;
      importerTopLevel0.getBuiltinCtor(topLevel_Builtins0);
      NativeError nativeError0 = new NativeError();
      nativeError0.defineConst("isScript", (Scriptable) null);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test71()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      String[] stringArray0 = new String[1];
      ScriptableObject.getObjectPrototype(importerTopLevel0);
      // Undeclared exception!
      try { 
        importerTopLevel0.getAttributes(160);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 160 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ScriptableObject.defineConstProperty(nativeObject0, (String) null);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      nativeObject0.put((String) null, (Scriptable) nativeJavaTopPackage0, (Object) null);
      NativeJavaArray nativeJavaArray0 = null;
      try {
        nativeJavaArray0 = new NativeJavaArray(nativeObject0, classLoader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptableObject.getFunctionPrototype((Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test74()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ScriptableObject.ensureScriptableObject(importerTopLevel0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.sealObject();
      ScriptableObject.getFunctionPrototype(nativeIterator_StopIteration0);
      Context context1 = new Context();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeContinuation nativeContinuation1 = new NativeContinuation();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test75()  throws Throwable  {
      ContextFactory.getGlobalSetter();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("getEncodedSource");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      NativeString nativeString0 = new NativeString("language version");
      nativeJavaPackage0.getOwnPropertyDescriptor(context0, (Object) null);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.defineClass((Scriptable) importerTopLevel0, class0, true, false);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Context context0 = new Context();
      TopLevel topLevel0 = new TopLevel();
      ScriptableObject.getArrayPrototype(topLevel0);
      IdFunctionObject idFunctionObject0 = null;
      try {
        idFunctionObject0 = new IdFunctionObject(topLevel0, context0, 1073741824, "error reporter", 12, (Scriptable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.getGetterOrSetter((String) null, (-1842173768), false);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.RegExp;
      importerTopLevel0.getBuiltinCtor(topLevel_Builtins0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ScriptableObject.defineConstProperty(nativeObject0, (String) null);
      Scriptable scriptable0 = ScriptableObject.ensureScriptable(nativeObject0);
      ScriptableObject.getPropertyIds(scriptable0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      Context context1 = contextFactory0.enterContext(context0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context1, true);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptableObject.getProperty(scriptable0, 7);
      NativeArray nativeArray0 = new NativeArray(4);
      NativeGenerator nativeGenerator0 = NativeGenerator.init(importerTopLevel0, false);
      // Undeclared exception!
      try { 
        nativeContinuation0.associateValue(nativeGenerator0, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(" n already enerated code", classLoader0);
      nativeJavaPackage0.size();
      classLoader0.clearAssertionStatus();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptableObject.getProperty((Scriptable) nativeContinuation0, 13);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<BaseFunction> class0 = BaseFunction.class;
      String string0 = "msg.setter2.parms";
      JavaMembers javaMembers0 = new JavaMembers(nativeIterator_StopIteration0, class0, false);
      NativeJavaMethod nativeJavaMethod0 = javaMembers0.ctors;
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeJavaMethod0, "language version", (String) null, false, false);
      // Undeclared exception!
      try { 
        nativeJavaMethod0.addLazilyInitializedValue("language version", 1914, lazilyLoadedCtor0, (-1047));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // language version
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test81()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.buildClassCtor((Scriptable) nativeIterator_StopIteration0, class0, false, true);
      ScriptableObject.isTrue(class0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.getProperty((Scriptable) nativeIterator_StopIteration0, 10);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Context context0 = new Context();
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      // Undeclared exception!
      try { 
        ScriptableObject.defineConstProperty(nativeJavaClass0, "v_k");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeJavaClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<BaseFunction> class0 = BaseFunction.class;
      JavaMembers javaMembers0 = new JavaMembers(nativeIterator_StopIteration0, class0, false);
      NativeJavaMethod nativeJavaMethod0 = javaMembers0.ctors;
      nativeIterator_StopIteration0.setGetterOrSetter("msg.setter2.parms", 0, nativeJavaMethod0, false);
      ScriptableObject.buildClassCtor((Scriptable) nativeIterator_StopIteration0, class0, false, true);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      String string0 = ">LT.e5";
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      ScriptableObject.putProperty((Scriptable) nativeJavaTopPackage0, "t", (Object) nativeObject0);
      nativeObject0.put(">LT.e5", (Scriptable) nativeObject0, (Object) nativeJavaTopPackage0);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeObject0, nativeObject0, 2, 8);
      idFunctionObject0.isConst("EMPTY");
      NativeJavaArray nativeJavaArray0 = null;
      try {
        nativeJavaArray0 = new NativeJavaArray(nativeObject0, ">LT.e5");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Class<ImporterTopLevel> class0 = ImporterTopLevel.class;
      // Undeclared exception!
      try { 
        nativeError0.defineProperty("LN10", class0, (-1414));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1413
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test87()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ContextFactory contextFactory0 = new ContextFactory();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = new Context();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeContinuation nativeContinuation1 = new NativeContinuation();
      context0.initStandardObjects((ScriptableObject) nativeContinuation0);
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel(context0, false);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      ContextFactory contextFactory0 = new ContextFactory();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Context context0 = new Context();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeContinuation nativeContinuation1 = new NativeContinuation();
      nativeContinuation0.setGetterOrSetter((String) null, 4, nativeContinuation1, false);
      ScriptableObject.getProperty((Scriptable) nativeContinuation0, 182);
      NativeArray nativeArray0 = new NativeArray(8);
      nativeContinuation1.associateValue(nativeContinuation0, nativeArray0);
      assertFalse(nativeContinuation0.isEmpty());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test89()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        importerTopLevel0.getAttributes((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 0 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeObject nativeObject0 = new NativeObject();
      Class<BaseFunction> class0 = BaseFunction.class;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        nativeObject0.getOwnPropertyDescriptor(context0, nativeIterator_StopIteration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test91()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("rX");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test92()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.buildClassCtor((Scriptable) nativeIterator_StopIteration0, class0, false, true);
      Class<Arguments> class1 = Arguments.class;
      // Undeclared exception!
      try { 
        ScriptableObject.defineClass((Scriptable) nativeIterator_StopIteration0, class1, false, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.Arguments\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      NativeObject nativeObject0 = new NativeObject();
      ScriptableObject.putConstProperty(nativeObject0, "isScript", nativeJavaClass0);
      assertFalse(nativeObject0.isEmpty());
      
      NativeError nativeError0 = new NativeError();
      ContextFactory.getGlobal();
      boolean boolean0 = nativeError0.sameValue("net", "jsGet_execIdCall");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test94()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("");
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeObject nativeObject0 = new NativeObject();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      ScriptableObject.putConstProperty(nativeIterator_StopIteration0, "factory == null", nativeIterator_StopIteration1);
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(true, "~Q5/", (ClassLoader) null);
      nativeJavaClass0.setPrototype(nativeJavaPackage0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel();
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Array;
      importerTopLevel0.getBuiltinCtor(topLevel_Builtins0);
      NativeError nativeError0 = new NativeError();
      nativeError0.defineConst("~Q5/", nativeIterator_StopIteration0);
      assertEquals(0, ScriptableObject.EMPTY);
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      Context context0 = new Context();
      NativeError nativeError0 = new NativeError();
      Integer integer0 = new Integer(1368933789);
      Integer.sum(4, 5);
      nativeError0.equivalentValues(context0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Object;
      importerTopLevel0.getBuiltinCtor(topLevel_Builtins0);
      assertTrue(importerTopLevel0.isExtensible());
  }
}
