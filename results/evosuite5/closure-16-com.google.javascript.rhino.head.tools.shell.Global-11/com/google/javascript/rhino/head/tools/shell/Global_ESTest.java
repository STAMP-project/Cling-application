/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 21 17:20:03 GMT 2019
 */

package com.google.javascript.rhino.head.tools.shell;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.Delegator;
import com.google.javascript.rhino.head.Function;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeJavaObject;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.Synchronizer;
import com.google.javascript.rhino.head.TopLevel;
import com.google.javascript.rhino.head.commonjs.module.Require;
import com.google.javascript.rhino.head.tools.shell.Global;
import com.google.javascript.rhino.head.tools.shell.QuitAction;
import java.io.DataInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Global_ESTest extends Global_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("null");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "LB");
      try { 
        Global.readFile((Context) null, (Scriptable) null, objectArray0, (Function) null);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("null");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Object object0 = Global.readFile((Context) null, (Scriptable) null, objectArray0, (Function) null);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("null");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "LB");
      Object object0 = Global.readFile((Context) null, (Scriptable) null, objectArray0, (Function) null);
      assertEquals("LB\n", object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        Global.pipe(true, (InputStream) null, (OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.tools.shell.Global", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Global global0 = new Global();
      InputStream inputStream0 = global0.getIn();
      SystemInUtil.addInputLine("(G;");
      MockPrintStream mockPrintStream0 = new MockPrintStream("error reporter");
      try { 
        Global.pipe(false, inputStream0, mockPrintStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated exception in System.in
         //
         verifyException("org.evosuite.runtime.util.SystemInUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Global global0 = new Global();
      InputStream inputStream0 = global0.getIn();
      SystemInUtil.addInputLine("\"xl");
      MockPrintStream mockPrintStream0 = new MockPrintStream("\"xl");
      Global.pipe(true, inputStream0, mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Global global0 = new Global();
      InputStream inputStream0 = global0.getIn();
      MockPrintStream mockPrintStream0 = new MockPrintStream("kme$<3]sOV /Pk@i[O^");
      Global.pipe(false, inputStream0, mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Global global0 = new Global();
      InputStream inputStream0 = global0.getIn();
      InputStream inputStream1 = global0.getIn();
      assertSame(inputStream1, inputStream0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Context context0 = Context.enter();
      Global global0 = new Global(context0);
      InputStream inputStream0 = global0.getIn();
      assertNotNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      Object object0 = Global.toint32((Context) null, (Scriptable) null, objectArray0, (Function) null);
      assertEquals(0, object0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      try { 
        Global.readUrl((Context) null, (Scriptable) null, objectArray0, (Function) null);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: null
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test11()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        Global.readUrl(context0, (Scriptable) null, context0.emptyArgs, (Function) null);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // readUrl require at least file path to be specified
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      try { 
        Global.readUrl((Context) null, (Scriptable) null, objectArray0, (Function) null);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: null
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      try { 
        Global.readFile((Context) null, (Scriptable) null, objectArray0, (Function) null);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // File not found: null
         //
         verifyException("com.google.javascript.rhino.head.tools.shell.Global", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test14()  throws Throwable  {
      Context context0 = new Context();
      BaseFunction baseFunction0 = new BaseFunction();
      // Undeclared exception!
      try { 
        Global.readFile(context0, baseFunction0, context0.emptyArgs, baseFunction0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // readFile require at least file path to be specified
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Global global0 = new Global();
      Delegator delegator0 = new Delegator();
      Context context0 = Context.enter();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) global0;
      objectArray0[1] = (Object) delegator0;
      // Undeclared exception!
      try { 
        Global.seal(context0, delegator0, objectArray0, delegator0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // seal function supports only sealing of ScriptableObject instances
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Context context0 = Context.enter();
      Object[] objectArray0 = new Object[7];
      // Undeclared exception!
      try { 
        Global.seal(context0, delegator0, objectArray0, delegator0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // seal function can only be applied to objects
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Global global0 = new Global();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) global0;
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(global0, (Object) null, 1, 1);
      Global.seal((Context) null, global0, objectArray0, idFunctionObject0);
      assertTrue(global0.isSealed());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Context context0 = Context.enter();
      Object[] objectArray0 = new Object[2];
      Global global0 = new Global(context0);
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Number;
      BaseFunction baseFunction0 = global0.getBuiltinCtor(topLevel_Builtins0);
      try { 
        Global.runCommand(context0, global0, objectArray0, baseFunction0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Global global0 = new Global();
      Object[] objectArray0 = new Object[3];
      objectArray0[2] = (Object) global0;
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        Global.runCommand((Context) null, global0, objectArray0, nativeContinuation0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property msg.bad.shell.function.scope
         //
         verifyException("com.google.javascript.rhino.head.tools.ToolErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Global global0 = new Global();
      Object[] objectArray0 = new Object[1];
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        Global.runCommand((Context) null, global0, objectArray0, nativeContinuation0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property msg.bad.shell.function.scope
         //
         verifyException("com.google.javascript.rhino.head.tools.ToolErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test21()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        Global.runCommand(context0, baseFunction0, context0.emptyArgs, baseFunction0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // The first argument to runCommand must be a command name.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      Context context0 = Context.getCurrentContext();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) baseFunction0;
      Object object0 = Global.sync(context0, baseFunction0, objectArray0, baseFunction0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Global global0 = new Global();
      Context context0 = new Context();
      Object[] objectArray0 = new Object[6];
      Synchronizer synchronizer0 = new Synchronizer(global0);
      // Undeclared exception!
      try { 
        Global.sync(context0, global0, objectArray0, synchronizer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property msg.sync.args
         //
         verifyException("com.google.javascript.rhino.head.tools.ToolErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        Global.sync((Context) null, (Scriptable) null, objectArray0, (Function) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property msg.sync.args
         //
         verifyException("com.google.javascript.rhino.head.tools.ToolErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Context context0 = Context.enter();
      BaseFunction baseFunction0 = new BaseFunction();
      // Undeclared exception!
      try { 
        Global.sync(context0, baseFunction0, context0.emptyArgs, baseFunction0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // no message resource found for message property msg.sync.args
         //
         verifyException("com.google.javascript.rhino.head.tools.ToolErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      Context context0 = new Context();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) baseFunction0;
      MockThread mockThread0 = (MockThread)Global.spawn(context0, baseFunction0, objectArray0, baseFunction0);
      assertFalse(mockThread0.isInterrupted());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test27()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      Context context0 = Context.getCurrentContext();
      Object[] objectArray0 = new Object[11];
      // Undeclared exception!
      try { 
        Global.spawn(context0, baseFunction0, objectArray0, baseFunction0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Argument to spawn() must be a function or script.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test28()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        Global.spawn(context0, nativeContinuation0, context0.emptyArgs, nativeContinuation0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Argument to spawn() must be a function or script.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Global global0 = new Global();
      Context context0 = Context.getCurrentContext();
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      int int0 = global0.runDoctest(context0, nativeJavaObject0, "/FpJ\"l<.z", "/FpJ\"l<.z", 180);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        Global.doctest(context0, (Scriptable) null, objectArray0, (Function) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.tools.shell.Global", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Global global0 = new Global();
      Context context0 = Context.getCurrentContext();
      String[] stringArray0 = global0.getPrompts(context0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Global global0 = new Global();
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        Global.deserialize(context0, global0, context0.emptyArgs, (Function) null);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Expected a filename to read the serialization from
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Global global0 = new Global();
      Object[] objectArray0 = new Object[3];
      BaseFunction baseFunction0 = new BaseFunction();
      try { 
        Global.deserialize((Context) null, global0, objectArray0, baseFunction0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        Global.serialize(context0, delegator0, context0.emptyArgs, delegator0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Expected an object to serialize and a filename to write the serialization to
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Global global0 = new Global();
      Context context0 = Context.getCurrentContext();
      Object[] objectArray0 = new Object[4];
      // Undeclared exception!
      try { 
        Global.serialize(context0, global0, objectArray0, (Function) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object for excluded name Object not found.
         //
         verifyException("com.google.javascript.rhino.head.serialize.ScriptableOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test36()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        Global.loadClass(context0, (Scriptable) null, context0.emptyArgs, (Function) null);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Expected a string argument.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test37()  throws Throwable  {
      Global global0 = new Global();
      IdFunctionObject idFunctionObject0 = global0.exportAsJSClass(8, global0, false);
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        Global.defineClass((Context) null, (Scriptable) idFunctionObject0, objectArray0, (Function) idFunctionObject0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Class \"null\" not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test38()  throws Throwable  {
      Global global0 = new Global();
      Object[] objectArray0 = new Object[3];
      // Undeclared exception!
      try { 
        Global.load((Context) null, global0, objectArray0, (Function) null);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Couldn't read source file \"null\": null.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      Context context0 = Context.enter();
      Object[] objectArray0 = new Object[2];
      Global global0 = new Global();
      double double0 = Global.version(context0, global0, objectArray0, baseFunction0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Global global0 = new Global();
      IdFunctionObject idFunctionObject0 = global0.exportAsJSClass(8, global0, false);
      Object[] objectArray0 = new Object[2];
      Object object0 = Global.print((Context) null, global0, objectArray0, idFunctionObject0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Global global0 = new Global();
      NativeArray nativeArray0 = new NativeArray(8);
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        global0.installRequire(context0, nativeArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Global global0 = new Global();
      Context context0 = new Context();
      Require require0 = global0.installRequire(context0, (List<String>) null, false);
      assertFalse(require0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Global global0 = new Global();
      // Undeclared exception!
      try { 
        global0.initQuitAction((QuitAction) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // quitAction is null
         //
         verifyException("com.google.javascript.rhino.head.tools.shell.Global", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Global global0 = new Global();
      QuitAction quitAction0 = mock(QuitAction.class, new ViolatedAssumptionAnswer());
      global0.initQuitAction(quitAction0);
      QuitAction quitAction1 = mock(QuitAction.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        global0.initQuitAction(quitAction1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The method is once-call.
         //
         verifyException("com.google.javascript.rhino.head.tools.shell.Global", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test45()  throws Throwable  {
      Global global0 = new Global();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) global0;
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(global0, (Object) null, 1, 1);
      // Undeclared exception!
      try { 
        Global.runCommand((Context) null, global0, objectArray0, idFunctionObject0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // The first argument to runCommand must be a command name.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Global global0 = new Global();
      global0.setSealedStdLib(true);
      assertFalse(global0.avoidObjectDetection());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Global global0 = new Global();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      global0.setIn(dataInputStream0);
      assertFalse(global0.isInitialized());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Global global0 = new Global();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      global0.init(contextFactory0);
      assertEquals("global", global0.getClassName());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test49()  throws Throwable  {
      Global global0 = new Global();
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        global0.runDoctest(context0, (Scriptable) null, "js>~V<}^`wnl+U/E``!", "error reporter", 11);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // doctest failure running:
         // ~V<}^`wnl+U/E``!
         // expected: actual: js: \"doctest input\", line 1: syntax error
         // js: ~V<}^`wnl+U/E``!
         // js: ...^
         // js: \"doctest input\", line 1: illegal character
         // js: ~V<}^`wnl+U/E``!
         // js: .....^
         // js: \"doctest input\", line 1: illegal character
         // js: ~V<}^`wnl+U/E``!
         // js: .............^
         // js: \"doctest input\", line 1: Compilation produced 3 syntax errors.
         // 
         // 
         //  (error reporter#11)
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Global global0 = new Global();
      boolean boolean0 = global0.isInitialized();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Context context0 = Context.enter();
      Global global0 = new Global(context0);
      NativeArray nativeArray0 = global0.history;
      assertEquals(0L, nativeArray0.jsGet_length());
      
      Require require0 = global0.installRequire(context0, nativeArray0, true);
      assertTrue(require0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Global global0 = new Global();
      NativeArray nativeArray0 = new NativeArray(8);
      Context context0 = Context.getCurrentContext();
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Function;
      BaseFunction baseFunction0 = global0.getBuiltinCtor(topLevel_Builtins0);
      Global.gc(context0, nativeArray0, context0.emptyArgs, baseFunction0);
      assertEquals(4, ScriptableObject.PERMANENT);
  }
}
