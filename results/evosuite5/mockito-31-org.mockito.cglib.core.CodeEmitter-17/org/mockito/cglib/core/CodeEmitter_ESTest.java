/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 14:05:30 GMT 2019
 */

package org.mockito.cglib.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mockito.asm.ClassAdapter;
import org.mockito.asm.ClassVisitor;
import org.mockito.asm.ClassWriter;
import org.mockito.asm.Label;
import org.mockito.asm.MethodVisitor;
import org.mockito.asm.Type;
import org.mockito.cglib.core.Block;
import org.mockito.cglib.core.ClassEmitter;
import org.mockito.cglib.core.CodeEmitter;
import org.mockito.cglib.core.Local;
import org.mockito.cglib.core.MethodInfo;
import org.mockito.cglib.core.ProcessSwitchCallback;
import org.mockito.cglib.core.Signature;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class CodeEmitter_ESTest extends CodeEmitter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(159);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[14];
      classEmitter0.visit(1, 2, "7GxyH +", "7GxyH +", "7GxyH +", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.BYTE_TYPE;
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("7GxyH +", type0, typeArray0);
      CodeEmitter codeEmitter1 = new CodeEmitter(classEmitter0, codeEmitter0, 0, signature0, typeArray0);
      MethodInfo methodInfo0 = codeEmitter1.getMethodInfo();
      codeEmitter1.invoke(methodInfo0);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(182);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(1, 2, "b+iD;x[/b)L6SB+F", "b+iD;x[/b)L6SB+F", "b+iD;x[/b)L6SB+F", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.DOUBLE_TYPE;
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("<init>", type0, typeArray0);
      CodeEmitter codeEmitter1 = new CodeEmitter(classEmitter0, codeEmitter0, 733, signature0, typeArray0);
      MethodInfo methodInfo0 = codeEmitter1.getMethodInfo();
      codeEmitter1.invoke(methodInfo0);
      assertEquals(155, CodeEmitter.LT);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1288);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 2, "Character", "Character", "Character", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.VOID_TYPE;
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(182);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[4];
      classEmitter0.visit(1, 2, "b+iD;x[/b)L6SB+F", "b+iD;x[/b)L6SB+F", "b+iD;x[/b)L6SB+F", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = classEmitter0.getSuperType();
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(8, Type.DOUBLE);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2147483637));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(1, 2, "DM.|5`3P6Oc-eKt;ooT", "DM.|5`3P6Oc-eKt;ooT", "DM.|5`3P6Oc-eKt;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.INT_TYPE;
      codeEmitter0.zero_or_null(type0);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1149);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[8];
      classEmitter0.visit(1, 2, "DM.|5`3P6Oc-eKt;ooT", "DM.|5`3P6Oc-eKt;ooT", "DM.|5`3P6Oc-eKt;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.SHORT_TYPE;
      codeEmitter0.zero_or_null(type0);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 2, "DM*|5`3P6Oc-eKtE;ooT", "DM*|5`3P6Oc-eKtE;ooT", "DM*|5`3P6Oc-eKtE;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.BYTE_TYPE;
      codeEmitter0.zero_or_null(type0);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(121);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 121, "DM*|5`3P6OcYieKtEoT", "DM*|5`3P6OcYieKtEoT", "DM*|5`3P6OcYieKtEoT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.CHAR_TYPE;
      codeEmitter0.zero_or_null(type0);
      assertEquals(112, CodeEmitter.REM);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(1, 2, "~b[iD;`x/b)L6SB+_", "~b[iD;`x/b)L6SB+_", "~b[iD;`x/b)L6SB+_", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.BOOLEAN_TYPE;
      codeEmitter0.zero_or_null(type0);
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(182);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[4];
      classEmitter0.visit(1, 2, "b+iD;x[/b)L6SB+F", "b+iD;x[/b)L6SB+F", "b+iD;x[/b)L6SB+F", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = classEmitter0.getSuperType();
      codeEmitter0.zero_or_null(type0);
      assertEquals(10, Type.OBJECT);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(91);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      classEmitter0.visit((-43), 16777226, "charValue", "h", "h", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = classEmitter0.getClassType();
      Type[] typeArray0 = new Type[1];
      typeArray0[0] = type0;
      Signature signature0 = new Signature(";|.n\"=fc5>t", type0, typeArray0);
      CodeEmitter codeEmitter1 = new CodeEmitter(classEmitter0, codeEmitter0, (-1238), signature0, typeArray0);
      codeEmitter1.create_arg_array();
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "c", "c", "c", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.DOUBLE_TYPE;
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(102);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      classEmitter0.visit(2, 2, "Bad compariso for type ", "int intValue()", "Bad compariso for type ", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.LONG_TYPE;
      codeEmitter0.unbox(type0);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 2, ")V8g", ")V8g", ")V8g", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.FLOAT_TYPE;
      codeEmitter0.unbox(type0);
      assertEquals(154, CodeEmitter.NE);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(146);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[22];
      classEmitter0.visit(1, 2, "DM|5`3P6Oc-eKtE;ooT", "DM|5`3P6Oc-eKtE;ooT", "DM|5`3P6Oc-eKtE;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.INT_TYPE;
      codeEmitter0.unbox(type0);
      assertEquals(1, type0.getSize());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(129);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[18];
      classEmitter0.visit(1, 2, "DM|5`3P6Oc-eKtEz;ooT", "DM|5`3P6Oc-eKtEz;ooT", "DM|5`3P6Oc-eKtEz;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.SHORT_TYPE;
      codeEmitter0.unbox(type0);
      assertEquals(7, Type.LONG);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 2, "DM*|5`3P6Oc-eKtE;ooT", "DM*|5`3P6Oc-eKtE;ooT", "DM*|5`3P6Oc-eKtE;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.BYTE_TYPE;
      codeEmitter0.unbox(type0);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 2, "DM*|`3P6OcYeKtE;ooT", "DM*|`3P6OcYeKtE;ooT", "DM*|`3P6OcYeKtE;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.CHAR_TYPE;
      codeEmitter0.unbox(type0);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(1, 2, "~b[iD;`x/b)L6SB+_", "~b[iD;`x/b)L6SB+_", "~b[iD;`x/b)L6SB+_", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.BOOLEAN_TYPE;
      codeEmitter0.unbox(type0);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1431655765);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      classEmitter0.visit((-292), 1873, "Bad comparison for type ", "c=5b0", "Bad comparison for type ", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.VOID_TYPE;
      codeEmitter0.unbox(type0);
      assertEquals(6, Type.FLOAT);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(100);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[14];
      classEmitter0.visit(176, 2, "Uv$F@}sLCyaY'P8pdG", "7Gxy +", "0(O\"duXYPR", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.DOUBLE_TYPE;
      codeEmitter0.box(type0);
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(146);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[17];
      classEmitter0.visit(1, 2, "Number", "Number", "Number", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push(true);
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(165);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(1, 2, "end of block is unset", "end of block is unset", "end of block is unset", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push(false);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "h", "h", "h", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      int[] intArray0 = new int[2];
      intArray0[1] = 153;
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      codeEmitter0.process_switch(intArray0, processSwitchCallback0, true);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(159);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[14];
      classEmitter0.visit(1, 2, "7GxyH +", "7GxyH +", "7GxyH +", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      int[] intArray0 = new int[2];
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      codeEmitter0.process_switch(intArray0, processSwitchCallback0, false);
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(102);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      classEmitter0.visit(2, 2, "Bad compariso for type ", "int intValue()", "Bad compariso for type ", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      int[] intArray0 = new int[8];
      intArray0[0] = 10;
      // Undeclared exception!
      try { 
        codeEmitter0.process_switch(intArray0, (ProcessSwitchCallback) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // keys to switch must be sorted ascending
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(182);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[3];
      classEmitter0.visit(1, 2, "b+iDY;x[/b)L6SB+F", "b+iDY;x[/b)L6SB+F", "b+iDY;x[/b)L6SB+F", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      int[] intArray0 = new int[0];
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      codeEmitter0.process_switch(intArray0, processSwitchCallback0);
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 153, "DM*5`PSfcYZieKtEoT", "DM*5`PSfcYZieKtEoT", "DM*5`PSfcYZieKtEoT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Class<Object> class0 = Object.class;
      Type type0 = Type.getType(class0);
      codeEmitter0.unbox(type0);
      assertEquals(3, Type.BYTE);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(140);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      Type type0 = Type.BOOLEAN_TYPE;
      classEmitter0.declare_field(142, "qM|5!3P6OW-e7tEz;ooT", type0, type0);
      classEmitter0.visit(4, 10, "qM|5!3P6OW-e7tEz;ooT", "\"{:GD5ZB9X!80{", "qM|5!3P6OW-e7tEz;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.putfield("qM|5!3P6OW-e7tEz;ooT");
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[15];
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.declare_field(2, "intValue", type0, "intValue");
      classEmitter0.visit(10, 2, "dk;K<XwRDM8%i", "`~(|{i'Y3vO\".XNrX4", (String) null, stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.putfield("intValue");
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.declare_field(91, "intValue", type0, "intValue");
      String[] stringArray0 = new String[1];
      classEmitter0.visit(2, 2, "intValue", "intValue", "intValue", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.getfield("intValue");
      assertEquals(100, CodeEmitter.SUB);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[15];
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.declare_field(2, "intValue", type0, "intValue");
      classEmitter0.visit(10, 2, "dk;K<XwRDM8%i", "`~(|{i'Y3vO\".XNrX4", (String) null, stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.getfield("intValue");
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1576));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      classEmitter0.visit(2, 1, "DM*|5`3P6OcYieKtEoT", "DM*|5`3P6OcYieKtEoT", "DM*|5`3P6OcYieKtEoT", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      // Undeclared exception!
      try { 
        codeEmitter0.load_args(538, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-384));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(1, 2, "Numb]Mr", "Numb]Mr", "Numb]Mr", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      // Undeclared exception!
      try { 
        codeEmitter0.load_args((-384), 183);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -384
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(135);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "c", "c", "c", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      // Undeclared exception!
      try { 
        codeEmitter0.load_this();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no 'this' pointer within static method
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "h", "h", "h", stringArray0);
      Type type0 = Type.DOUBLE_TYPE;
      Type type1 = classEmitter0.getClassType();
      Type[] typeArray0 = new Type[1];
      typeArray0[0] = type1;
      Signature signature0 = new Signature("h", type0, typeArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_method(4, signature0, typeArray0);
      codeEmitter0.load_this();
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[7];
      classEmitter0.visit(2, 2, ",", ",", ",", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.VOID_TYPE;
      codeEmitter0.newarray(type0);
      assertEquals(6, Type.FLOAT);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(168);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[20];
      classEmitter0.visit(1, 2, "end of block is unXet", "end of block is unXet", "end of block is unXet", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push((double) 1);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(146);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visit(1, 2, "Number", "Number", "Number", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push((-1033.5679157));
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(84, 84, "h", "h", "h", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push(2.0F);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(159);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[14];
      classEmitter0.visit(1, 2, "7GxyH +", "7GxyH +", "7GxyH +", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push((float) 1);
      assertFalse(codeEmitter0.isStaticHook());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[22];
      classEmitter0.visit(1, 2, "~b[iD;x[/b)L6SB+F", "~b[iD;x[/b)L6SB+F", "~b[iD;x[/b)L6SB+F", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push((float) 4);
      assertEquals(154, CodeEmitter.NE);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(146);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[17];
      classEmitter0.visit(1, 2, "DM|5`3P6Hc-eKtE;ooT", "DM|5`3P6Hc-eKtE;ooT", "DM|5`3P6Hc-eKtE;ooT", stringArray0);
      Type type0 = Type.FLOAT_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.zero_or_null(type0);
      assertEquals(100, CodeEmitter.SUB);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "h", "h", "h", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push((long) 1);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "", "", "", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push(3964L);
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "h", "h", "h", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      codeEmitter0.zero_or_null(type0);
      assertEquals(10, Type.OBJECT);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(91);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      classEmitter0.visit((-43), 16777226, "h", "h", "h", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.aaload(16777226);
      assertFalse(codeEmitter0.isStaticHook());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(165);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(1, 2, "end of block is unset", "end of block is unset", "end of block is unset", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push(4248);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(555);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[3];
      classEmitter0.visit(1, 2, "D5M|5`3P6Hc-eKtE;ooT", "D5M|5`3P6Hc-eKtE;ooT", "D5M|5`3P6Hc-eKtE;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push(87);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(1, 2, "Uc;", "Uc;", "Uc;", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.aaload((-3823));
      assertEquals(155, CodeEmitter.LT);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "h", "h", "h", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      Type type1 = Type.BYTE_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(6, Type.FLOAT);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "", "", "", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = classEmitter0.getClassType();
      Type type1 = Type.FLOAT_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(9, Type.ARRAY);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "h", "h", "h", stringArray0);
      Type type0 = Type.DOUBLE_TYPE;
      Type type1 = classEmitter0.getClassType();
      Type[] typeArray0 = new Type[1];
      typeArray0[0] = type1;
      Signature signature0 = new Signature("h", type0, typeArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_method(4, signature0, typeArray0);
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(6, Type.FLOAT);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      classEmitter0.visit(2, 1, "DM*|5`3P6OcYieKtEoS", "DM*|5`3P6OcYieKtEoS", "DM*|5`3P6OcYieKtEoS", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = codeEmitter0.getReturnType();
      Type type1 = Type.CHAR_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertFalse(type1.equals((Object)type0));
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(2, 178, "]*o#A", "long longValue()", "org.mockito.cglib.core.ClassInfo", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      Type type1 = Type.FLOAT_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(136);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "h", "h", "h", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      Type type1 = Type.DOUBLE_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "h", "h", "h", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      Type type1 = Type.BYTE_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(10, Type.OBJECT);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1431655765);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      classEmitter0.visit((-292), 1873, "Bad comparison for type ", "c=5b0", "Bad comparison for type ", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.FLOAT_TYPE;
      Type type1 = Type.LONG_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(102);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      classEmitter0.visit(2, 2, "Bad compariso for type ", "int intValue()", "Bad compariso for type ", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.FLOAT_TYPE;
      Type type1 = Type.DOUBLE_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 16, "h", "h", "h", stringArray0);
      Type type0 = Type.DOUBLE_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type1 = Type.LONG_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(155, CodeEmitter.LT);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[3];
      classEmitter0.visit(2, 1, "-->", "h", "-->", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.DOUBLE_TYPE;
      Type type1 = Type.FLOAT_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(1, Type.BOOLEAN);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "c", "c", "c", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.DOUBLE_TYPE;
      Type type1 = Type.SHORT_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(112, CodeEmitter.REM);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "c", "c", "c", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.FLOAT_TYPE;
      Type type1 = classEmitter0.getClassType();
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(3, Type.BYTE);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "h", "h", "h", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = classEmitter0.getClassType();
      codeEmitter0.cast_numeric(type0, type0);
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[6];
      classEmitter0.visit(2133717727, 2, "<", "<", "&,'Ay6A|Wl`n:", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.DOUBLE_TYPE;
      Class<Integer> class0 = Integer.class;
      Type type1 = Type.getType(class0);
      codeEmitter0.swap(type1, type0);
      assertEquals(6, Type.FLOAT);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2147483645);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(1, 2, "DM.|5`3P6Oc-eKt;ooT", "DM.|5`3P6Oc-eKt;ooT", "DM.|5`3P6Oc-eKt;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.BYTE_TYPE;
      codeEmitter0.swap(type0, type0);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter((ClassVisitor) null);
      Type type0 = Type.SHORT_TYPE;
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("M'??`0YTYl", type0, typeArray0);
      CodeEmitter codeEmitter0 = new CodeEmitter(classEmitter0, (MethodVisitor) null, (-1025), signature0, typeArray0);
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, 158, label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visit(111, 1, "h", "h", "<clinit>", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = codeEmitter0.getReturnType();
      Label label0 = new Label();
      codeEmitter0.if_cmp(type0, 157, label0);
      assertEquals(2, Type.CHAR);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(159);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[14];
      classEmitter0.visit(1, 2, "7xy +", "7xy +", "7xy +", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = codeEmitter0.getReturnType();
      Block block0 = new Block(codeEmitter0);
      Label label0 = block0.getStart();
      codeEmitter0.if_cmp(type0, 155, label0);
      assertEquals(9, Type.ARRAY);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 2, "DM|5`3P6Oc-eKtE;ooT", "DM|5`3P6Oc-eKtE;ooT", "DM|5`3P6Oc-eKtE;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.INT_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, 154, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 153, "DM*|5`3P6OcYeKtEooT", "DM*|5`3P6OcYeKtEooT", "DM*|5`3P6OcYeKtEooT", stringArray0);
      Type type0 = Type.BYTE_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = new Label();
      codeEmitter0.if_cmp(type0, 153, label0);
      assertEquals(0, Type.VOID);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-413));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[8];
      classEmitter0.visit(1, 2, "DM.|5>`3P6Oc-eKt;ooT", "DM.|5>`3P6Oc-eKt;ooT", "DM.|5>`3P6Oc-eKt;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = classEmitter0.getSuperType();
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, 154, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 153, "DM*|5`3P6OcYeKtEooT", "DM*|5`3P6OcYeKtEooT", "DM*|5`3P6OcYeKtEooT", stringArray0);
      Class<Object> class0 = Object.class;
      Type type0 = Type.getType(class0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = codeEmitter0.make_label();
      codeEmitter0.if_cmp(type0, 153, label0);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(182);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[4];
      classEmitter0.visit(1, 2, "b+iD;x[/b)L6SB+F", "b+iD;x[/b)L6SB+F", "b+iD;x[/b)L6SB+F", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = classEmitter0.getSuperType();
      Label label0 = codeEmitter0.make_label();
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, 9, label0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad comparison for type Lb+iD;
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[15];
      classEmitter0.visit(10, 2, "dk;K<XwRDM8%i", "`~(|{i'Y3vO\".XNrX4", (String) null, stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Label label0 = new Label();
      Type type0 = Type.getType("[]");
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, 9, label0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad comparison for type []
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(146);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(1, 2, "~b[iD;`x/)L6SB+_", "~b[iD;`x/)L6SB+_", "~b[iD;`x/)L6SB+_", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      Label label0 = new Label();
      codeEmitter0.if_cmp(type0, 2, label0);
      assertEquals(116, CodeEmitter.NEG);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1168);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(1, 2, "D2.|5`3P6O-eKt;ooT", "D2.|5`3P6O-eKt;ooT", "D2.|5`3P6O-eKt;ooT", stringArray0);
      Type type0 = Type.FLOAT_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, 1, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(111, 2, "h", "h", "h", stringArray0);
      Type type0 = Type.DOUBLE_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = codeEmitter0.make_label();
      codeEmitter0.if_cmp(type0, 158, label0);
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "h", "h", "h", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = codeEmitter0.getReturnType();
      Label label0 = new Label();
      codeEmitter0.if_cmp(type0, 156, label0);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(140);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(1, 2, "qM|5`3P6O-eKtEz;ooT", "qM|5`3P6O-eKtEz;ooT", "qM|5`3P6O-eKtEz;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Block block0 = new Block(codeEmitter0);
      Type type0 = Type.getType("qM|5`3P6O-eKtEz;ooT");
      // Undeclared exception!
      try { 
        codeEmitter0.catch_exception(block0, type0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // end of block is unset
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(91);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 2, "h", "h", "h", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Block block0 = new Block(codeEmitter0);
      block0.end();
      Type type0 = Type.BYTE_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.catch_exception(block0, type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(167);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(1, 2, "umb]", "umb]", "umb]", stringArray0);
      Class<Integer> class0 = Integer.class;
      Type type0 = Type.getType(class0);
      Type[] typeArray0 = new Type[4];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = type0;
      typeArray0[3] = typeArray0[1];
      Signature signature0 = new Signature("Field \"", type0, typeArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_method((-142), signature0, typeArray0);
      codeEmitter0.visitMaxs((-3857), 198);
      assertEquals(100, CodeEmitter.SUB);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(146);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(1, 2, "Number", "Number", "Number", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.end_method();
      assertEquals(155, CodeEmitter.LT);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1288);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[27];
      classEmitter0.visit(1, 2, "LocalwriableTypTable", "LocalwriableTypTable", "LocalwriableTypTable", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.load_args();
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(146);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[10];
      classEmitter0.visit(1, 2, "DM53P6fc-eKtE;oT", "DM53P6fc-eKtE;oT", "DM53P6fc-eKtE;oT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.SHORT_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.putstatic(type0, "DM53P6fc-eKtE;oT", type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(143);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(1, 2, "Numb]r", "Numb]r", "Numb]r", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.monitorenter();
      assertEquals(153, CodeEmitter.EQ);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(165);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(1, 2, "end of block is unset", "end of block is unset", "end of block is unset", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      // Undeclared exception!
      try { 
        codeEmitter0.getfield((Type) null, "end of block is unset", (Type) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(91);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      classEmitter0.visit((-43), 16777226, "charValue", "h", "h", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      ClassEmitter classEmitter1 = codeEmitter0.getClassEmitter();
      assertSame(classEmitter0, classEmitter1);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(165);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(1, 2, "end of block is unset", "end of block is unset", "end of block is unset", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.invoke_constructor_this();
      assertEquals(112, CodeEmitter.REM);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-378));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[11];
      classEmitter0.visit(1, 2, "LocalVariableypeTable", "LocalVariableypeTable", "LocalVariableypeTable", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = classEmitter0.getSuperType();
      codeEmitter0.super_getstatic("LocalVariableypeTable", type0);
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-342));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visit(1, (-342), "~b[iD;x[/b)L6SB+F", "DM*|5`3P6OcYieKtEoT", "DM*|5`3P6OcYieKtEoT", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      MethodInfo methodInfo0 = codeEmitter0.getMethodInfo();
      codeEmitter0.invoke(methodInfo0);
      assertEquals(100, CodeEmitter.SUB);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1149);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[8];
      classEmitter0.visit(1, 2, "DM.|5`3P6OPc-eKt;ooT", "DM.|5`3P6OPc-eKt;ooT", "DM.|5`3P6OPc-eKt;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.new_instance_this();
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2147483645);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(1, 2, "DM.|5`3P6Oc-eKt;ooT", "DM.|5`3P6Oc-eKt;ooT", "DM.|5`3P6Oc-eKt;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.BYTE_TYPE;
      codeEmitter0.array_load(type0);
      assertEquals(7, Type.LONG);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(1, 2, "~b[iD;x[/b)L6SB+F", "~b[iD;x[/b)L6SB+F", "~b[iD;x[/b)L6SB+F", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.return_value();
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(1, 2, "DM|5`3P6Oc-eKtE;ooT", "DM|5`3P6Oc-eKtE;ooT", "DM|5`3P6Oc-eKtE;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Block block0 = codeEmitter0.begin_block();
      assertNotNull(block0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(146);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(1, 2, "Number", "Number", "Number", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      int[] intArray0 = new int[1];
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      codeEmitter0.process_switch(intArray0, processSwitchCallback0);
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1315);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 2, "Character", "Character", "Character", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.getReturnType("Character");
      // Undeclared exception!
      try { 
        codeEmitter0.getstatic(type0, "[k/wSL?vSH;$<[`", type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(146);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[17];
      classEmitter0.visit(1, 2, "DM|5`3P6Hc-eKtE;ooT", "DM|5`3P6Hc-eKtE;ooT", "DM|5`3P6Hc-eKtE;ooT", stringArray0);
      Type type0 = Type.FLOAT_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.super_putfield("DM|5`3P6Hc-eKtE;ooT", type0);
      assertEquals(153, CodeEmitter.EQ);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-384));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[13];
      classEmitter0.visit(1, 2, "LocalVariableypeTable", "LocalVariableypeTable", "LocalVariableypeTable", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.not();
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(146);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[8];
      classEmitter0.visit(1, 2, "Number", "Number", "Number", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Local local0 = codeEmitter0.make_local();
      codeEmitter0.load_local(local0);
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(725);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(1, 2, "LocalVrableypTable", "LocalVrableypTable", "LocalVrableypTable", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = codeEmitter0.getReturnType();
      codeEmitter0.box(type0);
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      classEmitter0.visit(7, 111, "StringBuffer", "StringBuffer", (String) null, (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Local local0 = codeEmitter0.make_local();
      codeEmitter0.store_local(local0);
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2199));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[7];
      classEmitter0.visit(2, 2, "CaraK{Jdter", "CaraK{Jdter", "CaraK{Jdter", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Signature signature0 = new Signature(":)v8neEBH", "gpXx~d$63_c");
      // Undeclared exception!
      try { 
        codeEmitter0.super_invoke_constructor(signature0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1162);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[8];
      classEmitter0.visit(1, 2, "DM.|5`3P6Oc-eKt;ooT", "DM.|5`3P6Oc-eKt;ooT", "DM.|5`3P6Oc-eKt;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = codeEmitter0.mark();
      codeEmitter0.ifnull(label0);
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(146);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[18];
      classEmitter0.visit(1, 2, "DM|5`3P6Oc-eKtEz;ooT", "DM|5`3P6Oc-eKtEz;ooT", "DM|5`3P6Oc-eKtEz;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.super_invoke();
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visit(2, 1, "Numb]r", "Numb]r", "Numb]r", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.dup2();
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(1, 2, "~b[iD;`x/b)L6SB+_", "~b[iD;`x/b)L6SB+_", "~b[iD;`x/b)L6SB+_", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Signature signature0 = new Signature("-BC`clYrur+o5b", "~b[iD;`x/b)L6SB+_");
      codeEmitter0.invoke_constructor_this(signature0);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1315);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(1, 2, "CaraK{Jdter", "CaraK{Jdter", "CaraK{Jdter", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Label label0 = codeEmitter0.make_label();
      // Undeclared exception!
      try { 
        codeEmitter0.if_icmp(2, label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1149);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[8];
      classEmitter0.visit(1, 2, "DM.|5`3P6Oc-eKt;ooT", "DM.|5`3P6Oc-eKt;ooT", "DM.|5`3P6Oc-eKt;ooT", stringArray0);
      Type type0 = Type.DOUBLE_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type[] typeArray0 = new Type[2];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      Signature signature0 = new Signature("epI'>]5PL\"J=HO.iI", type0, typeArray0);
      codeEmitter0.invoke_virtual_this(signature0);
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(182);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(1, 1, "DM*|5=3P6OcYieKtEoT", "DM*|5=3P6OcYieKtEoT", "DM*|5=3P6OcYieKtEoT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.instance_of_this();
      assertEquals(155, CodeEmitter.LT);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(146);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 2, "DM|5`3P6Hc-eKtE;ooT", "DM|5`3P6Hc-eKtE;ooT", "DM|5`3P6Hc-eKtE;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.BOOLEAN_TYPE;
      codeEmitter0.super_putstatic("ak{E^#@^eS]K_0l5Z", type0);
      assertEquals(7, Type.LONG);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1149);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[8];
      classEmitter0.visit(1, 2, "DM.|5`3P6OPc-eKt;ooT", "DM.|5`3P6OPc-eKt;ooT", "DM.|5`3P6OPc-eKt;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      Type type1 = classEmitter0.getClassType();
      codeEmitter0.swap(type0, type1);
      assertEquals(8, Type.DOUBLE);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1149);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[8];
      classEmitter0.visit(1, 2, "DM.|5`3P6Oc-eKt;ooT", "DM.|5`3P6Oc-eKt;ooT", "DM.|5`3P6Oc-eKt;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.CHAR_TYPE;
      codeEmitter0.super_getfield("DM.|5`3P6Oc-eKt;ooT", type0);
      assertEquals(4, Type.SHORT);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(143);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(1, 2, "Numb]r", "Numb]r", "Numb]r", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Local local0 = codeEmitter0.make_local();
      codeEmitter0.iinc(local0, 2);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2228));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[7];
      classEmitter0.visit(2, 2, "I9", "I9", "I9", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.checkcast_this();
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1277);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(1, 2, "LocaariableTypTable", "LocaariableTypTable", "LocaariableTypTable", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.CHAR_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.putfield(type0, "CGLIB$STATICHOOK2", type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(118);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(84, 1, "", "<init>", "<init>", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Signature signature0 = codeEmitter0.getSignature();
      assertEquals("()V", signature0.getDescriptor());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[7];
      classEmitter0.visit(2, 2, ",", ",", ",", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.VOID_TYPE;
      codeEmitter0.zero_or_null(type0);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2147483637));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[9];
      classEmitter0.visit(1, 2, "DM.|5`3P6Oc-eKt;ooT", "DM.|5`3P6Oc-eKt;ooT", "DM.|5`3P6Oc-eKt;ooT", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.INT_TYPE;
      codeEmitter0.box(type0);
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2228));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[7];
      classEmitter0.visit(2, 2, "I9", "I9", "I9", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.monitorexit();
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(111);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 16, "h", "CGLIB$STATICHOOK1", "_VDB", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      CodeEmitter codeEmitter1 = new CodeEmitter(codeEmitter0);
      boolean boolean0 = codeEmitter1.isStaticHook();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(100);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 2, "Uc;", "Uc;", "Uc;", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.INT_TYPE;
      codeEmitter0.array_store(type0);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1288);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 2, "Character", "Character", "Character", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.arraylength();
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1315);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(1, 2, "CaraK{Jdter", "CaraK{Jdter", "CaraK{Jdter", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.DOUBLE_TYPE;
      codeEmitter0.swap(type0, type0);
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(153);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(1, 2, "~b[iD;x[/b)L6SB+F", "~b[iD;x[/b)L6SB+F", "~b[iD;x[/b)L6SB+F", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = classEmitter0.getSuperType();
      codeEmitter0.throw_exception(type0, "~b[iD;x[/b)L6SB+F");
      assertEquals(5, Type.INT);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(182);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[5];
      classEmitter0.visit(1, 2, "b+iD;x[/b)L6SB+F", "b+iD;x[/b)L6SB+F", "b+iD;x[/b)L6SB+F", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      MethodInfo methodInfo0 = codeEmitter0.getMethodInfo();
      codeEmitter0.invoke(methodInfo0);
      assertEquals(154, CodeEmitter.NE);
  }
}
