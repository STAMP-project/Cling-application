/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 25 08:09:38 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.InterpreterData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class InterpretedFunction_ESTest extends InterpretedFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  @Ignore
  public void test0()  throws Throwable  {
      Context context0 = Context.getContext();
      BaseFunction baseFunction0 = new BaseFunction();
      InterpreterData interpreterData0 = new InterpreterData(2, "language version", "language version", false);
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createFunction(context0, baseFunction0, interpreterData0, (Object) null);
      // Undeclared exception!
      try { 
        interpretedFunction0.exec(context0, baseFunction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test1()  throws Throwable  {
      Context context0 = Context.getContext();
      BaseFunction baseFunction0 = new BaseFunction();
      InterpreterData interpreterData0 = new InterpreterData(2, "language version", "language version", false);
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createFunction(context0, baseFunction0, interpreterData0, (Object) null);
      interpreterData0.itsFunctionType = 12;
      // Undeclared exception!
      try { 
        interpretedFunction0.exec(context0, baseFunction0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Context context0 = Context.enter();
      BaseFunction baseFunction0 = new BaseFunction();
      InterpreterData interpreterData0 = new InterpreterData(2, "error reporter", "language version", false);
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createScript(interpreterData0, (Object) null);
      // Undeclared exception!
      try { 
        interpretedFunction0.resumeGenerator(context0, baseFunction0, 0, context0.FEATURE_NON_ECMA_GET_YEAR, context0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to com.google.javascript.rhino.head.Interpreter$CallFrame
         //
         verifyException("com.google.javascript.rhino.head.Interpreter", e);
      }
  }
}
