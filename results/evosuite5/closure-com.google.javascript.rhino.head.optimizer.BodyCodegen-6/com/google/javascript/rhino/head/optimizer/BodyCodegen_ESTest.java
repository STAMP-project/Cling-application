/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 22:28:48 GMT 2019
 */

package com.google.javascript.rhino.head.optimizer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.CompilerEnvirons;
import com.google.javascript.rhino.head.ast.AstRoot;
import com.google.javascript.rhino.head.ast.RegExpLiteral;
import com.google.javascript.rhino.head.optimizer.BodyCodegen;
import com.google.javascript.rhino.head.optimizer.Codegen;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class BodyCodegen_ESTest extends BodyCodegen_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Codegen codegen0 = new Codegen();
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      AstRoot astRoot0 = new AstRoot();
      astRoot0.setLineno((-240));
      byte[] byteArray0 = codegen0.compileToClassFile(compilerEnvirons0, ")6X", astRoot0, ")6X", false);
      assertEquals(2415, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BodyCodegen bodyCodegen0 = new BodyCodegen();
      Codegen codegen0 = new Codegen();
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      compilerEnvirons0.setGenerateDebugInfo(false);
      bodyCodegen0.codegen = codegen0;
      AstRoot astRoot0 = new AstRoot();
      byte[] byteArray0 = bodyCodegen0.codegen.compileToClassFile(compilerEnvirons0, "newArrayLiteral", astRoot0, "newArrayLiteral", false);
      assertEquals(2335, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Codegen codegen0 = new Codegen();
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      AstRoot astRoot0 = new AstRoot();
      RegExpLiteral regExpLiteral0 = new RegExpLiteral();
      astRoot0.addRegExp(regExpLiteral0);
      // Undeclared exception!
      try { 
        codegen0.compileToClassFile(compilerEnvirons0, "asZ(8^XoiIRf]*`#h68", astRoot0, "asZ(8^XoiIRf]*`#h68", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.classfile.ClassFileWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Codegen codegen0 = new Codegen();
      CompilerEnvirons compilerEnvirons0 = CompilerEnvirons.ideEnvirons();
      AstRoot astRoot0 = new AstRoot();
      compilerEnvirons0.setGenerateObserverCount(true);
      byte[] byteArray0 = codegen0.compileToClassFile(compilerEnvirons0, "asZ(8^XoiIRf]*`#h68", astRoot0, "asZ(8^XoiIRf]*`#h68", false);
      assertEquals(2525, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BodyCodegen.FinallyReturnPoint bodyCodegen_FinallyReturnPoint0 = new BodyCodegen.FinallyReturnPoint();
  }
}
