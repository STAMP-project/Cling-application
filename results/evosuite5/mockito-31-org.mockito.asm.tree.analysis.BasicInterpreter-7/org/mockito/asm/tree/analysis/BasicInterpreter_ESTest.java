/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 20:57:51 GMT 2019
 */

package org.mockito.asm.tree.analysis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.asm.Type;
import org.mockito.asm.tree.IincInsnNode;
import org.mockito.asm.tree.InsnNode;
import org.mockito.asm.tree.IntInsnNode;
import org.mockito.asm.tree.JumpInsnNode;
import org.mockito.asm.tree.LabelNode;
import org.mockito.asm.tree.LdcInsnNode;
import org.mockito.asm.tree.TypeInsnNode;
import org.mockito.asm.tree.VarInsnNode;
import org.mockito.asm.tree.analysis.BasicInterpreter;
import org.mockito.asm.tree.analysis.BasicValue;
import org.mockito.asm.tree.analysis.SourceValue;
import org.mockito.asm.tree.analysis.Value;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class BasicInterpreter_ESTest extends BasicInterpreter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue1 = (BasicValue)BasicValue.LONG_VALUE;
      BasicValue basicValue2 = (BasicValue)basicInterpreter0.merge(basicValue0, basicValue1);
      assertFalse(basicValue2.isReference());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.merge(basicValue0, basicValue0);
      assertSame(basicValue0, value0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(197);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        basicInterpreter0.naryOperation(insnNode0, linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mockito.asm.tree.InsnNode cannot be cast to org.mockito.asm.tree.MultiANewArrayInsnNode
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode((-1516));
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      LinkedList<IntInsnNode> linkedList0 = new LinkedList<IntInsnNode>();
      // Undeclared exception!
      try { 
        basicInterpreter0.naryOperation(insnNode0, linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mockito.asm.tree.InsnNode cannot be cast to org.mockito.asm.tree.MethodInsnNode
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(181);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(180);
      BasicValue basicValue0 = (BasicValue)BasicValue.FLOAT_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(179);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, (Value) null, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(178, 178);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(varInsnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(177);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(176);
      BasicValue basicValue0 = (BasicValue)BasicValue.FLOAT_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(175);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(174);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(173);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(172);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(171);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(170);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(169);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(168);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      IntInsnNode intInsnNode0 = new IntInsnNode(167, 167);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(intInsnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(166);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(165);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.DOUBLE_VALUE;
      InsnNode insnNode0 = new InsnNode(164);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(163);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(162);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(161);
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(160);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(159);
      BasicValue basicValue0 = (BasicValue)BasicValue.FLOAT_VALUE;
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      SourceValue sourceValue0 = new SourceValue(158);
      InsnNode insnNode0 = new InsnNode(158);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, sourceValue0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(157);
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(156);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(155);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(154);
      BasicValue basicValue0 = (BasicValue)BasicValue.FLOAT_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.FLOAT_VALUE;
      InsnNode insnNode0 = new InsnNode(153);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(152);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertFalse(value0.equals((Object)basicValue0));
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(151);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNotSame(basicValue0, value0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      VarInsnNode varInsnNode0 = new VarInsnNode(150, 150);
      BasicValue basicValue0 = (BasicValue)BasicValue.REFERENCE_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(varInsnNode0, basicValue0, basicValue0);
      assertFalse(value0.equals((Object)basicValue0));
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(149);
      BasicValue basicValue0 = (BasicValue)BasicValue.FLOAT_VALUE;
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNotSame(basicValue0, value0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(148);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNotSame(basicValue0, value0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(147);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(146);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(145);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(144);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      VarInsnNode varInsnNode0 = new VarInsnNode(143, 143);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(varInsnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(142);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      SourceValue sourceValue0 = new SourceValue(141);
      InsnNode insnNode0 = new InsnNode(141);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, sourceValue0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(140, 140);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(varInsnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(138, 138);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(varInsnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(137);
      SourceValue sourceValue0 = new SourceValue(13);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, sourceValue0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(136);
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      IntInsnNode intInsnNode0 = new IntInsnNode(135, 135);
      SourceValue sourceValue0 = new SourceValue(14);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(intInsnNode0, sourceValue0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      SourceValue sourceValue0 = new SourceValue(134);
      InsnNode insnNode0 = new InsnNode(134);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, sourceValue0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      IntInsnNode intInsnNode0 = new IntInsnNode(133, 133);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(intInsnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IincInsnNode iincInsnNode0 = new IincInsnNode(76, 76);
      BasicValue basicValue0 = (BasicValue)BasicValue.REFERENCE_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(iincInsnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(131, 131);
      Value value0 = basicInterpreter0.binaryOperation(varInsnNode0, (Value) null, (Value) null);
      assertEquals(2, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(130);
      SourceValue sourceValue0 = new SourceValue(4);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.binaryOperation(insnNode0, sourceValue0, sourceValue0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(129);
      BasicValue basicValue1 = (BasicValue)basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertFalse(basicValue1.isReference());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      SourceValue sourceValue0 = new SourceValue(128);
      VarInsnNode varInsnNode0 = new VarInsnNode(128, 128);
      Value value0 = basicInterpreter0.binaryOperation(varInsnNode0, sourceValue0, sourceValue0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(127);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNotSame(basicValue0, value0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(126);
      SourceValue sourceValue0 = new SourceValue(13);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.binaryOperation(insnNode0, sourceValue0, sourceValue0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      TypeInsnNode typeInsnNode0 = new TypeInsnNode(125, "=dL}8%<S:J");
      BasicValue basicValue1 = (BasicValue)basicInterpreter0.binaryOperation(typeInsnNode0, basicValue0, basicValue0);
      assertFalse(basicValue1.isReference());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(124, 124);
      Value value0 = basicInterpreter0.binaryOperation(varInsnNode0, basicValue0, basicValue0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(123);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertEquals(2, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.FLOAT_VALUE;
      InsnNode insnNode0 = new InsnNode(122);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertFalse(value0.equals((Object)basicValue0));
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(121, 121);
      Value value0 = basicInterpreter0.binaryOperation(varInsnNode0, (Value) null, (Value) null);
      assertEquals(2, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(120);
      SourceValue sourceValue0 = new SourceValue(4);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.binaryOperation(insnNode0, sourceValue0, sourceValue0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      IntInsnNode intInsnNode0 = new IntInsnNode(119, 119);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.INT_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(intInsnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(118);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(117);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(116);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(115);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNotSame(basicValue0, value0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.DOUBLE_VALUE;
      InsnNode insnNode0 = new InsnNode(114);
      BasicValue basicValue1 = (BasicValue)basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertFalse(basicValue1.isReference());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      SourceValue sourceValue0 = new SourceValue(113);
      VarInsnNode varInsnNode0 = new VarInsnNode(113, 113);
      Value value0 = basicInterpreter0.binaryOperation(varInsnNode0, sourceValue0, sourceValue0);
      assertEquals(2, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      SourceValue sourceValue0 = new SourceValue(112);
      InsnNode insnNode0 = new InsnNode(112);
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.binaryOperation(insnNode0, sourceValue0, sourceValue0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(111);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertEquals(2, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(110);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertFalse(value0.equals((Object)basicValue0));
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      IntInsnNode intInsnNode0 = new IntInsnNode(109, 109);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(intInsnNode0, basicValue0, basicValue0);
      assertFalse(value0.equals((Object)basicValue0));
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(108);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      IntInsnNode intInsnNode0 = new IntInsnNode(107, 107);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(intInsnNode0, basicValue0, basicValue0);
      assertFalse(value0.equals((Object)basicValue0));
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(106);
      BasicValue basicValue0 = (BasicValue)BasicValue.FLOAT_VALUE;
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(105);
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertFalse(value0.equals((Object)basicValue0));
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(104);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNotSame(basicValue0, value0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(103, 103);
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.binaryOperation(varInsnNode0, (Value) null, (Value) null);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      IntInsnNode intInsnNode0 = new IntInsnNode(102, 102);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue1 = (BasicValue)basicInterpreter0.binaryOperation(intInsnNode0, basicValue0, basicValue0);
      assertFalse(basicValue1.isReference());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(101);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      BasicValue basicValue1 = (BasicValue)basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertFalse(basicValue1.isReference());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      IntInsnNode intInsnNode0 = new IntInsnNode(100, 100);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue1 = (BasicValue)basicInterpreter0.binaryOperation(intInsnNode0, basicValue0, basicValue0);
      assertFalse(basicValue1.isReference());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      IntInsnNode intInsnNode0 = new IntInsnNode(99, 99);
      SourceValue sourceValue0 = new SourceValue(14);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.binaryOperation(intInsnNode0, sourceValue0, sourceValue0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(98);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertFalse(value0.equals((Object)basicValue0));
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(97);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.FLOAT_VALUE;
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNotSame(basicValue0, value0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      LabelNode labelNode0 = new LabelNode();
      JumpInsnNode jumpInsnNode0 = new JumpInsnNode(96, labelNode0);
      BasicValue basicValue1 = (BasicValue)basicInterpreter0.binaryOperation(jumpInsnNode0, basicValue0, basicValue0);
      assertFalse(basicValue1.isReference());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(95);
      BasicValue basicValue0 = (BasicValue)BasicValue.FLOAT_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(94);
      BasicValue basicValue0 = (BasicValue)BasicValue.FLOAT_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      IntInsnNode intInsnNode0 = new IntInsnNode(93, 93);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(intInsnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(92);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(91);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(90);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(89);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(88);
      BasicValue basicValue0 = (BasicValue)BasicValue.FLOAT_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.RETURNADDRESS_VALUE;
      InsnNode insnNode0 = new InsnNode(87);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(86);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(85);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(84);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(83);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(82);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(81);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      SourceValue sourceValue0 = new SourceValue(80);
      VarInsnNode varInsnNode0 = new VarInsnNode(80, 80);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(varInsnNode0, sourceValue0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      SourceValue sourceValue0 = new SourceValue(79);
      VarInsnNode varInsnNode0 = new VarInsnNode(79, 79);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(varInsnNode0, sourceValue0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(78);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, (Value) null, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(77);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      SourceValue sourceValue0 = new SourceValue(76);
      InsnNode insnNode0 = new InsnNode(76);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, sourceValue0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(75);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, (Value) null, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(74);
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(73);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(72);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.FLOAT_VALUE;
      InsnNode insnNode0 = new InsnNode(71);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(70);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(69);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(68);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      SourceValue sourceValue0 = new SourceValue(67);
      InsnNode insnNode0 = new InsnNode(67);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, sourceValue0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(66);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.REFERENCE_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(65);
      BasicValue basicValue0 = (BasicValue)BasicValue.FLOAT_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(64);
      SourceValue sourceValue0 = new SourceValue(1);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, sourceValue0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(63);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(62);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(61);
      SourceValue sourceValue0 = new SourceValue(1);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, sourceValue0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(60);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      SourceValue sourceValue0 = new SourceValue(59);
      VarInsnNode varInsnNode0 = new VarInsnNode(59, 59);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(varInsnNode0, sourceValue0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(58);
      SourceValue sourceValue0 = new SourceValue(1);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, sourceValue0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(57);
      SourceValue sourceValue0 = new SourceValue(8);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, sourceValue0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(56);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(55);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(54);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(53);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(52, 124);
      Value value0 = basicInterpreter0.binaryOperation(varInsnNode0, basicValue0, basicValue0);
      assertFalse(value0.equals((Object)basicValue0));
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(51);
      BasicValue basicValue0 = (BasicValue)BasicValue.RETURNADDRESS_VALUE;
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      IntInsnNode intInsnNode0 = new IntInsnNode(50, 50);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue1 = (BasicValue)basicInterpreter0.binaryOperation(intInsnNode0, basicValue0, basicValue0);
      assertTrue(basicValue1.isReference());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(49);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertNotSame(basicValue0, value0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(48);
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(47);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(insnNode0, basicValue0, basicValue0);
      assertEquals(2, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      IntInsnNode intInsnNode0 = new IntInsnNode(46, 46);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.binaryOperation(intInsnNode0, basicValue0, basicValue0);
      assertNotSame(basicValue0, value0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(188, 188);
      try { 
        basicInterpreter0.unaryOperation(intInsnNode0, (Value) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid array type
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(188, 188);
      intInsnNode0.operand = 11;
      Value value0 = basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
      assertFalse(value0.equals((Object)basicValue0));
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(188, 10);
      Value value0 = basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
      assertNotSame(basicValue0, value0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(188, 188);
      intInsnNode0.operand = 9;
      Value value0 = basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(188, 188);
      intInsnNode0.operand = 7;
      BasicValue basicValue1 = (BasicValue)basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
      assertTrue(basicValue1.isReference());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(188, 6);
      Value value0 = basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(188, 188);
      intInsnNode0.operand = 5;
      Value value0 = basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
      assertFalse(value0.equals((Object)basicValue0));
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(188, 4);
      Value value0 = basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
      assertNotSame(basicValue0, value0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(199, 199);
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(198);
      Value value0 = basicInterpreter0.unaryOperation(insnNode0, (Value) null);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(197, 197);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(196, 196);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(195, 3);
      Value value0 = basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      IntInsnNode intInsnNode0 = new IntInsnNode(194, 194);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(193, 193);
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(192, 192);
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mockito.asm.tree.IntInsnNode cannot be cast to org.mockito.asm.tree.TypeInsnNode
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(191, 191);
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(190, 190);
      Value value0 = basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
      assertFalse(value0.equals((Object)basicValue0));
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(189, 81);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mockito.asm.tree.IntInsnNode cannot be cast to org.mockito.asm.tree.TypeInsnNode
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(187, 187);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(186, 188);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(intInsnNode0, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(185, 185);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(184, 184);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(183, 1521);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(182);
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(insnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(181, 181);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(180);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(insnNode0, basicValue0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mockito.asm.tree.InsnNode cannot be cast to org.mockito.asm.tree.FieldInsnNode
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(179, 179);
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(178, 178);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(177);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(insnNode0, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(176);
      Value value0 = basicInterpreter0.unaryOperation(insnNode0, (Value) null);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(175, 175);
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      IntInsnNode intInsnNode0 = new IntInsnNode(174, 285212673);
      SourceValue sourceValue0 = new SourceValue(1);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.unaryOperation(intInsnNode0, sourceValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(173);
      Value value0 = basicInterpreter0.unaryOperation(insnNode0, (Value) null);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(172, 172);
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(171, 2704);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      Value value0 = basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(170, 170);
      SourceValue sourceValue0 = new SourceValue(0, varInsnNode0);
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, sourceValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(169, 169);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(168, 168);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(167, 254);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      IntInsnNode intInsnNode0 = new IntInsnNode(166, 166);
      SourceValue sourceValue0 = new SourceValue(13);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(intInsnNode0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      VarInsnNode varInsnNode0 = new VarInsnNode(165, 165);
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(164, 164);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(163, 163);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(162, 162);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(161);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(insnNode0, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(160, 119);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(159, 159);
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(158, 158);
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      Value value0 = basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(157);
      BasicValue basicValue0 = (BasicValue)BasicValue.LONG_VALUE;
      Value value0 = basicInterpreter0.unaryOperation(insnNode0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      SourceValue sourceValue0 = new SourceValue(113);
      InsnNode insnNode0 = new InsnNode(156);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.unaryOperation(insnNode0, sourceValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      VarInsnNode varInsnNode0 = new VarInsnNode(155, 155);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.INT_VALUE;
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(154, 154);
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      VarInsnNode varInsnNode0 = new VarInsnNode(153, 153);
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(152, 152);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(151, 151);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(150, 150);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(149, 149);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(148, 148);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(147);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.unaryOperation(insnNode0, basicValue0);
      assertNotSame(basicValue0, value0);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      VarInsnNode varInsnNode0 = new VarInsnNode(146, 146);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue1 = (BasicValue)basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
      assertFalse(basicValue1.isReference());
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(145);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.unaryOperation(insnNode0, (Value) null);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(144, 144);
      BasicValue basicValue1 = (BasicValue)basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
      assertFalse(basicValue1.isReference());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      VarInsnNode varInsnNode0 = new VarInsnNode(143, 2341);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
      assertNotSame(basicValue0, value0);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(142, 142);
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      SourceValue sourceValue0 = new SourceValue(141);
      VarInsnNode varInsnNode0 = new VarInsnNode(141, 141);
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, sourceValue0);
      assertEquals(2, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(140, 140);
      BasicValue basicValue1 = (BasicValue)basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
      assertFalse(basicValue1.isReference());
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(139, 139);
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(varInsnNode0, value0, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(138, 138);
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
      assertEquals(2, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(137, 137);
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(136, 136);
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(135, 135);
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(134);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.unaryOperation(insnNode0, basicValue0);
      assertFalse(value0.equals((Object)basicValue0));
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      IntInsnNode intInsnNode0 = new IntInsnNode(133, 133);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
      assertFalse(value0.equals((Object)basicValue0));
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IincInsnNode iincInsnNode0 = new IincInsnNode(1112, 1112);
      BasicValue basicValue0 = (BasicValue)BasicValue.FLOAT_VALUE;
      Value value0 = basicInterpreter0.unaryOperation(iincInsnNode0, basicValue0);
      assertNotSame(basicValue0, value0);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      IntInsnNode intInsnNode0 = new IntInsnNode(131, 131);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(130, 130);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      InsnNode insnNode0 = new InsnNode(129);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(insnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(128);
      SourceValue sourceValue0 = new SourceValue(4);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(insnNode0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      VarInsnNode varInsnNode0 = new VarInsnNode(127, 127);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.INT_VALUE;
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(126);
      SourceValue sourceValue0 = new SourceValue(4);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(insnNode0, sourceValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(125, 125);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(124, 124);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(123, 123);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      IntInsnNode intInsnNode0 = new IntInsnNode(122, 122);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(intInsnNode0, basicValue0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(121, 121);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      VarInsnNode varInsnNode0 = new VarInsnNode(120, 120);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      IntInsnNode intInsnNode0 = new IntInsnNode(119, 119);
      SourceValue sourceValue0 = new SourceValue(14);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.unaryOperation(intInsnNode0, sourceValue0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(118, 118);
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.unaryOperation(varInsnNode0, (Value) null);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      VarInsnNode varInsnNode0 = new VarInsnNode(117, 117);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)BasicValue.INT_VALUE;
      Value value0 = basicInterpreter0.unaryOperation(varInsnNode0, basicValue0);
      assertFalse(value0.equals((Object)basicValue0));
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(116);
      SourceValue sourceValue0 = new SourceValue(4);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.unaryOperation(insnNode0, sourceValue0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      LdcInsnNode ldcInsnNode0 = new LdcInsnNode(basicInterpreter0);
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newOperation(ldcInsnNode0);
      assertTrue(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Double double0 = new Double(605.1392751698);
      LdcInsnNode ldcInsnNode0 = new LdcInsnNode(double0);
      Value value0 = basicInterpreter0.newOperation(ldcInsnNode0);
      assertEquals(2, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Long long0 = new Long(1L);
      LdcInsnNode ldcInsnNode0 = new LdcInsnNode(long0);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.newOperation(ldcInsnNode0);
      assertEquals(2, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Float float0 = Float.valueOf((float) 59);
      LdcInsnNode ldcInsnNode0 = new LdcInsnNode(float0);
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newOperation(ldcInsnNode0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      LdcInsnNode ldcInsnNode0 = new LdcInsnNode(3);
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newOperation(ldcInsnNode0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      LabelNode labelNode0 = new LabelNode();
      // Undeclared exception!
      try { 
        basicInterpreter0.newOperation(labelNode0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      TypeInsnNode typeInsnNode0 = new TypeInsnNode(187, "SO|~");
      Value value0 = basicInterpreter0.newOperation(typeInsnNode0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      VarInsnNode varInsnNode0 = new VarInsnNode(178, 178);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      // Undeclared exception!
      try { 
        basicInterpreter0.newOperation(varInsnNode0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mockito.asm.tree.VarInsnNode cannot be cast to org.mockito.asm.tree.FieldInsnNode
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(168);
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newOperation(insnNode0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(17);
      Value value0 = basicInterpreter0.newOperation(insnNode0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(16, (-3196));
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newOperation(intInsnNode0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(15, 15);
      Value value0 = basicInterpreter0.newOperation(varInsnNode0);
      // Undeclared exception!
      try { 
        basicInterpreter0.unaryOperation(varInsnNode0, value0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      TypeInsnNode typeInsnNode0 = new TypeInsnNode(14, "RZ");
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newOperation(typeInsnNode0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      VarInsnNode varInsnNode0 = new VarInsnNode(13, 10);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newOperation(varInsnNode0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(12);
      Value value0 = basicInterpreter0.newOperation(insnNode0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(11, 1676);
      Value value0 = basicInterpreter0.newOperation(varInsnNode0);
      // Undeclared exception!
      try { 
        basicInterpreter0.binaryOperation(varInsnNode0, value0, value0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Internal error.
         //
         verifyException("org.mockito.asm.tree.analysis.BasicInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      InsnNode insnNode0 = new InsnNode(10);
      Value value0 = basicInterpreter0.newOperation(insnNode0);
      assertEquals(2, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(9, 10);
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newOperation(varInsnNode0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(8);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newOperation(insnNode0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(7, 11);
      Value value0 = basicInterpreter0.newOperation(varInsnNode0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      TypeInsnNode typeInsnNode0 = new TypeInsnNode(6, "org.mockito.asm.tree.TableSwitchInsnNode");
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newOperation(typeInsnNode0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(5, 5);
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newOperation(varInsnNode0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(4, 4);
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newOperation(varInsnNode0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(3);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newOperation(insnNode0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(2);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.newOperation(insnNode0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      VarInsnNode varInsnNode0 = new VarInsnNode(1, 895);
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newOperation(varInsnNode0);
      assertTrue(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Class<String> class0 = String.class;
      Type type0 = Type.getType(class0);
      LdcInsnNode ldcInsnNode0 = new LdcInsnNode(type0);
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newOperation(ldcInsnNode0);
      assertTrue(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      IntInsnNode intInsnNode0 = new IntInsnNode(188, 188);
      intInsnNode0.operand = 8;
      Value value0 = basicInterpreter0.unaryOperation(intInsnNode0, (Value) null);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Type type0 = Type.LONG_TYPE;
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newValue(type0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Type type0 = Type.FLOAT_TYPE;
      Value value0 = basicInterpreter0.newValue(type0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Type type0 = Type.INT_TYPE;
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newValue(type0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Type type0 = Type.SHORT_TYPE;
      BasicValue basicValue0 = (BasicValue)basicInterpreter0.newValue(type0);
      assertFalse(basicValue0.isReference());
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Type type0 = Type.BYTE_TYPE;
      Value value0 = basicInterpreter0.newValue(type0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Type type0 = Type.BOOLEAN_TYPE;
      Value value0 = basicInterpreter0.newValue(type0);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Type type0 = Type.VOID_TYPE;
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.newValue(type0);
      assertNull(value0);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.newValue((Type) null);
      assertEquals(1, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Type type0 = Type.DOUBLE_TYPE;
      Value value0 = basicInterpreter0.newValue(type0);
      assertEquals(2, value0.getSize());
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      LdcInsnNode ldcInsnNode0 = new LdcInsnNode(basicInterpreter0);
      BasicValue basicValue0 = (BasicValue)BasicValue.UNINITIALIZED_VALUE;
      BasicValue basicValue1 = (BasicValue)basicInterpreter0.copyOperation(ldcInsnNode0, basicValue0);
      assertFalse(basicValue1.isReference());
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      InsnNode insnNode0 = new InsnNode(126);
      SourceValue sourceValue0 = new SourceValue(13);
      BasicInterpreter basicInterpreter0 = new BasicInterpreter();
      Value value0 = basicInterpreter0.ternaryOperation(insnNode0, sourceValue0, sourceValue0, sourceValue0);
      assertNull(value0);
  }
}
