/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 21 15:45:29 GMT 2019
 */

package org.mockito.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.asm.AnnotationVisitor;
import org.mockito.asm.Attribute;
import org.mockito.asm.ByteVector;
import org.mockito.asm.ClassWriter;
import org.mockito.asm.Label;
import org.mockito.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      int[] intArray0 = new int[3];
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 0, (-142));
      assertEquals((-142), int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[1] = 51;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 0, 51);
      assertEquals(102, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 60;
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {60, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int[] intArray0 = new int[9];
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertEquals(9, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(171);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3171, "org.mockito.asm.MethodWriter", "\"B) qi", "zV7", (String[]) null, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "4o 9#rXOU'N-");
      methodWriter0.visitVarInsn(2, (-1976));
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "rO:14 #";
      stringArray0[1] = "dfpl";
      stringArray0[2] = "5t)YK;7V";
      stringArray0[3] = "Sv7";
      stringArray0[4] = "5t)YK;7V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-605), ".fcVTW!/eXd~?", "5t)YK;7V", "dfpl", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitLineNumber(58, label0);
      methodWriter0.visitMultiANewArrayInsn("a vaGC5/v{+FtJ8T", 1);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4109, ".fcVTW!/eXd~?", "O:4<", ".fcVTW!/eXd~?", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.visitAnnotation("LineNumberTable", false);
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "rO:14 #";
      stringArray0[1] = "dfpl";
      stringArray0[2] = "5t)YK;7V";
      stringArray0[3] = "Sv7";
      stringArray0[4] = "5t)YK;7V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-605), ".fcVTW!/eXd~?", "5t)YK;7V", "dfpl", stringArray0, true, true);
      methodWriter0.visitAnnotation(".fcVTW!/eXd~?", true);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-350), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String) null, (String[]) null, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-22));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-473), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String[]) null, false, false);
      methodWriter0.classReaderOffset = 1;
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ".fcTW!/eXd~?", "()\"j?wIp^<$0;kt,:_*b", ".fcTW!/eXd~?", (String[]) null, true, true);
      Attribute attribute0 = new Attribute("()\"j?wIp^<$0;kt,:_*b");
      methodWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "rO:14 #";
      stringArray0[1] = "dfpl";
      stringArray0[2] = "5t)YK;7V";
      stringArray0[3] = "Sv7";
      stringArray0[4] = "5t)YK;7V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-605), ".fcVTW!/eXd~?", "5t)YK;7V", "dfpl", stringArray0, true, true);
      methodWriter0.visitAnnotation(".fcVTW!/eXd~?", true);
      int int0 = methodWriter0.getSize();
      assertEquals(58, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-22));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-484), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String[]) null, false, false);
      methodWriter0.visitAnnotationDefault();
      int int0 = methodWriter0.getSize();
      assertEquals(34, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(91);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ")hlA)>+hIlqA[SH0", ")hlA)>+hIlqA[SH0", (String) null, (String[]) null, true, true);
      int int0 = methodWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-10));
      classWriter0.version = (-432);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-457), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String[]) null, false, false);
      int int0 = methodWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-34));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", "<init>", stringArray0, false, false);
      classWriter0.visit((-34), 32, "&jm[o/`otm[XM-T", "&jm[o/`otm[XM-T", "mO'X*YH]VnRX>mx5z", stringArray0);
      methodWriter0.visitFrame(32, (-34), stringArray0, (-34), stringArray0);
      methodWriter0.visitLdcInsn("<init>");
      int int0 = methodWriter0.getSize();
      assertEquals(44, int0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      String[] stringArray0 = new String[8];
      stringArray0[0] = ".fc4TW!/eXd~?";
      String[] stringArray1 = new String[1];
      stringArray1[0] = ".fc4TW!/eXd~?";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-10), ".fc4TW!/eXd~?", ".fc4TW!/eXd~?", ".fc4TW!/eXd~?", stringArray1, false, false);
      methodWriter0.visitVarInsn((byte) (-10), 2);
      methodWriter0.visitFrame(4, 4, stringArray0, 2, stringArray0);
      int int0 = methodWriter0.getSize();
      assertEquals(69, int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ".fcVTW!/eXd~?", "()\"ji^<jJ0;km,:_*b", ".fcVTW!/eXd~?", (String[]) null, true, false);
      Label label0 = new Label();
      methodWriter0.visitLineNumber(66, label0);
      methodWriter0.visitVarInsn(58, 58);
      int int0 = methodWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ".cTW!eXd~?", "()\"ji^<jJ0;km,:_*b", ".cTW!eXd~?", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable(".cTW!eXd~?", "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", label0, label0, 1);
      methodWriter0.visitJumpInsn(2, label0);
      int int0 = methodWriter0.getSize();
      assertEquals(73, int0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3810));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ")hlA)>+hIlqA[SH0", ")hlA)>+hIlqA[SH0", "TERVn^dS6v[C", (String[]) null, true, true);
      methodWriter0.classReaderOffset = (-286);
      int int0 = methodWriter0.getSize();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "q";
      stringArray0[1] = "RuntimeInvisibleAnnotations";
      stringArray0[2] = ".fcVTW!/eXd~?";
      stringArray0[3] = "q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "q", "\"B)}qi", "Z]P[d*LQ", stringArray0, true, true);
      int int0 = methodWriter0.getSize();
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "q";
      stringArray0[1] = "RuntimeInvisibleAnnotations";
      stringArray0[2] = ".fcVTW!/eXd~?";
      stringArray0[3] = "q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "q", "\"B)}qi", "Z]P[d*LQ", stringArray0, true, true);
      methodWriter0.visitMaxs(161, 2);
      methodWriter0.visitMaxs(2, 2);
      methodWriter0.visitMaxs(0, 55);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-56));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1685, "/&5@~0d*", "9[Ji!oYX8n\"p MHp*", "9[Ji!oYX8n\"p MHp*", stringArray0, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(129);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "\"B)}qi";
      stringArray0[1] = "\"B)}qi";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-1150), "Z]P[d*LQ", "0%*Q>fR[Ds#YK", "0%*Q>fR[Ds#YK", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      // Undeclared exception!
      try { 
        MethodWriter.getArgumentsAndReturnSizes("5wz[[YHvjwE=B");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      // Undeclared exception!
      try { 
        MethodWriter.getArgumentsAndReturnSizes("1LXtE+IUJ*~~NbI;");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32767);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 191, "O:4 #", "O)b\"N", "Q*WXh?S]", (String[]) null, true, false);
      methodWriter0.visitMethodInsn(191, "Signature", "O:4 #", "b#&)JzSPf2`n");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4, "RuwximeInv3sbleAnnot3tions", "<}6?0G1)VIp", "2{a8>", stringArray0, true, false);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(171);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "zV7";
      stringArray0[1] = "\"B)}qi";
      stringArray0[2] = "\"B)}qi";
      stringArray0[3] = "zV7";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"B)}qi", "\"B)}qi", "\"B)}qi", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(166, label0);
      methodWriter0.visitJumpInsn(168, label0);
      methodWriter0.visitMaxs((-1089), 246);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3322));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"B) qi";
      stringArray0[1] = "\"B) qi";
      stringArray0[2] = "jUR!^kS`B*/xYoj";
      stringArray0[3] = "\"B) qi";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "jUR!^kS`B*/xYoj", "\"B) qi", "jUR!^kS`B*/xYoj", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, (Label) null, label0, "RuntimeVisibleParameterAnnotations");
      methodWriter0.visitMaxs((-3322), 2);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(171);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3171, "org.mockito.asm.MethodWriter", "\"B) qi", "zV7", (String[]) null, false, false);
      methodWriter0.visitMaxs(171, (-1448911973));
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-18));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ".fcTW!/eXd~?", "()\"ji^<j0;km,:_*b", ".fcTW!/eXd~?", (String[]) null, true, true);
      Label label0 = new Label();
      Label label1 = new Label();
      methodWriter0.visitTryCatchBlock(label1, label0, label0, "()\"ji^<j0;km,:_*b");
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(285212683, 65);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "q";
      stringArray0[1] = "RuntimeInvisibleAnnotations";
      stringArray0[2] = ".fcVTW!/eXd~?";
      stringArray0[3] = "q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "q", "\"B)}qi", "Z]P[d*LQ", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Z]P[d*LQ");
      methodWriter0.visitMaxs(2, 2);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"B)c}q";
      stringArray0[1] = "\"B)c}q";
      stringArray0[2] = "\"B)c}q";
      stringArray0[3] = "\"B)c}q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "\"B)c}q", "\"B)c}q", "\"B)c}q", stringArray0, false, true);
      methodWriter0.visitMaxs(8, 8);
      methodWriter0.visitMaxs(1, 2);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ".fcVTW!/eXd~?", "()\"ji^<jJ0;km,:_*b", ".fcVTW!/eXd~?", (String[]) null, true, false);
      Label label0 = new Label();
      methodWriter0.visitLineNumber(66, label0);
      methodWriter0.visitLineNumber(2, label0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "q";
      stringArray0[1] = "RuntimeInvisibleAnnotations";
      stringArray0[2] = ".fcVTW!/eXd~?";
      stringArray0[3] = "q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "q", "\"B)}qi", "Z]P[d*LQ", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable(".fcVTW!/eXd~?", "Deprecated", "Zj", label0, label0, 1);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ".fcTW!/eXd~?", "()\"j?wIp^<$0;kt,:_*b", ".fcTW!/eXd~?", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable(".fcTW!/eXd~?", "Label offset position has not been resolved et", "Label offset position has not been resolved et", label0, label0, 1);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(39);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "0.fcTW!/eXd~?", "()\"j?wIp^<$0;kt,:_*b", "0.fcTW!/eXd~?", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("0.fcTW!/eXd~?", "Label offset position has n0t been resolv d et", "Label offset position has n0t been resolv d et", label0, label0, 1);
      methodWriter0.visitLocalVariable("0.fcTW!/eXd~?", ".class", "()\"j?wIp^<$0;kt,:_*b", label0, label0, 1);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(30);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "0.fcTW!/eXd~?", "()\"j?wIp^<$0;kt,:_*b", "0.fcTW!/eXd~?", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("0.fcTW!/eXd~?", "Label offset position has n0t been resolv d et", "Label offset position has n0t been resolv d et", label0, label0, 1);
      methodWriter0.visitLdcInsn("Label offset position has n0t been resolv d et");
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-18));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ".fcTW!/eXd~?", "()\"ji^<j0;km,:_*b", ".fcTW!/eXd~?", (String[]) null, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("()\"ji^<j0;km,:_*b", (String) null, (String) null, (Label) null, (Label) null, 172);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "q";
      stringArray0[1] = "RuntimeInvisibleAnnotations";
      stringArray0[2] = ".fcVTW!/eXd~?";
      stringArray0[3] = "q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "q", "\"B)}qi", "Z]P[d*LQ", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Z]P[d*LQ");
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "q");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      Label label0 = new Label();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "q", "()\"ji^<jJ0;km,:_*b", "RuntimeVisibleParameterAnnotations", (String[]) null, false, false);
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, label0, (String) null);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(168);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "-[K|R!b", "Y!7Y\"HW-7", "-[K|R!b", (String[]) null, false, false);
      methodWriter0.visitMultiANewArrayInsn("-[K|R!b", 2);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-56));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", stringArray0, true, true);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[8];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      labelArray0[6] = label0;
      labelArray0[7] = label0;
      methodWriter0.visitTableSwitchInsn(185, (-3430), label0, labelArray0);
      assertEquals(8, labelArray0.length);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Y";
      stringArray0[1] = "RuntimeInvisibleAnnotations";
      stringArray0[2] = "ZPdLQ";
      stringArray0[3] = "Y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Y", "\"B)}qi", "ZPdLQ", stringArray0, true, false);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn((-726), 2, label0, labelArray0);
      assertEquals(1, labelArray0.length);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-22));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-484), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String[]) null, false, false);
      Label label0 = new Label();
      int[] intArray0 = new int[3];
      Label[] labelArray0 = new Label[4];
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "q";
      stringArray0[1] = "q";
      stringArray0[2] = "q";
      stringArray0[3] = "q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "q", "q", "q", stringArray0, false, false);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, (int[]) null, labelArray0);
      assertEquals(0, labelArray0.length);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-34));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", "<init>", stringArray0, true, true);
      methodWriter0.visitIincInsn(84, 1);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Y";
      stringArray0[1] = "ZPfLQ";
      stringArray0[2] = "ZPfLQ";
      stringArray0[3] = "Y";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Y", "\"B)}qi", "ZPfLQ", stringArray0, true, false);
      methodWriter0.visitIincInsn((-631), (-631));
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "tI:", "()\"ji^<jJ0;km,:_*b", "tI:", (String[]) null, true, false);
      methodWriter0.visitIincInsn(1, 2858);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-56));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", "<init>", stringArray0, true, true);
      methodWriter0.visitIincInsn(2719, 2);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(54);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "I;3^", "I;3^", "I;3^", stringArray0, false, false);
      methodWriter0.visitIincInsn(2, (-259));
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(179);
      classWriter0.index = 179;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4089, "Ljava/lang/Synthetic;", "O:[,4 #", "Ljava/lang/Synthetic;", (String[]) null, false, false);
      classWriter0.index = 1822;
      methodWriter0.visitLdcInsn("lN[H!)=w_");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(128);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "G", "*)\"ji^<jJ0;km,:_*b", "G", (String[]) null, true, false);
      methodWriter0.visitLdcInsn("*)\"ji^<jJ0;km,:_*b");
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-35));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ",)s[r{QM!AN-N[X<L";
      stringArray0[1] = ")}!qY9:G";
      stringArray0[2] = "<init>";
      stringArray0[3] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, ")}!qY9:G", "\"B)c}q", "<init>", stringArray0, false, true);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(1, (byte)2, label0, labelArray0);
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ".fcTW!/eXd~?", "()\"j?wIp^<$0;kt,:_*b", ".fcTW!/eXd~?", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(86);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".$fcVTW!/e(d~E";
      stringArray0[1] = "\"B)}qi";
      stringArray0[2] = ".$fcVTW!/e(d~E";
      stringArray0[3] = "\"B)}qi";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"B)}qi", "\"B)}qi", "\"B)}qi", stringArray0, true, false);
      Label label0 = new Label();
      label0.status = 95;
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "hq+", "hq+", "LocalVariableTable", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(0, label0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(86);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".$fcVTW!/e(d~E";
      stringArray0[1] = "\"B)}qi";
      stringArray0[2] = ".$fcVTW!/e(d~E";
      stringArray0[3] = "\"B)}qi";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"B)}qi", "\"B)}qi", "\"B)}qi", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      methodWriter0.visitJumpInsn(86, label0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(129);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"B)}qi";
      stringArray0[1] = "\"B)}qi";
      stringArray0[2] = "\"B)}qi";
      stringArray0[3] = "\"B)}qi";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"B)}qi", "\"B)}qi", "\"B)}qi", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(168, label0);
      methodWriter0.visitMaxs(2, 168);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".$fcVTW!/e(d~E";
      stringArray0[1] = "\"B)}qi";
      stringArray0[2] = "\"B)}qi";
      stringArray0[3] = "\"B)}qi";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"B)}qi", "\"B)}qi", "\"B)}qi", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(10, label0);
      methodWriter0.visitMethodInsn(26, ".$fcVTW!/e(d~E", ".$fcVTW!/e(d~E", "\"B)}qi");
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".fcVTW!/eXd~?";
      stringArray0[1] = "\"B)}qi";
      stringArray0[2] = ".fcVTW!/eXd~?";
      stringArray0[3] = "\"B)}qi";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"B)}qi", "\"B)}qi", "Z]P[d*LQ", stringArray0, true, false);
      methodWriter0.visitMethodInsn(184, "4)\"zp|sDot)#", ".fcVTW!/eXd~?", "\"B)}qi");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(193);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 193, "O%Ou!\u00038UgQ", "O%Ou!\u00038UgQ", "O%Ou!\u00038UgQ", (String[]) null, false, false);
      methodWriter0.visitMethodInsn(1, "O%Ou!\u00038UgQ", "O%Ou!\u00038UgQ", "O%Ou!\u00038UgQ");
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-56));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", stringArray0, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(185, "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", "StackMapTable");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32767);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 191, "O:4 #", "O)b\"N", "Q*WXh?S]", (String[]) null, true, false);
      methodWriter0.visitMultiANewArrayInsn("<init>", (-1848736275));
      methodWriter0.visitFieldInsn(1172, "ynl;>B-&xMc[", "j{", "j{");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "O)b\"";
      stringArray0[1] = ".fcTW!/eXd~?";
      stringArray0[2] = "*WXh?S]";
      stringArray0[3] = "O)b\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 63, "LocalVariableTable", "O)b\"", ".fcTW!/eXd~?", stringArray0, true, false);
      methodWriter0.visitFieldInsn(2, ".fcTW!/eXd~?", "*WXh?S]", "Deprecated");
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ")hlA)>+hIlqA[SH0", ")hlA)>+hIlqA[SH0", ")hlA)>+hIlqA[SH0", (String[]) null, true, true);
      methodWriter0.visitFieldInsn(1, ")hlA)>+hIlqA[SH0", ")hlA)>+hIlqA[SH0", "</uy4/");
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "hq+", "hq+", "hq+", (String[]) null, false, false);
      methodWriter0.visitFieldInsn(2, "hq+", "hq+", "AnnotationDefault");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "tI:", "()\"ji^<jJ0;km,:_*b", "tI:", (String[]) null, true, false);
      methodWriter0.visitTypeInsn(1, "()\"ji^<jJ0;km,:_*b");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ")hlA)>+hIlqA[SH0", ")hlA)>+hIlqA[SH0", ")hlA)>+hIlqA[SH0", (String[]) null, true, true);
      methodWriter0.visitTypeInsn((-423), ")hlA)>+hIlqA[SH0");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 169, "hq+", "hq+", "hq+", (String[]) null, false, false);
      methodWriter0.visitTypeInsn(196, "hq+");
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "hq+", "hq+", "hq+", (String[]) null, false, false);
      methodWriter0.visitVarInsn(2, 459);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ")hlA)>+hIlqA[SH0", ")hlA)>+hIlqA[SH0", ")hlA)>+hIlqA[SH0", (String[]) null, true, true);
      methodWriter0.visitVarInsn(177, 1);
      int int0 = methodWriter0.getSize();
      assertEquals(35, int0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 169, "hq+", "hq+", "hq+", (String[]) null, false, false);
      methodWriter0.visitVarInsn(169, 1);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-18));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ".fcTW!/eXd~?", "()\"ji^<j0;km,:_*b", ".fcTW!/eXd~?", (String[]) null, true, true);
      methodWriter0.visitVarInsn(57, 109);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".fcVTW!/eXd~?";
      stringArray0[1] = "\"B)}qi";
      stringArray0[2] = "\"B)}qi";
      stringArray0[3] = "\"B)}qi";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ".fcVTW!/eXd~?", "\"B)}qi", "GYj9lb0uYJ<", stringArray0, true, true);
      methodWriter0.visitVarInsn(55, 55);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "q";
      stringArray0[1] = "Z]P[d*LQ";
      stringArray0[2] = "org.mockito.asm.MethodWriter";
      stringArray0[3] = "q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "q", "\"B)}qi", "Z]P[d*LQ", stringArray0, true, false);
      methodWriter0.visitVarInsn(24, 0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".$fcVTW!/e(d~E";
      stringArray0[1] = "\"B)}qi";
      stringArray0[2] = "\"B)}qi";
      stringArray0[3] = "\"B)}qi";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"B)}qi", "\"B)}qi", "\"B)}qi", stringArray0, true, false);
      methodWriter0.visitFieldInsn(91, ".$fcVTW!/e(d~E", ".$fcVTW!/e(d~E", "\"B)}qi");
      methodWriter0.visitVarInsn(22, 22);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ".fcVTW!/eXd~?", "()\"ji^<jJ0;km,:_*b", ".fcVTW!/eXd~?", (String[]) null, true, false);
      methodWriter0.visitVarInsn(169, 66);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(199);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "t+", "t+", "t+", (String[]) null, false, false);
      methodWriter0.visitVarInsn(1, 2);
      methodWriter0.visitFrame(199, 199, (Object[]) null, 199, (Object[]) null);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-10));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 115, "org.mockito.asm.ByteVector", "k", "RuntimeInvisibleAnnotations", (String[]) null, false, false);
      methodWriter0.visitIntInsn(17, 2);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-242));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-242), "O)b\"N", "O)b\"N", "hq+", (String[]) null, true, false);
      methodWriter0.visitInsn(83);
      methodWriter0.visitIntInsn(191, (-1517));
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(38);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "AnnotationDefault";
      stringArray0[1] = "l29Xcec%;)DgOC+WNX";
      stringArray0[2] = "l29Xcec%;)DgOC+WNX";
      stringArray0[3] = "Gg\"kJ7=VfM=:";
      stringArray0[4] = "AnnotationDefault";
      stringArray0[5] = "l29Xcec%;)DgOC+WNX";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24, "Gg\"kJ7=VfM=:", "l29Xcec%;)DgOC+WNX", "AnnotationDefault", stringArray0, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitIntInsn(64, 38);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-242));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-242), "O)b\"N", "O)b\"N", "hq+", (String[]) null, true, false);
      methodWriter0.visitIntInsn(191, (-1517));
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ")hlA)>+hIlqA[SH0", ")hlA)>+hIlqA[SH0", ")hlA)>+hIlqA[SH0", (String[]) null, true, true);
      methodWriter0.visitInsn(177);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"B) qi";
      stringArray0[1] = "\"B) qi";
      stringArray0[2] = "org.mockito.asm.MethodWriter";
      stringArray0[3] = "org.mockito.asm.MethodWriter";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.mockito.asm.MethodWriter", "\"B) qi", "org.mockito.asm.MethodWriter", stringArray0, true, false);
      methodWriter0.visitInsn(191);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "tI:", "()\"ji^<jJ0;km,:_*b", "tI:", (String[]) null, true, false);
      methodWriter0.visitInsn(1);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "V:", "()\"ji^<jJ0;km,:_*b", "V:", (String[]) null, true, false);
      methodWriter0.visitInsn(55);
      methodWriter0.visitLdcInsn("()\"ji^<jJ0;km,:_*b");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "4I;63^", "4I;63^", "4I;63^", stringArray0, false, false);
      methodWriter0.visitInsn(1);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "q";
      stringArray0[1] = "q";
      stringArray0[2] = "q";
      stringArray0[3] = "q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "q", "q", "q", stringArray0, false, false);
      methodWriter0.visitFrame(1, 1, stringArray0, 1, stringArray0);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "u";
      stringArray0[1] = "u";
      stringArray0[2] = "u";
      stringArray0[3] = "u";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "u", "u", "u", stringArray0, false, false);
      methodWriter0.visitFrame(0, 1, stringArray0, 1, stringArray0);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      String[] stringArray0 = new String[8];
      String[] stringArray1 = new String[1];
      stringArray1[0] = ".fc4TW!/eXd~?";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-10), ".fc4TW!/eXd~?", ".fc4TW!/eXd~?", ".fc4TW!/eXd~?", stringArray1, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, 4, stringArray0, 2, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-10));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-457), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String[]) null, false, false);
      methodWriter0.visitFrame(3, 197, (Object[]) null, 3, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".fcVTW!/eXd~?";
      stringArray0[1] = "\"B)}qi";
      stringArray0[2] = ".fcVTW!/eXd~?";
      stringArray0[3] = "\"B)}qi";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"B)}qi", "\"B)}qi", "Z]P[d*LQ", stringArray0, true, false);
      methodWriter0.visitFrame(2, (-32768), stringArray0, 63, stringArray0);
      methodWriter0.visitFrame(246, 0, stringArray0, 2755, stringArray0);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(777);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "u", "u", "u", stringArray0, false, false);
      Object[] objectArray0 = new Object[10];
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), (-1), stringArray0, 28, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "q";
      stringArray0[1] = "q";
      stringArray0[2] = "q";
      stringArray0[3] = "q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "q", "q", "q", stringArray0, false, false);
      Object[] objectArray0 = new Object[4];
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 1, objectArray0, 1, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "q";
      stringArray0[1] = "q";
      stringArray0[2] = "q";
      stringArray0[3] = "q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "q", "q", "q", stringArray0, false, false);
      methodWriter0.visitFrame((-1), 1, stringArray0, 2, stringArray0);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-56));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", stringArray0, true, true);
      methodWriter0.visitFrame(2, 2, stringArray0, 1, stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ".fcTW!/eXd~?", "()\"j?wIp^<$0;kt,:_*b", ".fcTW!/eXd~?", (String[]) null, true, true);
      Attribute attribute0 = new Attribute("()\"j?wIp^<$0;kt,:_*b");
      methodWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(168);
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-56));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", stringArray0, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "OsOIN_)Cb?Vq[", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(170);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2289, "org.mockito.asm.Frame", "-@ju6|Iyz)U1", "\"B)c}q", (String[]) null, false, false);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitParameterAnnotation(68, "Ljava/lang/Synthetic;", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "q";
      stringArray0[1] = "q";
      stringArray0[2] = "q";
      stringArray0[3] = "q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "q", "q", "q", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1), "q", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.mockito.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-10));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-457), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String[]) null, false, false);
      methodWriter0.visitAnnotation("[]", false);
      int int0 = methodWriter0.getSize();
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-34));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-34), "<init>", "<init>", "O)a$)`@GZ`GP.?k2u", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"B)c}q";
      stringArray0[1] = "\"B)c}q";
      stringArray0[2] = "\"B)c}q";
      stringArray0[3] = "\"B)c}q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "\"B)c}q", "\"B)c}q", "\"B)c}q", stringArray0, false, true);
      methodWriter0.visitVarInsn(51, 51);
      methodWriter0.visitMaxs(8, 8);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-34));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", "<init>", stringArray0, true, true);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", "OsOIN_)Cb?Vq[", stringArray0, true, true);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      int int0 = MethodWriter.readUnsignedShort(byteArray0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (byte) (-48));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -48
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"B)c}q";
      stringArray0[1] = "\"B)c}q";
      stringArray0[2] = "\"B)c}q";
      stringArray0[3] = "\"B)c}q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "\"B)c}q", "\"B)c}q", "\"B)c}q", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(8, label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 188, "dfpl", "26S", "RuntimeInvisibleAnnotations", (String[]) null, false, false);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-62));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-62), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String[]) null, false, false);
      methodWriter0.visitAnnotationDefault();
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, (byte)32, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, 622);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 622
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      stringArray0[1] = "RuntimeVisibleAnnotations";
      stringArray0[2] = "a*nlg}OOU|]n=4+l&H";
      stringArray0[3] = "k";
      stringArray0[4] = "RuntimeVisibleAnnotations";
      stringArray0[5] = "void";
      stringArray0[6] = "a*nlg}OOU|]n=4+l&H";
      stringArray0[7] = "RuntimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", stringArray0, false, false);
      methodWriter0.visitCode();
  }
}
