/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 25 00:58:42 GMT 2019
 */

package org.apache.commons.lang3.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import org.apache.commons.lang3.builder.StandardToStringStyle;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ToStringStyle_ESTest extends ToStringStyle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      
      standardToStringStyle0.setSummaryObjectEndText((String) null);
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSummaryObjectEndText("org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle");
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      standardToStringStyle0.setSummaryObjectStartText((String) null);
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSummaryObjectStartText("NJ[d&8Jo6PS");
      assertEquals("NJ[d&8Jo6PS", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      
      standardToStringStyle0.setSizeEndText((String) null);
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSizeEndText("My30rL*6b&Da'<a~y");
      assertEquals("My30rL*6b&Da'<a~y", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      
      standardToStringStyle0.setSizeStartText((String) null);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSizeStartText("xG5~a9f@_");
      assertEquals("xG5~a9f@_", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.setNullText((String) null);
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      toStringStyle0.setNullText("");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      
      standardToStringStyle0.setFieldSeparator((String) null);
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      toStringStyle0.setFieldSeparator("e<{)RvtE");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SIMPLE_STYLE.setFieldNameValueSeparator((String) null);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setFieldNameValueSeparator("My30rL*6b&Da'<a~y");
      assertEquals("My30rL*6b&Da'<a~y", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      
      standardToStringStyle0.setContentEnd((String) null);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setContentEnd("aQV[FcyG QBMU%?9");
      assertEquals("aQV[FcyG QBMU%?9", standardToStringStyle0.getContentEnd());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      standardToStringStyle0.setContentStart((String) null);
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setContentStart("Cannot clone Cloneable type ");
      assertEquals("Cannot clone Cloneable type ", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      standardToStringStyle0.setArraySeparator((String) null);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setArraySeparator("org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle");
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      
      standardToStringStyle0.setArrayEnd((String) null);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setArrayEnd("<");
      assertEquals("<", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      standardToStringStyle0.setArrayStart((String) null);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setArrayStart("Mac OS X");
      assertEquals("Mac OS X", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.append(stringBuffer0, (String) null, (Object) stringBuffer0, boolean0);
      assertEquals(",", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SIMPLE_STYLE.appendIdentityHashCode((StringBuffer) null, (Object) null);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      toStringStyle0.appendClassName(stringBuffer0, stringBuffer0);
      assertEquals("StringBuffer", stringBuffer0.toString());
      assertEquals(12, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      toStringStyle0.appendClassName((StringBuffer) null, (Object) null);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean[] booleanArray0 = new boolean[2];
      standardToStringStyle0.MULTI_LINE_STYLE.appendDetail(stringBuffer0, "3DU`Y4:(dJNX. }", booleanArray0);
      assertEquals("{false,false}", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "Y;I_zoSvI.<Ker", (boolean[]) null, (Boolean) null);
      assertEquals(7, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseClassName());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      float[] floatArray0 = new float[2];
      standardToStringStyle0.MULTI_LINE_STYLE.appendDetail(stringBuffer0, "]qF+ZQgA`~7p<0?", floatArray0);
      assertEquals("{0.0,0.0}", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      float[] floatArray0 = new float[0];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "@,", floatArray0, boolean0);
      assertEquals(6, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("6(>q'^us1^Rp\"c");
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "6(>q'^us1^Rp\"c", (float[]) null, boolean0);
      assertEquals("6(>q'^us1^Rp\"c<null>,", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(57);
      double[] doubleArray0 = new double[2];
      standardToStringStyle0.MULTI_LINE_STYLE.appendDetail(stringBuffer0, "<null>", doubleArray0);
      assertEquals("{0.0,0.0}", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      double[] doubleArray0 = new double[0];
      Boolean boolean0 = Boolean.valueOf(false);
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "O 5/dZ", doubleArray0, boolean0);
      assertEquals("O 5/dZ=<size=0>\n  ", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle");
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "tT+gX*,.FGz0", (double[]) null, (Boolean) null);
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle<null>,", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      double[] doubleArray0 = new double[0];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "\nAqrhsH^A", doubleArray0, boolean0);
      assertEquals("\nAqrhsH^A={},", stringBuffer0.toString());
      assertEquals(13, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[0];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle", charArray0, boolean0);
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle={},", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "]", (char[]) null, (Boolean) null);
      assertEquals("]=<null>,", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("Kp%v{wp4|n");
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      byte[] byteArray0 = new byte[2];
      toStringStyle0.SHORT_PREFIX_STYLE.appendDetail(stringBuffer0, "(X", byteArray0);
      assertEquals("Kp%v{wp4|n{0,0}", stringBuffer0.toString());
      assertEquals(15, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      byte[] byteArray0 = new byte[0];
      Boolean boolean0 = Boolean.valueOf(true);
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "java.awt.printerjob", byteArray0, boolean0);
      assertEquals("java.awt.printerjob={}\n  ", stringBuffer0.toString());
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("p0]U<;X");
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      Boolean boolean0 = Boolean.FALSE;
      toStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "p0]U<;X", (byte[]) null, boolean0);
      assertEquals(14, stringBuffer0.length());
      assertEquals("p0]U<;X<null>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(91);
      short[] shortArray0 = new short[1];
      Boolean boolean0 = Boolean.valueOf("");
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "", shortArray0, boolean0);
      assertEquals("=<size=1>,", stringBuffer0.toString());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "[");
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "[", (short[]) null, boolean0);
      assertEquals(12, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      short[] shortArray0 = new short[0];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle", shortArray0, boolean0);
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle={},", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      int[] intArray0 = new int[2];
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendDetail(stringBuffer0, "", intArray0);
      assertEquals(5, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("~Z2M+--Eza}5s&d1^i%");
      Boolean boolean0 = Boolean.valueOf("~Z2M+--Eza}5s&d1^i%");
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, ">", (int[]) null, boolean0);
      assertEquals(26, stringBuffer0.length());
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      long[] longArray0 = new long[2];
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendDetail(stringBuffer0, "9me+NZE", longArray0);
      assertEquals("{0,0}", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      long[] longArray0 = new long[1];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle", longArray0, boolean0);
      assertEquals(4, stringBuffer0.length());
      assertEquals("{0},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      Boolean boolean0 = Boolean.TRUE;
      toStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "6%C<{prG%f8`f[", (long[]) null, boolean0);
      assertEquals(7, stringBuffer0.length());
      assertEquals("<null>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("a:3W|V?b");
      Object[] objectArray0 = new Object[1];
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "a:3W|V?b", objectArray0, (Boolean) null);
      assertEquals(26, stringBuffer0.length());
      assertEquals("a:3W|V?ba:3W|V?b={<null>},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = new Boolean("]");
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "]", (Object[]) null, boolean0);
      assertEquals(9, stringBuffer0.length());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      standardToStringStyle0.appendInternal(stringBuffer0, (String) null, hashMap0, false);
      assertEquals("<size=0>", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Double double0 = new Double(3260.23);
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.append(stringBuffer0, "/,.ku#", (Object) double0, boolean0);
      assertEquals("/,.ku#=<Double>,", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.append(stringBuffer0, "pu?08mrp3!Zf`a", (Object) null, (Boolean) null);
      assertEquals("pu?08mrp3!Zf`a=<null>,", stringBuffer0.toString());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(21);
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.MULTI_LINE_STYLE.appendStart(stringBuffer0, stringBuffer0);
      assertEquals(28, stringBuffer0.length());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.appendStart((StringBuffer) null, (Object) null);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.appendToString(stringBuffer0, "java.class.version");
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("");
      toStringStyle0.appendToString(stringBuffer0, "");
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      toStringStyle0.appendToString((StringBuffer) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendInternal(stringBuffer0, (String) null, (Object) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(21);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) stringBuffer0;
      toStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail(stringBuffer0, "2r", objectArray0);
      assertEquals(17, stringBuffer0.length());
      assertEquals("{{,<null>,<null>}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSizeStartText();
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", string0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("Kp%v{wp4|n");
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      byte[] byteArray0 = new byte[0];
      Boolean boolean0 = Boolean.FALSE;
      toStringStyle0.append(stringBuffer0, "`kN)CMyE", byteArray0, boolean0);
      assertEquals(19, stringBuffer0.length());
      assertEquals("Kp%v{wp4|n<size=0>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("]");
      standardToStringStyle0.MULTI_LINE_STYLE.appendEnd(stringBuffer0, stringBuffer0);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("U/Xe}}zG");
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "U/Xe}}zG", 'X');
      assertEquals("U/Xe}}zGU/Xe}}zG=X\n  ", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      float[] floatArray0 = new float[0];
      Boolean boolean0 = Boolean.valueOf((String) null);
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, ";6`P;<<10>3", floatArray0, boolean0);
      assertEquals(21, stringBuffer0.length());
      assertEquals(";6`P;<<10>3=<size=0>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      long[] longArray0 = new long[0];
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "<", longArray0, boolean0);
      assertEquals("<size=0>,", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isUseClassName());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setUseFieldNames(true);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ">");
      toStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, ">", (short)7);
      assertEquals(5, stringBuffer0.length());
      assertEquals(">>=7,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      
      standardToStringStyle0.setDefaultFullDetail(false);
      assertFalse(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("<null>");
      boolean[] booleanArray0 = new boolean[0];
      Boolean boolean0 = new Boolean("<null>");
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "B", booleanArray0, boolean0);
      assertEquals(15, stringBuffer0.length());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "E>pKQCHUK-XH/k\"9", (-2580));
      assertEquals(23, stringBuffer0.length());
      assertEquals("E>pKQCHUK-XH/k\"9=-2580,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      
      standardToStringStyle0.setArrayContentDetail(false);
      assertFalse(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getArrayEnd();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", string0);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getContentStart();
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", string0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isDefaultFullDetail();
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(boolean0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(21);
      toStringStyle0.SIMPLE_STYLE.appendSuper(stringBuffer0, "2r");
      assertEquals("2r,", stringBuffer0.toString());
      assertEquals(3, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "}", false);
      assertEquals(6, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(6);
      boolean[] booleanArray0 = new boolean[1];
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "2sze5!\">x~w2s\"", booleanArray0, (Boolean) true);
      assertEquals(8, stringBuffer0.length());
      assertEquals("{false},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.getContentEnd();
      StringBuffer stringBuffer0 = new StringBuffer();
      Character character0 = Character.valueOf('`');
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.append(stringBuffer0, "]", (Object) character0, boolean0);
      assertEquals(14, stringBuffer0.length());
      assertEquals("]=<Character>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setFieldSeparatorAtStart(false);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isUseShortClassName();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      
      standardToStringStyle0.setUseIdentityHashCode(false);
      assertFalse(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      Object[] objectArray0 = new Object[0];
      Boolean boolean0 = Boolean.FALSE;
      toStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle", objectArray0, boolean0);
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle=<size=0>,", stringBuffer0.toString());
      assertEquals(81, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      
      standardToStringStyle0.setFieldSeparatorAtEnd(true);
      assertTrue(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isUseClassName();
      assertTrue(boolean0);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtStart();
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertFalse(boolean0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("6VVH{");
      char[] charArray0 = new char[0];
      Boolean boolean0 = Boolean.valueOf("6VVH{");
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "6VVH{", charArray0, boolean0);
      assertEquals(22, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "tj0eVa@Ce{7eZK@", (byte)4);
      assertEquals(2, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseClassName());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getArraySeparator();
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", string0);
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(21);
      LinkedList<Double> linkedList0 = new LinkedList<Double>();
      toStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail(stringBuffer0, "mD>t;FS@m=?$p\"", linkedList0);
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertEquals("[]", stringBuffer0.toString());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getNullText();
      assertEquals("<null>", string0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getArrayStart();
      assertEquals("{", string0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      int[] intArray0 = new int[0];
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "Zx,OL0l6c!2Do@/+N", intArray0, boolean0);
      assertEquals("Zx,OL0l6c!2Do@/+N=<size=0>,", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSummaryObjectEndText();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", string0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getFieldNameValueSeparator();
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", string0);
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getFieldSeparator();
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", string0);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Character character0 = Character.valueOf('`');
      standardToStringStyle0.appendStart(stringBuffer0, character0);
      assertEquals(22, stringBuffer0.length());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSizeEndText();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", string0);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("p0]U<;X");
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      toStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "p0]U<;X", 9.78857646456369);
      assertEquals("p0]U<;Xp0]U<;X=9.78857646456369,", stringBuffer0.toString());
      assertEquals(32, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "]", 0.0F);
      assertEquals("]=0.0\n  ", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "M{J {", (-1774L));
      assertEquals(12, stringBuffer0.length());
      assertEquals("M{J {=-1774,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      int[] intArray0 = new int[1];
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "|-U34", intArray0, (Boolean) null);
      assertEquals("|-U34={0},", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtEnd();
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(boolean0);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[20];
      standardToStringStyle0.SIMPLE_STYLE.appendDetail(stringBuffer0, "2", charArray0);
      assertEquals("{\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000}", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setUseClassName(true);
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isUseFieldNames();
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(boolean0);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      String string0 = toStringStyle0.getSummaryObjectStartText();
      assertEquals("<", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertFalse(standardToStringStyle0.isUseShortClassName());
      
      standardToStringStyle0.setUseShortClassName(true);
      assertTrue(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isArrayContentDetail();
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(boolean0);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Character character0 = Character.valueOf('`');
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.append(stringBuffer0, "]", (Object) character0, boolean0);
      standardToStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertEquals("]=<Character>", stringBuffer0.toString());
      assertEquals(13, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      short[] shortArray0 = new short[10];
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendDetail(stringBuffer0, (String) null, shortArray0);
      assertEquals(21, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      standardToStringStyle0.appendInternal(stringBuffer0, "", hashMap0, true);
      assertEquals(2, stringBuffer0.length());
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }
}
