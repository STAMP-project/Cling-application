/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 18 07:13:19 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.BoundFunction;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.Delegator;
import com.google.javascript.rhino.head.FunctionObject;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.JavaAdapter;
import com.google.javascript.rhino.head.JavaMembers;
import com.google.javascript.rhino.head.LazilyLoadedCtor;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeBoolean;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeError;
import com.google.javascript.rhino.head.NativeGenerator;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJavaArray;
import com.google.javascript.rhino.head.NativeJavaClass;
import com.google.javascript.rhino.head.NativeJavaMethod;
import com.google.javascript.rhino.head.NativeJavaPackage;
import com.google.javascript.rhino.head.NativeJavaTopPackage;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.NativeScript;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.NativeWith;
import com.google.javascript.rhino.head.Script;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.Synchronizer;
import com.google.javascript.rhino.head.TopLevel;
import java.util.Collection;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ScriptableObject_ESTest extends ScriptableObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      BaseFunction baseFunction0 = new BaseFunction(importerTopLevel0, importerTopLevel0);
      baseFunction0.getOwnPropertyDescriptor(context0, importerTopLevel0);
      importerTopLevel0.setPrototype((Scriptable) null);
      Long long0 = new Long(2);
      ScriptableObject.defineProperty((Scriptable) importerTopLevel0, "language version", (Object) long0, 7);
      // Undeclared exception!
      try { 
        ScriptableObject.redefineProperty(importerTopLevel0, "language version", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: redeclaration of const language version.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.size();
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) nativeIterator_StopIteration0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.enter();
      nativeIterator_StopIteration0.values();
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version");
      nativeJavaPackage0.defineOwnProperty(context0, context0, nativeIterator_StopIteration0);
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeJavaPackage0, "DM*C cbx53:\"j!+", "finishInit", false);
      Context.getCurrentContext();
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      nativeNumber0.isDataDescriptor(nativeJavaPackage0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeBoolean0, nativeBoolean0, 4, 1);
      nativeBoolean0.isConst("D!C#n9*vR");
      idFunctionObject0.getGetterOrSetter((String) null, (-1286), true);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      ScriptableObject.isFalse("require() can not be invoked as a constructor");
      nativeNumber0.setAttributes("require() can not be invoked as a constructor", 8);
      ScriptableObject.deleteProperty((Scriptable) nativeNumber0, "require() can not be invoked as a constructor");
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      double double0 = (-1.0);
      Context context0 = new Context();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      Synchronizer synchronizer0 = new Synchronizer(scriptableObject0);
      Class<NativeJavaMethod> class0 = NativeJavaMethod.class;
      ScriptableObject.getTypedProperty((Scriptable) synchronizer0, (-768), class0);
      Class<BaseFunction> class1 = BaseFunction.class;
      // Undeclared exception!
      try { 
        ScriptableObject.defineClass((Scriptable) synchronizer0, class1, true);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.getPropertyIds(nativeIterator_StopIteration0);
      nativeIterator_StopIteration0.values();
      nativeIterator_StopIteration0.isGenericDescriptor(nativeIterator_StopIteration0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test007()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeArray nativeArray0 = new NativeArray(8);
      importerTopLevel0.put(4, (Scriptable) nativeArray0, (Object) nativeArray0);
      Context context0 = Context.getContext();
      Delegator delegator0 = new Delegator();
      BoundFunction boundFunction0 = new BoundFunction(context0, importerTopLevel0, delegator0, importerTopLevel0, context0.emptyArgs);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      ScriptableObject scriptableObject0 = ScriptableObject.ensureScriptableObject(nativeNumber0);
      assertTrue(scriptableObject0.isExtensible());
      
      NativeArray nativeArray0 = new NativeArray(1);
      Context context0 = new Context();
      Double.valueOf((-1.3008237981667576));
      // Undeclared exception!
      try { 
        nativeArray0.getOwnPropertyDescriptor(context0, scriptableObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.enter();
      ScriptableObject.hasProperty((Scriptable) nativeIterator_StopIteration0, 170);
      nativeIterator_StopIteration0.values();
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version");
      nativeJavaPackage0.defineOwnProperty(context0, context0, nativeIterator_StopIteration0);
      nativeJavaPackage0.forcePackage("language version", nativeIterator_StopIteration0);
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.defineOwnProperties(context0, nativeJavaPackage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: com.google.javascript.rhino.head.NativeJavaPackage@0000000009 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(1580.257261182);
      BaseFunction baseFunction0 = new BaseFunction();
      nativeNumber0.sameValue(baseFunction0, baseFunction0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      nativeError0.getAllIds();
      int int0 = ScriptableObject.CONST;
      ScriptableObject.putConstProperty(nativeError0, (String) null, (Object) null);
      // Undeclared exception!
      try { 
        nativeError0.initPrototypeId(13);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 13
         //
         verifyException("com.google.javascript.rhino.head.NativeError", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-17.17722585458839));
      nativeNumber0.preventExtensions();
      NativeCall nativeCall0 = new NativeCall();
      ScriptableObject.deleteProperty((Scriptable) nativeNumber0, 13);
      ScriptableObject.putProperty((Scriptable) nativeNumber0, 2, (Object) nativeNumber0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test013()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.isEmpty();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      Context.getContext();
      Delegator delegator0 = new Delegator();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      Context context0 = new Context();
      NativeArray nativeArray1 = new NativeArray(2);
      Double.isFinite(8);
      Class<Short> class0 = Short.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) nativeArray0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(true, "6;d?dlS{fu", classLoader0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeNumber nativeNumber0 = new NativeNumber(1.0E21);
      ContextFactory contextFactory0 = new ContextFactory();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      nativeIterator_StopIteration0.isGenericDescriptor(nativeJavaPackage0);
      Byte byte0 = new Byte((byte) (-58));
      Short short0 = new Short((short)13);
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeNumber0, "jsStaticFunction_getAllIds", "Y[IGlrA>g2Lq5/>TLm", true);
      // Undeclared exception!
      try { 
        nativeNumber0.addLazilyInitializedValue((String) null, 1309, lazilyLoadedCtor0, 2183);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 2183
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      int int0 = NativeGenerator.GENERATOR_SEND;
      nativeIterator_StopIteration0.getTypeOf();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeBoolean0, nativeBoolean0, 4, 1);
      idFunctionObject0.setAttributes("com.google.javascript.rhino.head.LazilyLoadedCtor$1", (Scriptable) nativeBoolean0, 8);
      idFunctionObject0.getGetterOrSetter((String) null, (-1286), true);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test019()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      Context context0 = new Context();
      Double.valueOf((double) 4);
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("error reporter");
      NativeJavaPackage nativeJavaPackage1 = nativeJavaPackage0.forcePackage("iUhterltsr", nativeArray0);
      nativeJavaPackage1.size();
      ScriptableObject.isTrue((Object) null);
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory contextFactory1 = new ContextFactory();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test020()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version");
      nativeJavaPackage0.defineOwnProperty(context0, context0, nativeIterator_StopIteration0);
      nativeJavaPackage0.forcePackage("language version", nativeIterator_StopIteration0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test021()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      // Undeclared exception!
      try { 
        baseFunction0.getAttributes("jsFunction_getBuiltinPrototype");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property jsFunction_getBuiltinPrototype not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test022()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      nativeBoolean0.exportAsJSClass(2395, baseFunction0, false);
      Class<Byte> class0 = Byte.class;
      ScriptableObject.getDefaultValue((Scriptable) nativeBoolean0, (Class<?>) class0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Long long0 = new Long(2);
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      NativeCall nativeCall0 = context0.currentActivationCall;
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Class<NativeJavaPackage> class0 = NativeJavaPackage.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeBoolean0, ":n+@ov6%IJ[", class0);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeBoolean0, nativeBoolean0, 4, 1);
      NativeNumber nativeNumber0 = new NativeNumber(2);
      nativeNumber0.isConst("msg.change.property.accessor.to.data.with.configurable.false");
      Context.enter();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test025()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      Class<NativeScript> class0 = NativeScript.class;
      ScriptableObject.getTypedProperty((Scriptable) importerTopLevel0, 13, class0);
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test026()  throws Throwable  {
      Context context0 = new Context();
      NativeCall nativeCall0 = new NativeCall();
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test027()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptable(contextFactory0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type com.google.javascript.rhino.head.ContextFactory
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      NativeNumber nativeNumber1 = (NativeNumber)ScriptableObject.ensureScriptableObject(nativeNumber0);
      nativeNumber0.setAttributes("require() can not be invoked as a constructor", 8);
      ScriptableObject.deleteProperty((Scriptable) nativeNumber1, "require() can not be invoked as a constructor");
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.getClassPrototype(nativeNumber1, "require() can not be invoked as a constructor");
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeNumber1, nativeContinuation0, 3275, 1);
      nativeBoolean0.setGetterOrSetter("require() can not be invoked as a constructor", 0, idFunctionObject0, false);
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      NativeNumber nativeNumber2 = new NativeNumber(8);
      nativeNumber2.getTypeOf();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.values();
      nativeIterator_StopIteration0.isGenericDescriptor(nativeIterator_StopIteration0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      Context context1 = contextFactory0.enterContext(context0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context1, false);
      Scriptable scriptable0 = ScriptableObject.getTopLevelScope(importerTopLevel0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context2 = Context.getContext();
      ScriptableObject.getTopScopeValue(importerTopLevel0, scriptable0);
      nativeIterator_StopIteration0.defineOwnProperties(context2, importerTopLevel0);
      nativeIterator_StopIteration0.findPrototypeId("language version");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Long long0 = new Long(2);
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.defineClass((Scriptable) importerTopLevel0, class0, false);
      Double.valueOf((double) (-1));
      NativeArray nativeArray0 = new NativeArray(180);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        nativeArray0.getOwnPropertyDescriptor(context0, nativeIterator_StopIteration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test032()  throws Throwable  {
      Context.getContext();
      BaseFunction baseFunction0 = new BaseFunction();
      Class<IdFunctionObject> class0 = IdFunctionObject.class;
      // Undeclared exception!
      try { 
        ScriptableObject.defineClass((Scriptable) baseFunction0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.IdFunctionObject\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      ScriptableObject scriptableObject0 = ScriptableObject.ensureScriptableObject(nativeNumber0);
      nativeNumber0.setAttributes("Ns>l", 13);
      ScriptableObject.deleteProperty((Scriptable) scriptableObject0, "Ns>l");
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<NativeNumber> class0 = NativeNumber.class;
      ScriptableObject.getTypedProperty((Scriptable) scriptableObject0, "Ns>l", class0);
      Class<Synchronizer> class1 = Synchronizer.class;
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.getApplicationClassLoader();
      contextFactory0.enterContext();
      String string0 = null;
      // Undeclared exception!
      try { 
        Context.reportRuntimeError1("error reporter", class1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property error reporter
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Context context0 = new Context();
      BaseFunction baseFunction0 = new BaseFunction();
      ScriptableObject.deleteProperty((Scriptable) baseFunction0, "[DrEY!Ir(AJgK");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test035()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getContext();
      ScriptableObject.buildDataDescriptor(nativeIterator_StopIteration0, context0, (-1442));
      nativeIterator_StopIteration0.values();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version");
      nativeJavaPackage0.forcePackage("language version", nativeIterator_StopIteration0);
      int int0 = ScriptableObject.PERMANENT;
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.defineOwnProperties(context0, nativeJavaPackage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: com.google.javascript.rhino.head.NativeJavaPackage@0000000014 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Synchronizer synchronizer0 = new Synchronizer(nativeIterator_StopIteration0);
      int int0 = ScriptableObject.CONST;
      ScriptableObject.putConstProperty(synchronizer0, (String) null, (Object) null);
      NativeError nativeError0 = new NativeError();
      // Undeclared exception!
      try { 
        nativeError0.initPrototypeId(13);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 13
         //
         verifyException("com.google.javascript.rhino.head.NativeError", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      Context context0 = new Context();
      Class<BaseFunction> class0 = BaseFunction.class;
      ScriptableObject.defineClass((Scriptable) nativeArray0, class0, true);
      Double double0 = new Double(9);
      context0.initStandardObjects();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test038()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      // Undeclared exception!
      try { 
        nativeBoolean0.exportAsJSClass(13, nativeBoolean0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: Boolean.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test039()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      Class<NativeIterator.StopIteration> class0 = NativeIterator.StopIteration.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) baseFunction0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeIterator$StopIteration
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Synchronizer synchronizer0 = new Synchronizer(nativeIterator_StopIteration0);
      ScriptableObject.putProperty((Scriptable) nativeIterator_StopIteration0, 2, (Object) synchronizer0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test041()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Synchronizer synchronizer0 = new Synchronizer(nativeIterator_StopIteration0);
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        ImporterTopLevel.init(context0, synchronizer0, false);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      ContextFactory contextFactory0 = new ContextFactory();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      Delegator delegator0 = new Delegator();
      boolean boolean0 = true;
      String string0 = "getTyp";
      // Undeclared exception!
      try { 
        nativeBoolean0.setGetterOrSetter("getTyp", 1, baseFunction0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // getTyp
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test043()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeBoolean0, nativeBoolean0, 4, 1);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "msg.change.property.accessor.to.data.with.configurable.false";
      stringArray0[1] = "msg.change.property.accessor.to.data.with.configurable.false";
      stringArray0[2] = "msg.change.property.accessor.to.data.with.configurable.false";
      stringArray0[3] = "msg.change.property.accessor.to.data.with.configurable.false";
      Class<NativeCall> class0 = NativeCall.class;
      // Undeclared exception!
      try { 
        idFunctionObject0.defineFunctionProperties(stringArray0, class0, 8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Method \"msg.change.property.accessor.to.data.with.configurable.false\" not found in \"com.google.javascript.rhino.head.NativeCall\".
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test044()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context.getContext();
      Collection<Object> collection0 = nativeIterator_StopIteration0.values();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version");
      NativeJavaPackage nativeJavaPackage1 = nativeJavaPackage0.forcePackage("language version", nativeIterator_StopIteration0);
      int int0 = ScriptableObject.PERMANENT;
      nativeIterator_StopIteration0.getOrDefault(collection0, nativeJavaPackage0);
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      NativeNumber nativeNumber0 = new NativeNumber(150);
      nativeNumber0.checkPropertyChange("msg.varargs.fun", nativeJavaPackage1, nativeIterator_StopIteration0);
      Context.getContext();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test045()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Context context0 = Context.getCurrentContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("oT}L,^|", classLoader1);
      nativeBoolean0.defineConst("oT}L,^|", nativeJavaPackage0);
      nativeJavaPackage0.getAllIds();
      nativeBoolean0.getClassName();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        ScriptableObject.putProperty((Scriptable) nativeJavaPackage0, 0, (Object) classLoader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Java package names may not be numbers.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      Scriptable scriptable0 = context0.initStandardObjects((ScriptableObject) nativeBoolean0);
      ScriptableObject.putProperty(scriptable0, (-1003958423), (Object) contextFactory0);
      IdFunctionObject idFunctionObject0 = nativeBoolean0.exportAsJSClass(13, nativeBoolean0, false);
      Integer integer0 = new Integer(13);
      idFunctionObject0.equivalentValues(integer0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      ScriptableObject.getPropertyIds((Scriptable) null);
      try { 
        Long.decode("language version");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"language version\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test048()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      Class<NativeContinuation> class0 = NativeContinuation.class;
      ScriptableObject.defineClass((Scriptable) baseFunction0, class0, false);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.getContext();
      Scriptable scriptable0 = context0.newObject((Scriptable) baseFunction0);
      baseFunction0.get((-1629), scriptable0);
      // Undeclared exception!
      try { 
        baseFunction0.getGetterOrSetter("error reporter", 1, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // error reporter
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("Wm-0TXf@8&bO3");
      NativeString nativeString0 = new NativeString(stringBuilder0);
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptableObject(stringBuilder0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type string
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      ScriptableObject scriptableObject0 = ScriptableObject.ensureScriptableObject(nativeNumber0);
      scriptableObject0.setAttributes("msg.setter2.expected", 8);
      nativeNumber0.setAttributes("require() can not be invoked as a constructor", 8);
      ScriptableObject.deleteProperty((Scriptable) scriptableObject0, "require() can not be invoked as a constructor");
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod(context0, (Scriptable) baseFunction0, "language version", context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000005 is not a function, it is function.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      Class<TopLevel> class0 = TopLevel.class;
      ScriptableObject.buildClassCtor((Scriptable) nativeArray0, class0, true, true);
      ScriptableObject.getTopLevelScope(nativeArray0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(1580.257261182);
      BaseFunction baseFunction0 = new BaseFunction();
      baseFunction0.equivalentValues(nativeNumber0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      ScriptableObject.hasProperty((Scriptable) importerTopLevel0, (-1925));
      Long long0 = new Long(2);
      // Undeclared exception!
      try { 
        importerTopLevel0.initPrototypeId((-93));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -93
         //
         verifyException("com.google.javascript.rhino.head.ImporterTopLevel", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      nativeNumber0.preventExtensions();
      NativeCall nativeCall0 = new NativeCall();
      nativeCall0.defineProperty("JavaPackage", (Object) nativeNumber0, 2);
      ScriptableObject.deleteProperty((Scriptable) nativeCall0, 13);
      Scriptable scriptable0 = ScriptableObject.getTopLevelScope(nativeNumber0);
      ScriptableObject.defineConstProperty(scriptable0, "Ns>l");
      ScriptableObject.putProperty((Scriptable) nativeNumber0, 8, (Object) "Ns>l");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = Context.getCurrentContext();
      Context context1 = contextFactory0.enterContext(context0);
      ClassLoader classLoader0 = context1.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(false, "Ns>l", classLoader0);
      NativeJavaPackage nativeJavaPackage1 = nativeJavaPackage0.forcePackage("language version", nativeCall0);
      nativeJavaPackage1.toString();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      NativeNumber nativeNumber0 = new NativeNumber(8);
      Class<NativeJavaMethod> class0 = NativeJavaMethod.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeNumber0, 0, class0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      Class<Float> class0 = Float.TYPE;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) baseFunction0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context.enter();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      context0.getE4xImplementationFactory();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      classLoader0.getParent();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      NativeBoolean nativeBoolean1 = new NativeBoolean(false);
      nativeBoolean1.defineConst("error reporter", nativeIterator_StopIteration0);
      nativeBoolean1.getClassName();
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) nativeBoolean0, (Class<?>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test059()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeArray nativeArray0 = new NativeArray(8);
      importerTopLevel0.put(4, (Scriptable) nativeArray0, (Object) nativeArray0);
      ScriptableObject.getPropertyIds(nativeArray0);
      Integer integer0 = new Integer(0);
      ScriptableObject.putProperty((Scriptable) nativeArray0, 4, (Object) class0);
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes(0, (Scriptable) importerTopLevel0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 0 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test060()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.values();
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("TjJo");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      nativeJavaPackage0.defineOwnProperty(context0, importerTopLevel0, importerTopLevel0);
      NativeJavaPackage nativeJavaPackage1 = nativeJavaPackage0.forcePackage((String) null, importerTopLevel0);
      nativeJavaPackage0.size();
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      Short short0 = new Short((short)91);
      ScriptableObject.getTopScopeValue(nativeJavaClass0, short0);
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration1.defineOwnProperties(context0, nativeJavaPackage1);
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel(context0, false);
      NativeArray nativeArray0 = new NativeArray(13);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test061()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      nativeNumber0.setAttributes("require() can not be invoked as a constructor", 8);
      // Undeclared exception!
      try { 
        ScriptableObject.putConstProperty(nativeNumber0, "require() can not be invoked as a constructor", nativeNumber0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: redeclaration of var require() can not be invoked as a constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      nativeNumber0.setAttributes("require() can not be invoked as a constructor", 8);
      ScriptableObject.deleteProperty((Scriptable) nativeNumber0, "require() can not be invoked as a constructor");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      nativeNumber0.preventExtensions();
      NativeCall nativeCall0 = new NativeCall();
      nativeCall0.defineProperty("jsStaticFunction_has", (Object) nativeNumber0, 2);
      ScriptableObject.deleteProperty((Scriptable) nativeCall0, 13);
      Scriptable scriptable0 = ScriptableObject.getTopLevelScope(nativeNumber0);
      ScriptableObject.defineConstProperty(scriptable0, "Ns>l");
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-545.5925411));
      ScriptableObject.deleteProperty((Scriptable) nativeNumber0, 4);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.makeContext();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      nativeBoolean0.defineConst("language version", baseFunction0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      NativeNumber nativeNumber0 = new NativeNumber(0);
      nativeNumber0.checkPropertyChange("error reporter", importerTopLevel0, importerTopLevel0);
      Context.enter(context0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test067()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      FunctionObject.getTypeTag(class0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeArray nativeArray0 = new NativeArray(8);
      Context context0 = Context.getCurrentContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects((ScriptableObject) nativeArray0, false);
      scriptableObject0.getDefaultValue(class0);
      nativeArray0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Context context0 = new Context();
      BaseFunction baseFunction0 = new BaseFunction();
      // Undeclared exception!
      try { 
        baseFunction0.getGetterOrSetter("msg.change.configurable.false.to.true", 100, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // msg.change.configurable.false.to.true
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Context context0 = new Context();
      NativeNumber nativeNumber0 = new NativeNumber(2);
      nativeNumber0.preventExtensions();
      NativeCall nativeCall0 = new NativeCall();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      Context.enter();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        nativeNumber0.getAttributes((String) null, (Scriptable) nativeIterator_StopIteration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 0 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      Scriptable scriptable0 = ScriptableObject.getTopLevelScope(nativeNumber0);
      ScriptableObject.defineConstProperty(scriptable0, "Ns>l");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test072()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context.getContext();
      ScriptableObject.redefineProperty(nativeIterator_StopIteration0, "error reporter", false);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      nativeBoolean0.defineConst("9,O3M+DD[T", baseFunction0);
      NativeObject nativeObject0 = new NativeObject();
      // Undeclared exception!
      try { 
        nativeObject0.defineOwnProperties(context0, baseFunction0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type object
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      FunctionObject.getTypeTag(class0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeArray nativeArray0 = new NativeArray(8);
      Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) nativeArray0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      // Undeclared exception!
      try { 
        baseFunction0.setAttributes((-1831), (Scriptable) null, (-1850962679));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1850962679
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Function;
      TopLevel.getBuiltinPrototype((Scriptable) baseFunction0, topLevel_Builtins0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      // Undeclared exception!
      try { 
        JavaAdapter.runScript((Script) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.JavaAdapter$2", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.defineProperty((Scriptable) nativeIterator_StopIteration0, "msg.prop.not.found", (Object) nativeIterator_StopIteration0, 1);
      ScriptableObject.redefineProperty(nativeIterator_StopIteration0, "msg.prop.not.found", false);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      ScriptableObject scriptableObject0 = ScriptableObject.ensureScriptableObject(nativeNumber0);
      nativeNumber0.setAttributes("Ns>l", 13);
      nativeNumber0.has(0, (Scriptable) scriptableObject0);
      scriptableObject0.put(4, (Scriptable) nativeNumber0, (Object) "Ns>l");
      NativeNumber nativeNumber1 = (NativeNumber)ScriptableObject.getTopLevelScope(nativeNumber0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Byte byte0 = new Byte((byte)0);
      Delegator delegator0 = new Delegator(nativeNumber0);
      delegator0.getIds();
      NativeError nativeError0 = new NativeError();
      ScriptableObject.getProperty((Scriptable) delegator0, 437);
      nativeNumber0.sameValue((Object) null, nativeIterator_StopIteration0);
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      ScriptableObject.hasProperty((Scriptable) scriptableObject0, 4);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeNumber1, nativeIterator_StopIteration1, 2521, 8);
      // Undeclared exception!
      try { 
        idFunctionObject0.getPrototype();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Long long0 = new Long(2);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.ensureScriptable(nativeIterator_StopIteration0);
      ScriptableObject.defineProperty((Scriptable) importerTopLevel0, "language version", (Object) long0, 7);
      // Undeclared exception!
      try { 
        ScriptableObject.redefineProperty(importerTopLevel0, "language version", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: redeclaration of const language version.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      ScriptableObject.getPropertyIds(importerTopLevel0);
      Long long0 = new Long(2);
      ScriptableObject.defineProperty((Scriptable) importerTopLevel0, "language version", (Object) long0, 7);
      // Undeclared exception!
      try { 
        ScriptableObject.redefineProperty(importerTopLevel0, "language version", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: redeclaration of const language version.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-271.081));
      Short short0 = new Short((short) (-369));
      Byte byte0 = new Byte((byte)4);
      nativeNumber0.sameValue(short0, byte0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Long long0 = new Long(2);
      ScriptableObject.defineProperty((Scriptable) importerTopLevel0, "language version", (Object) long0, 7);
      // Undeclared exception!
      try { 
        ScriptableObject.redefineProperty(importerTopLevel0, "language version", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: redeclaration of const language version.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test084()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      Class<TopLevel> class0 = TopLevel.class;
      BaseFunction baseFunction0 = ScriptableObject.buildClassCtor((Scriptable) nativeArray0, class0, true, true);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        ScriptableObject.putProperty((Scriptable) baseFunction0, 13, (Object) nativeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: 13.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      ScriptableObject scriptableObject0 = ScriptableObject.ensureScriptableObject(nativeNumber0);
      scriptableObject0.setAttributes("msg.setter2.expected", 8);
      scriptableObject0.setAttributes(115, 8);
      nativeNumber0.setAttributes("require() can not be invoked as a constructor", 8);
      ScriptableObject.deleteProperty((Scriptable) scriptableObject0, "require() can not be invoked as a constructor");
      // Undeclared exception!
      try { 
        ScriptableObject.redefineProperty((Scriptable) null, "require() can not be invoked as a constructor", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      Class<NativeIterator.StopIteration> class0 = NativeIterator.StopIteration.class;
      NativeJavaArray nativeJavaArray0 = null;
      try {
        nativeJavaArray0 = new NativeJavaArray(nativeNumber0, "require() can not be invoked as a constructor");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Long long0 = new Long(2);
      ScriptableObject.redefineProperty(importerTopLevel0, "language version", false);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      ScriptableObject scriptableObject0 = ScriptableObject.ensureScriptableObject(nativeNumber0);
      nativeNumber0.setAttributes("require() can not be invoked as a constructor", 8);
      Integer integer0 = new Integer(4105);
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeNumber0, "require() can not be invoked as a constructor", "[|e", true);
      Context.getCurrentContext();
      nativeNumber0.isDataDescriptor(scriptableObject0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Context context0 = new Context();
      BaseFunction baseFunction0 = new BaseFunction();
      baseFunction0.getGetterOrSetter((String) null, 15, false);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      nativeNumber0.setAttributes("construct", 8);
      ScriptableObject.deleteProperty((Scriptable) nativeNumber0, "construct");
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.defineOwnProperties((Context) null, nativeNumber0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-8.21953723556939));
      Short short0 = new Short((short) (-369));
      nativeNumber0.sameValue(nativeNumber0, short0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.enter();
      nativeIterator_StopIteration0.values();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version");
      nativeJavaPackage0.defineOwnProperty(context0, context0, nativeIterator_StopIteration0);
      nativeJavaPackage0.forcePackage("language version", nativeIterator_StopIteration0);
      int int0 = ScriptableObject.PERMANENT;
      NativeJavaPackage nativeJavaPackage1 = nativeJavaPackage0.forcePackage("error reporter", nativeIterator_StopIteration0);
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeJavaPackage0, "language version", "language version", true, true);
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      Context context1 = Context.getContext();
      nativeIterator_StopIteration1.getOrDefault(lazilyLoadedCtor0, context1);
      BaseFunction baseFunction0 = new BaseFunction(nativeJavaPackage1, nativeJavaPackage1);
      nativeIterator_StopIteration1.defineOwnProperties(context0, baseFunction0);
      NativeCall nativeCall0 = new NativeCall();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Long long0 = new Long(2);
      Context.toNumber(importerTopLevel0);
      ScriptableObject.redefineProperty(importerTopLevel0, "language version", false);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      BoundFunction boundFunction0 = new BoundFunction(context0, importerTopLevel0, nativeContinuation0, importerTopLevel0, context0.emptyArgs);
      boundFunction0.hasInstance(importerTopLevel0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.getArrayPrototype(importerTopLevel0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.deleteProperty((Scriptable) nativeIterator_StopIteration0, "(:");
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(nativeNumber0, nativeNumber0, 1);
      nativeNumber0.isAccessorDescriptor(scriptableObject0);
      NativeNumber nativeNumber1 = (NativeNumber)ScriptableObject.ensureScriptableObject(nativeNumber0);
      nativeNumber1.setAttributes("msg.setter2.expected", 8);
      nativeNumber0.setAttributes("a", 8);
      ScriptableObject.deleteProperty((Scriptable) nativeNumber1, "a");
      nativeNumber1.sameValue("a", "a");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test096()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      ScriptableObject scriptableObject0 = ScriptableObject.ensureScriptableObject(baseFunction0);
      baseFunction0.applyDescriptorToAttributeBitset(1038, scriptableObject0);
      Class<NativeIterator.StopIteration> class0 = NativeIterator.StopIteration.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) baseFunction0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeIterator$StopIteration
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test097()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Synchronizer synchronizer0 = new Synchronizer(nativeIterator_StopIteration0);
      Context.getContext();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      nativeBoolean0.defineConst("language version", synchronizer0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      Context context0 = new Context();
      Double double0 = Double.valueOf((double) 4);
      nativeArray0.getOwnPropertyDescriptor(context0, double0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        nativeArray0.putConst((String) null, (Scriptable) null, nativeIterator_StopIteration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Scriptable scriptable0 = null;
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.setAttributes(21, 21);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 21
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Synchronizer synchronizer0 = new Synchronizer(nativeIterator_StopIteration0);
      Class<Double> class0 = Double.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) synchronizer0, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Delegator delegator0 = new Delegator();
      nativeBoolean0.setGetterOrSetter((String) null, 1, delegator0, true);
      ScriptableObject.redefineProperty(nativeBoolean0, (String) null, true);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test102()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-3.4940598877702307));
      nativeNumber0.preventExtensions();
      NativeCall nativeCall0 = new NativeCall();
      // Undeclared exception!
      try { 
        nativeCall0.getAttributes(1817);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 1817 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.defineProperty((Scriptable) nativeIterator_StopIteration0, "msg.prop.not.found", (Object) nativeIterator_StopIteration0, 1);
      NativeCall nativeCall0 = new NativeCall();
      nativeCall0.putConst("getBuiltinP", nativeIterator_StopIteration0, nativeIterator_StopIteration0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Context context0 = new Context();
      NativeNumber nativeNumber0 = new NativeNumber(2);
      nativeNumber0.get((Object) context0);
      nativeNumber0.preventExtensions();
      NativeCall nativeCall0 = new NativeCall();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.putProperty((Scriptable) nativeNumber0, 8, (Object) nativeCall0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.enter();
      nativeIterator_StopIteration0.values();
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version");
      nativeJavaPackage0.defineOwnProperty(context0, context0, nativeIterator_StopIteration0);
      nativeJavaPackage0.forcePackage("language version", nativeIterator_StopIteration0);
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.defineOwnProperties(context0, nativeJavaPackage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: com.google.javascript.rhino.head.NativeJavaPackage@0000000009 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      BaseFunction baseFunction0 = new BaseFunction(importerTopLevel0, importerTopLevel0);
      baseFunction0.getOwnPropertyDescriptor(context0, importerTopLevel0);
      importerTopLevel0.setPrototype((Scriptable) null);
      Long long0 = new Long(2);
      // Undeclared exception!
      try { 
        ScriptableObject.defineConstProperty((Scriptable) null, "D2Fd");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      nativeError0.getAllIds();
      int int0 = ScriptableObject.CONST;
      ScriptableObject.deleteProperty((Scriptable) nativeError0, (String) null);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.setAttributes(0, 0);
      nativeIterator_StopIteration0.hasInstance((Scriptable) null);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeContinuation0.getClassName();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test110()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      FunctionObject.getTypeTag(class0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeArray nativeArray0 = new NativeArray(8);
      Context context0 = Context.getCurrentContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects((ScriptableObject) nativeArray0, false);
      scriptableObject0.delete("language version");
      scriptableObject0.getDefaultValue(class0);
      nativeArray0.isEmpty();
      Context.getContext();
      ContextFactory contextFactory0 = new ContextFactory();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      Class<NativeArray> class0 = NativeArray.class;
      nativeCall0.defineProperty("t/|Rj>uZd", class0, 2);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      ScriptableObject scriptableObject0 = ScriptableObject.ensureScriptableObject(nativeNumber0);
      nativeNumber0.setAttributes("Ns>l", 13);
      ScriptableObject.defineProperty((Scriptable) scriptableObject0, "toString", (Object) scriptableObject0, 1);
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeNumber0, true);
      ScriptableObject.getTopScopeValue(nativeGenerator0, "toString");
      NativeObject nativeObject0 = new NativeObject();
      ((NativeNumber) scriptableObject0).toString();
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        nativeObject0.defineOwnProperties(context0, scriptableObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type object
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      nativeNumber0.setAttributes("require() can not be invoked as a constructor", 8);
      // Undeclared exception!
      try { 
        nativeNumber0.addLazilyInitializedValue("require() can not be invoked as a constructor", 1117, (LazilyLoadedCtor) null, (-1294172031));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // require() can not be invoked as a constructor
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.put(130, (Scriptable) nativeArray0, (Object) nativeArray0);
      Context.enter();
      nativeIterator_StopIteration0.defineOwnProperties(context0, nativeArray0);
      nativeArray0.lastIndexOf(nativeIterator_StopIteration0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeArray nativeArray0 = new NativeArray((-4047L));
      nativeArray0.jsGet_length();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeArray0, nativeArray0, (-1227053771), "remove", 1, nativeArray0);
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Number;
      TopLevel.getBuiltinPrototype((Scriptable) importerTopLevel0, topLevel_Builtins0);
      ScriptableObject.buildDataDescriptor(nativeArray0, idFunctionObject0, 5);
      System.setCurrentTimeMillis(0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      Context context0 = new Context();
      Double double0 = Double.valueOf((double) 4);
      nativeArray0.getOwnPropertyDescriptor(context0, double0);
      IdFunctionObject idFunctionObject0 = null;
      try {
        idFunctionObject0 = new IdFunctionObject(nativeArray0, double0, (-1), "%u)_%OtE#}:,", 166, (Scriptable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      NativeObject nativeObject0 = new NativeObject();
      Context context0 = Context.enter();
      nativeObject0.defineOwnProperties(context0, baseFunction0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test118()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.delete(2);
      Class<NativeJavaTopPackage> class0 = NativeJavaTopPackage.class;
      // Undeclared exception!
      try { 
        ScriptableObject.getDefaultValue((Scriptable) nativeIterator_StopIteration0, (Class<?>) class0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeJavaTopPackage
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.enter();
      nativeIterator_StopIteration0.values();
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version");
      nativeJavaPackage0.defineOwnProperty(context0, context0, nativeIterator_StopIteration0);
      ScriptableObject.putProperty((Scriptable) nativeJavaPackage0, "language version", (Object) null);
      nativeJavaPackage0.forcePackage("language version", nativeIterator_StopIteration0);
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.defineOwnProperties(context0, nativeJavaPackage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: com.google.javascript.rhino.head.NativeJavaPackage@0000000009 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      ContextFactory contextFactory0 = new ContextFactory();
      NativeNumber nativeNumber0 = new NativeNumber(0.0);
      nativeNumber0.isDataDescriptor(baseFunction0);
      Scriptable scriptable0 = ScriptableObject.getTopLevelScope(baseFunction0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      String string0 = "]z91_ye|!";
      ScriptableObject.defineConstProperty(scriptable0, "]z91_ye|!");
      Class<IdFunctionObject> class0 = IdFunctionObject.class;
      // Undeclared exception!
      try { 
        nativeBoolean0.defineProperty("", class0, 8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeArray nativeArray0 = new NativeArray(8);
      importerTopLevel0.put(4, (Scriptable) nativeArray0, (Object) nativeArray0);
      ScriptableObject.getPropertyIds(nativeArray0);
      nativeArray0.jsGet_length();
      ScriptableObject.putProperty((Scriptable) nativeArray0, 4, (Object) class0);
      ContextFactory contextFactory0 = new ContextFactory();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Class<InterpretedFunction> class0 = InterpretedFunction.class;
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass(importerTopLevel0, class0);
      JavaMembers javaMembers0 = nativeJavaClass0.members;
      NativeJavaMethod nativeJavaMethod0 = javaMembers0.ctors;
      // Undeclared exception!
      try { 
        nativeJavaMethod0.getGetterOrSetter("~d~ey%L&.tu", 100, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // ~d~ey%L&.tu
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.enter();
      nativeIterator_StopIteration0.values();
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version");
      nativeJavaPackage0.defineOwnProperty(context0, context0, nativeIterator_StopIteration0);
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      ScriptableObject scriptableObject1 = context0.initStandardObjects(scriptableObject0, true);
      nativeJavaPackage0.forcePackage("setImmunePrototyp", scriptableObject1);
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.defineOwnProperties(context0, nativeJavaPackage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: com.google.javascript.rhino.head.NativeJavaPackage@0000000612 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test124()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      NativeCall nativeCall0 = new NativeCall();
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      Class<TopLevel> class0 = TopLevel.class;
      ScriptableObject.buildClassCtor((Scriptable) nativeArray0, class0, false, false);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      assertEquals("StopIteration", nativeIterator_StopIteration0.getClassName());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-1.0));
      nativeNumber0.setAttributes((String) null, 7);
      ScriptableObject.deleteProperty((Scriptable) nativeNumber0, (String) null);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      String string0 = nativeBoolean0.getClassName();
      assertEquals("Boolean", string0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeBoolean0, nativeBoolean0, 4, 1);
      String[] stringArray0 = new String[7];
      boolean boolean0 = nativeBoolean0.isGetterOrSetter(stringArray0[1], 0, true);
      assertTrue(nativeBoolean0.isEmpty());
      assertFalse(boolean0);
      assertTrue(nativeBoolean0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Long long0 = new Long(2);
      Double double0 = new Double(5);
      importerTopLevel0.get((Object) double0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        ScriptableObject.redefineProperty(importerTopLevel0, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ImporterTopLevel", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test129()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.defineProperty((Scriptable) nativeIterator_StopIteration0, "msg.prop.not.found", (Object) nativeIterator_StopIteration0, 1);
      // Undeclared exception!
      try { 
        ScriptableObject.redefineProperty(nativeIterator_StopIteration0, "msg.prop.not.found", true);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // TypeError: redeclaration of var msg.prop.not.found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      NativeNumber nativeNumber0 = new NativeNumber(0);
      ScriptableObject.redefineProperty(nativeNumber0, "language version", false);
      assertTrue(nativeNumber0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      int int0 = 15;
      String string0 = null;
      NativeWith nativeWith0 = new NativeWith(baseFunction0, baseFunction0);
      nativeWith0.parent = (Scriptable) baseFunction0;
      // Undeclared exception!
      try { 
        baseFunction0.getAttributes((String) null, (Scriptable) nativeWith0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
