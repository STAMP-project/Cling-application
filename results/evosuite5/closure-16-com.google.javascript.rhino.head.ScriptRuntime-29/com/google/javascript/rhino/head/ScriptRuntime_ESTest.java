/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 18 08:44:36 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.BoundFunction;
import com.google.javascript.rhino.head.Callable;
import com.google.javascript.rhino.head.ConsString;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.Delegator;
import com.google.javascript.rhino.head.EcmaError;
import com.google.javascript.rhino.head.Function;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.InterpreterData;
import com.google.javascript.rhino.head.JavaAdapter;
import com.google.javascript.rhino.head.JavaMembers;
import com.google.javascript.rhino.head.JavaScriptException;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeBoolean;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeError;
import com.google.javascript.rhino.head.NativeFunction;
import com.google.javascript.rhino.head.NativeGenerator;
import com.google.javascript.rhino.head.NativeGlobal;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJavaClass;
import com.google.javascript.rhino.head.NativeJavaMethod;
import com.google.javascript.rhino.head.NativeJavaObject;
import com.google.javascript.rhino.head.NativeJavaPackage;
import com.google.javascript.rhino.head.NativeJavaTopPackage;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.NativeWith;
import com.google.javascript.rhino.head.Ref;
import com.google.javascript.rhino.head.RegExpProxy;
import com.google.javascript.rhino.head.ScriptRuntime;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.Synchronizer;
import com.google.javascript.rhino.head.TopLevel;
import com.google.javascript.rhino.head.regexp.RegExpImpl;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ScriptRuntime_ESTest extends ScriptRuntime_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ScriptRuntime.isGeneratedScript("-lcNI0<Xt9e+t?");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ScriptRuntime.makeUrlForGeneratedScript(true, "error reporter", 160);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Context context0 = Context.enter();
      ScriptRuntime.lastUint32Result(context0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        ScriptRuntime.storeUint32Result(context0, (-551L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Context context0 = new Context();
      ScriptRuntime.storeUint32Result(context0, 0L);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.memberRef((Object) "Float", (Object) "Float", (Object) "Float", context0, 88);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Float is not an xml object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        ScriptRuntime.memberRef((Object) "*'2)49", (Object) "*'2)49", context0, 140);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: *'2)49 is not an xml object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.setRegExpProxy((Context) null, (RegExpProxy) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Context context0 = new Context();
      RegExpImpl regExpImpl0 = new RegExpImpl();
      ScriptRuntime.setRegExpProxy(context0, regExpImpl0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test009()  throws Throwable  {
      Context context0 = new Context();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      // Undeclared exception!
      try { 
        ScriptRuntime.getPropFunctionAndThis((Object) context0, "error reporter", context0, (Scriptable) importerTopLevel0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find function error reporter in object com.google.javascript.rhino.head.Context@0000000001.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      EcmaError ecmaError0 = (EcmaError)ScriptRuntime.undefReadError(contextFactory0, (Object) null);
      assertEquals("TypeError", ecmaError0.getName());
      assertEquals(0, ecmaError0.getLineNumber());
      assertEquals(0, ecmaError0.columnNumber());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test011()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      ScriptRuntime.checkDeprecated(context0, "error reporter");
      assertEquals(13, Context.FEATURE_ENHANCED_JAVA_ACCESS);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Context context0 = Context.enter();
      ScriptRuntime.checkDeprecated(context0, "java.lang.Character");
      assertEquals(140, Context.VERSION_1_4);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      boolean boolean0 = ScriptRuntime.isArrayObject(contextFactory0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(140);
      boolean boolean0 = ScriptRuntime.isArrayObject(nativeArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test015()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ScriptableObject scriptableObject0 = ScriptRuntime.getGlobal(context0);
      int[] intArray0 = new int[5];
      // Undeclared exception!
      try { 
        ScriptRuntime.newObjectLiteral(objectArray0, context0.emptyArgs, intArray0, context0, (Scriptable) scriptableObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ScriptableObject scriptableObject0 = ScriptRuntime.getGlobal(context0);
      // Undeclared exception!
      try { 
        ScriptRuntime.newObjectLiteral(objectArray0, objectArray0, (int[]) null, context0, (Scriptable) scriptableObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test017()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      int[] intArray0 = new int[4];
      // Undeclared exception!
      try { 
        ScriptRuntime.newArrayLiteral(context0.emptyArgs, intArray0, context0, nativeError0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      ScriptRuntime.NoSuchMethodShim scriptRuntime_NoSuchMethodShim0 = new ScriptRuntime.NoSuchMethodShim(delegator0, "7amZ");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      Object[] objectArray0 = new Object[16];
      // Undeclared exception!
      try { 
        scriptRuntime_NoSuchMethodShim0.call(context0, delegator0, delegator0, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Context context0 = new Context();
      Object[] objectArray0 = new Object[7];
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        ScriptRuntime.newArrayLiteral(objectArray0, intArray0, context0, (Scriptable) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test020()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        ScriptRuntime.initFunction(context0, nativeContinuation0, (NativeFunction) null, 5198, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Context context0 = new Context();
      Delegator delegator0 = new Delegator();
      // Undeclared exception!
      try { 
        ScriptRuntime.enterWith((Object) null, context0, delegator0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot apply \"with\" to null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test022()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        ScriptRuntime.newCatchScope((Throwable) null, scriptableObject0, "+PbkcE>%", context0, nativeJavaObject0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.newCatchScope((Throwable) null, (Scriptable) null, "u(%'$(?;}#?x", context0, (Scriptable) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeCall nativeCall0 = ScriptRuntime.findFunctionActivation(context0, nativeJavaTopPackage0);
      assertNull(nativeCall0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test025()  throws Throwable  {
      Context context0 = Context.enter();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      // Undeclared exception!
      try { 
        ScriptRuntime.enterActivationFunction(context0, scriptableObject0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.head.NativeObject cannot be cast to com.google.javascript.rhino.head.NativeCall
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(100L);
      Context context0 = new Context();
      BaseFunction baseFunction0 = ScriptRuntime.typeErrorThrower();
      // Undeclared exception!
      try { 
        ScriptRuntime.initScript((NativeFunction) null, baseFunction0, context0, nativeArray0, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test027()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      InterpreterData interpreterData0 = new InterpreterData(3238, "error reporter", "language version", true);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createScript(interpreterData0, (Object) null);
      Context context1 = new Context(contextFactory0);
      // Undeclared exception!
      try { 
        ScriptRuntime.newObject((Object) interpretedFunction0, context1, (Scriptable) importerTopLevel0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Interpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Context context0 = new Context();
      ScriptRuntime.addInstructionCount(context0, 12);
      assertFalse(context0.isGeneratingDebugChanged());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test029()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ScriptRuntime.addInstructionCount(context0, 5);
      assertEquals(0, context0.getLanguageVersion());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test030()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      NativeWith nativeWith0 = new NativeWith(nativeContinuation0, importerTopLevel0);
      NativeArray nativeArray0 = new NativeArray(9221120237041090560L);
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeArray0, false);
      NativeGenerator nativeGenerator1 = (NativeGenerator)ScriptRuntime.checkDynamicScope(nativeWith0, nativeGenerator0);
      assertEquals(4, ScriptableObject.PERMANENT);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      NativeGenerator nativeGenerator0 = NativeGenerator.init((ScriptableObject) null, true);
      NativeGenerator nativeGenerator1 = (NativeGenerator)ScriptRuntime.checkDynamicScope(nativeGenerator0, (Scriptable) null);
      assertEquals(1, ScriptableObject.READONLY);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeJavaTopPackage nativeJavaTopPackage1 = (NativeJavaTopPackage)ScriptRuntime.checkDynamicScope(nativeJavaTopPackage0, nativeJavaTopPackage0);
      assertTrue(nativeJavaTopPackage1.isEmpty());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test033()  throws Throwable  {
      BaseFunction baseFunction0 = ScriptRuntime.typeErrorThrower();
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.doTopCall(baseFunction0, context0, baseFunction0, baseFunction0, context0.emptyArgs);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test034()  throws Throwable  {
      ScriptRuntime scriptRuntime0 = new ScriptRuntime();
      boolean boolean0 = ScriptRuntime.cmp_LE(scriptRuntime0, scriptRuntime0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test035()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        ScriptRuntime.cmp_LE(context0, importerTopLevel0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test036()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeObject nativeObject0 = new NativeObject();
      // Undeclared exception!
      try { 
        ScriptRuntime.cmp_LE(nativeObject0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Long long0 = new Long((-4669L));
      boolean boolean0 = ScriptRuntime.cmp_LE(long0, long0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Short short0 = new Short((short) (-1849));
      boolean boolean0 = ScriptRuntime.cmp_LE(short0, (Object) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Integer integer0 = new Integer((-2710));
      boolean boolean0 = ScriptRuntime.cmp_LT("BIT@D", integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.cmp_LT("com.google.javascript.rhin.head.Context", "com.google.javascript.rhin.head.Context");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test041()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeCall nativeCall0 = ScriptRuntime.findFunctionActivation(context0, (Function) null);
      boolean boolean0 = ScriptRuntime.cmp_LT(context0, nativeCall0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Long long0 = new Long(4294967295L);
      Float float0 = new Float((double) 4294967295L);
      boolean boolean0 = ScriptRuntime.cmp_LT(long0, float0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test043()  throws Throwable  {
      Context context0 = Context.getContext();
      Long long0 = new Long((-644L));
      boolean boolean0 = ScriptRuntime.cmp_LT(long0, context0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        ScriptRuntime.in("getDate", (Object) null, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Can't use 'in' on a non-object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      Synchronizer synchronizer0 = new Synchronizer(importerTopLevel0);
      boolean boolean0 = ScriptRuntime.in(importerTopLevel0, synchronizer0, context0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test046()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      boolean boolean0 = ScriptRuntime.jsDelegatesTo(importerTopLevel0, importerTopLevel0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeWith nativeWith0 = new NativeWith(nativeJavaTopPackage0, nativeJavaTopPackage0);
      boolean boolean0 = ScriptRuntime.jsDelegatesTo(nativeWith0, nativeJavaTopPackage0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      TopLevel topLevel0 = new TopLevel();
      Class<NativeJavaObject> class0 = NativeJavaObject.class;
      JavaMembers javaMembers0 = new JavaMembers(topLevel0, class0, true);
      NativeJavaMethod nativeJavaMethod0 = javaMembers0.ctors;
      boolean boolean0 = ScriptRuntime.shallowEq(context0, nativeJavaMethod0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      NativeString nativeString0 = new NativeString("/nboV!");
      boolean boolean0 = ScriptRuntime.shallowEq(nativeString0, topLevel0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      boolean boolean0 = nativeCall0.sameValue((Object) null, nativeJavaClass0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      boolean boolean0 = ScriptRuntime.shallowEq("^Q/o4zN~'-NZSY", nativeJavaClass0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "error reporter");
      boolean boolean0 = ScriptRuntime.shallowEq("java/lang/StringBuffer", charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Short short0 = new Short((byte)12);
      boolean boolean0 = ScriptRuntime.shallowEq(short0, (Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Double double0 = new Double(274.9705392);
      Byte byte0 = new Byte((byte)80);
      boolean boolean0 = ScriptRuntime.shallowEq(double0, byte0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      NativeString nativeString0 = new NativeString("Dalvik");
      boolean boolean0 = ScriptRuntime.shallowEq((Object) null, nativeString0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Short short0 = new Short((short) (-5176));
      boolean boolean0 = ScriptRuntime.shallowEq(short0, short0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Double double0 = ScriptRuntime.NaNobj;
      boolean boolean0 = ScriptRuntime.shallowEq(double0, double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      boolean boolean0 = ScriptRuntime.shallowEq(context0, context0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("Q]q,G$d>vTXowQ-pMR");
      boolean boolean1 = ScriptRuntime.shallowEq(boolean0, (Object) null);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Boolean boolean0 = new Boolean("language version");
      boolean boolean1 = ScriptRuntime.eqNumber(0.0, boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test061()  throws Throwable  {
      Context context0 = Context.getContext();
      boolean boolean0 = ScriptRuntime.eqNumber(11, context0.generateObserverCount);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Double double0 = ScriptRuntime.NaNobj;
      boolean boolean0 = ScriptRuntime.eqNumber(180, double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Double double0 = new Double(433.3);
      boolean boolean0 = ScriptRuntime.eq(double0, double0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.eqNumber(Double.NaN, (Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      boolean boolean0 = ScriptRuntime.isPrimitive(importerTopLevel0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isPrimitive("42vCzq@1lL;B3$/");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Short short0 = new Short((short)1);
      boolean boolean0 = ScriptRuntime.isPrimitive(short0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      boolean boolean1 = ScriptRuntime.isPrimitive(boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isPrimitive((Object) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      NativeCall nativeCall0 = context0.currentActivationCall;
      boolean boolean0 = ScriptRuntime.eq(nativeCall0, "error reporter");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Context context0 = Context.enter();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      NativeWith nativeWith0 = new NativeWith(scriptableObject0, scriptableObject0);
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      boolean boolean0 = ScriptRuntime.eq(nativeWith0, nativeJavaTopPackage0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test072()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      boolean boolean0 = ScriptRuntime.eq(classLoader0, "javascript");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test073()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      boolean boolean0 = ScriptRuntime.eq(context0.generateObserverCount, context0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test074()  throws Throwable  {
      Context context0 = new Context();
      boolean boolean0 = ScriptRuntime.eq(context0.generateObserverCount, context0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Float float0 = new Float((float) 3);
      boolean boolean0 = ScriptRuntime.eq("language version", float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      boolean boolean0 = ScriptRuntime.eq(contextFactory0, contextFactory0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.eq((Object) null, (Object) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      NativeString nativeString0 = new NativeString("error reporter");
      Synchronizer synchronizer0 = new Synchronizer(nativeString0);
      // Undeclared exception!
      try { 
        ScriptRuntime.eqNumber(3538.9, synchronizer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Object's getDefaultValue() method returned an object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Class<Long> class0 = Long.class;
      Class class1 = (Class)ScriptRuntime.toPrimitive((Object) class0);
      assertFalse(class1.isAnnotation());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test080()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Object object0 = ScriptRuntime.propIncrDecr(importerTopLevel0, "error reporter", (Context) null, 1201);
      assertEquals(Double.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.propIncrDecr((Object) null, "Float", (Context) null, 98);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot read property \"java.lang.String@0000000001\" from null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      Scriptable scriptable0 = ScriptRuntime.enterWith(nativeError0, context0, nativeError0);
      Context context1 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.nameIncrDecr(scriptable0, "language version", context1, 53);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"language version\" is not defined.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      Scriptable scriptable0 = ScriptRuntime.enterWith(nativeError0, context0, nativeError0);
      // Undeclared exception!
      try { 
        ScriptRuntime.nameIncrDecr(scriptable0, "language version", context0, 53);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"language version\" is not defined.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Context context0 = new Context();
      ConsString consString0 = (ConsString)ScriptRuntime.add((Object) "com.google.javascript.rhino.head.Context@0000000001", (Object) context0, context0);
      assertEquals(102, consString0.length());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test085()  throws Throwable  {
      Context context0 = new Context();
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Delegator delegator0 = new Delegator(nativeJavaObject0);
      // Undeclared exception!
      try { 
        ScriptRuntime.add((Object) context0, (Object) delegator0, context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test086()  throws Throwable  {
      Context context0 = Context.getContext();
      Byte byte0 = new Byte((byte)49);
      Object object0 = ScriptRuntime.add((Object) byte0, (Object) byte0, context0);
      assertEquals(98.0, object0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      NativeError nativeError0 = new NativeError();
      // Undeclared exception!
      try { 
        ScriptRuntime.add((Object) nativeError0, (Object) context0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test088()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      String string0 = ScriptRuntime.typeofName(importerTopLevel0, "error reporter");
      assertEquals("undefined", string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Boolean boolean0 = new Boolean("java.lang.Double");
      EcmaError ecmaError0 = (EcmaError)ScriptRuntime.notFunctionError((Object) boolean0, (Object) null);
      assertEquals("null is not a function, it is boolean.", ecmaError0.getErrorMessage());
      assertEquals(0, ecmaError0.columnNumber());
      assertEquals(0, ecmaError0.lineNumber());
      assertEquals("TypeError", ecmaError0.getName());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test090()  throws Throwable  {
      Context context0 = Context.getContext();
      Float float0 = new Float((float) 120);
      EcmaError ecmaError0 = (EcmaError)ScriptRuntime.notFunctionError((Object) context0, (Object) float0, (String) null);
      assertEquals("TypeError", ecmaError0.getName());
      assertEquals(0, ecmaError0.getColumnNumber());
      assertEquals(0, ecmaError0.lineNumber());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      String string0 = ScriptRuntime.typeof(nativeJavaClass0);
      assertEquals("function", string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.defineConst("error reporter", nativeIterator_StopIteration0);
      // Undeclared exception!
      try { 
        JavaAdapter.getFunction(nativeIterator_StopIteration0, "error reporter");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000003 is not a function, it is undefined.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = ScriptRuntime.typeof((Object) null);
      assertEquals("object", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test094()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      // Undeclared exception!
      try { 
        ScriptRuntime.evalSpecial((Context) null, nativeError0, "language version", context0.emptyArgs, "error reporter", 130);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArray nativeArray0 = new NativeArray((-1));
      NativeString nativeString0 = new NativeString("bmZvi%>!2SzD9Nm");
      Object[] objectArray0 = new Object[2];
      Object object0 = ScriptRuntime.evalSpecial(context0, nativeString0, nativeArray0, objectArray0, "L`v`|<v,+;LQ0", 13);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.getApplyArguments((Context) null, "Float");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: second argument to Function.prototype.apply must be an array
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test097()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      NativeArray nativeArray0 = new NativeArray(140);
      Object[] objectArray0 = ScriptRuntime.getApplyArguments(context0, nativeArray0);
      assertEquals(140, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Object[] objectArray0 = ScriptRuntime.getApplyArguments((Context) null, (Object) null);
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test099()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      Synchronizer synchronizer0 = new Synchronizer((Scriptable) null);
      // Undeclared exception!
      try { 
        ScriptRuntime.applyOrCall(false, context0, synchronizer0, synchronizer0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test100()  throws Throwable  {
      Context context0 = Context.getContext();
      Synchronizer synchronizer0 = new Synchronizer((Scriptable) null, "error reporter");
      Object[] objectArray0 = new Object[9];
      // Undeclared exception!
      try { 
        ScriptRuntime.applyOrCall(false, context0, synchronizer0, synchronizer0, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Synchronizer", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test101()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.enter();
      Synchronizer synchronizer0 = new Synchronizer(nativeIterator_StopIteration0, context0);
      // Undeclared exception!
      try { 
        ScriptRuntime.applyOrCall(true, context0, nativeIterator_StopIteration0, synchronizer0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Context context0 = Context.enter();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      // Undeclared exception!
      try { 
        ScriptRuntime.newSpecial(context0, nativeBoolean0, context0.emptyArgs, nativeBoolean0, 0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test103()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      StringBuilder stringBuilder0 = new StringBuilder(3);
      NativeString nativeString0 = new NativeString(stringBuilder0);
      // Undeclared exception!
      try { 
        ScriptRuntime.callSpecial(context0, nativeJavaTopPackage0, nativeString0, context0.emptyArgs, nativeJavaTopPackage0, nativeString0, 1, "language version", (-1497));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeJavaTopPackage", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      BaseFunction baseFunction0 = new BaseFunction();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(baseFunction0, contextFactory0, 209, 1);
      // Undeclared exception!
      try { 
        ScriptRuntime.callSpecial(context0, idFunctionObject0, baseFunction0, context0.emptyArgs, baseFunction0, idFunctionObject0, (-1976), "X-HU+,]iH5zB(AN3`", 13);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Context context0 = Context.enter();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      // Undeclared exception!
      try { 
        ScriptRuntime.callRef((Callable) null, scriptableObject0, context0.emptyArgs, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: Function null can not be used as the left-hand side of assignment or as an operand of ++ or -- operator.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test106()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      Synchronizer synchronizer0 = new Synchronizer(topLevel0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      Context context1 = contextFactory0.enterContext(context0);
      ScriptRuntime.getValueFunctionAndThis(synchronizer0, context1);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ScriptRuntime.NoSuchMethodShim scriptRuntime_NoSuchMethodShim0 = new ScriptRuntime.NoSuchMethodShim((Callable) null, "java.util.Date");
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        ScriptRuntime.getValueFunctionAndThis(scriptRuntime_NoSuchMethodShim0, context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.getValueFunctionAndThis(contextFactory0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type com.google.javascript.rhino.head.ContextFactory
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Boolean boolean0 = new Boolean("Y=5|OI0Q");
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.getElemFunctionAndThis("Y=5|OI0Q", boolean0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.getPropFunctionAndThis((Object) null, (String) null, (Context) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot call method \"null\" of null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test111()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeArray nativeArray0 = new NativeArray(3);
      // Undeclared exception!
      try { 
        ScriptRuntime.getNameFunctionAndThis("com.google.javascript.rhino.head.ImporterTopLevel", context0, nativeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"com.google.javascript.rhino.head.ImporterTopLevel\" is not defined.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.getCurrentContext();
      Object object0 = ScriptRuntime.strictSetName(nativeIterator_StopIteration0, nativeIterator_StopIteration0, context0, nativeIterator_StopIteration0, "__proto__");
      objectArray0[0] = object0;
      Object object1 = ScriptRuntime.enumInit(objectArray0[0], context0, 140);
      assertNotNull(object1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test113()  throws Throwable  {
      Context context0 = Context.getContext();
      ScriptRuntime.enumInit((Object) "", context0, false);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      Object object0 = ScriptRuntime.enumInit((Object) importerTopLevel0, context0, context0.FEATURE_PARENT_PROTO_PROPRTIES);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test115()  throws Throwable  {
      Context context0 = new Context();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      Object object0 = ScriptRuntime.enumInit((Object) importerTopLevel0, context0, 3);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test116()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeArray nativeArray0 = new NativeArray(100L);
      Synchronizer synchronizer0 = new Synchronizer(nativeArray0);
      Object object0 = ScriptRuntime.enumInit((Object) synchronizer0, context0, true);
      // Undeclared exception!
      try { 
        ScriptRuntime.enumValue(object0, context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Context context0 = new Context();
      Object object0 = ScriptRuntime.enumInit((Object) null, context0, false);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test118()  throws Throwable  {
      Context context0 = new Context();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeWith nativeWith0 = new NativeWith(nativeJavaTopPackage0, nativeJavaTopPackage0);
      // Undeclared exception!
      try { 
        ScriptRuntime.enumInit((Object) nativeWith0, context0, 170);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Class<IdFunctionObject> class0 = IdFunctionObject.class;
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass(importerTopLevel0, class0);
      ImporterTopLevel importerTopLevel1 = (ImporterTopLevel)ScriptRuntime.setConst(nativeJavaClass0, importerTopLevel0, context0, "error reporter");
      assertEquals(13, ScriptableObject.CONST);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test120()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.strictSetName((Scriptable) null, "BITAND", context0, (Scriptable) null, "error reporter");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: Assignment to undefined \"error reporter\" in strict mode
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test121()  throws Throwable  {
      Context context0 = Context.getContext();
      TopLevel topLevel0 = new TopLevel();
      Object object0 = ScriptRuntime.setName((Scriptable) null, (Object) null, context0, topLevel0, "error reporter");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test122()  throws Throwable  {
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      // Undeclared exception!
      try { 
        ScriptRuntime.typeofName(nativeJavaTopPackage0, "n-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      Scriptable scriptable0 = ScriptRuntime.enterWith(nativeError0, context0, nativeError0);
      Synchronizer synchronizer0 = new Synchronizer(scriptable0, (Object) null);
      Scriptable scriptable1 = ScriptRuntime.bind(context0, synchronizer0, "error reporter");
      assertNull(scriptable1);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      Scriptable scriptable0 = ScriptRuntime.enterWith(nativeError0, context0, nativeError0);
      ScriptableObject.putProperty(scriptable0, "error reporter", (Object) contextFactory0);
      Synchronizer synchronizer0 = new Synchronizer(scriptable0, (Object) null);
      Scriptable scriptable1 = ScriptRuntime.bind(context0, synchronizer0, "error reporter");
      assertSame(synchronizer0, scriptable1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test125()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        ScriptRuntime.newObjectLiteral(context0.emptyArgs, context0.emptyArgs, (int[]) null, context0, (Scriptable) nativeIterator_StopIteration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test126()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Context context0 = new Context();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeJavaPackage nativeJavaPackage0 = nativeJavaTopPackage0.forcePackage(")q}S\"%A,.m}c8", nativeError0);
      // Undeclared exception!
      try { 
        ScriptRuntime.getNameFunctionAndThis("a)", context0, nativeJavaPackage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000008 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      Scriptable scriptable0 = ScriptRuntime.enterWith(nativeError0, context0, nativeError0);
      // Undeclared exception!
      try { 
        ScriptRuntime.getNameFunctionAndThis("error reporter", context0, scriptable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"error reporter\" is not defined.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.name(context0, nativeError0, "language version");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"language version\" is not defined.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test129()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeNumber nativeNumber0 = new NativeNumber(4.294967296E9);
      // Undeclared exception!
      try { 
        context0.newArray((Scriptable) nativeNumber0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.delete((Object) null, (Object) null, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot delete property \"null\" of null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext((Context) null);
      Object object0 = ScriptRuntime.delete((Object) null, (Object) null, context0, true);
      assertEquals(true, object0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.delete((Object) null, (Object) contextFactory0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot delete property \"com.google.javascript.rhino.head.ContextFactory@0000000002\" of null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isSpecialProperty("Context");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      // Undeclared exception!
      try { 
        ScriptRuntime.hasObjectElem(delegator0, "BITAND", context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.enter();
      Byte byte0 = new Byte((byte) (-76));
      boolean boolean0 = ScriptRuntime.deleteObjectElem(nativeIterator_StopIteration0, byte0, context0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      NativeNumber nativeNumber0 = new NativeNumber(2);
      Delegator delegator0 = new Delegator(nativeNumber0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      Object object0 = ScriptRuntime.setObjectIndex((Object) topLevel0, (double) 13, (Object) delegator0, context0);
      assertSame(delegator0, object0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(2);
      Delegator delegator0 = new Delegator(nativeNumber0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.setObjectIndex((Object) null, (double) 13, (Object) delegator0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot set property \"java.lang.String@0000000003\" of null to \"com.google.javascript.rhino.head.Delegator@0000000002\"
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Context context0 = Context.enter();
      Float float0 = new Float((float) 170);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      // Undeclared exception!
      try { 
        ScriptRuntime.setObjectProp((Object) importerTopLevel0, (String) null, (Object) float0, context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.setObjectElem((Object) null, (Object) null, (Object) "Float", (Context) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot set property \"null\" of null to \"Float\"
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(0.0);
      Context context0 = Context.enter((Context) null);
      Object object0 = ScriptRuntime.getObjectIndex((Object) nativeNumber0, (double) 1, context0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test141()  throws Throwable  {
      Float float0 = new Float((double) 2);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      Context context1 = contextFactory0.enterContext(context0);
      ScriptRuntime.getObjectIndex((Object) float0, (-639.816246), context1);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Context context0 = new Context();
      TopLevel topLevel0 = new TopLevel();
      Object object0 = ScriptRuntime.getObjectPropNoWarn(topLevel0, "com.googleFjavascript.rhino.head.Context", context0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test143()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeArray nativeArray0 = new NativeArray((-1712L));
      // Undeclared exception!
      try { 
        ScriptRuntime.getObjectProp((Object) null, "language version", context0, (Scriptable) nativeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot read property \"java.lang.String@0000000002\" from null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        ScriptRuntime.getObjectProp((Object) null, "n657WTG", context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot read property \"java.lang.String@0000000002\" from null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Context context0 = new Context();
      TopLevel topLevel0 = new TopLevel();
      Object object0 = ScriptRuntime.getObjectProp((Object) topLevel0, "language version", context0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ContextFactory contextFactory0 = new ContextFactory();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      NativeJavaPackage nativeJavaPackage0 = nativeJavaTopPackage0.forcePackage("language version", importerTopLevel0);
      ScriptRuntime.getObjectElem((Object) nativeJavaPackage0, (Object) contextFactory0, context0, (Scriptable) importerTopLevel0);
      assertFalse(nativeJavaPackage0.isEmpty());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test147()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Object object0 = ScriptRuntime.getObjectElem((Scriptable) nativeIterator_StopIteration0, (Object) context0.FEATURE_STRICT_EVAL, context0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Context context0 = new Context();
      NativeArray nativeArray0 = new NativeArray(10);
      Float float0 = new Float(2445.8914F);
      ScriptableObject scriptableObject0 = nativeArray0.getOwnPropertyDescriptor(context0, float0);
      assertNull(scriptableObject0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Object object0 = ScriptRuntime.getIndexObject(5);
      assertEquals(5, object0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Object object0 = ScriptRuntime.getIndexObject(Double.NaN);
      assertEquals("NaN", object0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Object object0 = ScriptRuntime.getIndexObject("language version");
      assertEquals("language version", object0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      long long0 = ScriptRuntime.testUint32String("2@r*cf4Y%");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      long long0 = ScriptRuntime.testUint32String("__parent__");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      long long0 = ScriptRuntime.testUint32String("*L'2,)49");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      long long0 = ScriptRuntime.testUint32String("error reporter");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      long long0 = ScriptRuntime.indexFromString("8y~");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Object object0 = ScriptRuntime.getIndexObject("0");
      assertEquals(0, object0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      long long0 = ScriptRuntime.indexFromString("7xfb,NAf7G-6$}5K");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArray nativeArray0 = new NativeArray(150);
      ScriptableObject scriptableObject0 = nativeArray0.getOwnPropertyDescriptor(context0, "170");
      assertNull(scriptableObject0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      long long0 = ScriptRuntime.indexFromString("-+mXlIe4}r");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      boolean boolean0 = ScriptRuntime.deleteObjectElem(nativeIterator_StopIteration0, "", context0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      // Undeclared exception!
      try { 
        ScriptRuntime.newObject(context0, (Scriptable) importerTopLevel0, context0.languageVersionProperty, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Constructor for \"language version\" not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test163()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ScriptRuntime.searchDefaultNamespace(context0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      char char0 = ScriptRuntime.toUint16(".");
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Float float0 = new Float((float) 3);
      char char0 = ScriptRuntime.toUint16(float0);
      assertEquals('\u0003', char0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Double double0 = new Double(433.3);
      char char0 = ScriptRuntime.toUint16(double0);
      assertEquals('\u01B1', char0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      long long0 = ScriptRuntime.toUint32((-374.272));
      assertEquals(4294966922L, long0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test168()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      Object[] objectArray0 = ScriptRuntime.getArrayElements(nativeCall0);
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      int int0 = ScriptRuntime.toInt32(5867.0301);
      assertEquals(5867, int0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      int int0 = ScriptRuntime.toInt32((-28.05881622890903));
      assertEquals((-28), int0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      int int0 = ScriptRuntime.toInt32(Double.POSITIVE_INFINITY);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      int int0 = ScriptRuntime.toInt32(Double.NaN);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ScriptRuntime scriptRuntime0 = new ScriptRuntime();
      int int0 = ScriptRuntime.toInt32(scriptRuntime0.emptyArgs, 4);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      int int0 = ScriptRuntime.toInt32(objectArray0, 2);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test175()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.toInteger(context0.emptyArgs, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ScriptRuntime scriptRuntime0 = new ScriptRuntime();
      double double0 = ScriptRuntime.toInteger((Object[]) scriptRuntime0.emptyStrings, 2);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      double double0 = ScriptRuntime.toInteger((-2331.64182));
      assertEquals((-2331.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      double double0 = ScriptRuntime.toInteger(Double.NEGATIVE_INFINITY);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      double double0 = ScriptRuntime.toInteger(0.289529654602168);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test180()  throws Throwable  {
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Number;
      Context context0 = new Context();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      NativeObject nativeObject0 = (NativeObject)importerTopLevel0.getPrototype();
      ScriptRuntime.newBuiltinObject(context0, nativeObject0, topLevel_Builtins0, context0.emptyArgs);
      assertFalse(nativeObject0.isSealed());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test181()  throws Throwable  {
      ScriptRuntime scriptRuntime0 = new ScriptRuntime();
      Context context0 = new Context();
      NativeArray nativeArray0 = new NativeArray(scriptRuntime0.emptyArgs);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      Delegator delegator0 = new Delegator();
      Object object0 = ScriptRuntime.call(context0, nativeJavaTopPackage0, delegator0, scriptRuntime0.emptyArgs, nativeArray0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test182()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      // Undeclared exception!
      try { 
        ScriptRuntime.call(context0, nativeJavaTopPackage0, (Object) null, context0.emptyArgs, nativeJavaTopPackage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot call method \"java.lang.String@0000000002\" of null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Class<NativeJavaTopPackage> class0 = NativeJavaTopPackage.class;
      ImporterTopLevel importerTopLevel1 = (ImporterTopLevel)ScriptRuntime.toObject(context0, (Scriptable) importerTopLevel0, (Object) importerTopLevel0, (Class<?>) class0);
      assertEquals("object", importerTopLevel1.getTypeOf());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test184()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      Class<NativeJavaTopPackage> class0 = NativeJavaTopPackage.class;
      // Undeclared exception!
      try { 
        ScriptRuntime.toObject((Scriptable) topLevel0, (Object) null, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot convert null to an object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Context context0 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        ScriptRuntime.getObjectElem((Object) null, (Object) nativeIterator_StopIteration0, context0, (Scriptable) nativeIterator_StopIteration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot read property \"com.google.javascript.rhino.head.NativeIterator$StopIteration@0000000002\" from null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test186()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Context context0 = Context.getContext();
      Object object0 = ScriptRuntime.getObjectIndex((Scriptable) nativeError0, 53, context0);
      // Undeclared exception!
      try { 
        ScriptRuntime.getObjectPropNoWarn(object0, "string", context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot read property \"java.lang.String@0000000003\" from undefined
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = (NativeIterator.StopIteration)ScriptRuntime.toObject((Scriptable) null, (Object) nativeIterator_StopIteration0);
      assertEquals(4, ScriptableObject.PERMANENT);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test188()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Float float0 = new Float((float) 170);
      // Undeclared exception!
      try { 
        Context.toObject((Object) float0, (Scriptable) nativeJavaObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeJavaObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test189()  throws Throwable  {
      Context context0 = Context.getContext();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      TopLevel topLevel0 = new TopLevel();
      ScriptRuntime.setName(topLevel0, contextFactory0, context0, topLevel0, "language version");
      String string0 = ScriptRuntime.defaultObjectToSource(context0, topLevel0, topLevel0, context0.emptyArgs);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test190()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      TopLevel topLevel0 = new TopLevel();
      String string0 = ScriptRuntime.defaultObjectToSource(context0, (Scriptable) null, topLevel0, context0.emptyArgs);
      assertEquals("{}", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test191()  throws Throwable  {
      Context context0 = Context.getContext();
      TopLevel topLevel0 = new TopLevel();
      // Undeclared exception!
      try { 
        ScriptRuntime.defaultObjectToSource(context0, topLevel0, (Scriptable) null, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test192()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      BaseFunction baseFunction0 = new BaseFunction();
      // Undeclared exception!
      try { 
        ScriptRuntime.uneval(context0, nativeIterator_StopIteration0, baseFunction0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test193()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      InterpreterData interpreterData0 = new InterpreterData(3238, "error reporter", "language version", true);
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createScript(interpreterData0, (Object) null);
      Short short0 = new Short((short)84);
      String string0 = ScriptRuntime.uneval(context0, interpretedFunction0, short0);
      assertEquals("84", string0);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext((Context) null);
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      String string0 = ScriptRuntime.uneval((Context) null, scriptableObject0, (Object) null);
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      String string0 = ScriptRuntime.numberToString(120, 8);
      assertEquals("170", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test196()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.numberToString(2090.459, 94);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal radix 94.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test197()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.numberToString((-2538.6133443), (-2205));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal radix -2205.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      String string0 = ScriptRuntime.toString(-0.0);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      String string0 = ScriptRuntime.numberToString(Double.NEGATIVE_INFINITY, 6);
      assertEquals("-Infinity", string0);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      String string0 = ScriptRuntime.toString(Double.POSITIVE_INFINITY);
      assertEquals("Infinity", string0);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      // Undeclared exception!
      try { 
        ScriptRuntime.toString(objectArray0, (-531));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -531
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ScriptRuntime scriptRuntime0 = new ScriptRuntime();
      String string0 = ScriptRuntime.toString((Object[]) scriptRuntime0.emptyStrings, 0);
      assertEquals("undefined", string0);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      // Undeclared exception!
      try { 
        ScriptRuntime.enterDotQuery(nativeJavaTopPackage0, nativeJavaTopPackage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: [JavaPackage ] is not an xml object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test204()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeNumber nativeNumber0 = new NativeNumber(11);
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Context context0 = Context.enter();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      NativeWith nativeWith0 = new NativeWith(scriptableObject0, scriptableObject0);
      String string0 = ScriptRuntime.uneval(context0, scriptableObject0, nativeWith0);
      assertEquals("({})", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test206()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Object object0 = ScriptRuntime.getObjectProp((Object) 8, "language version", context0, (Scriptable) nativeIterator_StopIteration0);
      boolean boolean0 = ScriptRuntime.deleteObjectElem(importerTopLevel0, object0, context0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Long long0 = new Long((-778L));
      Context context0 = Context.enter();
      ConsString consString0 = (ConsString)ScriptRuntime.add((Object) long0, (Object) "Dalvik", context0);
      assertEquals(10, consString0.length());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isValidIdentifierName("BITD");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isValidIdentifierName(">.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isValidIdentifierName("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      String string0 = ScriptRuntime.escapeString("rQ(lrnx\"o&t");
      assertEquals("r\\x7fQ(lrnx\\\"o&t", string0);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      String string0 = ScriptRuntime.escapeString("\bc).G!w");
      assertEquals("\\bc).G!w", string0);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.escapeString("qgkTs2", '#');
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test214()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.padArguments(context0.emptyArgs, (-948));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Object[] objectArray1 = ScriptRuntime.padArguments(objectArray0, 780);
      assertEquals(780, objectArray1.length);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      double double0 = ScriptRuntime.toNumber("}ppLN<E");
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArray nativeArray0 = new NativeArray(160);
      NativeArray nativeArray1 = (NativeArray)context0.initStandardObjects((ScriptableObject) nativeArray0);
      assertEquals(13, ScriptableObject.CONST);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      double double0 = ScriptRuntime.toNumber("gAy(/xZy");
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      double double0 = ScriptRuntime.toInteger((Object) "G3/4&=5z=J5v^+ ");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      double double0 = ScriptRuntime.toNumber("-lcNI0<Xt9e+t?");
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      double double0 = ScriptRuntime.toNumber((Object) "+Bx3NE89#`L;s2");
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      double double0 = ScriptRuntime.toNumber("");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      double double0 = ScriptRuntime.stringToNumber("multiline", 2, (-762));
      assertEquals(1.1728308360840124E19, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      double double0 = ScriptRuntime.stringToNumber(">`{yx,>zgf^ZH^", 9, 160);
      assertEquals(9.991042759E9, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      double double0 = ScriptRuntime.stringToNumber("819.2467499666764", 0, 150);
      assertEquals(180159.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      String string0 = "\\u";
      double double0 = ScriptRuntime.stringToNumber(string0, 121, 12);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      double double0 = ScriptRuntime.stringToNumber("error reporter", 8, 8);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test228()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        ScriptRuntime.toNumber(context0.emptyArgs, (-2769));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test229()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.toNumber(context0.emptyArgs, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      double double0 = ScriptRuntime.toInteger((Object) nativeJavaTopPackage0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Boolean boolean0 = new Boolean("Y=5|OI0Q");
      double double0 = ScriptRuntime.toInteger((Object) boolean0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "language version");
      boolean boolean0 = ScriptRuntime.eqNumber(150, charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test233()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      boolean boolean0 = ScriptableObject.isTrue(nativeContinuation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test234()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      boolean boolean0 = ScriptRuntime.toBoolean(classLoader0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Double double0 = new Double((-657.88593293579));
      boolean boolean0 = ScriptRuntime.toBoolean(double0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.toBoolean((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(100L);
      Context context0 = new Context();
      Synchronizer synchronizer0 = new Synchronizer(nativeArray0);
      BoundFunction boundFunction0 = new BoundFunction(context0, synchronizer0, synchronizer0, nativeArray0, context0.emptyArgs);
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test238()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeWith nativeWith0 = new NativeWith(nativeJavaTopPackage0, nativeJavaTopPackage0);
      boolean boolean0 = ScriptRuntime.toBoolean(nativeWith0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Boolean boolean0 = ScriptRuntime.wrapBoolean(false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isStrWhiteSpaceChar(8232);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isStrWhiteSpaceChar(160);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      double double0 = ScriptRuntime.toNumber(" SY");
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isStrWhiteSpaceChar(12);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isStrWhiteSpaceChar(11);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isStrWhiteSpaceChar(10);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isStrWhiteSpaceChar(9);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSWhitespaceOrLineTerminator(13);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSLineTerminator(13);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSLineTerminator(10);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSLineTerminator(120);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSWhitespaceOrLineTerminator(2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test252()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ImporterTopLevel importerTopLevel1 = (ImporterTopLevel)context0.initStandardObjects((ScriptableObject) importerTopLevel0);
      assertEquals("object", importerTopLevel1.getTypeOf());
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Class<CharBuffer> class0 = CharBuffer.class;
      boolean boolean0 = ScriptRuntime.isRhinoRuntimeType(class0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Class<Byte> class0 = Byte.class;
      boolean boolean0 = ScriptRuntime.isRhinoRuntimeType(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Class<Boolean> class0 = Boolean.class;
      boolean boolean0 = ScriptRuntime.isRhinoRuntimeType(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Class<String> class0 = String.class;
      boolean boolean0 = ScriptRuntime.isRhinoRuntimeType(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Class<Boolean> class0 = Boolean.TYPE;
      boolean boolean0 = ScriptRuntime.isRhinoRuntimeType(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Class<Delegator> class0 = Delegator.class;
      boolean boolean0 = ScriptRuntime.isRhinoRuntimeType(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      ScriptRuntime.typeErrorThrower();
      BaseFunction baseFunction0 = ScriptRuntime.typeErrorThrower();
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      TopLevel topLevel0 = new TopLevel();
      NativeArray nativeArray0 = new NativeArray(160);
      ScriptRuntime.setObjectIndex((Object) topLevel0, (-84.48873380388206), (Object) nativeArray0, context0);
      assertFalse(topLevel0.isEmpty());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test261()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.escapeTextValue((Object) null, context0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // XML runtime not available
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      // Undeclared exception!
      try { 
        ScriptRuntime.leaveDotQuery(topLevel0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.head.TopLevel cannot be cast to com.google.javascript.rhino.head.NativeWith
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      BaseFunction baseFunction0 = ScriptRuntime.typeErrorThrower();
      Object[] objectArray0 = new Object[5];
      // Undeclared exception!
      try { 
        ScriptRuntime.newObjectLiteral(objectArray0, objectArray0, (Context) null, (Scriptable) baseFunction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.refGet((Ref) null, context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.refDel((Ref) null, (Context) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      Scriptable scriptable0 = ScriptRuntime.enterWith(nativeError0, context0, nativeError0);
      Synchronizer synchronizer0 = new Synchronizer(scriptable0, (Object) null);
      Class<Byte> class0 = Byte.class;
      Scriptable scriptable1 = ScriptRuntime.toObject(context0, (Scriptable) synchronizer0, (Object) context0.generateObserverCount, (Class<?>) class0);
      // Undeclared exception!
      try { 
        ScriptRuntime.callSpecial(context0, synchronizer0, scriptable1, context0.emptyArgs, synchronizer0, scriptable1, 2, "5u#T.~\")+&qOgm", 5);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.head.NativeWith cannot be cast to com.google.javascript.rhino.head.Function
         //
         verifyException("com.google.javascript.rhino.head.Synchronizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      // Undeclared exception!
      try { 
        NativeGlobal.constructError(context0, "com.google.javascript.rhino.head.InterfaceAdapter", "language version", (Scriptable) null, "language version", (-3221), 1972, "language version");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -3221
         //
         verifyException("com.google.javascript.rhino.head.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptRuntime.setObjectProp((Scriptable) importerTopLevel0, context0.languageVersionProperty, (Object) nativeIterator_StopIteration0, context0);
      // Undeclared exception!
      try { 
        ScriptRuntime.newObject(context0, (Scriptable) importerTopLevel0, context0.languageVersionProperty, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // \"language version\" is not a constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test269()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.escapeAttributeValue("RHINO USAGE WARNING: Missed Context.javaToJS() conversion:\nRhino runtime detected object ", context0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // XML runtime not available
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.setObjectProp((Object) null, "head", (Object) context0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot set property \"java.lang.String@0000000002\" of null to \"com.google.javascript.rhino.head.Context@0000000003\"
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber((-4669L));
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      boolean boolean0 = ScriptRuntime.hasObjectElem(nativeNumber0, context0.FEATURE_STRICT_VARS, context0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.refSet((Ref) null, (Object) null, context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Context context0 = new Context();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      // Undeclared exception!
      try { 
        ScriptRuntime.specialRef(contextFactory0, "language version", context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test274()  throws Throwable  {
      Byte byte0 = new Byte((byte)21);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.nameRef((Object) byte0, (Object) nativeJavaTopPackage0, context0, (Scriptable) nativeJavaTopPackage0, 118);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // XML runtime not available
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.exitActivationFunction(context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        ScriptRuntime.updateDotQuery(true, nativeJavaObject0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.head.NativeJavaObject cannot be cast to com.google.javascript.rhino.head.NativeWith
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Context context0 = Context.enter();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      boolean boolean0 = ScriptRuntime.cmp_LT(scriptableObject0, context0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.newSpecial(context0, nativeJavaObject0, context0.emptyArgs, nativeJavaObject0, 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: com.google.javascript.rhino.head.NativeJavaObject@0000000001 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Class<IdFunctionObject> class0 = IdFunctionObject.class;
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass(importerTopLevel0, class0);
      JavaScriptException javaScriptException0 = ScriptRuntime.throwError(context0, nativeJavaClass0, "error reporter");
      assertEquals(0, javaScriptException0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Double double0 = new Double(1900.0);
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      boolean boolean0 = ScriptRuntime.eq(double0, nativeJavaTopPackage0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test281()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.setDefaultNamespace((Object) null, context0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // XML runtime not available
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test282()  throws Throwable  {
      Context context0 = Context.enter();
      ScriptableObject scriptableObject0 = context0.initStandardObjects();
      NativeWith nativeWith0 = new NativeWith(scriptableObject0, scriptableObject0);
      // Undeclared exception!
      try { 
        ScriptRuntime.applyOrCall(true, context0, nativeWith0, scriptableObject0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        Context.reportRuntimeError4("bmZvi%>!2SzD9Nm", "com.google.javascript.rhino.head.Context@0000000001", context0, context0, "bmZvi%>!2SzD9Nm");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property bmZvi%>!2SzD9Nm
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      NativeString nativeString0 = new NativeString("jav)ia.vm.name");
      // Undeclared exception!
      try { 
        ScriptRuntime.leaveWith(nativeString0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.head.NativeString cannot be cast to com.google.javascript.rhino.head.NativeWith
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Delegator delegator0 = new Delegator(nativeError0);
      // Undeclared exception!
      try { 
        ScriptRuntime.setEnumNumbers(delegator0, false);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.head.Delegator cannot be cast to com.google.javascript.rhino.head.ScriptRuntime$IdEnumeration
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        ScriptRuntime.createFunctionActivation((NativeFunction) null, (Scriptable) null, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeCall", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test287()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      Synchronizer synchronizer0 = new Synchronizer(topLevel0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      ScriptRuntime.NoSuchMethodShim scriptRuntime_NoSuchMethodShim0 = new ScriptRuntime.NoSuchMethodShim(synchronizer0, "Context");
      // Undeclared exception!
      try { 
        ScriptRuntime.doTopCall(scriptRuntime_NoSuchMethodShim0, context0, topLevel0, synchronizer0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      BaseFunction baseFunction0 = ScriptRuntime.typeErrorThrower();
      assertNotNull(baseFunction0);
      
      int int0 = baseFunction0.getLength();
      assertEquals(0, int0);
  }
}
