/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 17 22:37:26 GMT 2019
 */

package org.joda.time.base;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeZone;
import org.joda.time.MonthDay;
import org.joda.time.YearMonth;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.tz.FixedDateTimeZone;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class BasePartial_ESTest extends BasePartial_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FixedDateTimeZone fixedDateTimeZone0 = (FixedDateTimeZone)DateTimeZone.UTC;
      MonthDay monthDay0 = new MonthDay((DateTimeZone) fixedDateTimeZone0);
      assertEquals(14, monthDay0.getDayOfMonth());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MonthDay monthDay0 = null;
      try {
        monthDay0 = new MonthDay("Types array must not contain null");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid format: \"Types array must not contain null\"
         //
         verifyException("org.joda.time.format.DateTimeFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      YearMonth yearMonth0 = new YearMonth(15778476000L);
      assertEquals(1970, yearMonth0.getYear());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MonthDay monthDay0 = null;
      try {
        monthDay0 = new MonthDay(2301, 2301);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value 2301 for monthOfYear must not be larger than 12
         //
         verifyException("org.joda.time.chrono.BaseChronology", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MonthDay monthDay0 = MonthDay.now();
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
      MonthDay monthDay1 = monthDay0.withChronologyRetainFields(buddhistChronology0);
      assertEquals(14, monthDay1.getDayOfMonth());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test5()  throws Throwable  {
      YearMonth yearMonth0 = new YearMonth();
      String string0 = yearMonth0.toString();
      assertEquals("2014-02", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test6()  throws Throwable  {
      YearMonth yearMonth0 = new YearMonth();
      YearMonth yearMonth1 = yearMonth0.minusMonths(1);
      assertEquals(2014, yearMonth1.getYear());
  }
}
