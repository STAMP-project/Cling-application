/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 15:05:38 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.Interpreter;
import com.google.javascript.rhino.head.InterpreterData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Interpreter_ESTest extends Interpreter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Interpreter.GeneratorState interpreter_GeneratorState0 = new Interpreter.GeneratorState((-11), (Object) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(2, "error reporter", "language version", true);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-61);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(37, ",Ks-k7Ak", ",Ks-k7Ak", false);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Context.enter();
      InterpreterData interpreterData0 = null;
      InterpretedFunction.createScript((InterpreterData) null, (Object) null);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData(2, "error reporter", "language version", false);
      byte[] byteArray0 = new byte[16];
      byteArray0[10] = (byte) (-27);
      context0.isActivationNeeded("");
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Context context0 = Context.enter();
      context0.getRegExpProxy();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData(2, "error reporter", "language version", false);
      byte[] byteArray0 = new byte[16];
      byteArray0[4] = (byte)83;
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData(2, "error reporter", "language version", false);
      byte[] byteArray0 = new byte[16];
      String[] stringArray0 = new String[5];
      stringArray0[0] = "language version";
      stringArray0[1] = "language version";
      stringArray0[2] = "[v.Xf(EoKO3!";
      stringArray0[3] = "error reporter";
      stringArray0[4] = "error reporter";
      interpreterData0.itsStringTable = stringArray0;
      byteArray0[10] = (byte) (-28);
      context0.isActivationNeeded("");
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Context.getCurrentContext();
      InterpreterData interpreterData0 = new InterpreterData(2, "error reporter", "language version", true);
      byte[] byteArray0 = new byte[13];
      byteArray0[1] = (byte)0;
      byteArray0[1] = (byte) (-49);
      interpreterData0.itsICode = byteArray0;
  }
}
