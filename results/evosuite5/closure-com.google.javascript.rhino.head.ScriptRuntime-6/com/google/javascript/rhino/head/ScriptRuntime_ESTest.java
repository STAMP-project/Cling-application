/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 25 08:50:55 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.BoundFunction;
import com.google.javascript.rhino.head.Callable;
import com.google.javascript.rhino.head.ConsString;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.Delegator;
import com.google.javascript.rhino.head.EcmaError;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.InterpreterData;
import com.google.javascript.rhino.head.MemberBox;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeBoolean;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeError;
import com.google.javascript.rhino.head.NativeFunction;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJavaClass;
import com.google.javascript.rhino.head.NativeJavaConstructor;
import com.google.javascript.rhino.head.NativeJavaMethod;
import com.google.javascript.rhino.head.NativeJavaObject;
import com.google.javascript.rhino.head.NativeJavaPackage;
import com.google.javascript.rhino.head.NativeJavaTopPackage;
import com.google.javascript.rhino.head.NativeMath;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.NativeWith;
import com.google.javascript.rhino.head.Ref;
import com.google.javascript.rhino.head.RegExpProxy;
import com.google.javascript.rhino.head.ScriptRuntime;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.Synchronizer;
import com.google.javascript.rhino.head.TopLevel;
import com.google.javascript.rhino.head.regexp.RegExpImpl;
import com.google.javascript.rhino.head.tools.shell.Global;
import java.nio.CharBuffer;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ScriptRuntime_ESTest extends ScriptRuntime_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String string0 = "language version#-2554(Function)";
      boolean boolean0 = ScriptRuntime.isGeneratedScript(string0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isGeneratedScript("language version");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String string0 = ScriptRuntime.makeUrlForGeneratedScript(false, "language version", 100);
      assertEquals("language version#100(Function)", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test003()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      long long0 = ScriptRuntime.lastUint32Result(context0);
      assertEquals(5L, long0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        ScriptRuntime.storeUint32Result(context0, (-1897L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Context context0 = Context.enter();
      ScriptRuntime.storeUint32Result(context0, 5);
      assertFalse(context0.generateObserverCount);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        ScriptRuntime.memberRef((Object) context0, (Object) context0, (Object) context0.FEATURE_DYNAMIC_SCOPE, context0, 5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: com.google.javascript.rhino.head.Context@0000000001 is not an xml object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.setRegExpProxy(context0, (RegExpProxy) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test008()  throws Throwable  {
      Context context0 = Context.getContext();
      RegExpImpl regExpImpl0 = new RegExpImpl();
      ScriptRuntime.setRegExpProxy(context0, regExpImpl0);
      assertEquals((-1), Context.VERSION_UNKNOWN);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      EcmaError ecmaError0 = (EcmaError)ScriptRuntime.notFunctionError((Object) null);
      assertEquals(0, ecmaError0.getColumnNumber());
      assertEquals("TypeError", ecmaError0.getName());
      assertEquals("null is not a function, it is object.", ecmaError0.getErrorMessage());
      assertEquals(0, ecmaError0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      EcmaError ecmaError0 = (EcmaError)ScriptRuntime.undefWriteError(contextFactory0, (Object) null, context0.FEATURE_NON_ECMA_GET_YEAR);
      assertEquals(0, ecmaError0.lineNumber());
      assertEquals("TypeError", ecmaError0.getName());
      assertEquals(0, ecmaError0.columnNumber());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      EcmaError ecmaError0 = (EcmaError)ScriptRuntime.undefCallError((Object) null, (Object) null);
      assertEquals("TypeError", ecmaError0.getName());
      assertEquals(0, ecmaError0.getColumnNumber());
      assertEquals("Cannot call method \"null\" of null", ecmaError0.getErrorMessage());
      assertEquals(0, ecmaError0.lineNumber());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test012()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      ScriptRuntime.checkDeprecated(context0, "if ");
      assertEquals(9, Context.FEATURE_STRICT_EVAL);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Context context0 = Context.enter();
      ScriptRuntime.checkDeprecated(context0, "if ");
      assertEquals(150, Context.VERSION_1_5);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Context context0 = Context.enter();
      boolean boolean0 = ScriptRuntime.isArrayObject(context0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-1897L));
      boolean boolean0 = ScriptRuntime.isArrayObject(nativeArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test016()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      String[] stringArray0 = Locale.getISOLanguages();
      Object[] objectArray0 = new Object[12];
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      // Undeclared exception!
      try { 
        ScriptRuntime.newObjectLiteral((Object[]) stringArray0, objectArray0, intArray0, context0, (Scriptable) importerTopLevel0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test017()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      String[] stringArray0 = Locale.getISOLanguages();
      Object[] objectArray0 = new Object[12];
      int[] intArray0 = new int[3];
      intArray0[2] = 13;
      // Undeclared exception!
      try { 
        ScriptRuntime.newObjectLiteral((Object[]) stringArray0, objectArray0, intArray0, context0, (Scriptable) importerTopLevel0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      int[] intArray0 = new int[2];
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        ScriptRuntime.newObjectLiteral(objectArray0, objectArray0, intArray0, context0, (Scriptable) importerTopLevel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test019()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test020()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      int[] intArray0 = new int[0];
      Context context0 = Context.getCurrentContext();
      NativeArray nativeArray1 = (NativeArray)ScriptRuntime.newArrayLiteral(objectArray0, intArray0, context0, nativeArray0);
      assertEquals(1L, nativeArray1.jsGet_length());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test021()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      Object[] objectArray0 = new Object[9];
      int[] intArray0 = new int[2];
      intArray0[1] = 8;
      Context context0 = Context.getCurrentContext();
      NativeArray nativeArray0 = (NativeArray)ScriptRuntime.newArrayLiteral(objectArray0, intArray0, context0, nativeCall0);
      assertEquals(11L, nativeArray0.getLength());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        ScriptRuntime.newArrayLiteral(objectArray0, (int[]) null, (Context) null, nativeJavaTopPackage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test023()  throws Throwable  {
      Context context0 = new Context();
      int[] intArray0 = new int[3];
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test024()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      Context context0 = Context.getCurrentContext();
      NativeString nativeString0 = new NativeString("error reporter");
      InterpreterData interpreterData0 = new InterpreterData(3, "?)-fVP#$0bm[oKuj", "?)-fVP#$0bm[oKuj", false);
      // Undeclared exception!
      try { 
        InterpretedFunction.createFunction(context0, nativeString0, interpreterData0, "?)-fVP#$0bm[oKuj");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.initFunction(context0, (Scriptable) null, (NativeFunction) null, 3, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        ScriptRuntime.enterDotQuery(nativeJavaObject0, nativeJavaObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.enterWith((Object) null, context0, nativeIterator_StopIteration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot apply \"with\" to null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      Scriptable scriptable0 = ScriptRuntime.enterWith(nativeIterator_StopIteration0, context0, nativeIterator_StopIteration0);
      assertEquals("With", scriptable0.getClassName());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.enter();
      MockThrowable mockThrowable0 = new MockThrowable("eval");
      // Undeclared exception!
      try { 
        ScriptRuntime.newCatchScope(mockThrowable0, nativeIterator_StopIteration0, "language version", context0, nativeIterator_StopIteration0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      MockThrowable mockThrowable0 = new MockThrowable("eval");
      // Undeclared exception!
      try { 
        ScriptRuntime.newCatchScope(mockThrowable0, (Scriptable) null, "language version", context0, (Scriptable) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      NativeCall nativeCall0 = ScriptRuntime.findFunctionActivation(context0, nativeContinuation0);
      assertNull(nativeCall0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test032()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Class<IdFunctionObject> class0 = IdFunctionObject.class;
      Scriptable scriptable0 = Context.toObject((Object) classLoader0, (Scriptable) importerTopLevel0, (Class<?>) class0);
      // Undeclared exception!
      try { 
        ScriptRuntime.enterActivationFunction(context0, scriptable0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test033()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null, classLoader0);
      // Undeclared exception!
      try { 
        ScriptRuntime.enterActivationFunction(context0, nativeJavaPackage0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test034()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        InterpretedFunction.createScript((InterpreterData) null, "=$,]KKmopgC}z_5J");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enterContext();
      InterpreterData interpreterData0 = new InterpreterData(8, "language version", "error reporter", false);
      // Undeclared exception!
      try { 
        InterpretedFunction.createScript(interpreterData0, interpreterData0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ScriptRuntime.addInstructionCount(context0, 801);
      assertEquals(3, Context.FEATURE_RESERVED_KEYWORD_AS_IDENTIFIER);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      contextFactory0.enterContext();
      ScriptRuntime.addInstructionCount(context0, 801);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      assertTrue(nativeBoolean0.isExtensible());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ImporterTopLevel importerTopLevel1 = (ImporterTopLevel)ScriptRuntime.checkDynamicScope(importerTopLevel0, (Scriptable) null);
      assertEquals(1, ScriptableObject.READONLY);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      MemberBox[] memberBoxArray0 = new MemberBox[0];
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(memberBoxArray0, (String) null);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      // Undeclared exception!
      try { 
        ScriptRuntime.doTopCall(nativeJavaMethod0, context0, nativeJavaMethod0, nativeJavaMethod0, context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No methods defined for call
         //
         verifyException("com.google.javascript.rhino.head.NativeJavaMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      ScriptRuntime.doTopCall(nativeContinuation0, context0, importerTopLevel0, nativeContinuation0, objectArray0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        ScriptRuntime.doTopCall((Callable) null, context0, (Scriptable) null, (Scriptable) null, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test042()  throws Throwable  {
      Double double0 = ScriptRuntime.NaNobj;
      Context.getCurrentContext();
      InterpreterData interpreterData0 = new InterpreterData(63, "error reporter", "T#\"vN", false);
      // Undeclared exception!
      try { 
        InterpretedFunction.createScript(interpreterData0, double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Context context0 = new Context();
      boolean boolean0 = ScriptRuntime.hasTopCall(context0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.cmp_LE(">y", ">y");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      Short short0 = new Short((short) (-2303));
      boolean boolean0 = ScriptRuntime.cmp_LE(nativeJavaClass0, short0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      boolean boolean0 = ScriptRuntime.cmp_LE(importerTopLevel0.EMPTY, importerTopLevel0.EMPTY);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.cmp_LT("0", "0");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      boolean boolean0 = ScriptRuntime.cmp_LT(nativeJavaClass0, nativeJavaClass0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test049()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.getTopCallScope(context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Long long0 = new Long((-5121L));
      boolean boolean0 = ScriptRuntime.cmp_LT(long0, long0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-74));
      boolean boolean0 = ScriptRuntime.cmp_LT(byte0, (Object) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "}@afv.gQ*|n6nVJ'QR");
      boolean boolean0 = ScriptRuntime.cmp_LT("}@afv.gQ*|n6nVJ'QR", charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test053()  throws Throwable  {
      MemberBox[] memberBoxArray0 = new MemberBox[0];
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(memberBoxArray0, (String) null);
      InterpreterData interpreterData0 = new InterpreterData((-242), (String) null, (String) null, true);
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createScript(interpreterData0, (Object) null);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      boolean boolean0 = ScriptRuntime.instanceOf(nativeJavaMethod0, interpretedFunction0, context0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        ScriptRuntime.instanceOf((Object) null, context0.generateObserverCount, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Can't use 'instanceof' on a non-object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      boolean boolean0 = ScriptRuntime.instanceOf(objectArray0[4], nativeArray0, (Context) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      Float float0 = new Float((float) 160);
      boolean boolean0 = ScriptRuntime.shallowEq(nativeJavaClass0, float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test057()  throws Throwable  {
      Context context0 = new Context();
      boolean boolean0 = ScriptRuntime.shallowEq(context0, 130);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Context context0 = new Context();
      boolean boolean0 = ScriptRuntime.shallowEq(context0.generateObserverCount, (Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CharSequence charSequence0 = ScriptRuntime.add((CharSequence) "*", (Object) null);
      boolean boolean0 = ScriptRuntime.shallowEq("*", charSequence0);
      assertEquals(5, charSequence0.length());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      boolean boolean0 = ScriptRuntime.shallowEq(nativeIterator_StopIteration0, importerTopLevel0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Float float0 = new Float((-91.577F));
      Byte byte0 = new Byte((byte)51);
      boolean boolean0 = ScriptRuntime.shallowEq(float0, byte0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Object object0 = ScriptRuntime.getIndexObject("0");
      assertEquals(0, object0);
      
      boolean boolean0 = ScriptRuntime.shallowEq(object0, "0");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      boolean boolean0 = ScriptRuntime.shallowEq((Object) null, context0.VERSION_1_3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.shallowEq(110, 110);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Context context0 = Context.enter();
      boolean boolean0 = ScriptRuntime.shallowEq(context0, context0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Double double0 = ScriptRuntime.NaNobj;
      boolean boolean0 = ScriptRuntime.shallowEq(double0, double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      boolean boolean0 = ScriptRuntime.shallowEq("n3]KngrBfcr", importerTopLevel0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        ScriptRuntime.eq(importerTopLevel0, "}@afv.gQ*|n6nVJ'QR");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      CharBuffer charBuffer0 = CharBuffer.allocate(12);
      boolean boolean1 = ScriptRuntime.eq(charBuffer0, boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      CharBuffer charBuffer0 = CharBuffer.allocate(12);
      boolean boolean1 = ScriptRuntime.eq(charBuffer0, boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "}@afv.gQ*|n6nVJ'QR");
      charBuffer0.get();
      boolean boolean0 = ScriptRuntime.eq(charBuffer0, "}@afv.gQ*|n6nVJ'QR");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "}@afv.gQ*|n6nVJ'QR");
      boolean boolean0 = ScriptRuntime.eq(charBuffer0, "}@afv.gQ*|n6nVJ'QR");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.eq("JsDJ/u>o7-2qCkEvA\"S", (Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Float float0 = new Float((-91.577F));
      Delegator delegator0 = new Delegator();
      // Undeclared exception!
      try { 
        ScriptRuntime.eq(delegator0, float0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Object's getDefaultValue() method returned an object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      boolean boolean1 = ScriptRuntime.eqNumber(7, boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.eqNumber(0L, "0");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Float float0 = new Float((-1746.8));
      boolean boolean0 = ScriptRuntime.eqNumber((-2352.2654), float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Float float0 = new Float((float) 2);
      boolean boolean0 = ScriptRuntime.eq(float0, float0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.eqNumber(0.0, (Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Context context0 = Context.enter();
      boolean boolean0 = ScriptRuntime.isPrimitive(context0.generateObserverCount);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isPrimitive("wo");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Float float0 = new Float((-91.577F));
      boolean boolean0 = ScriptRuntime.isPrimitive(float0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Context context0 = Context.enter();
      NativeCall nativeCall0 = new NativeCall();
      Object object0 = ScriptRuntime.getObjectIndex((Scriptable) nativeCall0, 4, context0);
      boolean boolean0 = ScriptRuntime.isPrimitive(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test084()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      boolean boolean0 = ScriptRuntime.isPrimitive(context0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isPrimitive((Object) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      boolean boolean0 = ScriptRuntime.eq(nativeJavaClass0, (Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      Double double0 = ScriptRuntime.NaNobj;
      boolean boolean0 = ScriptRuntime.eq(importerTopLevel0, double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      NativeJavaConstructor nativeJavaConstructor0 = new NativeJavaConstructor((MemberBox) null);
      boolean boolean0 = ScriptRuntime.eq(nativeJavaClass0, nativeJavaConstructor0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeCall nativeCall0 = new NativeCall();
      boolean boolean0 = ScriptRuntime.eq(importerTopLevel0, nativeCall0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test090()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      boolean boolean0 = ScriptRuntime.eq(context0, nativeBoolean0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test091()  throws Throwable  {
      RegExpImpl regExpImpl0 = new RegExpImpl();
      Boolean boolean0 = Boolean.TRUE;
      boolean boolean1 = ScriptRuntime.eq(boolean0, regExpImpl0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Class<Short> class0 = Short.TYPE;
      boolean boolean0 = ScriptRuntime.eq(class0, class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test093()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Double double0 = ScriptRuntime.NaNobj;
      boolean boolean0 = ScriptRuntime.eq(double0, context0.generateObserverCount);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      boolean boolean0 = ScriptRuntime.eq((Object) null, nativeError0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      // Undeclared exception!
      try { 
        ScriptRuntime.getObjectPropNoWarn(importerTopLevel0.UNINITIALIZED_CONST, "kA'7Ub|uPrc)qD7", context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.eq((Object) null, (Object) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1425);
      Long long0 = new Long(4294967295L);
      Synchronizer synchronizer0 = new Synchronizer((Scriptable) null, long0);
      // Undeclared exception!
      try { 
        ScriptRuntime.eq(synchronizer0, charBuffer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Object's getDefaultValue() method returned an object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Class<NativeIterator> class0 = NativeIterator.class;
      Context context1 = (Context)ScriptRuntime.toPrimitive((Object) context0, (Class<?>) class0);
      assertEquals(12, Context.FEATURE_WARNING_AS_ERROR);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test099()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.propIncrDecr((Object) null, "language version", context0, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot read property \"java.lang.String@0000000001\" from null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Context context0 = Context.enter();
      Double double0 = ScriptRuntime.NaNobj;
      // Undeclared exception!
      try { 
        ScriptRuntime.propIncrDecr(double0, "error reporter", context0, 1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test101()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      BaseFunction baseFunction0 = new BaseFunction(topLevel0, topLevel0);
      // Undeclared exception!
      try { 
        ScriptRuntime.nameIncrDecr((Scriptable) baseFunction0, "<init>", 46);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"<init>\" is not defined.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test102()  throws Throwable  {
      Long long0 = new Long((-1786L));
      Context context0 = Context.getContext();
      Object object0 = ScriptRuntime.add((Object) null, (Object) long0, context0);
      assertEquals((-1786.0), object0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.getCurrentContext();
      ConsString consString0 = (ConsString)ScriptRuntime.add((Object) " GMT+", (Object) contextFactory0, context0);
      assertEquals(63, consString0.length());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeString nativeString0 = new NativeString("error reporter");
      // Undeclared exception!
      try { 
        ScriptRuntime.add((Object) null, (Object) nativeString0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Context context0 = Context.enter();
      NativeError nativeError0 = new NativeError();
      // Undeclared exception!
      try { 
        ScriptRuntime.add((Object) nativeError0, (Object) nativeError0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Long long0 = new Long(0L);
      Context context0 = Context.enter();
      Object object0 = ScriptRuntime.add((Object) long0, (Object) long0, context0);
      assertEquals(0.0, object0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ConsString consString0 = (ConsString)ScriptRuntime.add((Object) contextFactory0, (Object) "JsDJ/u>o7-2qCkEvA\"S", context0);
      assertEquals(78, consString0.length());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Boolean boolean0 = new Boolean("\"");
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptable(boolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type boolean
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String string0 = ScriptRuntime.typeof("com.google.javascript.rhino.>ead.ImporterTopLevel");
      assertEquals("string", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      String string0 = ScriptRuntime.typeof(nativeJavaClass0);
      assertEquals("function", string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      NativeWith nativeWith0 = new NativeWith(nativeContinuation0, nativeContinuation0);
      // Undeclared exception!
      try { 
        ScriptRuntime.getValueFunctionAndThis(nativeWith0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: com.google.javascript.rhino.head.NativeWith@0000000003 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test112()  throws Throwable  {
      String string0 = "]:";
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("]:");
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.evalSpecial(context0, nativeJavaPackage0, string0, context0.emptyArgs, context0.errorReporterProperty, context0.VERSION_1_7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("error reporter", classLoader0);
      NativeString nativeString0 = new NativeString("error reporter");
      Object[] objectArray0 = new Object[4];
      Object object0 = ScriptRuntime.evalSpecial(context0, nativeJavaPackage0, nativeString0, objectArray0, "language version", 110);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test114()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      // Undeclared exception!
      try { 
        ScriptRuntime.applyOrCall(false, context0, importerTopLevel0, importerTopLevel0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArray nativeArray0 = new NativeArray(1);
      Object[] objectArray0 = ScriptRuntime.getApplyArguments(context0, nativeArray0);
      assertEquals(1, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CharSequence charSequence0 = ScriptRuntime.add((CharSequence) "*", (Object) "*");
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.getApplyArguments(context0, charSequence0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: second argument to Function.prototype.apply must be an array
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Object[] objectArray0 = ScriptRuntime.getApplyArguments((Context) null, (Object) null);
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test118()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeJavaConstructor nativeJavaConstructor0 = new NativeJavaConstructor((MemberBox) null);
      // Undeclared exception!
      try { 
        ScriptRuntime.applyOrCall(false, context0, nativeJavaTopPackage0, nativeJavaConstructor0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test119()  throws Throwable  {
      Context context0 = Context.enter();
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      // Undeclared exception!
      try { 
        ScriptRuntime.applyOrCall(true, context0, nativeJavaClass0, nativeJavaClass0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ScriptableObject scriptableObject0 = ScriptRuntime.getGlobal(context0);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) scriptableObject0;
      Object object0 = ScriptRuntime.applyOrCall(false, context0, scriptableObject0, nativeContinuation0, objectArray0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Context context0 = Context.enter();
      NativeObject nativeObject0 = new NativeObject();
      // Undeclared exception!
      try { 
        ScriptRuntime.newSpecial(context0, nativeObject0, context0.emptyArgs, nativeObject0, 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: com.google.javascript.rhino.head.NativeObject@0000000001 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      NativeObject nativeObject0 = new NativeObject();
      // Undeclared exception!
      try { 
        ScriptRuntime.newSpecial(context0, contextFactory0, context0.emptyArgs, nativeObject0, 150);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Context context0 = Context.enter();
      NativeObject nativeObject0 = new NativeObject();
      // Undeclared exception!
      try { 
        ScriptRuntime.newSpecial(context0, nativeObject0, context0.emptyArgs, nativeObject0, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: com.google.javascript.rhino.head.NativeObject@0000000001 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.newObject((Object) nativeJavaClass0, context0, (Scriptable) nativeJavaClass0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.Reflection", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test125()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        ScriptRuntime.callRef((Callable) null, nativeIterator_StopIteration0, context0.emptyArgs, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: Function null can not be used as the left-hand side of assignment or as an operand of ++ or -- operator.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.getValueFunctionAndThis(nativeContinuation0, context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeJavaConstructor nativeJavaConstructor0 = new NativeJavaConstructor((MemberBox) null);
      nativeJavaTopPackage0.setParentScope(nativeJavaConstructor0);
      Callable callable0 = ScriptRuntime.getValueFunctionAndThis(nativeJavaTopPackage0, context0);
      assertSame(nativeJavaTopPackage0, callable0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Context context0 = Context.enter();
      NativeArray nativeArray0 = new NativeArray(1);
      Synchronizer synchronizer0 = new Synchronizer(nativeArray0);
      // Undeclared exception!
      try { 
        ScriptRuntime.getValueFunctionAndThis(synchronizer0, context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Integer integer0 = new Integer(1394);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      Context context1 = Context.enter(context0, contextFactory0);
      // Undeclared exception!
      try { 
        ScriptRuntime.getElemFunctionAndThis(integer0, integer0, context1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Integer integer0 = new Integer(1394);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.getElemFunctionAndThis(integer0, integer0, context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test131()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.String;
      BaseFunction baseFunction0 = importerTopLevel0.getBuiltinCtor(topLevel_Builtins0);
      // Undeclared exception!
      try { 
        ScriptRuntime.getNameFunctionAndThis("language version", context0, baseFunction0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"language version\" is not defined.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test132()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.getTopCallScope(context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.enumInit((Object) "eval", context0, 4);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Object object0 = ScriptRuntime.enumInit((Object) nativeIterator_StopIteration0, context0, 3);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version");
      // Undeclared exception!
      try { 
        ScriptRuntime.enumInit((Object) nativeJavaPackage0, context0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      Object object0 = ScriptRuntime.enumInit((Object) null, context0, false);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.enter();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeJavaPackage nativeJavaPackage0 = nativeJavaTopPackage0.forcePackage("error reporter", nativeIterator_StopIteration0);
      // Undeclared exception!
      try { 
        ScriptRuntime.enumInit((Object) nativeJavaPackage0, context0, 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Invalid iterator value
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test138()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Context context1 = (Context)ScriptRuntime.setConst(importerTopLevel0, context0, context0, "nh53.twI+wdQg8");
      assertEquals(6, Context.FEATURE_E4X);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      Object object0 = ScriptRuntime.strictSetName(importerTopLevel0, "c#GedC\"Z] \"", context0, importerTopLevel0, "language version");
      assertEquals("c#GedC\"Z] \"", object0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CharSequence charSequence0 = ScriptRuntime.add((CharSequence) "*", (Object) null);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.strictSetName((Scriptable) null, charSequence0, context0, (Scriptable) null, "error reporter");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: Assignment to undefined \"error reporter\" in strict mode
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test141()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      Context context0 = Context.getCurrentContext();
      Object object0 = ScriptRuntime.setName((Scriptable) null, (Object) null, context0, nativeCall0, "error reporter");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test142()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context1 = (Context)ScriptRuntime.setName(nativeIterator_StopIteration0, context0, context0, nativeIterator_StopIteration0, "language version");
      assertEquals(0, context1.getLanguageVersion());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      String string0 = ScriptRuntime.typeofName(importerTopLevel0, "Ux\"MWSZXXW!Y]`v");
      assertEquals("undefined", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test144()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.newArrayLiteral(context0.emptyArgs, (int[]) null, context0, nativeIterator_StopIteration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test145()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData((-242), (String) null, (String) null, true);
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createScript(interpreterData0, (Object) null);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      importerTopLevel0.exportAsJSClass(9, interpretedFunction0, false);
      // Undeclared exception!
      try { 
        ScriptRuntime.name(context0, importerTopLevel0, "t(F/CFS8S`[LZd\"%x");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ReferenceError: \"t(F/CFS8S`[LZd\"%x\" is not defined.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.delete((Object) null, (Object) context0, context0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot delete property \"com.google.javascript.rhino.head.Context@0000000001\" of null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Object object0 = ScriptRuntime.delete((Object) null, (Object) null, (Context) null, true);
      assertEquals(true, object0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.delete((Object) null, (Object) null, (Context) null, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot delete property \"null\" of null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isSpecialProperty("__parent__");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Context context0 = Context.enter();
      Delegator delegator0 = new Delegator();
      Float float0 = new Float((double) 1);
      // Undeclared exception!
      try { 
        ScriptRuntime.hasObjectElem(delegator0, float0, context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test151()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("]:");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = Context.enter();
      boolean boolean0 = ScriptRuntime.deleteObjectElem(nativeJavaPackage0, contextFactory0, context0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.setObjectIndex((Object) null, 3515.2734661, (Object) null, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot set property \"java.lang.String@0000000001\" of null to \"null\"
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      BaseFunction baseFunction0 = ScriptRuntime.typeErrorThrower();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.setObjectProp((Object) null, "__proto__", (Object) baseFunction0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot set property \"java.lang.String@0000000002\" of null to \"com.google.javascript.rhino.head.ScriptRuntime$1@0000000001\"
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test154()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Context context0 = Context.getContext();
      Object object0 = ScriptRuntime.setObjectProp((Object) importerTopLevel0, (String) null, (Object) importerTopLevel0, context0);
      assertSame(object0, importerTopLevel0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      // Undeclared exception!
      try { 
        ScriptRuntime.setObjectElem((Object) null, (Object) context0, (Object) null, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot set property \"com.google.javascript.rhino.head.Context@0000000002\" of null to \"null\"
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test156()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.getObjectPropNoWarn((Object) null, "language version", context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot read property \"java.lang.String@0000000001\" from null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      String string0 = ScriptRuntime.typeofName(importerTopLevel0, "Infinity");
      assertEquals("number", string0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Context context0 = new Context();
      NativeCall nativeCall0 = new NativeCall();
      Object object0 = ScriptRuntime.getObjectProp((Object) "3", "O5[kQ9;I|!tYn6Fp8g", context0, (Scriptable) nativeCall0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.getObjectProp((Object) null, "!G/U:{", context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot read property \"java.lang.String@0000000001\" from null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test160()  throws Throwable  {
      Long long0 = new Long(8233);
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.getObjectProp((Object) long0, "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.getObjectElem((Object) null, (Object) null, context0, (Scriptable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot read property \"null\" from null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Object object0 = ScriptRuntime.getIndexObject(127.0);
      assertEquals(127, object0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      long long0 = ScriptRuntime.testUint32String("3");
      assertEquals(3L, long0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      long long0 = ScriptRuntime.testUint32String("3is,q'");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      long long0 = ScriptRuntime.testUint32String("/5Zienkrj");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      long long0 = ScriptRuntime.testUint32String("this node type has no body");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      long long0 = ScriptRuntime.testUint32String("vi");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      long long0 = ScriptRuntime.indexFromString("7@Rjek(sK");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test169()  throws Throwable  {
      Object object0 = ScriptRuntime.getIndexObject("3");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.getCurrentContext();
      Object object1 = ScriptRuntime.add(object0, (Object) contextFactory0, context0);
      assertEquals(Double.NaN, object1);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      long long0 = ScriptRuntime.indexFromString("5 dG,Wlq=xN:i-fN7eu");
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test171()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.elemIncrDecr("0", "0", context0, 1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Object object0 = ScriptRuntime.getIndexObject("!");
      assertEquals("!", object0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Object object0 = ScriptRuntime.getIndexObject("");
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.newObject(context0, (Scriptable) nativeIterator_StopIteration0, "language version", context0.emptyArgs);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Constructor for \"language version\" not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.searchDefaultNamespace(context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.setDefaultNamespace(context0, context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Float float0 = new Float(0.0F);
      char char0 = ScriptRuntime.toUint16(float0);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      long long0 = ScriptRuntime.toUint32((-1384.1755768106268));
      assertEquals(4294965912L, long0);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      long long0 = ScriptRuntime.toUint32(Double.NEGATIVE_INFINITY);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      long long0 = ScriptRuntime.toUint32(1370.95);
      assertEquals(1370L, long0);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      int int0 = ScriptRuntime.toInt32((-523.750522));
      assertEquals((-523), int0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      int int0 = ScriptRuntime.toInt32(Double.POSITIVE_INFINITY);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "*";
      int int0 = ScriptRuntime.toInt32(objectArray0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      int int0 = ScriptRuntime.toInt32(1452.92584798912);
      assertEquals(1452, int0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test185()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.toInt32(context0.emptyArgs, 120);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      int int0 = ScriptRuntime.toInt32(objectArray0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      double double0 = ScriptRuntime.toInteger((double) (-1909961635));
      assertEquals((-1.909961635E9), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      double double0 = ScriptRuntime.toInteger(Double.NEGATIVE_INFINITY);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      double double0 = ScriptRuntime.toInteger(Double.POSITIVE_INFINITY);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      double double0 = ScriptRuntime.toInteger((double) 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      double double0 = ScriptRuntime.toInteger((double) 110);
      assertEquals(110.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test192()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Array;
      NativeArray nativeArray0 = (NativeArray)ScriptRuntime.newBuiltinObject(context0, importerTopLevel0, topLevel_Builtins0, context0.emptyArgs);
      assertEquals(0L, nativeArray0.getLength());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test193()  throws Throwable  {
      Context context0 = Context.getContext();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        ScriptRuntime.call(context0, nativeIterator_StopIteration0, context0, context0.emptyArgs, nativeIterator_StopIteration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test194()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.delete((Object) context0.generateObserverCount, (Object) context0, context0, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test195()  throws Throwable  {
      Context context0 = new Context();
      InterpreterData interpreterData0 = new InterpreterData((-521), "writeAdapterObject", "error reporter", false);
      // Undeclared exception!
      try { 
        InterpretedFunction.createScript(interpreterData0, "writeAdapterObject");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Context context0 = Context.enter();
      Class<NativeMath> class0 = NativeMath.class;
      // Undeclared exception!
      try { 
        ScriptRuntime.toObject((Scriptable) null, (Object) context0, (Class<?>) class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Context context0 = Context.enter();
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      // Undeclared exception!
      try { 
        ScriptRuntime.getObjectProp((Object) null, "{\t", context0, (Scriptable) nativeJavaObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot read property \"java.lang.String@0000000002\" from null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null, classLoader0);
      Object object0 = ScriptRuntime.getObjectIndex((Scriptable) nativeJavaPackage0, 4, context0);
      Object object1 = ScriptRuntime.enumInit(object0, context0, 2);
      assertNotNull(object1);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage((ClassLoader) null);
      NativeJavaTopPackage nativeJavaTopPackage1 = (NativeJavaTopPackage)ScriptRuntime.toObject((Scriptable) nativeJavaTopPackage0, (Object) nativeJavaTopPackage0);
      assertEquals(0, ScriptableObject.EMPTY);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.defaultObjectToSource(context0, nativeJavaClass0, nativeJavaClass0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeJavaClass", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test201()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      // Undeclared exception!
      try { 
        ScriptRuntime.uneval(context0, importerTopLevel0, nativeBoolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test202()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Context context0 = Context.getContext();
      String string0 = ScriptRuntime.uneval(context0, importerTopLevel0, context0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ScriptableObject scriptableObject0 = ScriptRuntime.getGlobal(context0);
      String string0 = ScriptRuntime.uneval(context0, scriptableObject0, context0.generateObserverCount);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version");
      Double double0 = ScriptRuntime.NaNobj;
      String string0 = ScriptRuntime.uneval(context0, nativeJavaPackage0, double0);
      assertEquals("NaN", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test205()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      CharBuffer charBuffer0 = CharBuffer.allocate(9);
      String string0 = ScriptRuntime.uneval(context0, importerTopLevel0, charBuffer0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      String string0 = ScriptRuntime.uneval(context0, (Scriptable) null, (Object) null);
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ScriptableObject scriptableObject0 = ScriptRuntime.getGlobal(context0);
      Delegator delegator0 = new Delegator(scriptableObject0);
      String string0 = ScriptRuntime.uneval(context0, scriptableObject0, delegator0);
      assertEquals("({})", string0);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      String string0 = ScriptRuntime.numberToString((-2908.0), 11);
      assertEquals("-2204", string0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test209()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.numberToString(3836.0, 2543);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal radix 2543.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test210()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.numberToString(3, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal radix 1.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      String string0 = ScriptRuntime.numberToString(0, 81);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Object object0 = ScriptRuntime.getIndexObject(1361.3062692371604);
      assertEquals("1361.3062692371604", object0);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      String string0 = ScriptRuntime.numberToString(Double.NEGATIVE_INFINITY, 234);
      assertEquals("-Infinity", string0);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      MemberBox[] memberBoxArray0 = new MemberBox[0];
      // Undeclared exception!
      try { 
        ScriptRuntime.toString((Object[]) memberBoxArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test215()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.toString(context0.emptyArgs, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Context context0 = Context.enter();
      Double double0 = ScriptRuntime.NaNobj;
      // Undeclared exception!
      try { 
        ScriptRuntime.elemIncrDecr(double0, double0, context0, 5);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test217()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      CharBuffer charBuffer0 = CharBuffer.allocate(5);
      // Undeclared exception!
      try { 
        ScriptRuntime.getElemFunctionAndThis(charBuffer0, charBuffer0, context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test218()  throws Throwable  {
      Context context0 = Context.enter();
      NativeCall nativeCall0 = new NativeCall();
      ScriptRuntime.getObjectIndex((Scriptable) nativeCall0, 4, context0);
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isValidIdentifierName("boolean");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isValidIdentifierName("PWJrA>j&<oywK+Dc");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isValidIdentifierName("3");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isValidIdentifierName("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isValidIdentifierName("__parent__");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      String string0 = ScriptRuntime.escapeString("JsDJ/u>o7qCkEvA\"S");
      assertEquals("JsDJ/u>o7\\x7fqCkEvA\\\"S", string0);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.escapeString("[-", '@');
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      String string0 = ScriptRuntime.escapeString("wIElQp{h;N`C{", '\'');
      assertEquals("wIElQp{h;N`C{", string0);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      Object[] objectArray1 = ScriptRuntime.padArguments(objectArray0, 283);
      assertEquals(283, objectArray1.length);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test228()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.padArguments(context0.emptyArgs, (-1073741823));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      double double0 = ScriptRuntime.toNumber("N%G1)LC'&*;,D{k?@$-");
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Float float0 = new Float(8.0);
      boolean boolean0 = ScriptRuntime.eq(".", float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test231()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      double double0 = ScriptRuntime.toNumber(" GMT+");
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      long long0 = ScriptRuntime.toUint32((Object) "");
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      double double0 = ScriptRuntime.stringToNumber(context0.languageVersionProperty, context0.FEATURE_RESERVED_KEYWORD_AS_IDENTIFIER, context0.FEATURE_TO_STRING_AS_SOURCE);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      double double0 = ScriptRuntime.stringToNumber("java.lang.Number", 4, 1611);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      double double0 = ScriptRuntime.stringToNumber("E}d}k@wH:+t*-X[Yy", 13, (-1910032170));
      assertEquals(5.323812100320961E38, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      double double0 = ScriptRuntime.stringToNumber("k{g]R", 2, 373);
      assertEquals(2240265.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test238()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.toNumber(context0.emptyArgs, (-525));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test239()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.toNumber(context0.emptyArgs, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test240()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      char char0 = ScriptRuntime.toUint16(importerTopLevel0);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Context context0 = Context.enter();
      double double0 = ScriptRuntime.toNumber((Object) context0.generateObserverCount);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      boolean boolean1 = ScriptRuntime.cmp_LE(boolean0, "com.google.javascript.rhino.>ead.ImporterTopLevel");
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "}@afv.gQ*|n6nVJ'QR");
      double double0 = ScriptRuntime.toNumber((Object) charBuffer0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.cmp_LE("_tparen__", (Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Float float0 = new Float((-69.41375F));
      char char0 = ScriptRuntime.toUint16(float0);
      assertEquals('\uFFBB', char0);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      boolean boolean0 = ScriptRuntime.toBoolean(context0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Long long0 = new Long(0L);
      boolean boolean0 = ScriptRuntime.toBoolean(long0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Double double0 = ScriptRuntime.NaNobj;
      boolean boolean0 = ScriptRuntime.toBoolean(double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Float float0 = new Float((float) 2);
      boolean boolean0 = ScriptRuntime.toBoolean(float0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.toBoolean("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      boolean boolean0 = ScriptRuntime.toBoolean(importerTopLevel0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.toBoolean((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test253()  throws Throwable  {
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      boolean boolean0 = ScriptRuntime.toBoolean(nativeJavaClass0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Boolean boolean0 = ScriptRuntime.wrapBoolean(false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSWhitespaceOrLineTerminator(65279);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSWhitespaceOrLineTerminator(8233);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSWhitespaceOrLineTerminator(8232);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSWhitespaceOrLineTerminator(160);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      double double0 = ScriptRuntime.toNumber("'new ");
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSWhitespaceOrLineTerminator(12);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSWhitespaceOrLineTerminator(11);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSWhitespaceOrLineTerminator(10);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSWhitespaceOrLineTerminator(9);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSWhitespaceOrLineTerminator(13);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSLineTerminator(8233);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSLineTerminator(13);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSLineTerminator(10);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSLineTerminator(150);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      boolean boolean0 = ScriptRuntime.isJSLineTerminator(8);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test270()  throws Throwable  {
      Context context0 = new Context();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      boolean boolean0 = ScriptRuntime.cmp_LE(context0.VERSION_1_8, importerTopLevel0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test271()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ScriptableObject scriptableObject0 = ScriptRuntime.getGlobal(context0);
      Global global0 = (Global)context0.initStandardObjects(scriptableObject0);
      assertFalse(global0.avoidObjectDetection());
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Class<CharBuffer> class0 = CharBuffer.class;
      boolean boolean0 = ScriptRuntime.isRhinoRuntimeType(class0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Class<Long> class0 = Long.class;
      boolean boolean0 = ScriptRuntime.isRhinoRuntimeType(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Class<Boolean> class0 = Boolean.class;
      boolean boolean0 = ScriptRuntime.isRhinoRuntimeType(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Class<String> class0 = String.class;
      boolean boolean0 = ScriptRuntime.isRhinoRuntimeType(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Class<Short> class0 = Short.TYPE;
      boolean boolean0 = ScriptRuntime.isRhinoRuntimeType(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Class<NativeIterator.StopIteration> class0 = NativeIterator.StopIteration.class;
      boolean boolean0 = ScriptRuntime.isRhinoRuntimeType(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      Scriptable scriptable0 = ScriptRuntime.lastStoredScriptable(context0);
      // Undeclared exception!
      try { 
        ScriptRuntime.getArrayElements(scriptable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test279()  throws Throwable  {
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.escapeTextValue((Object) null, context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test280()  throws Throwable  {
      Context context0 = new Context();
      double double0 = ScriptRuntime.toInteger((Object) context0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.leaveDotQuery((Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test282()  throws Throwable  {
      Context context0 = new Context();
      NativeError nativeError0 = new NativeError();
      // Undeclared exception!
      try { 
        ScriptRuntime.newObjectLiteral(context0.emptyArgs, context0.emptyArgs, context0, (Scriptable) nativeError0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        ScriptRuntime.refGet((Ref) null, context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.refDel((Ref) null, (Context) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      Class<BaseFunction> class0 = BaseFunction.class;
      // Undeclared exception!
      try { 
        ScriptRuntime.toObject(context0, (Scriptable) nativeContinuation0, (Object) null, (Class<?>) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot convert null to an object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      Object object0 = ScriptRuntime.setObjectIndex((Object) nativeJavaTopPackage0, Double.POSITIVE_INFINITY, (Object) classLoader0, context0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.escapeAttributeValue(context0, context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Context context0 = Context.enter();
      CharBuffer charBuffer0 = CharBuffer.allocate(100);
      boolean boolean0 = ScriptRuntime.eq(charBuffer0, context0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      EcmaError ecmaError0 = (EcmaError)ScriptRuntime.notFunctionError((Object) null, (Object) null, "msg.instanceof.not.object");
      assertEquals("TypeError", ecmaError0.getName());
      assertEquals("Cannot call property msg.instanceof.not.object in object null. It is not a function, it is \"object\".", ecmaError0.getErrorMessage());
      assertEquals(0, ecmaError0.lineNumber());
      assertEquals(0, ecmaError0.getColumnNumber());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test290()  throws Throwable  {
      Context context0 = new Context();
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test291()  throws Throwable  {
      Context context0 = Context.getContext();
      Float float0 = new Float((float) 2);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      Object object0 = ScriptRuntime.delete((Object) nativeBoolean0, (Object) float0, context0);
      assertEquals(true, object0);
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        ScriptRuntime.add((Object) boolean0, (CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ConsString", e);
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.refSet((Ref) null, contextFactory0, context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      NativeCall nativeCall0 = new NativeCall();
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.specialRef(nativeCall0, " t= a2Bz", context0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         //  t= a2Bz
         //
         verifyException("com.google.javascript.rhino.head.SpecialRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.getElemFunctionAndThis((Object) null, contextFactory0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot call method \"java.lang.String@0000000002\" of null
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Integer integer0 = ScriptRuntime.wrapInt((-12));
      assertEquals((-12), (int)integer0);
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        ScriptRuntime.exitActivationFunction(context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      // Undeclared exception!
      try { 
        ScriptRuntime.updateDotQuery(false, (Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Double double0 = new Double(3L);
      Context context0 = new Context(contextFactory0);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        ScriptRuntime.nameRef((Object) double0, context0, (Scriptable) nativeContinuation0, 15);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      NativeString nativeString0 = new NativeString(":L>_'pw9z*RN%gidL");
      // Undeclared exception!
      try { 
        ScriptRuntime.memberRef((Object) ":L>_'pw9z*RN%gidL", (Object) nativeString0, (Context) null, 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: :L>_'pw9z*RN%gidL is not an xml object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        ScriptRuntime.nameRef((Object) "3", (Object) importerTopLevel0, context0, (Scriptable) importerTopLevel0, 4753);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      // Undeclared exception!
      try { 
        Context.reportRuntimeError4("language version", contextFactory0, contextFactory0, contextFactory0, context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property language version
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        ScriptRuntime.leaveWith(importerTopLevel0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.head.ImporterTopLevel cannot be cast to com.google.javascript.rhino.head.NativeWith
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        ScriptRuntime.setEnumNumbers(fileSystemHandling0, true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.evosuite.runtime.testdata.FileSystemHandling cannot be cast to com.google.javascript.rhino.head.ScriptRuntime$IdEnumeration
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Context context0 = Context.enter();
      RegExpProxy regExpProxy0 = ScriptRuntime.checkRegExpProxy(context0);
      assertNotNull(regExpProxy0);
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      Context context0 = Context.enter();
      Context context1 = (Context)ScriptRuntime.setObjectIndex((Object) importerTopLevel0, (double) 13, (Object) context0, context0);
      assertEquals(Integer.MAX_VALUE, context1.getMaximumInterpreterStackDepth());
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Context context0 = Context.enter();
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      // Undeclared exception!
      try { 
        ScriptRuntime.createFunctionActivation((NativeFunction) null, nativeJavaClass0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeCall", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test308()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ScriptRuntime.NoSuchMethodShim scriptRuntime_NoSuchMethodShim0 = new ScriptRuntime.NoSuchMethodShim(nativeContinuation0, "error reporter");
      // Undeclared exception!
      try { 
        scriptRuntime_NoSuchMethodShim0.call(context0, nativeContinuation0, nativeContinuation0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test309()  throws Throwable  {
      Context context0 = Context.enter();
      BaseFunction baseFunction0 = ScriptRuntime.typeErrorThrower();
      BoundFunction boundFunction0 = null;
      try {
        boundFunction0 = new BoundFunction(context0, baseFunction0, baseFunction0, baseFunction0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.BoundFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      BaseFunction baseFunction0 = ScriptRuntime.typeErrorThrower();
      // Undeclared exception!
      try { 
        ScriptRuntime.callSpecial((Context) null, baseFunction0, baseFunction0, objectArray0, baseFunction0, baseFunction0, 2, "", 43);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: This operation is not allowed.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }
}
