/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 22:11:33 GMT 2019
 */

package org.mockito.cglib.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mockito.asm.ClassAdapter;
import org.mockito.asm.ClassWriter;
import org.mockito.asm.Label;
import org.mockito.asm.Type;
import org.mockito.cglib.core.Block;
import org.mockito.cglib.core.ClassEmitter;
import org.mockito.cglib.core.CodeEmitter;
import org.mockito.cglib.core.Local;
import org.mockito.cglib.core.MethodInfo;
import org.mockito.cglib.core.ProcessSwitchCallback;
import org.mockito.cglib.core.Signature;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class CodeEmitter_ESTest extends CodeEmitter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(100);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(100, 100, "?hd>DD", "?hd>DD", "?hd>DD", (String[]) null);
      Type type0 = Type.CHAR_TYPE;
      Type[] typeArray0 = new Type[1];
      typeArray0[0] = type0;
      Signature signature0 = new Signature("?hd>DD", type0, typeArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      CodeEmitter codeEmitter1 = new CodeEmitter(classEmitter0, codeEmitter0, 6, signature0, typeArray0);
      MethodInfo methodInfo0 = codeEmitter1.getMethodInfo();
      codeEmitter0.invoke(methodInfo0);
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(3074);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(3074, 3074, "static hook is invalid for this clas", "static hook is invalid for this clas", "static hook is invalid for this clas", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.FLOAT_TYPE;
      Type[] typeArray0 = new Type[2];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      Signature signature0 = new Signature("no 'this' pointer within static method", type0, typeArray0);
      CodeEmitter codeEmitter1 = new CodeEmitter(classEmitter0, codeEmitter0, (-1724246514), signature0, typeArray0);
      codeEmitter1.visitMaxs((-2875), 8);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 1, "Bad comparison for type ", "Bad comparison for type ", "Bad comparison for type ", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.VOID_TYPE;
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(155, CodeEmitter.LT);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(83);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(83, 83, "D~Fvy(M~", "D~Fvy(M~", "D~Fvy(M~", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.INT_TYPE;
      codeEmitter0.zero_or_null(type0);
      assertEquals(1, type0.getSize());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 1, "StqnC", "StqnC", "StqnC", stringArray0);
      Type type0 = Type.getReturnType("StqnC");
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(82);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[12];
      classEmitter0.visit(1, 82, "<|", "<|", "<|", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.VOID_TYPE;
      codeEmitter0.zero_or_null(type0);
      assertEquals(9, Type.ARRAY);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(83);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(83, 83, "|;N", "|;N", "|;N", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.getObjectType("|;N");
      codeEmitter0.unbox(type0);
      assertEquals(10, Type.OBJECT);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(67);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(67, 67, "@6;Tc", "@6;Tc", "@6;Tc", (String[]) null);
      Type type0 = Type.FLOAT_TYPE;
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("@6;Tc", type0, typeArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_method(67, signature0, typeArray0);
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(8, Type.DOUBLE);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2951));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2951), (-2951), "ObH0M)X 21~^8D", "ObH0M)X 21~^8D", "", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.INT_TYPE;
      codeEmitter0.unbox(type0);
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 1, "Bad ompOrison for type ", "Bad ompOrison for type ", "Bad ompOrison for type ", stringArray0);
      Type type0 = Type.getReturnType("Bad ompOrison for type ");
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2966));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2966), (-2966), "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.CHAR_TYPE;
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(5, Type.INT);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(55);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 55, "doubleValue", "doubleValue", "doubleValue", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.BOOLEAN_TYPE;
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(1, type0.getSize());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2966));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2966), (-2966), "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = codeEmitter0.getReturnType();
      codeEmitter0.unbox(type0);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2951));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2951), (-2951), "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", "", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      codeEmitter0.box(type0);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(100);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(100, 100, "w|;|k!N", "w|;|k!N", "w|;|k!N", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = codeEmitter0.getReturnType();
      codeEmitter0.box(type0);
      assertEquals(5, Type.INT);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(83);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(83, 83, "D~Fvy(M~", "D~Fvy(M~", "D~Fvy(M~", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = classEmitter0.getSuperType();
      codeEmitter0.box(type0);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(3074);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(2, 2, "static hook is invalid for this clas", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "static hook is invalid for this clas", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push(true);
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(3094);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(2, 2, "5)XP;UBxL.1'Oor", "5)XP;UBxL.1'Oor", "5)XP;UBxL.1'Oor", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push(false);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2990));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(2, (-1930), "<clinit>", "$29", "<clinit>", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      int[] intArray0 = new int[2];
      intArray0[0] = (-2990);
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      codeEmitter0.process_switch(intArray0, processSwitchCallback0, true);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(83);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(83, 83, "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      int[] intArray0 = new int[2];
      intArray0[1] = 100;
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      codeEmitter0.process_switch(intArray0, processSwitchCallback0);
      assertEquals(153, CodeEmitter.EQ);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2990));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(2, 2, "I03(OFS<]r/L", "I03(OFS<]r/L", "I03(OFS<]r/L", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      int[] intArray0 = new int[19];
      intArray0[0] = 104;
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        codeEmitter0.process_switch(intArray0, processSwitchCallback0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // keys to switch must be sorted ascending
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(714);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2906), (-2906), "", "UU}C.qf?c;,bUMn", "", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      int[] intArray0 = new int[0];
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      codeEmitter0.process_switch(intArray0, processSwitchCallback0);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(193);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(2, 2, "w|k!;N", "w|k!;N", "w|k!;N", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      int[] intArray0 = new int[1];
      ProcessSwitchCallback processSwitchCallback0 = mock(ProcessSwitchCallback.class, new ViolatedAssumptionAnswer());
      codeEmitter0.process_switch(intArray0, processSwitchCallback0);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(15);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(15, 15, "*'[ozhwYadHktFsY", "*'[ozhwYadHktFsY", "*'[ozhwYadHktFsY", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Class<Object> class0 = Object.class;
      Type type0 = Type.getType(class0);
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(100);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(100, 100, "(|k!T", "(|k!T", "(|k!T", (String[]) null);
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.declare_field(156, "(|k!T", type0, "7fW@(59=Xe");
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.putfield("(|k!T");
      assertEquals(154, CodeEmitter.NE);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(100);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(100, 100, "(|k!T", "(|k!T", "(|k!T", (String[]) null);
      Type type0 = Type.DOUBLE_TYPE;
      classEmitter0.declare_field(1, "(|k!T", type0, "oqy");
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.putfield("(|k!T");
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(61);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(2, 61, "KQ,)", "KQ,)", "KQ,)", (String[]) null);
      Type type0 = Type.SHORT_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      classEmitter0.declare_field(216, "KQ,)", type0, "KQ,)");
      codeEmitter0.getfield("KQ,)");
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2027));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(2, (-2027), "KQ,)", "KQ,)", "KQ,)", (String[]) null);
      Type type0 = classEmitter0.getSuperType();
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      classEmitter0.declare_field(195, "KQ,)", type0, "KQ,)");
      codeEmitter0.getfield("KQ,)");
      assertFalse(codeEmitter0.isStaticHook());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(657);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(657, 657, "DV?z", "DV?z", "DV?z", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      // Undeclared exception!
      try { 
        codeEmitter0.load_args(1, 108);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(105);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(105, 105, "_lK/@Uc{}", "_lK/@Uc{}", "_lK/@Uc{}", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      // Undeclared exception!
      try { 
        codeEmitter0.load_args((-2280), 105);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2280
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2951));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2951), (-2951), "*'[ozhwYadkt0FsY", "*'[ozhwYadkt0FsY", "*'[ozhwYadkt0FsY", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      // Undeclared exception!
      try { 
        codeEmitter0.load_this();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no 'this' pointer within static method
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(67);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(67, 67, "@6;Tc", "@6;Tc", "@6;Tc", (String[]) null);
      Type type0 = Type.FLOAT_TYPE;
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("@6;Tc", type0, typeArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_method(67, signature0, typeArray0);
      codeEmitter0.load_this();
      assertEquals(100, CodeEmitter.SUB);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-633));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[8];
      classEmitter0.visit((-633), (-633), "LJ /", "LJ /", "LJ /", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.INT_TYPE;
      codeEmitter0.newarray(type0);
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(71);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 71, "doubleValee", "doubleValee", "doubleValee", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push((-3442.771971));
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(115);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[3];
      classEmitter0.visit(2, 115, "3", "3", "3", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push((double) 1);
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-578));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[10];
      classEmitter0.visit((-578), (-578), "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.DOUBLE_TYPE;
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(6, Type.FLOAT);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(55);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 55, "UH53=/O:{", "UH53=/O:{", "UH53=/O:{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push((-2102.619F));
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(116);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(116, 116, "wem'H7c!8qw?", "wem'H7c!8qw?", "wem'H7c!8qw?", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push((float) 2);
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-578));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[10];
      classEmitter0.visit((-578), (-578), "5z", "5z", "5z", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push((float) 1);
      assertEquals(100, CodeEmitter.SUB);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2960));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2960), (-2960), "'[ozhwYadHkt0FsY", "'[ozhwYadHkt0FsY", "'[ozhwYadHkt0FsY", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push((long) 108);
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(115);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[3];
      classEmitter0.visit(2, 115, "", "", "", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push((long) 1);
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2990));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(3569, 2145552536, "<init>", "'-iy!rgjn1", "keys to switch must be sorted ascending", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push(2133805408);
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(134);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 1, "StqixnC", "StqixnC", "StqixnC", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.push(134);
      assertEquals(154, CodeEmitter.NE);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(105);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(105, 105, "wem'H7c!8qw?", "wem'H7c!8qw?", "wem'H7c!8qw?", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push(7);
      assertEquals(153, CodeEmitter.EQ);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(10);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(10, 10, "nf?J<~TY8g@$R=FEE/P", "nf?J<~TY8g@$R=FEE/P", "nf?J<~TY8g@$R=FEE/P", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push((-1057));
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2960));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(1, 1, "2'ZI+E6:QVz``dNpE^I", "2'ZI+E6:QVz``dNpE^I", "'[ozhwYadHkt0FsY", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      Type type1 = Type.CHAR_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertNotSame(type0, type1);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(70);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(70, 70, "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = classEmitter0.getClassType();
      Type type1 = Type.FLOAT_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(3, Type.BYTE);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(83);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(1, 1, "V|,1h^p=YWDrd=oQ!U", "V|,1h^p=YWDrd=oQ!U", "V|,1h^p=YWDrd=oQ!U", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.DOUBLE_TYPE;
      Type type1 = Type.getReturnType("V|,1h^p=YWDrd=oQ!U");
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(157);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(157, 157, "double doubleValue()", "double doubleValue()", "double doubleValue()", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.getObjectType("double doubleValue()");
      Type type1 = Type.CHAR_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(157);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(157, 157, "double doubleValue()", "double doubleValue()", "double doubleValue()", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.getObjectType("double doubleValue()");
      Type type1 = Type.BYTE_TYPE;
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2951));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2951), (-2951), "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", "", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.SHORT_TYPE;
      Type type1 = Type.LONG_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(3, Type.BYTE);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(198);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(1, 158, "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", "charValue", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.DOUBLE_TYPE;
      Type type1 = Type.LONG_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2080));
      classEmitter0.setTarget(classWriter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 46, "~fbe(=", "~fbe(=", "~fbe(=", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.FLOAT_TYPE;
      Type type1 = Type.LONG_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(100, CodeEmitter.SUB);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(191);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(167, 191, "int intValue()", "int intValue()", (String) null, (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.FLOAT_TYPE;
      Type type1 = codeEmitter0.getReturnType();
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(100, CodeEmitter.SUB);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2951));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2951), (-2951), "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", (String[]) null);
      Type type0 = Type.LONG_TYPE;
      Type type1 = Type.FLOAT_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(83);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(1, 1, "V|,1h^p=YWDrd=oQ!U", "V|,1h^p=YWDrd=oQ!U", "V|,1h^p=YWDrd=oQ!U", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.DOUBLE_TYPE;
      Type type1 = Type.FLOAT_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(3, Type.BYTE);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2966));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2966), (-2966), "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", (String[]) null);
      Type type0 = Type.DOUBLE_TYPE;
      Type type1 = Type.LONG_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.cast_numeric(type0, type1);
      assertEquals(155, CodeEmitter.LT);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(157);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(157, 157, "double doubleValue()", "double doubleValue()", "double doubleValue()", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.FLOAT_TYPE;
      Type type1 = Type.DOUBLE_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(1, type0.getSize());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(157);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(157, 157, "double EdoublValue()", "double EdoublValue()", "double EdoublValue()", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.getObjectType("double EdoublValue()");
      Type type1 = Type.DOUBLE_TYPE;
      codeEmitter0.cast_numeric(type1, type0);
      assertEquals(8, Type.DOUBLE);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2966));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2966), (-2966), "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.CHAR_TYPE;
      codeEmitter0.cast_numeric(type0, type0);
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2990));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(147, 147, "I03(OFLS<]cr/L", ">:*a(y5%V6jD)c9;<`", "V", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.VOID_TYPE;
      Type type1 = Type.LONG_TYPE;
      codeEmitter0.swap(type0, type1);
      assertEquals(9, Type.ARRAY);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassEmitter classEmitter0 = new ClassEmitter(classAdapter0);
      classEmitter0.visit(83, 83, "DV?", "DV?", "DV?", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.BOOLEAN_TYPE;
      codeEmitter0.swap(type0, type0);
      assertEquals(155, CodeEmitter.LT);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(3074);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(3074, 3074, "static hook is invalid for this clas", "static hook is invalid for this clas", "static hook is invalid for this clas", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.DOUBLE_TYPE;
      codeEmitter0.swap(type0, type0);
      assertEquals(5, Type.INT);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2951));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2951), (-2951), "ObH0M)X 21~^8D", "ObH0M)X 21~^8D", "", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.INT_TYPE;
      Label label0 = codeEmitter0.make_label();
      codeEmitter0.if_cmp(type0, 158, label0);
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(105);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(105, 105, "wem'H7c!8qw?", "wem'H7c!8qw?", "wem'H7c!8qw?", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.VOID_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, 157, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2990));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2990), (-2990), "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", "", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.INT_TYPE;
      Label label0 = codeEmitter0.make_label();
      codeEmitter0.if_cmp(type0, 156, label0);
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(83);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(83, 83, "D~Fvy(M~", "D~Fvy(M~", "D~Fvy(M~", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.INT_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, 155, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2966));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2966), (-2966), "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.CHAR_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, 154, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(110);
      ClassEmitter classEmitter0 = new ClassEmitter();
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(2, 2, "booleanValue", "?", "?", (String[]) null);
      Type type0 = Type.CHAR_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = codeEmitter0.mark();
      codeEmitter0.if_cmp(type0, 153, label0);
      assertEquals(8, Type.DOUBLE);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2951));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2951), (-2951), "*'[ozhwYadkt0FsY", "*'[ozhwYadkt0FsY", "*'[ozhwYadkt0FsY", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Label label0 = codeEmitter0.make_label();
      Type type0 = Type.getObjectType("CGLIB$STATICHOOK2");
      codeEmitter0.if_cmp(type0, 154, label0);
      assertEquals(9, Type.ARRAY);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(88);
      ClassEmitter classEmitter0 = new ClassEmitter();
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(2, 1, "HS6i", "HS6i", "HS6i", (String[]) null);
      Type type0 = classEmitter0.getSuperType();
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = codeEmitter0.make_label();
      codeEmitter0.if_cmp(type0, 153, label0);
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2698);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      classEmitter0.visit(2, (-656), "[K#KG.A9K?+YEM", "5vaZcQttty?M$pA7c", "5vaZcQttty?M$pA7c", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.getType("[K#KG.A9K?+YEM");
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, 178, label0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad comparison for type [K
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2966));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2966), (-2966), "*'[ozhwladHkt0FsY", "*'[ozhwladHkt0FsY", "*'[ozhwladHkt0FsY", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      Label label0 = codeEmitter0.mark();
      codeEmitter0.if_cmp(type0, 10, label0);
      assertEquals(6, Type.FLOAT);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(3074);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(3074, 3074, "static hook is invalid for this class", "static hook is invalid for this class", "static hook is invalid for this class", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.FLOAT_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.if_cmp(type0, 1, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(192);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(134, 4193, "wem'H7c!8qw?", "wem'H7c!8qw?", "wem'H7c!8qw?", (String[]) null);
      Type type0 = Type.DOUBLE_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Label label0 = codeEmitter0.make_label();
      codeEmitter0.if_cmp(type0, 158, label0);
      assertEquals(6, Type.FLOAT);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-633));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[8];
      classEmitter0.visit((-633), (-633), "LJ /", "LJ /", "LJ /", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Block block0 = new Block(codeEmitter0);
      Type type0 = Type.INT_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.catch_exception(block0, type0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // end of block is unset
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-633));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[8];
      classEmitter0.visit((-633), (-633), "LJ /", "LJ /", "LJ /", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Block block0 = new Block(codeEmitter0);
      block0.end();
      Type type0 = Type.INT_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.catch_exception(block0, type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(55);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[22];
      classEmitter0.visit(1, 55, "ublealue", "ublealue", "ublealue", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.end_method();
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(83);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(83, 83, "w|;TN", "w|;TN", "w|;TN", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.load_args();
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(83);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(83, 83, "w|;TN", "w|;TN", "w|;TN", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Local local0 = codeEmitter0.make_local();
      codeEmitter0.load_local(local0);
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(102);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[2];
      classEmitter0.visit(102, 1, "#+/*c`k^xQ%'*2s~H", "#+/*c`k^xQ%'*2s~H", "#+/*c`k^xQ%'*2s~H", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      // Undeclared exception!
      try { 
        codeEmitter0.putstatic((Type) null, "double doubleValue()", (Type) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(626);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(626, 626, "DV?z", "DV?z", "DV?z", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.monitorenter();
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2990));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(631, (-1882), "D", "D", "D", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      ClassEmitter classEmitter1 = codeEmitter0.getClassEmitter();
      assertSame(classEmitter0, classEmitter1);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(55);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[22];
      classEmitter0.visit(1, 55, "ublealue", "ublealue", "ublealue", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.invoke_constructor_this();
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(105);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(105, 105, "wem'H7c!8qw?", "wem'H7c!8qw?", "wem'H7c!8qw?", (String[]) null);
      Type type0 = Type.DOUBLE_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.super_getstatic("wem'H7c!8qw?", type0);
      assertEquals(0, Type.VOID);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(4727);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(4727, 4727, "*'[ozhwYadHktFsY", "*'[ozhwYadHktFsY", "*'[ozhwYadHktFsY", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      MethodInfo methodInfo0 = codeEmitter0.getMethodInfo();
      codeEmitter0.invoke(methodInfo0);
      assertEquals(154, CodeEmitter.NE);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(100);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(100, 100, "w|k!;N", "w|k!;N", "w|k!;N", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.new_instance_this();
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(100);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(100, 100, "w|k!;N", "w|k!;N", "w|k!;N", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.CHAR_TYPE;
      codeEmitter0.array_load(type0);
      assertEquals(100, CodeEmitter.SUB);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(100);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(100, 100, "w|;|k!N", "w|;|k!N", "w|;|k!N", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.return_value();
      assertEquals(112, CodeEmitter.REM);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1728343450));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[17];
      classEmitter0.visit((-1728343450), 1, "$29", "$29", "$29", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.super_invoke_constructor();
      assertEquals(100, CodeEmitter.SUB);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(153);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(153, 153, "DV?z", "DV?z", "DV?z", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.getReturnType("DV?z");
      // Undeclared exception!
      try { 
        codeEmitter0.getstatic(type0, "DV?z", type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-593));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[14];
      classEmitter0.visit(1, (-593), "G~J2?WwD", "G~J2?WwD", "G~J2?WwD", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = classEmitter0.getClassType();
      codeEmitter0.super_putfield("G~J2?WwD", type0);
      assertEquals(1, Type.BOOLEAN);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 1, "Bad comparison for type ", "Bad comparison for type ", "Bad comparison for type ", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.not();
      assertEquals(112, CodeEmitter.REM);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-4528));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-4528), (-4528), "oolenV?lu", "oolenV?lu", "oolenV?lu", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = codeEmitter0.getReturnType();
      // Undeclared exception!
      try { 
        codeEmitter0.getfield(type0, "oolenV?lu", type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1728343450));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[17];
      classEmitter0.visit((-1728343450), 1, "$29", "$29", "$29", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Local local0 = codeEmitter0.make_local();
      codeEmitter0.store_local(local0);
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(100);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(100, 100, "w|k!;N", "w|k!;N", "w|k!;N", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Signature signature0 = new Signature("oqy", "oqy");
      codeEmitter0.super_invoke_constructor(signature0);
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(173);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[15];
      classEmitter0.visit(173, 1, "t1YbwX\u0002", "t1YbwX\u0002", "t1YbwX\u0002", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Label label0 = new Label();
      codeEmitter0.ifnull(label0);
      assertEquals(96, CodeEmitter.ADD);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(83);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(83, 83, "w|;TN", "w|;TN", "w|;TN", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.super_invoke();
      assertEquals(128, CodeEmitter.OR);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 1, "Bad comparison for type ", "Bad comparison for type ", "Bad comparison for type ", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Block block0 = codeEmitter0.begin_block();
      assertNotNull(block0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(192);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[8];
      classEmitter0.visit(192, 192, "tbwX\"", "tbwX\"", "tbwX\"", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.dup2();
      assertEquals(126, CodeEmitter.AND);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 33, "UH53=/O:9", "UH53=/O:9", "UH53=/O:9", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Signature signature0 = new Signature("UH53=/O:9", "yu}zC:MK");
      // Undeclared exception!
      try { 
        codeEmitter0.invoke_constructor_this(signature0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(100);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(100, 100, "w|;TN", "w|;TN", "w|;TN", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Label label0 = codeEmitter0.make_label();
      codeEmitter0.if_icmp(100, label0);
      assertEquals(157, CodeEmitter.GT);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 1, "StqnC", "StqnC", "StqnC", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.aaload(2);
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[0];
      classEmitter0.visit(1, 1, "Bad ompOrison for type ", "Bad ompOrison for type ", "Bad ompOrison for type ", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      // Undeclared exception!
      try { 
        codeEmitter0.throw_exception((Type) null, "Bad ompOrison for type ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.TypeUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(73);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(73, 8, " @", "f\"];&3y1<#i", "f\"];&3y1<#i", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      // Undeclared exception!
      try { 
        codeEmitter0.invoke_virtual_this((Signature) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(71);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 71, "doubleValee", "doubleValee", "doubleValee", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.instance_of_this();
      assertEquals(158, CodeEmitter.LE);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1227);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[10];
      classEmitter0.visit(1227, 1227, "LJ/", "LJ/", "LJ/", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      // Undeclared exception!
      try { 
        codeEmitter0.super_putstatic("LJ/", (Type) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.cglib.core.CodeEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(657);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(657, 657, "DV?z", "DV?z", "DV?z", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.athrow();
      assertEquals(156, CodeEmitter.GE);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(100);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(100, 100, "?hd>DD", "?hd>DD", "?hd>DD", (String[]) null);
      Type type0 = Type.CHAR_TYPE;
      Type[] typeArray0 = new Type[1];
      typeArray0[0] = type0;
      Signature signature0 = new Signature("?hd>DD", type0, typeArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      CodeEmitter codeEmitter1 = new CodeEmitter(classEmitter0, codeEmitter0, 6, signature0, typeArray0);
      codeEmitter1.create_arg_array();
      assertEquals(124, CodeEmitter.USHR);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(100);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(100, 100, "org.mockito.cglib.core.CodeEmitter$State", "org.mockito.cglib.core.CodeEmitter$State", "org.mockito.cglib.core.CodeEmitter$State", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.DOUBLE_TYPE;
      Type type1 = Type.BYTE_TYPE;
      codeEmitter0.swap(type0, type1);
      assertEquals(116, CodeEmitter.NEG);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(70);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(70, 70, "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.push("*'[ozhwYadHkt0FsY");
      assertEquals(154, CodeEmitter.NE);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-593));
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[22];
      classEmitter0.visit(1, (-593), "G~J2?WwD", "G~J2?WwD", "G~J2?WwD", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      CodeEmitter codeEmitter1 = new CodeEmitter(codeEmitter0);
      assertFalse(codeEmitter1.isStaticHook());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(97);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[6];
      classEmitter0.visit(2, 97, "LV", "LV", "LV", stringArray0);
      Type type0 = Type.CHAR_TYPE;
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.super_getfield("o/isB$q~_]q:", type0);
      assertEquals(3, Type.BYTE);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(83);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(83, 83, "D~Fvy(M~", "D~Fvy(M~", "D~Fvy(M~", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Local local0 = codeEmitter0.make_local();
      codeEmitter0.iinc(local0, 2889);
      assertEquals(130, CodeEmitter.XOR);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-4530));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-4530), (-4530), "", "", "", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      // Undeclared exception!
      try { 
        codeEmitter0.checkcast_this();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2960));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2960), (-2960), "'[ozhwYadHkt0FsY", "'[ozhwYadHkt0FsY", "'[ozhwYadHkt0FsY", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.LONG_TYPE;
      // Undeclared exception!
      try { 
        codeEmitter0.putfield(type0, "'[ozhwYadHkt0FsY", type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2951));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit((-2951), (-2951), "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", "", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Signature signature0 = codeEmitter0.getSignature();
      assertEquals("CGLIB$STATICHOOK1", signature0.getName());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(198);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[15];
      classEmitter0.visit(198, 198, "t1YbwX\u0002", "t1YbwX\u0002", "t1YbwX\u0002", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = classEmitter0.getClassType();
      codeEmitter0.zero_or_null(type0);
      assertEquals(8, Type.DOUBLE);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(83);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(83, 83, "D~+vyNM$", "D~+vyNM$", "D~+vyNM$", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      codeEmitter0.monitorexit();
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter((-2990));
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(2, (-1930), "<clinit>", "$29", "<clinit>", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      boolean boolean0 = codeEmitter0.isStaticHook();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(71);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 71, "doubleValee", "doubleValee", "doubleValee", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      Type type0 = Type.getObjectType("doubleValee");
      codeEmitter0.array_store(type0);
      assertEquals(104, CodeEmitter.MUL);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(70);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(70, 70, "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", "*'[ozhwYadHkt0FsY", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      codeEmitter0.arraylength();
      assertEquals(108, CodeEmitter.DIV);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      ClassEmitter classEmitter0 = new ClassEmitter(classWriter0);
      String[] stringArray0 = new String[1];
      classEmitter0.visit(1, 8, "UH53=/O:{", "UH53=/O:{", "UH53=/O:{", stringArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_static();
      Type type0 = Type.LONG_TYPE;
      codeEmitter0.unbox_or_zero(type0);
      assertEquals(3, Type.BYTE);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ClassEmitter classEmitter0 = new ClassEmitter();
      ClassWriter classWriter0 = new ClassWriter(100);
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(100, 100, "?hd>DD", "?hd>DD", "?hd>DD", (String[]) null);
      CodeEmitter codeEmitter0 = classEmitter0.getStaticHook();
      MethodInfo methodInfo0 = codeEmitter0.getMethodInfo();
      codeEmitter0.invoke(methodInfo0);
      assertEquals(100, CodeEmitter.SUB);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2630);
      ClassEmitter classEmitter0 = new ClassEmitter();
      classEmitter0.setTarget(classWriter0);
      classEmitter0.visit(2, 1, "oJG&y$UzogK^ydWLV\"B8", "oJG&y$UzogK^ydWLV\"B8", "oJG&y$UzogK^ydWLV\"B8", (String[]) null);
      Type type0 = classEmitter0.getClassType();
      Type[] typeArray0 = new Type[0];
      Signature signature0 = new Signature("<init>", type0, typeArray0);
      CodeEmitter codeEmitter0 = classEmitter0.begin_method(8, signature0, typeArray0);
      MethodInfo methodInfo0 = codeEmitter0.getMethodInfo();
      codeEmitter0.invoke(methodInfo0, type0);
      assertEquals(6, Type.FLOAT);
  }
}
