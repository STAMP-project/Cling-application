/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 21 16:01:11 GMT 2019
 */

package org.apache.commons.lang3.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.commons.lang3.text.translate.UnicodeEscaper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class UnicodeEscaper_ESTest extends UnicodeEscaper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UnicodeEscaper unicodeEscaper0 = UnicodeEscaper.above(0);
      // Undeclared exception!
      try { 
        unicodeEscaper0.translate(65535, (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.text.translate.UnicodeEscaper", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UnicodeEscaper unicodeEscaper0 = UnicodeEscaper.above(0);
      StringWriter stringWriter0 = new StringWriter();
      boolean boolean0 = unicodeEscaper0.translate(Integer.MAX_VALUE, (Writer) stringWriter0);
      assertEquals("\\u7FFFFFFF", stringWriter0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      UnicodeEscaper unicodeEscaper0 = UnicodeEscaper.below(0);
      boolean boolean0 = unicodeEscaper0.translate(Integer.MAX_VALUE, (Writer) stringWriter0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UnicodeEscaper unicodeEscaper0 = UnicodeEscaper.above(0);
      StringWriter stringWriter0 = new StringWriter();
      boolean boolean0 = unicodeEscaper0.translate((-1509), (Writer) stringWriter0);
      assertEquals("\\u000FFFFFA1B", stringWriter0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UnicodeEscaper unicodeEscaper0 = UnicodeEscaper.between(0, 0);
      StringWriter stringWriter0 = new StringWriter();
      boolean boolean0 = unicodeEscaper0.translate(1446, (Writer) stringWriter0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      UnicodeEscaper unicodeEscaper0 = UnicodeEscaper.between((-711), 35);
      boolean boolean0 = unicodeEscaper0.translate(35, (Writer) stringWriter0);
      assertEquals("\\u0023", stringWriter0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      UnicodeEscaper unicodeEscaper0 = UnicodeEscaper.above(0);
      StringWriter stringWriter0 = new StringWriter();
      boolean boolean0 = unicodeEscaper0.translate(4095, (Writer) stringWriter0);
      assertEquals("\\u0FFF", stringWriter0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      UnicodeEscaper unicodeEscaper0 = new UnicodeEscaper();
      StringWriter stringWriter0 = new StringWriter(0);
      boolean boolean0 = unicodeEscaper0.translate((-1836), (Writer) stringWriter0);
      assertFalse(boolean0);
  }
}
