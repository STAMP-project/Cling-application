/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 21 17:20:08 GMT 2019
 */

package com.google.javascript.rhino.head.tools.shell;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.BoundFunction;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.Delegator;
import com.google.javascript.rhino.head.Function;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.Synchronizer;
import com.google.javascript.rhino.head.TopLevel;
import com.google.javascript.rhino.head.commonjs.module.Require;
import com.google.javascript.rhino.head.tools.shell.Global;
import com.google.javascript.rhino.head.tools.shell.QuitAction;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Global_ESTest extends Global_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Global global0 = new Global();
      Object[] objectArray0 = new Object[6];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("null");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "odm'UN");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Require require0 = global0.installRequire(context0, linkedList0, true);
      try { 
        Global.readFile(context0, require0, objectArray0, require0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Global global0 = new Global();
      PrintStream printStream0 = global0.getErr();
      // Undeclared exception!
      try { 
        Global.pipe(true, (InputStream) null, printStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.tools.shell.Global", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Global global0 = new Global();
      InputStream inputStream0 = global0.getIn();
      InputStream inputStream1 = global0.getIn();
      assertSame(inputStream1, inputStream0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Context context0 = new Context();
      String[] stringArray0 = Locale.getISOLanguages();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Object object0 = Global.toint32(context0, nativeContinuation0, stringArray0, nativeContinuation0);
      assertEquals(0, object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = Locale.getISOLanguages();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Context context0 = Context.enter();
      try { 
        Global.readUrl(context0, nativeContinuation0, stringArray0, nativeContinuation0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: aa
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test05()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        Global.readUrl(context0, nativeContinuation0, context0.emptyArgs, nativeContinuation0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // readUrl require at least file path to be specified
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Delegator delegator0 = new Delegator();
      Object[] objectArray0 = new Object[1];
      try { 
        Global.readUrl(context0, delegator0, objectArray0, delegator0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: null
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test07()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        Global.readFile(context0, nativeContinuation0, context0.emptyArgs, nativeContinuation0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // readFile require at least file path to be specified
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test08()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Delegator delegator0 = new Delegator();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) delegator0;
      // Undeclared exception!
      try { 
        Global.seal(context0, delegator0, objectArray0, delegator0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // seal function supports only sealing of ScriptableObject instances
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test09()  throws Throwable  {
      Global global0 = new Global();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) global0;
      BaseFunction baseFunction0 = new BaseFunction();
      // Undeclared exception!
      try { 
        Global.seal((Context) null, global0, objectArray0, baseFunction0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // seal function can only be applied to objects
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Context context0 = Context.enter();
      Global global0 = new Global(context0);
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Error;
      BaseFunction baseFunction0 = global0.getBuiltinCtor(topLevel_Builtins0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) baseFunction0;
      // Undeclared exception!
      try { 
        Global.runCommand(context0, baseFunction0, objectArray0, baseFunction0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The first argument to runCommand must be a command name.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Delegator delegator0 = new Delegator();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) delegator0;
      Object object0 = Global.sync(context0, delegator0, objectArray0, delegator0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Delegator delegator0 = new Delegator();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) delegator0;
      Object object0 = Global.sync(context0, delegator0, objectArray0, delegator0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Delegator delegator0 = new Delegator();
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        Global.sync(context0, delegator0, objectArray0, delegator0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property msg.sync.args
         //
         verifyException("com.google.javascript.rhino.head.tools.ToolErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Context context0 = new Context();
      // Undeclared exception!
      try { 
        Global.sync(context0, nativeContinuation0, context0.emptyArgs, nativeContinuation0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // no message resource found for message property msg.sync.args
         //
         verifyException("com.google.javascript.rhino.head.tools.ToolErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test15()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      BaseFunction baseFunction0 = new BaseFunction();
      // Undeclared exception!
      try { 
        Global.spawn(context0, baseFunction0, context0.emptyArgs, baseFunction0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Argument to spawn() must be a function or script.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Context context0 = Context.getCurrentContext();
      Global global0 = new Global();
      int int0 = global0.runDoctest(context0, nativeContinuation0, "language version", "language version", 2);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test17()  throws Throwable  {
      Global global0 = new Global();
      Context context0 = Context.getCurrentContext();
      Synchronizer synchronizer0 = new Synchronizer(global0);
      BoundFunction boundFunction0 = new BoundFunction(context0, synchronizer0, synchronizer0, global0, context0.emptyArgs);
      // Undeclared exception!
      try { 
        Global.deserialize(context0, boundFunction0, context0.emptyArgs, boundFunction0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Expected a filename to read the serialization from
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Delegator delegator0 = new Delegator();
      Object[] objectArray0 = new Object[2];
      Context context0 = new Context();
      try { 
        Global.deserialize(context0, delegator0, objectArray0, delegator0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Context context0 = Context.enter();
      // Undeclared exception!
      try { 
        Global.serialize(context0, (Scriptable) null, context0.emptyArgs, (Function) null);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Expected an object to serialize and a filename to write the serialization to
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Global global0 = new Global();
      Context context0 = new Context();
      String[] stringArray0 = global0.getPrompts(context0);
      // Undeclared exception!
      try { 
        Global.serialize(context0, (Scriptable) null, stringArray0, (Function) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test21()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Global global0 = new Global();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Require require0 = global0.installRequire(context0, linkedList0, true);
      // Undeclared exception!
      try { 
        Global.loadClass(context0, global0, context0.emptyArgs, require0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Expected a string argument.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test22()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      String[] stringArray0 = Locale.getISOCountries();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      // Undeclared exception!
      try { 
        Global.defineClass(context0, (Scriptable) nativeContinuation0, (Object[]) stringArray0, (Function) nativeContinuation0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Class \"AD\" not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Global global0 = new Global();
      Context context0 = new Context();
      String[] stringArray0 = global0.getPrompts(context0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Require require0 = global0.installRequire(context0, linkedList0, true);
      double double0 = Global.version(context0, global0, stringArray0, require0);
      assertTrue(require0.isEmpty());
      assertEquals(2, stringArray0.length);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Context context0 = Context.enter();
      Global global0 = new Global(context0);
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Error;
      BaseFunction baseFunction0 = global0.getBuiltinCtor(topLevel_Builtins0);
      Global.quit(context0, global0, context0.emptyArgs, baseFunction0);
      assertFalse(baseFunction0.isSealed());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Global global0 = new Global();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.offer("file:/home/pderakhshanfar/rq3/botsing-integration-experiment/=6,r//");
      Require require0 = global0.installRequire(context0, linkedList0, true);
      assertTrue(require0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Global global0 = new Global();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      Require require0 = global0.installRequire(context0, (List<String>) null, true);
      assertTrue(require0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Global global0 = new Global();
      // Undeclared exception!
      try { 
        global0.initQuitAction((QuitAction) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // quitAction is null
         //
         verifyException("com.google.javascript.rhino.head.tools.shell.Global", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Global global0 = new Global();
      QuitAction quitAction0 = mock(QuitAction.class, new ViolatedAssumptionAnswer());
      global0.initQuitAction(quitAction0);
      QuitAction quitAction1 = mock(QuitAction.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        global0.initQuitAction(quitAction1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The method is once-call.
         //
         verifyException("com.google.javascript.rhino.head.tools.shell.Global", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Context context0 = Context.enter();
      Global global0 = new Global(context0);
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Error;
      BaseFunction baseFunction0 = global0.getBuiltinCtor(topLevel_Builtins0);
      // Undeclared exception!
      try { 
        Global.runCommand(context0, baseFunction0, context0.emptyArgs, baseFunction0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // The first argument to runCommand must be a command name.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Global global0 = new Global();
      global0.setSealedStdLib(true);
      assertFalse(global0.avoidObjectDetection());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Global global0 = new Global();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      global0.setIn(pipedInputStream0);
      InputStream inputStream0 = global0.getIn();
      assertSame(inputStream0, pipedInputStream0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test32()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Context context0 = new Context();
      Global global0 = new Global();
      // Undeclared exception!
      try { 
        global0.runDoctest(context0, nativeContinuation0, "js>js>file:/home/pderakhshanfar/rq3/botsing-integration-experiment//", "language version", 150);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // doctest failure running:
         // js>file:/home/pderakhshanfar/rq3/botsing-integration-experiment//
         // expected: actual: js: \"doctest input\", line 1: missing ; before statement
         // js: js>file:/home/pderakhshanfar/rq3/botsing-integration-experiment//
         // js: ........^
         // js: \"doctest input\", line 1: Compilation produced 1 syntax errors.
         // 
         // 
         //  (language version#150)
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      // Undeclared exception!
      try { 
        Global.help(context0, (Scriptable) null, context0.emptyArgs, (Function) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.tools.shell.Global", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Global global0 = new Global();
      boolean boolean0 = global0.isInitialized();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      Global global0 = new Global();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      Global.gc(context0, global0, context0.emptyArgs, nativeContinuation0);
      assertEquals(13, ScriptableObject.CONST);
  }
}
