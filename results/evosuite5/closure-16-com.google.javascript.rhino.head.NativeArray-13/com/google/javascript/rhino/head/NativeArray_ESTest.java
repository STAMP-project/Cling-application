/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 21 17:04:08 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.Delegator;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.InterpreterData;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeBoolean;
import com.google.javascript.rhino.head.NativeError;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJSON;
import com.google.javascript.rhino.head.NativeJavaClass;
import com.google.javascript.rhino.head.NativeJavaObject;
import com.google.javascript.rhino.head.NativeJavaPackage;
import com.google.javascript.rhino.head.NativeMath;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.NativeWith;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.Synchronizer;
import com.google.javascript.rhino.head.UniqueTag;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.Locale;
import java.util.Set;
import java.util.TreeSet;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class NativeArray_ESTest extends NativeArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Class<NativeObject> class0 = NativeObject.class;
      NativeArray nativeArray0 = new NativeArray(9991L);
      NativeArray.setMaximumInitialCapacity(12);
      // Undeclared exception!
      try { 
        nativeArray0.fillConstructorProperties((IdFunctionObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test001()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1067L);
      NativeArray nativeArray1 = new NativeArray(2);
      nativeArray1.sealObject();
      // Undeclared exception!
      try { 
        nativeArray1.delete(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: 0.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test002()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1976L);
      nativeArray0.avoidObjectDetection();
      nativeArray0.setDenseOnly(false);
      Long long0 = new Long(13);
      nativeArray0.toArray();
      Context context0 = Context.getContext();
      ContextFactory.getGlobal();
      NativeArray nativeArray1 = null;
      try {
        nativeArray1 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      NativeArray nativeArray0 = new NativeArray(2);
      nativeArray0.setInstanceIdAttributes((-1), (-2));
      LinkedList<NativeJavaPackage> linkedList0 = new LinkedList<NativeJavaPackage>();
      linkedList0.iterator();
      int int0 = ScriptableObject.CONST;
      nativeArray0.toArray();
      nativeArray0.findPrototypeId("language version");
      Context.getCurrentContext();
      Short short0 = new Short((short)6);
      nativeArray0.getOwnPropertyDescriptor(context0, short0);
      NativeArray nativeArray1 = new NativeArray(140);
      nativeArray1.findPrototypeId("");
      nativeArray0.get((-3105), (Scriptable) nativeArray1);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      NativeArray.getMaximumInitialCapacity();
      Object[] objectArray0 = new Object[2];
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.setInstanceIdAttributes(10000, 10000);
      nativeArray0.getIndexIds();
      nativeArray0.findPrototypeId("SCcz!;'5OF");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test005()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(177L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      Object[] objectArray0 = nativeArray0.getAllIds();
      NativeArray nativeArray1 = new NativeArray(objectArray0);
      nativeArray0.delete(2);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      IdFunctionObject idFunctionObject0 = nativeArray1.exportAsJSClass(10, nativeArray0, true);
      // Undeclared exception!
      try { 
        nativeArray0.execIdCall(idFunctionObject0, context0, idFunctionObject0, nativeArray1, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(4570L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      nativeWith0.put("KrZq*o1>(>GZv`", (Scriptable) nativeArray0, (Object) "KrZq*o1>(>GZv`");
      nativeArray0.getIndexIds();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Long long0 = new Long(1991L);
      Object[] objectArray0 = Context.emptyArgs;
      NativeArray nativeArray0 = new NativeArray(1991L);
      int int0 = (-1890);
      // Undeclared exception!
      try { 
        nativeArray0.subList((-1890), (-1890));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      NativeArray.getMaximumInitialCapacity();
      Object[] objectArray0 = new Object[2];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.getIndexIds();
      NativeObject nativeObject0 = new NativeObject();
      nativeArray0.get((-1682), (Scriptable) nativeObject0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1976L);
      nativeArray0.avoidObjectDetection();
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) nativeArray0;
      objectArray0[1] = (Object) nativeArray0;
      objectArray0[2] = (Object) nativeArray0;
      NativeArray nativeArray1 = new NativeArray(objectArray0);
      Context context0 = Context.enter();
      nativeArray0.activatePrototypeMap(2);
      NativeArray.getLengthProperty(context0, nativeArray0);
      nativeArray0.getIndexIds();
      Context context1 = Context.enter();
      NativeArray.getLengthProperty(context1, nativeArray0);
      nativeArray1.indexOf(objectArray0[0]);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-3072L));
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeArray0.put(2, (Scriptable) nativeIterator_StopIteration0, (Object) nativeIterator_StopIteration0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test011()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(852L);
      nativeArray0.preventExtensions();
      nativeArray0.jsGet_length();
      NativeArray nativeArray1 = new NativeArray(699L);
      NativeArray nativeArray2 = new NativeArray((-15));
      nativeArray1.toArray();
      Context context0 = Context.getContext();
      // Undeclared exception!
      try { 
        nativeArray2.defineOwnProperty(context0, (Object) nativeArray1, (ScriptableObject) nativeArray1, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test012()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1067L);
      nativeArray0.avoidObjectDetection();
      nativeArray0.setDenseOnly(false);
      Long long0 = new Long(1067L);
      Context context0 = Context.getContext();
      ContextFactory contextFactory0 = new ContextFactory();
      Short short0 = new Short((short)675);
      nativeArray0.getOwnPropertyDescriptor(context0, long0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1431655759L);
      nativeArray0.get((Object) "e]yy@I");
      nativeArray0.indexOf((Object) null);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-3081L));
      LinkedHashSet<IdFunctionObject> linkedHashSet0 = new LinkedHashSet<IdFunctionObject>(1633);
      // Undeclared exception!
      try { 
        nativeArray0.retainAll(linkedHashSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(170L);
      nativeArray0.findPrototypeId("close");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(170L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      nativeArray0.getAllIds();
      NativeError nativeError0 = new NativeError();
      nativeArray0.put(10000, (Scriptable) nativeWith0, (Object) nativeError0);
      nativeArray0.has(10000, (Scriptable) nativeWith0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      // Undeclared exception!
      try { 
        NativeArray.getLengthProperty(context0, (Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(170L);
      Context context0 = Context.getCurrentContext();
      Short short0 = new Short((short)157);
      nativeArray0.getOwnPropertyDescriptor(context0, context0);
      nativeArray0.findPrototypeId("language version");
      nativeArray0.lastIndexOf(short0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-39L));
      nativeArray0.avoidObjectDetection();
      nativeArray0.setDenseOnly(false);
      Long long0 = new Long((-39L));
      Context context0 = new Context();
      ContextFactory contextFactory0 = new ContextFactory();
      Short short0 = new Short((short)675);
      nativeArray0.getOwnPropertyDescriptor(context0, long0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test020()  throws Throwable  {
      int int0 = ScriptableObject.PERMANENT;
      Object[] objectArray0 = new Object[8];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.getAttributes(4);
      Context context0 = Context.getContext();
      NativeArray.getLengthProperty(context0, nativeArray0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(823L);
      NativeArray nativeArray1 = new NativeArray(13);
      nativeArray0.has(4, (Scriptable) nativeArray1);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1991L);
      nativeArray0.hasPrototypeMap();
      ClassLoader.getSystemClassLoader();
      NativeArray nativeArray1 = new NativeArray(9221120237041090560L);
      // Undeclared exception!
      try { 
        nativeArray1.toArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test023()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(10000L);
      Class<NativeObject> class0 = NativeObject.class;
      // Undeclared exception!
      try { 
        nativeArray0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeObject
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test024()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(852L);
      nativeArray0.preventExtensions();
      nativeArray0.jsGet_length();
      nativeArray0.setInstanceIdAttributes(386, 386);
      Class<NativeMath> class0 = NativeMath.class;
      // Undeclared exception!
      try { 
        nativeArray0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeMath
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1830L);
      nativeArray0.findPrototypeId("]#(");
      nativeArray0.delete(0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      NativeArray.getMaximumInitialCapacity();
      Object[] objectArray0 = new Object[2];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Delegator delegator0 = new Delegator(nativeArray0);
      // Undeclared exception!
      try { 
        NativeArray.init(delegator0, false);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-3081L));
      TreeSet<NativeIterator.StopIteration> treeSet0 = new TreeSet<NativeIterator.StopIteration>();
      // Undeclared exception!
      try { 
        nativeArray0.addAll((Collection) treeSet0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(848L);
      // Undeclared exception!
      try { 
        nativeArray0.remove((Object) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1168L);
      nativeArray0.findInstanceIdInfo("");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1067L);
      nativeArray0.delete(0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
      NativeArray nativeArray1 = new NativeArray(4);
      nativeArray1.sealObject();
      Synchronizer synchronizer0 = new Synchronizer(nativeArray0);
      NativeString nativeString0 = new NativeString("language version");
      // Undeclared exception!
      try { 
        nativeArray0.put(13, (Scriptable) nativeArray1, (Object) nativeString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot modify a property of a sealed object: 13.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test032()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Context context0 = Context.enter();
      context0.getApplicationClassLoader();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      classLoader0.getParent();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test033()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(9972L);
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes(2147268856);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 2147268856 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      NativeArray nativeArray1 = new NativeArray(objectArray0);
      nativeArray0.put((-25), (Scriptable) nativeArray1, (Object) nativeArray1);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(170L);
      nativeArray0.activatePrototypeMap(4);
      nativeArray0.getIndexIds();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(818L);
      ScriptableObject.getObjectPrototype(nativeArray0);
      nativeArray0.has((-992), (Scriptable) null);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(170L);
      nativeArray0.toArray();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(170L);
      Comparator<BaseFunction> comparator0 = (Comparator<BaseFunction>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(comparator0).compare(any(com.google.javascript.rhino.head.BaseFunction.class) , any(com.google.javascript.rhino.head.BaseFunction.class));
      // Undeclared exception!
      try { 
        nativeArray0.sort(comparator0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray$3", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1431655764L);
      nativeArray0.findPrototypeId("e]6yy@I");
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(177L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      Object[] objectArray0 = nativeArray0.getAllIds();
      NativeArray nativeArray1 = new NativeArray(objectArray0);
      nativeArray1.setDenseOnly(true);
      nativeArray1.has(0, (Scriptable) nativeWith0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      // Undeclared exception!
      try { 
        nativeArray0.getInstanceIdValue(2047);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2047
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.activatePrototypeMap(1682);
      // Undeclared exception!
      try { 
        nativeArray0.getIndexIds();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 24
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      System.setCurrentTimeMillis((-1404L));
      NativeArray nativeArray0 = new NativeArray((-1404L));
      nativeArray0.findPrototypeId("HSNk&KMBF$;?d");
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1431655759L);
      nativeArray0.findPrototypeId("e]6yy@I");
      nativeArray0.getIndexIds();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(170L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      nativeArray0.getAllIds();
      NativeError nativeError0 = new NativeError();
      nativeWith0.put("<B", (Scriptable) nativeArray0, (Object) nativeError0);
      NativeNumber nativeNumber0 = new NativeNumber(3371.0);
      ScriptableObject.hasProperty((Scriptable) nativeError0, 2);
      nativeArray0.put(3579, (Scriptable) nativeWith0, (Object) nativeNumber0);
      nativeArray0.lastIndexOf((Object) null);
      nativeArray0.delete(3579);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1991L);
      Long long0 = new Long(1991L);
      NativeArray nativeArray1 = new NativeArray(4);
      Object[] objectArray0 = Context.emptyArgs;
      Synchronizer synchronizer0 = new Synchronizer(nativeArray0);
      nativeArray0.put(12, (Scriptable) nativeArray1, (Object) synchronizer0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = ScriptableObject.PERMANENT;
      NativeArray nativeArray0 = new NativeArray(834L);
      nativeArray0.delete(4);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1431655764L);
      nativeArray0.avoidObjectDetection();
      nativeArray0.setDenseOnly(false);
      Long long0 = new Long(811L);
      Context context0 = new Context();
      ContextFactory contextFactory0 = new ContextFactory();
      Object[] objectArray0 = Context.emptyArgs;
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeArray0, nativeArray0, 826, 13);
      nativeArray0.has(2252, (Scriptable) idFunctionObject0);
      NativeArray.getLengthProperty(context0, nativeArray0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Double double0 = new Double(3370.901207670055);
      Object[] objectArray0 = new Object[2];
      objectArray0[1] = (Object) double0;
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.setInstanceIdAttributes(3564, 4);
      int int0 = ScriptableObject.CONST;
      nativeArray0.toArray();
      nativeArray0.findPrototypeId("SCcz!;'5OF");
      Context context0 = Context.getCurrentContext();
      Short short0 = new Short((short)1);
      nativeArray0.getOwnPropertyDescriptor(context0, short0);
      nativeArray0.findPrototypeId("error reporter");
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1972L);
      nativeArray0.getIndexIds();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(802L);
      nativeArray0.size();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test052()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(177L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      NativeError nativeError0 = new NativeError();
      Context.enter();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      NativeArray nativeArray1 = null;
      try {
        nativeArray1 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(170L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      String string0 = "close";
      Long long0 = new Long((-8500279345513818773L));
      // Undeclared exception!
      try { 
        nativeArray0.add((Object) long0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test054()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(16L);
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes((-1432));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property -1432 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(170L);
      nativeArray0.preventExtensions();
      nativeArray0.findPrototypeId("I7,~#N|Ow");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test056()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      Context context1 = new Context(contextFactory0);
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(823L);
      nativeArray0.findPrototypeId("href");
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(170L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      nativeArray0.findPrototypeId("length");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(177L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      nativeWith0.getIds();
      NativeArray nativeArray1 = new NativeArray(0);
      // Undeclared exception!
      try { 
        nativeArray1.removeAll(nativeArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(9991L);
      // Undeclared exception!
      try { 
        nativeArray0.get(4294967295L);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-1796764746270372707L));
      // Undeclared exception!
      try { 
        nativeArray0.listIterator(284);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 284
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1991L);
      nativeArray0.hasPrototypeMap();
      nativeArray0.setDenseOnly(false);
      Long long0 = new Long(1991L);
      Object[] objectArray0 = Context.emptyArgs;
      NativeArray nativeArray1 = new NativeArray(4);
      nativeArray1.spliterator();
      Object[] objectArray1 = Context.emptyArgs;
      NativeArray nativeArray2 = new NativeArray(4294967295L);
      NativeArray nativeArray3 = new NativeArray((-664674077828931748L));
      // Undeclared exception!
      try { 
        nativeArray2.contains(nativeArray3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1991L);
      nativeArray0.isSealed();
      nativeArray0.setDenseOnly(false);
      Long long0 = new Long(13);
      Object[] objectArray0 = nativeArray0.toArray();
      int int0 = ScriptableObject.UNINITIALIZED_CONST;
      ClassLoader.getSystemClassLoader();
      NativeArray nativeArray1 = new NativeArray(objectArray0);
      nativeArray0.toArray();
      NativeArray nativeArray2 = new NativeArray(1431655757L);
      // Undeclared exception!
      try { 
        nativeArray0.setDenseOnly(true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(782L);
      Float float0 = new Float(911.0);
      nativeArray0.contains(float0);
      nativeArray0.size();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Double double0 = new Double(1067L);
      Object[] objectArray0 = new Object[0];
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setPackageAssertionStatus("Bad stack index: ", true);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeArray0.lastIndexOf(nativeBoolean0);
      nativeArray0.lastIndexOf((Object) null);
      nativeArray0.get(13, (Scriptable) nativeIterator_StopIteration0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      NativeArray.getMaximumInitialCapacity();
      Object[] objectArray0 = new Object[2];
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.equivalentValues(uniqueTag0);
      nativeArray0.toArray();
      int int0 = ScriptableObject.DONTENUM;
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.getIndexIds();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(10000L);
      // Undeclared exception!
      try { 
        nativeArray0.remove(0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.getIndexIds();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(198L);
      int int0 = (-3072);
      // Undeclared exception!
      try { 
        nativeArray0.getInstanceIdName(112);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 112
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test071()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(4556L);
      int int0 = ScriptableObject.CONST;
      nativeArray0.toArray();
      nativeArray0.findPrototypeId("-1");
      Context context0 = Context.getCurrentContext();
      Short short0 = new Short((short)1984);
      nativeArray0.getOwnPropertyDescriptor(context0, "-1");
      nativeArray0.findPrototypeId("-&H'+c |6f");
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(170L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) nativeWith0;
      NativeArray nativeArray1 = new NativeArray(objectArray0);
      Context context0 = Context.enter();
      NativeArray.getLengthProperty(context0, nativeWith0);
      nativeArray0.getIndexIds();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(815L);
      nativeArray0.setInstanceIdAttributes(5887, (-444));
      nativeArray0.containsAll(nativeArray0);
      int int0 = ScriptableObject.DONTENUM;
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      NativeArray nativeArray0 = new NativeArray(150);
      nativeArray0.findPrototypeId("error reporter");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test075()  throws Throwable  {
      Context.getCurrentContext();
      NativeArray nativeArray0 = new NativeArray(916L);
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 0 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1431655764L);
      nativeArray0.findPrototypeId("]6yl@");
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1431655759L);
      Byte byte0 = new Byte((byte) (-120));
      // Undeclared exception!
      try { 
        nativeArray0.setInstanceIdValue(400, byte0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 400
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(815L);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) nativeArray0;
      NativeArray nativeArray1 = new NativeArray(objectArray0);
      nativeArray1.containsAll(nativeArray0);
      int int0 = ScriptableObject.CONST;
      nativeArray0.findPrototypeId("NOT SUPPORTED");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-898L));
      nativeArray0.activatePrototypeMap(17);
      // Undeclared exception!
      try { 
        nativeArray0.getIndexIds();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(823L);
      nativeArray0.containsAll(nativeArray0);
      nativeArray0.size();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-3081L));
      nativeArray0.size();
      Object object0 = nativeArray0.get(1023, (Scriptable) null);
      nativeArray0.lastIndexOf(object0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(852L);
      nativeArray0.preventExtensions();
      nativeArray0.jsGet_length();
      nativeArray0.setInstanceIdAttributes(13, 0);
      nativeArray0.listIterator();
      // Undeclared exception!
      try { 
        nativeArray0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-1469L));
      nativeArray0.delete(3229);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      NativeArray.getMaximumInitialCapacity();
      Context.enter();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-3081L));
      nativeArray0.size();
      // Undeclared exception!
      try { 
        nativeArray0.listIterator((-3081));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -3081
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test086()  throws Throwable  {
      Object[] objectArray0 = Context.emptyArgs;
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      LinkedList<NativeJavaPackage> linkedList0 = new LinkedList<NativeJavaPackage>();
      NativeArray nativeArray0 = new NativeArray((-3000L));
      linkedList0.addAll((Collection<? extends NativeJavaPackage>) nativeArray0);
      linkedList0.iterator();
      ClassLoader.getSystemClassLoader();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1431655759L);
      nativeArray0.delete(2769);
      ContextFactory.getGlobal();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enter();
      Context context0 = new Context();
      nativeArray0.findPrototypeId("error reporter");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1991L);
      nativeArray0.findPrototypeId("msg.generator.returns");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test090()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1698L);
      NativeArray nativeArray1 = new NativeArray((-304L));
      nativeArray1.containsAll(nativeArray0);
      Class<NativeNumber> class0 = NativeNumber.class;
      // Undeclared exception!
      try { 
        nativeArray0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeNumber
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test091()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(170L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      Object[] objectArray0 = nativeArray0.getAllIds();
      NativeError nativeError0 = new NativeError();
      nativeArray0.put(10000, (Scriptable) nativeWith0, (Object) nativeError0);
      IdFunctionObject idFunctionObject0 = nativeArray0.exportAsJSClass(8, nativeError0, true);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      InterpretedFunction interpretedFunction0 = InterpretedFunction.createScript((InterpreterData) null, (Object) null);
      nativeArray0.execIdCall(idFunctionObject0, context0, interpretedFunction0, nativeWith0, objectArray0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Double double0 = new Double(3370.901207670055);
      Object[] objectArray0 = new Object[2];
      objectArray0[1] = (Object) double0;
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.setInstanceIdAttributes(3564, 4);
      LinkedList<NativeJavaPackage> linkedList0 = new LinkedList<NativeJavaPackage>();
      linkedList0.iterator();
      nativeArray0.lastIndexOf(objectArray0[1]);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-5702008784649933400L));
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(170L);
      nativeArray0.findPrototypeId("clJMse");
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(177L);
      nativeArray0.lastIndexOf("H1`{]Dk1B=9z5g'W");
      NativeArray nativeArray1 = new NativeArray((-1));
      // Undeclared exception!
      try { 
        nativeArray1.add(2232, (Object) "H1`{]Dk1B=9z5g'W");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(170L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      nativeArray0.getAllIds();
      nativeArray0.has(10000, (Scriptable) nativeWith0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(9972L);
      Locale locale0 = Locale.UK;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      // Undeclared exception!
      try { 
        nativeArray0.addAll((-1651), (Collection) set0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(3833L);
      NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
      nativeArray0.indexOf(nativeJavaClass0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(818L);
      nativeArray0.lastIndexOf((Object) null);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(170L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      nativeArray0.getAllIds();
      Object[] objectArray0 = Context.emptyArgs;
      NativeArray nativeArray1 = new NativeArray(1);
      Synchronizer synchronizer0 = new Synchronizer(nativeArray1);
      NativeError nativeError0 = new NativeError();
      nativeArray0.put(1, (Scriptable) nativeArray1, (Object) nativeError0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(177L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      nativeArray0.getAllIds();
      NativeError nativeError0 = new NativeError();
      nativeWith0.put("T3-EQp!oZ:", (Scriptable) nativeError0, (Object) nativeError0);
      NativeArray nativeArray1 = new NativeArray(150L);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.setDenseOnly(true);
      NativeArray nativeArray1 = new NativeArray(objectArray0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(17L);
      nativeArray0.isExtensible();
      // Undeclared exception!
      try { 
        nativeArray0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(3821L);
      nativeArray0.size();
      nativeArray0.findPrototypeId("#a>X^dyF@@SY");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(815L);
      nativeArray0.containsAll(nativeArray0);
      NativeArray nativeArray1 = new NativeArray(815L);
      Object object0 = new Object();
      nativeArray1.put(4, (Scriptable) nativeArray0, object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test106()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(2147483647L);
      Object[] objectArray0 = Context.emptyArgs;
      Synchronizer synchronizer0 = new Synchronizer(nativeArray0);
      NativeArray nativeArray1 = null;
      try {
        nativeArray1 = new NativeArray(objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = ScriptableObject.CONST;
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      NativeArray nativeArray0 = new NativeArray(13);
      nativeArray0.lastIndexOf(uniqueTag0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test108()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-3072L));
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Byte byte0 = new Byte((byte) (-21));
      nativeIterator_StopIteration0.put("]5h<8{", (Scriptable) nativeArray0, (Object) byte0);
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes(2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 2 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(177L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      Object[] objectArray0 = nativeArray0.getAllIds();
      NativeArray nativeArray1 = new NativeArray(objectArray0);
      // Undeclared exception!
      try { 
        nativeArray0.set(4, nativeArray1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(170L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      nativeArray0.getAllIds();
      NativeError nativeError0 = new NativeError();
      nativeArray0.put(10000, (Scriptable) nativeWith0, (Object) nativeError0);
      nativeArray0.put(4, (Scriptable) nativeWith0, (Object) nativeError0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-1L));
      nativeArray0.findPrototypeId("parseInt");
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      nativeArray0.get(0, (Scriptable) nativeJavaObject0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(818L);
      Predicate<NativeJSON> predicate0 = Predicate.isEqual((Object) nativeArray0);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(predicate1).test(any());
      Predicate<NativeJSON> predicate2 = predicate0.or(predicate1);
      Predicate<NativeJSON> predicate3 = predicate2.and(predicate0);
      Predicate.isEqual((Object) nativeArray0);
      Predicate<NativeJSON> predicate4 = predicate3.negate();
      // Undeclared exception!
      try { 
        nativeArray0.removeIf(predicate4);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray$3", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(169L);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      nativeArray0.findPrototypeId("enumerable");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(10000L);
      Context context0 = Context.enter();
      NativeArray.getLengthProperty(context0, nativeArray0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(10000L);
      nativeArray0.delete((-2872));
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(852L);
      nativeArray0.getIds(false);
      nativeArray0.setInstanceIdAttributes(1, 1);
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeArray0.contains(nativeBoolean0);
      nativeArray0.findPrototypeId("length");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      Double double0 = new Double(3371.43817544);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) uniqueTag0;
      objectArray0[1] = (Object) double0;
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.setInstanceIdAttributes(526, (-772));
      LinkedList<NativeJavaPackage> linkedList0 = new LinkedList<NativeJavaPackage>();
      linkedList0.iterator();
      nativeArray0.findPrototypeId("SCcz!;'5OF");
      ClassLoader.getSystemClassLoader();
      nativeArray0.toArray();
      nativeArray0.findPrototypeId("SCcz!;'5OF");
      Context context0 = Context.getCurrentContext();
      Short short0 = new Short((short)1);
      nativeArray0.getOwnPropertyDescriptor(context0, short0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        nativeArray0.defineOwnProperty(context0, (Object) importerTopLevel0, (ScriptableObject) importerTopLevel0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test118()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(10000L);
      nativeArray0.getClassName();
      NativeString nativeString0 = new NativeString("Array");
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes((-2276), (Scriptable) nativeString0);
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Property -2276 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.setDenseOnly(false);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1991L);
      nativeArray0.hasPrototypeMap();
      nativeArray0.setDenseOnly(false);
      Long long0 = new Long(13);
      Object[] objectArray0 = nativeArray0.toArray();
      nativeArray0.findPrototypeId("RangeError");
      ClassLoader.getSystemClassLoader();
      NativeArray nativeArray1 = new NativeArray(objectArray0);
      nativeArray0.toArray();
      NativeArray nativeArray2 = new NativeArray(1431655757L);
      Synchronizer synchronizer0 = new Synchronizer(nativeArray1);
      synchronizer0.getIds();
      nativeArray2.put(4, (Scriptable) nativeArray0, (Object) synchronizer0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.enter((Context) null, contextFactory0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        nativeArray2.defineOwnProperty(context0, (Object) importerTopLevel0, (ScriptableObject) nativeArray0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(1991L);
      nativeArray0.hasPrototypeMap();
      nativeArray0.setDenseOnly(false);
      Long long0 = new Long(13);
      nativeArray0.toArray();
      ClassLoader.getSystemClassLoader();
      NativeArray nativeArray1 = new NativeArray(8);
      nativeArray0.toArray();
      NativeArray nativeArray2 = new NativeArray(1431655757L);
      Synchronizer synchronizer0 = new Synchronizer(nativeArray1);
      nativeArray2.put(4, (Scriptable) nativeArray0, (Object) synchronizer0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      // Undeclared exception!
      try { 
        nativeArray2.getOwnPropertyDescriptor(context0, synchronizer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(673L);
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel(context0);
      ScriptableObject.putConstProperty(nativeArray0, "9$7`U*88}5", importerTopLevel0);
      // Undeclared exception!
      try { 
        nativeArray0.defineOwnProperty(context0, (Object) importerTopLevel0, (ScriptableObject) importerTopLevel1, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      int int0 = ScriptableObject.PERMANENT;
      NativeArray nativeArray0 = new NativeArray(4);
      ScriptableObject.buildDataDescriptor(nativeArray0, nativeArray0, 1);
      ListIterator listIterator0 = nativeArray0.listIterator(4);
      assertNotNull(listIterator0);
  }
}
