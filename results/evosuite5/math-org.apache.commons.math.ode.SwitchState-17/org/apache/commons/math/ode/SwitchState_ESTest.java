/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 15:41:12 GMT 2019
 */

package org.apache.commons.math.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.DummyStepInterpolator;
import org.apache.commons.math.ode.SwitchState;
import org.apache.commons.math.ode.SwitchingFunction;
import org.apache.commons.math.ode.ThreeEighthesStepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class SwitchState_ESTest extends SwitchState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(switchingFunction0).eventOccurred(anyDouble() , any(double[].class));
      doReturn((-24.499206677425), (-24.499206677425), 2683.8155197, (-24.499206677425), 2683.8155197).when(switchingFunction0).g(anyDouble() , any(double[].class));
      double[] doubleArray0 = new double[9];
      SwitchState switchState0 = new SwitchState(switchingFunction0, (-24.499206677425), (-24.499206677425), 1284);
      switchState0.reinitializeBegin(1284, doubleArray0);
      switchState0.stepAccepted(1284, doubleArray0);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
      switchState0.evaluateStep(dummyStepInterpolator0);
      switchState0.stepAccepted((-24.499206677425), doubleArray0);
      switchState0.reset((-994.4), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[9];
      SwitchState switchState0 = new SwitchState(switchingFunction0, (-24.499206677425), (-24.499206677425), 1284);
      switchState0.reset((-24.499206677425), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn((-24.499206677425), (-24.499206677425), 2683.8155197, (-24.499206677425), 2683.8155197).when(switchingFunction0).g(anyDouble() , any(double[].class));
      double[] doubleArray0 = new double[9];
      SwitchState switchState0 = new SwitchState(switchingFunction0, (-24.499206677425), (-24.499206677425), 1284);
      switchState0.reinitializeBegin(1284, doubleArray0);
      switchState0.stepAccepted(1284, doubleArray0);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
      switchState0.evaluateStep(dummyStepInterpolator0);
      switchState0.reset((-994.4), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(switchingFunction0).eventOccurred(anyDouble() , any(double[].class));
      doReturn((-24.499206677425), (-24.499206677425), 2683.8155197, (-24.499206677425), 2683.8155197).when(switchingFunction0).g(anyDouble() , any(double[].class));
      double[] doubleArray0 = new double[9];
      SwitchState switchState0 = new SwitchState(switchingFunction0, (-24.499206677425), (-24.499206677425), 1284);
      switchState0.reinitializeBegin(1284, doubleArray0);
      switchState0.stepAccepted(1284, doubleArray0);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
      switchState0.evaluateStep(dummyStepInterpolator0);
      switchState0.stepAccepted((-24.499206677425), doubleArray0);
      boolean boolean0 = switchState0.stop();
      assertEquals(1284.0, switchState0.getEventTime(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      SwitchState switchState0 = new SwitchState(switchingFunction0, (-24.499206677425), (-24.499206677425), 1284);
      boolean boolean0 = switchState0.stop();
      assertEquals(Double.NaN, switchState0.getEventTime(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      SwitchState switchState0 = new SwitchState(switchingFunction0, 7, 7, 7);
      double[] doubleArray0 = new double[9];
      switchState0.stepAccepted(7, doubleArray0);
      assertEquals(Double.NaN, switchState0.getEventTime(), 0.01);
      assertFalse(switchState0.stop());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(switchingFunction0).eventOccurred(anyDouble() , any(double[].class));
      doReturn((-393.7276604621), (-393.7276604621), 2684.258321886569, (-393.7276604621), 2684.258321886569).when(switchingFunction0).g(anyDouble() , any(double[].class));
      double[] doubleArray0 = new double[1];
      SwitchState switchState0 = new SwitchState(switchingFunction0, 2684.258321886569, (-393.7276604621), 1275);
      switchState0.reinitializeBegin(2684.258321886569, doubleArray0);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
      switchState0.evaluateStep(dummyStepInterpolator0);
      switchState0.evaluateStep(dummyStepInterpolator0);
      switchState0.stepAccepted((-393.7276604621), doubleArray0);
      assertEquals(2684.258321886569, switchState0.getEventTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn((-24.499206677425)).when(switchingFunction0).g(anyDouble() , any(double[].class));
      double[] doubleArray0 = new double[1];
      SwitchState switchState0 = new SwitchState(switchingFunction0, 2683.8155197, 1364.8208, (-1951));
      switchState0.reinitializeBegin((-1951), doubleArray0);
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      threeEighthesStepInterpolator0.currentTime = 1364.8208;
      // Undeclared exception!
      try { 
        switchState0.evaluateStep(threeEighthesStepInterpolator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.ThreeEighthesStepInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(1247.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      double[] doubleArray0 = new double[1];
      SwitchState switchState0 = new SwitchState(switchingFunction0, 1247.0, 1247.0, 1243);
      switchState0.reinitializeBegin(1243, doubleArray0);
      assertFalse(switchState0.stop());
      assertEquals(Double.NaN, switchState0.getEventTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      SwitchState switchState0 = new SwitchState(switchingFunction0, 0, 0, 0);
      double double0 = switchState0.getEventTime();
      assertEquals(Double.NaN, double0, 0.01);
      assertFalse(switchState0.stop());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn((-24.499206677425), (-24.499206677425), 2683.8155197, (-24.499206677425), 2683.8155197).when(switchingFunction0).g(anyDouble() , any(double[].class));
      double[] doubleArray0 = new double[1];
      SwitchState switchState0 = new SwitchState(switchingFunction0, (-24.499206677425), (-24.499206677425), 1284);
      DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, false);
      try { 
        switchState0.evaluateStep(dummyStepInterpolator0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Maximal number of iterations (1,284) exceeded
         //
         verifyException("org.apache.commons.math.analysis.BrentSolver", e);
      }
  }
}
