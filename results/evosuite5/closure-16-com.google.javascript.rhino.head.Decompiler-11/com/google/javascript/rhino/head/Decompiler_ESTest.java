/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 23:17:17 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Decompiler;
import com.google.javascript.rhino.head.UintMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Decompiler_ESTest extends Decompiler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("(I)Ljava/lang/Strng;", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      UintMap uintMap0 = new UintMap(124);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("(J#\u86F2\u6FC1\u0000", 3, uintMap0);
      assertNotNull(string0);
      assertEquals("10000000000000000", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0097m\uFEDC", 1, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("g\u0001", (-3513), uintMap0);
      assertNotNull(string0);
      assertEquals(":", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("x'VLoQ}j>Y_VTINQJE@5", 2, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      uintMap0.put(1, 2);
      assertEquals(1, uintMap0.size());
      assertFalse(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0001m\uFEDC", (-292), uintMap0);
      assertNotNull(string0);
      assertEquals("\n  \n  function \n", string0);
      assertEquals(1, uintMap0.size());
      assertFalse(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0001\u0001s", 1, uintMap0);
      assertNotNull(string0);
      assertEquals("\ncase ", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A4\u0000", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 0
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A4\u00A3", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 163
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A2m\u00A2", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 162
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A1\u0001", 1135, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 161
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u0001\u0001\u00A0", 1, uintMap0);
      assertNotNull(string0);
      assertEquals("\ndebugger;\n", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A4\u009F", 159, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 159
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A4\u009E", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 158
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u009Dm\u0002", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 157
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u009Cm\u009C", (-1005), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 156
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("(S\u0003\u009B", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 155
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u0001\u0001\u009A", 2, uintMap0);
      assertNotNull(string0);
      assertEquals("const ", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0099m\u0002", 2, uintMap0);
      assertNotNull(string0);
      assertEquals("let function ", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A4\u0096", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 150
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0095\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 149
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0094\u0001", 149, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 148
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u0001\u0001U\u0001\u0093", 147, uintMap0);
      assertNotNull(string0);
      assertEquals("{@", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0092\u0001", 2, uintMap0);
      assertNotNull(string0);
      assertEquals(".(", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A4\u0091", 163, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 145
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u0001\u0001\u0090", 1, uintMap0);
      assertNotNull(string0);
      assertEquals("\n::", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("(S\u0001\u008F", 1, uintMap0);
      assertNotNull(string0);
      assertEquals("\n1..", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A4\u008E", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 142
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u008D\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 141
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A4\u008C", 0, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 140
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      UintMap uintMap0 = new UintMap(0);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A4\u008B", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 139
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("(S\u0C29\u008A", 138, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 138
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("(S\u00A0\u0089", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 137
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0001\u0001\u0088", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 136
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0087\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 135
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("(S\u0001\u0086", 134, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 134
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0001\u0001\u0085", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 133
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0084\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 132
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0083m\u0083", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 131
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0082\u0001", 21, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 130
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0081\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 129
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A4\u0080", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 128
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("m9X3^uqFPNJOI9v=", 10, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 127
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("reverse", (-715), uintMap0);
      assertNotNull(string0);
      assertEquals("\nswitch  %= do  %= switch case  %= ", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("com.google.javascript.rhino.head.Ref", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 111
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("this", 2, uintMap0);
      assertNotNull(string0);
      assertEquals("default ||  && case ", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("LYlxi9", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 76
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("T!", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 33
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Se1}JzG94L", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 49
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      UintMap uintMap0 = new UintMap(112);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Vr{VyQ1C8D", 112, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 49
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("getParamAndVarCount", 3327, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 80
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("R UOJL(,]0ZW", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 79
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Namespace", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 78
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("XMLList", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 77
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("|~kLaV_)!zl$mp^)[P", 62, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 76
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("KY4RZ0", 616, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 75
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("`J,x)[[>YS((>p9b~#", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 74
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("_reInitDone", 86, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 73
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("jqHXUpX_08z@8=<pR3", 2, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("|ZGV',kGC,g5)Y(^'", 421, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 71
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("l5FKYT'?LO=~]", 104, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 70
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("wpeV}DgVF*_niwF$", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 68
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("]RC#f2[0-\"", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 67
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Vr{VyB\"G8D", 104, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 34
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("AND", (-2753), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 65
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Vty@1m{O>N", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 64
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("d?fLke$560t|", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 63
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(" > ", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 62
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("=\"", 569, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 61
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(";AqE@0", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 59
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("2e:-3aq]E]}BzV&U", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 58
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("2Vu~`9&][>~@aBA'8", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 57
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("8qIW}Kwi-zc%9:}Tp", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 56
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("6N(w%Cj", 64, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 54
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("57Li", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 55
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("4^^y'x5*,q%+ExFhl", 136, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      UintMap uintMap0 = new UintMap(162);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("3RA]eaX@P", 162, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 51
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Y1 _'", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 49
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("/U x`U", 2, uintMap0);
      assertNotNull(string0);
      assertEquals(" !== {typeof break >>>= {", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("msg.null.to.object", 0, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 110
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      UintMap uintMap0 = new UintMap(46);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("d2{}2[j,E[", 46, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 69
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("V+&Y7#*Fo;Z9", 1048575, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 38
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("z&>SZ7Fh", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 38
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("-%Av[f0~ij\"JdxX_Q", 85, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 37
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("RV$\"U69m!!oG5M}", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 36
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      UintMap uintMap0 = new UintMap(151);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("#geX,?xPMKL9)R:$\"", 151, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 35
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      UintMap uintMap0 = new UintMap(157);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("W\"xch*[Ai4h", 157, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 34
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("bf!", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 33
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u001F\u0001", 3, uintMap0);
      assertNotNull(string0);
      assertEquals("delete ", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u001Dm\u001D", 2, uintMap0);
      assertNotNull(string0);
      assertEquals("-function ", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u001C\u001C", 2, uintMap0);
      assertNotNull(string0);
      assertEquals("++", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u001B\u001Bm\u001B", 2, uintMap0);
      assertNotNull(string0);
      assertEquals("~~function ", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      UintMap uintMap0 = new UintMap(26);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u001Am\uFC9B", 3, uintMap0);
      assertNotNull(string0);
      assertEquals("!function ", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("(S\u0003\u0019", 1, uintMap0);
      assertNotNull(string0);
      assertEquals("\n3 % ", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("'\u00016\u0018\u001E", 159, uintMap0);
      assertNotNull(string0);
      assertEquals("6 / new ", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u0017m\u0002", 2, uintMap0);
      assertNotNull(string0);
      assertEquals(" * function ", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0016\u0001", 2098, uintMap0);
      assertNotNull(string0);
      assertEquals(" - ", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0015\u0001", 1, uintMap0);
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u0014m\u0014", 2, uintMap0);
      assertNotNull(string0);
      assertEquals(" >>> function ", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0001\u0001\u0013", 131, uintMap0);
      assertNotNull(string0);
      assertEquals(" >> ", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("(S\u00A0\u0012", 160, uintMap0);
      assertNotNull(string0);
      assertEquals("\n160 << \n", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertNotNull(uintMap0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      
      String string0 = Decompiler.decompile("\u0011m\u0002", 2, uintMap0);
      assertNotNull(string0);
      assertEquals(" >= function ", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      assertNotNull(uintMap0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      
      String string0 = Decompiler.decompile("\u0001\u0001\u0010", 3, uintMap0);
      assertNotNull(string0);
      assertEquals(" > ", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      String string0 = Decompiler.decompile("\u000F0\u0004/+/+)\u0001+", 3, uintMap0);
      assertEquals(" <= /+/+\"+\"", string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u000E\u000E", 3, uintMap0);
      assertEquals(" <  < ", string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("(S\u0001\r", 1, uintMap0);
      assertEquals("\n1 != ", string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      String string0 = Decompiler.decompile("(S\u0002\f", 1, uintMap0);
      assertEquals("\n2 == ", string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u000Bm\u00B1", (-172), uintMap0);
      assertEquals("\n & function \n", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("}\n", 1, uintMap0);
      assertEquals("\nfinally  ^ ", string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\tat script", 152, uintMap0);
      assertEquals("\n |  += defaulttypeof case  *= switch  && if default\n", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("\b\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 8
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2591);
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A4(D\u40A1\uC965\uC06E\u138E\u00A4(D\u40A1\uC965\uC06E\u138E\u0007", 2591, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 7
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0006\u0001", 6, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 6
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0001\u0001\u0005", 5, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 5
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      String string0 = Decompiler.decompile("(S\u0003\u0004", 2, uintMap0);
      assertEquals("3return ", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      // Undeclared exception!
      try { 
        Decompiler.decompile("(S\u0001\u0003", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 3
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0001\u0001'\u0000\u0002", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 2
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("m\u0002", 2, uintMap0);
      assertEquals("(function )", string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      uintMap0.put(1, 1);
      // Undeclared exception!
      try { 
        Decompiler.decompile("y*q2<FF9UMcw,", 152, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 60
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u0088\u0001", 1, uintMap0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      // Undeclared exception!
      try { 
        Decompiler.decompile("(S\u0003\u0098", 2, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      uintMap0.put(3, (-1243));
      // Undeclared exception!
      try { 
        Decompiler.decompile("}\n", 1, uintMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      uintMap0.put(2, (-1258));
      // Undeclared exception!
      try { 
        Decompiler.decompile("Vr{.VySQ1C-e", 2, uintMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1944);
      uintMap0.put(1, (-1566));
      // Undeclared exception!
      try { 
        Decompiler.decompile("pkKQ", 2, uintMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("", 160, uintMap0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addRegexp("(D\u40A1\uE511\uECC1\u8641(D\u40A1\uE511\uECC1\u8641)LCannot have any pending top calls when executing a script with continuations'LCannot have any pending top calls when executing a script with continuations", "(D\u40A1\uE511\uECC1\u8641(D\u40A1\uE511\uECC1\u8641)LCannot have any pending top calls when executing a script with continuations'LCannot have any pending top calls when executing a script with continuations");
      assertEquals(2, Decompiler.INDENT_GAP_PROP);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addString("__iterator__");
      decompiler0.addName("__iterator__");
      int int0 = decompiler0.markFunctionEnd(3);
      assertEquals(28, int0);
      
      decompiler0.addString(")\f__iterator__'\f__iterator__\u00A4");
      decompiler0.addRegexp("iC2<u'em7N\"Oh.Y", "iC2<u'em7N\"Oh.Y");
      decompiler0.addString(")\f__iterator__'\f__iterator__\u00A4");
      decompiler0.addEOL(1);
      int int1 = decompiler0.markFunctionStart(2);
      assertEquals(127, int1);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addNumber(1.0E16);
      assertEquals(2, Decompiler.INDENT_GAP_PROP);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addNumber((-1.0));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addNumber(2276.698733749282);
      assertEquals(1, Decompiler.INITIAL_INDENT_PROP);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addNumber(3);
      assertEquals(2, Decompiler.TO_SOURCE_FLAG);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addEOL(1952);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addEOL((-16));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addToken(2331);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addToken((-2274));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      String string0 = decompiler0.getEncodedSource();
      assertEquals("", string0);
  }
}
