/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 23:55:32 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Arguments;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.BoundFunction;
import com.google.javascript.rhino.head.Callable;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.Delegator;
import com.google.javascript.rhino.head.FieldAndMethods;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.Interpreter;
import com.google.javascript.rhino.head.InterpreterData;
import com.google.javascript.rhino.head.JavaAdapter;
import com.google.javascript.rhino.head.JavaMembers;
import com.google.javascript.rhino.head.LazilyLoadedCtor;
import com.google.javascript.rhino.head.MemberBox;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeError;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJSON;
import com.google.javascript.rhino.head.NativeJavaArray;
import com.google.javascript.rhino.head.NativeJavaClass;
import com.google.javascript.rhino.head.NativeJavaMethod;
import com.google.javascript.rhino.head.NativeJavaObject;
import com.google.javascript.rhino.head.NativeJavaPackage;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.NativeWith;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.Synchronizer;
import com.google.javascript.rhino.head.UniqueTag;
import com.google.javascript.rhino.head.WrapFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ScriptableObject_ESTest extends ScriptableObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      String[] stringArray0 = new String[1];
      Interpreter interpreter0 = new Interpreter();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeIterator_StopIteration0, "|qT", 13, "getTypeOf", 4, nativeError0);
      ScriptableObject.ensureScriptable(idFunctionObject0);
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(idFunctionObject0, "y>", "U|/e", false, false);
      Synchronizer synchronizer0 = new Synchronizer(importerTopLevel0, lazilyLoadedCtor0);
      ScriptableObject.getProperty((Scriptable) nativeIterator_StopIteration0, "y>");
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      NativeIterator.StopIteration nativeIterator_StopIteration2 = new NativeIterator.StopIteration();
      NativeIterator.StopIteration nativeIterator_StopIteration3 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        importerTopLevel0.associateValue(nativeIterator_StopIteration3, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.contains("getTypeOf");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      Context.enter(context0);
      ScriptableObject.putProperty((Scriptable) nativeArray0, 7, (Object) context0);
      NativeCall nativeCall0 = new NativeCall();
      NativeCall nativeCall1 = nativeCall0.parentActivationCall;
      Arguments arguments0 = null;
      try {
        arguments0 = new Arguments((NativeCall) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Arguments", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Object object0 = nativeArray0.get((-2419), (Scriptable) nativeArray0);
      objectArray0[1] = object0;
      nativeArray0.contains("getTypeOf");
      nativeArray0.getIndexIds();
      NativeNumber nativeNumber0 = new NativeNumber(1.0);
      ScriptableObject.getArrayPrototype(nativeArray0);
      nativeNumber0.isDataDescriptor(nativeArray0);
      nativeNumber0.toString();
      nativeNumber0.isGetterOrSetter("1", 3874, false);
      nativeNumber0.get(objectArray0[1]);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Synchronizer synchronizer0 = new Synchronizer(nativeArray0, nativeArray0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<Delegator> class0 = Delegator.class;
      Synchronizer synchronizer1 = new Synchronizer(nativeArray0);
      nativeIterator_StopIteration0.defineProperty("construct", class0, 1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.contains("getTypeOf");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      nativeArray0.getOwnPropertyDescriptor(context0, "getTypeOf");
      nativeArray0.getIndexIds();
      NativeNumber nativeNumber0 = new NativeNumber(0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      nativeNumber0.isDataDescriptor(importerTopLevel0);
      NativeNumber.init(importerTopLevel0, false);
      nativeNumber0.getClassName();
      Class<NativeContinuation> class0 = NativeContinuation.class;
      ScriptableObject.defineClass((Scriptable) nativeArray0, class0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Synchronizer synchronizer0 = new Synchronizer(importerTopLevel0);
      synchronizer0.setPrototype(importerTopLevel0);
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      ScriptableObject.isFalse(importerTopLevel0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test06()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      ScriptableObject.getPropertyIds(baseFunction0);
      baseFunction0.getPrototypeProperty();
      ScriptableObject.hasProperty((Scriptable) baseFunction0, (-60591803));
      Class<NativeContinuation> class0 = NativeContinuation.class;
      ScriptableObject.defineClass((Scriptable) baseFunction0, class0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.values();
      int int0 = 103;
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.getGetterOrSetter("com.google.javascript.rhino.head.ast.IfStatement", 103, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // com.google.javascript.rhino.head.ast.IfStatement
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      ScriptableObject.deleteProperty((Scriptable) importerTopLevel0, "msg.setter2.expected");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Context context0 = Context.enter();
      ContextFactory contextFactory0 = new ContextFactory();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      contextFactory0.disableContextListening();
      context0.getDebugger();
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(importerTopLevel0, "", (-1252));
      int int0 = (-1089);
      // Undeclared exception!
      try { 
        importerTopLevel0.setInstanceIdValue(180, scriptableObject0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 180
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Synchronizer synchronizer0 = new Synchronizer(nativeArray0, nativeArray0);
      ScriptableObject.isTrue(synchronizer0);
      String string0 = "wr:,%G\"P";
      Object object0 = null;
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptable("wr:,%G\"P");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type string
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Scriptable scriptable0 = null;
      IdFunctionObject idFunctionObject0 = null;
      try {
        idFunctionObject0 = new IdFunctionObject(nativeArray0, nativeArray0, 4, ";a9LP3Af", (-2703), (Scriptable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      String[] stringArray0 = new String[1];
      Class<Arguments> class0 = Arguments.class;
      // Undeclared exception!
      try { 
        nativeError0.defineFunctionProperties(stringArray0, class0, (-920677395));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.FunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Context context0 = Context.enter();
      ContextFactory contextFactory0 = new ContextFactory();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      contextFactory0.disableContextListening();
      String string0 = "";
      context0.getDebugger();
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(importerTopLevel0, "", (-1241));
      int int0 = (-1089);
      // Undeclared exception!
      try { 
        importerTopLevel0.setInstanceIdValue(180, scriptableObject0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 180
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test14()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      baseFunction0.getAllIds();
      // Undeclared exception!
      try { 
        baseFunction0.getAttributes(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 0 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      ScriptableObject.getObjectPrototype(nativeError0);
      Synchronizer synchronizer0 = new Synchronizer((Scriptable) null);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<ImporterTopLevel> class0 = ImporterTopLevel.class;
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.defineProperty("construct", class0, (-3150));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -3149
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test16()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes("dAXETL@.S,", (Scriptable) importerTopLevel0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property dAXETL@.S, not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.contains("getTypeOf");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      nativeArray0.getOwnPropertyDescriptor(context0, "getTypeOf");
      ScriptableObject.putProperty((Scriptable) nativeArray0, (-897), (Object) "getTypeOf");
      nativeArray0.getIndexIds();
      Synchronizer synchronizer0 = new Synchronizer(nativeArray0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<BoundFunction> class0 = BoundFunction.class;
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.defineProperty("", class0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context();
      Context context1 = Context.enter(context0);
      Context context2 = contextFactory0.enterContext(context1);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      Context.enter(context0);
      ScriptableObject.defineConstProperty(importerTopLevel0, "error reporter");
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod((MemberBox[]) null, "language version");
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.isEmpty();
      Class<NativeJavaClass> class0 = NativeJavaClass.class;
      ScriptableObject.getTypedProperty((Scriptable) importerTopLevel0, 1354, class0);
      InterpreterData interpreterData0 = new InterpreterData(7, "F:-Z", "language version", false);
      InterpreterData interpreterData1 = new InterpreterData(interpreterData0);
      NativeJavaMethod nativeJavaMethod1 = new NativeJavaMethod((MemberBox[]) null, "$~-G176GeAU");
      // Undeclared exception!
      try { 
        InterpretedFunction.createFunction(context2, (Scriptable) null, interpreterData1, nativeJavaMethod1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context();
      Context context1 = Context.enter(context0);
      contextFactory0.enterContext(context1);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      Context context2 = Context.enter(context1, contextFactory0);
      ScriptableObject.defineConstProperty(importerTopLevel0, "error reporter");
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod((MemberBox[]) null, "language version");
      BoundFunction boundFunction0 = new BoundFunction(context2, importerTopLevel0, nativeJavaMethod0, importerTopLevel0, objectArray0);
      JavaAdapter.createAdapterWrapper(importerTopLevel0, boundFunction0);
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      // Undeclared exception!
      try { 
        importerTopLevel0.initStandardObjects(context0, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test20()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(true, "Na<.pK3 g<<{4[' GA>", classLoader0);
      ScriptableObject scriptableObject0 = ScriptableObject.ensureScriptableObject(nativeJavaPackage0);
      ScriptableObject.hasProperty((Scriptable) scriptableObject0, (String) null);
      Class<FieldAndMethods> class0 = FieldAndMethods.class;
      scriptableObject0.defineProperty("msg.change.value.with.writable.false", class0, 8);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        scriptableObject0.put(2, (Scriptable) nativeJavaPackage0, (Object) nativeIterator_StopIteration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Java package names may not be numbers.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Synchronizer synchronizer0 = new Synchronizer(importerTopLevel0);
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      ScriptableObject.deleteProperty((Scriptable) synchronizer0, 370);
      ContextFactory contextFactory1 = new ContextFactory();
      try { 
        Long.valueOf("@C.Pc", (-1));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix -1 less than Character.MIN_RADIX
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ScriptableObject.redefineProperty(nativeArray0, "msg.setter.parms", true);
      // Undeclared exception!
      try { 
        NativeJavaArray.wrap((Scriptable) nativeArray0, (Object) "getTypeOf");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      Context context1 = new Context();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<Delegator> class0 = Delegator.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeIterator_StopIteration0, (-1939501217), class0);
      NativeArray nativeArray0 = new NativeArray(180);
      Byte byte0 = new Byte((byte) (-18));
      nativeArray0.defineOwnProperty(context0, byte0, nativeIterator_StopIteration0);
      Integer integer0 = new Integer((-1939501217));
      // Undeclared exception!
      try { 
        nativeArray0.setInstanceIdValue(11, integer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 11
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.contains("getTypeOf");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      nativeArray0.getOwnPropertyDescriptor(context0, contextFactory0);
      nativeArray0.getIndexIds();
      NativeNumber nativeNumber0 = new NativeNumber(0.0);
      nativeNumber0.isDataDescriptor(nativeArray0);
      NativeNumber.init(nativeArray0, true);
      nativeNumber0.toString();
      nativeNumber0.isGetterOrSetter("error reporter", (-268), true);
      nativeNumber0.get((Object) "getTypeOf");
      BaseFunction baseFunction0 = new BaseFunction(nativeNumber0, nativeNumber0);
      NativeCall nativeCall0 = new NativeCall();
      Arguments arguments0 = null;
      try {
        arguments0 = new Arguments(nativeCall0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Class<String> class0 = String.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeError0, "~", class0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      ScriptableObject.isFalse((Object) null);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      Synchronizer synchronizer0 = new Synchronizer(baseFunction0);
      synchronizer0.setPrototype((Scriptable) null);
      // Undeclared exception!
      try { 
        baseFunction0.put(13, (Scriptable) synchronizer0, (Object) "getUTCFullYear");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeNumber nativeNumber0 = new NativeNumber((-566.121892));
      nativeNumber0.toString();
      nativeNumber0.isGetterOrSetter("-566.121892", (-1691), false);
      NativeNumber nativeNumber1 = new NativeNumber(4);
      nativeNumber1.get((Object) contextFactory0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test28()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      baseFunction0.getAllIds();
      baseFunction0.getPrototypeProperty();
      Synchronizer synchronizer0 = new Synchronizer(baseFunction0);
      synchronizer0.setPrototype((Scriptable) null);
      Class<NativeJavaMethod> class0 = NativeJavaMethod.class;
      // Undeclared exception!
      try { 
        ScriptableObject.buildClassCtor((Scriptable) synchronizer0, class0, false, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.NativeJavaMethod\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Synchronizer synchronizer0 = new Synchronizer(nativeArray0, nativeArray0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      Context context1 = new Context();
      // Undeclared exception!
      try { 
        ScriptableObject.defineConstProperty(synchronizer0, "language version");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Class<String> class0 = String.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeError0, "~", class0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      NativeError nativeError1 = new NativeError();
      // Undeclared exception!
      try { 
        nativeError0.getOwnPropertyDescriptor(context0, nativeError1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      baseFunction0.getPrototypeProperty();
      Synchronizer synchronizer0 = new Synchronizer(baseFunction0);
      synchronizer0.setPrototype((Scriptable) null);
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      ScriptableObject.deleteProperty((Scriptable) synchronizer0, 2);
      try { 
        Long.valueOf("@C.Pc", 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix 1 less than Character.MIN_RADIX
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      JavaAdapter.getFunction(nativeIterator_StopIteration0, "; ");
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.setGetterOrSetter("N6", 10, (Callable) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // N6
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Integer integer0 = new Integer(0);
      NativeCall nativeCall0 = new NativeCall();
      ScriptableObject.deleteProperty((Scriptable) nativeArray0, "|rx30}NPk");
      NativeString nativeString0 = new NativeString("|rx30}NPk");
      ScriptableObject.putProperty((Scriptable) nativeArray0, 13, (Object) nativeString0);
      Arguments arguments0 = null;
      try {
        arguments0 = new Arguments(nativeCall0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      ScriptableObject.ensureScriptable(nativeArray0);
      nativeArray0.get((-2419), (Scriptable) nativeArray0);
      Class<String> class0 = String.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeArray0, "F;xBB)drx2", class0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      try { 
        Long.valueOf("F;xBB)drx2", (-1294));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix -1294 less than Character.MIN_RADIX
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Integer[] integerArray0 = nativeArray0.getIndexIds();
      NativeNumber nativeNumber0 = new NativeNumber(13);
      nativeNumber0.toString();
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod((Scriptable) nativeNumber0, "getTypeOf", (Object[]) integerArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000175 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      NativeNumber nativeNumber0 = new NativeNumber((-32768.0));
      nativeNumber0.isGetterOrSetter("", 2, false);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      importerTopLevel0.delete("language version");
      nativeIterator_StopIteration0.isAccessorDescriptor(importerTopLevel0);
      NativeArray nativeArray0 = new NativeArray(4);
      // Undeclared exception!
      try { 
        nativeArray0.setInstanceIdValue(1, nativeIterator_StopIteration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test38()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.isAccessorDescriptor(importerTopLevel0);
      NativeArray nativeArray0 = new NativeArray(9);
      NativeNumber nativeNumber0 = new NativeNumber(0);
      // Undeclared exception!
      try { 
        NativeJavaArray.wrap((Scriptable) importerTopLevel0, (Object) nativeNumber0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Array expected
         //
         verifyException("com.google.javascript.rhino.head.NativeJavaArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      WrapFactory wrapFactory0 = new WrapFactory();
      Context context0 = null;
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptableObject((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Expected argument of type object, but instead had type object
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(1289.5090330189694);
      Object[] objectArray0 = nativeNumber0.getAllIds();
      nativeNumber0.toString();
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.stream();
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeNumber0, (String) null, "jsFunction_", true);
      // Undeclared exception!
      try { 
        nativeArray0.add((Object) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Synchronizer synchronizer0 = new Synchronizer(nativeArray0, nativeArray0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Context context0 = new Context();
      ScriptableObject.defineConstProperty(nativeIterator_StopIteration0, "language version");
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      try { 
        Long.valueOf("language version", 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix 1 less than Character.MIN_RADIX
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.contains("getTypeOf");
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.isAccessorDescriptor(nativeArray0);
      ScriptableObject.redefineProperty(nativeArray0, "msg.setter.parms", true);
      // Undeclared exception!
      try { 
        NativeJavaArray.wrap((Scriptable) nativeArray0, (Object) "getTypeOf");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      boolean boolean0 = nativeIterator_StopIteration0.isAccessorDescriptor(importerTopLevel0);
      assertFalse(boolean0);
      
      NativeArray nativeArray0 = new NativeArray(4);
      // Undeclared exception!
      try { 
        nativeArray0.setInstanceIdValue(1, nativeIterator_StopIteration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      nativeIterator_StopIteration0.get(8, (Scriptable) null);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Object object0 = nativeArray0.get((-2419), (Scriptable) nativeArray0);
      objectArray0[1] = object0;
      String string0 = "getTypeOf";
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeArray0, "getTypeOf", "getTypeOf", true);
      nativeArray0.getIndexIds();
      NativeNumber nativeNumber0 = new NativeNumber(13);
      NativeNumber nativeNumber1 = new NativeNumber(437.05222);
      // Undeclared exception!
      try { 
        lazilyLoadedCtor0.getValue();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // getTypeOf
         //
         verifyException("com.google.javascript.rhino.head.LazilyLoadedCtor", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      ScriptableObject.getPropertyIds(baseFunction0);
      baseFunction0.getPrototypeProperty();
      ScriptableObject.hasProperty((Scriptable) baseFunction0, (-60591803));
      NativeObject nativeObject0 = new NativeObject();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test47()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      Synchronizer synchronizer0 = new Synchronizer(nativeArray0, nativeArray0);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      ScriptableObject.isTrue(nativeContinuation0);
      nativeArray0.findInstanceIdInfo("com.google.javascript.rhino.head.ast.DoLoop");
      Interpreter interpreter0 = new Interpreter();
      Context.enter();
      Class<NativeContinuation> class0 = NativeContinuation.class;
      Class<NativeJavaMethod> class1 = NativeJavaMethod.class;
      // Undeclared exception!
      try { 
        JavaMembers.lookupClass(synchronizer0, class0, class1, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Synchronizer synchronizer0 = new Synchronizer(importerTopLevel0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.get(130, (Scriptable) null);
      importerTopLevel0.defineConst("language version", nativeIterator_StopIteration0);
      try { 
        Long.valueOf("language version", 2);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"language version\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context();
      Context context1 = Context.enter(context0);
      Context context2 = contextFactory0.enterContext(context1);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      Context context3 = Context.enter(context1, contextFactory0);
      ScriptableObject.defineConstProperty(importerTopLevel0, "error reporter");
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod((MemberBox[]) null, "language version");
      BoundFunction boundFunction0 = new BoundFunction(context3, importerTopLevel0, nativeJavaMethod0, importerTopLevel0, objectArray0);
      Scriptable scriptable0 = JavaAdapter.createAdapterWrapper(importerTopLevel0, boundFunction0);
      // Undeclared exception!
      try { 
        NativeJSON.parse(context2, scriptable0, "error reporter", boundFunction0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: Unexpected token: e
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.isAccessorDescriptor(importerTopLevel0);
      NativeArray nativeArray0 = new NativeArray(4);
      ScriptableObject.putProperty((Scriptable) nativeIterator_StopIteration0, (String) null, (Object) "language version");
      nativeArray0.defineOwnProperty(context0, importerTopLevel0, nativeIterator_StopIteration0);
      // Undeclared exception!
      try { 
        nativeArray0.setInstanceIdValue(1, nativeIterator_StopIteration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      Object[] objectArray0 = Context.emptyArgs;
      baseFunction0.getPrototypeProperty();
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      NativeArray nativeArray0 = new NativeArray(0L);
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod((Scriptable) baseFunction0, "RHINO USAGE WARNING: Missed Context.javaToJS() conversion:\nRhino runtime detected object ", (Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000005 is not a function, it is function.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Class<String> class0 = String.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeError0, "~", class0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      nativeIterator_StopIteration0.get(8, (Scriptable) null);
      importerTopLevel0.defineConst((String) null, (Scriptable) null);
      try { 
        Long.valueOf((String) null, 13);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      NativeNumber nativeNumber0 = new NativeNumber((-310.6943261075));
      BaseFunction baseFunction0 = new BaseFunction();
      context0.decompileFunctionBody(baseFunction0, 50);
      NativeNumber nativeNumber1 = new NativeNumber(1.0E9);
      nativeNumber1.toString();
      nativeNumber0.isGetterOrSetter("1000000000", 1, false);
      NativeNumber nativeNumber2 = new NativeNumber(8);
      nativeNumber1.get((Object) importerTopLevel0);
      nativeIterator_StopIteration0.isGenericDescriptor(importerTopLevel0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      Class<String> class0 = String.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeError0, "~", class0);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      try { 
        Long.valueOf((String) null, 13);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test55()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(3072L);
      Class<NativeWith> class0 = NativeWith.class;
      // Undeclared exception!
      try { 
        nativeArray0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.NativeWith
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      NativeError nativeError0 = new NativeError();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "language version";
      Class<NativeIterator> class0 = NativeIterator.class;
      // Undeclared exception!
      try { 
        nativeError0.defineFunctionProperties(stringArray0, class0, 130);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Method \"language version\" not found in \"com.google.javascript.rhino.head.NativeIterator\".
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ScriptableObject.getPropertyIds((Scriptable) null);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeArray nativeArray0 = new NativeArray(1482L);
      nativeArray0.getOwnPropertyDescriptor(context0, contextFactory0);
      // Undeclared exception!
      try { 
        importerTopLevel0.hasInstance((Scriptable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test58()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      baseFunction0.getAllIds();
      Synchronizer synchronizer0 = new Synchronizer(baseFunction0);
      synchronizer0.delete((-1003958423));
      synchronizer0.setPrototype((Scriptable) null);
      NativeJavaObject nativeJavaObject0 = new NativeJavaObject();
      nativeJavaObject0.parent = null;
      ScriptableObject.isFalse(nativeJavaObject0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context();
      Context context1 = Context.enter(context0);
      contextFactory0.enterContext(context1);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      Context.enter(context1, contextFactory0);
      ScriptableObject.defineConstProperty(importerTopLevel0, "error reporter");
      NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod((MemberBox[]) null, "language version");
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      importerTopLevel0.delete("error reporter");
      NativeArray nativeArray0 = new NativeArray(11);
      Integer[] integerArray0 = nativeArray0.getIndexIds();
      NativeNumber nativeNumber0 = new NativeNumber(13);
      nativeNumber0.toString();
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod((Scriptable) nativeNumber0, "com.google.javascript.rhino.head.NativeObject$EntrySet", (Object[]) integerArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000370 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(3072L);
      ContextFactory contextFactory0 = new ContextFactory();
      ScriptableObject.getProperty((Scriptable) nativeArray0, 52);
      ClassLoader.getSystemClassLoader();
      NativeObject nativeObject0 = new NativeObject();
      Class<Delegator> class0 = Delegator.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeArray0, (-1247), class0);
      nativeObject0.setAttributes(1970, (Scriptable) null, 13);
      Synchronizer synchronizer0 = new Synchronizer(nativeObject0);
      // Undeclared exception!
      try { 
        nativeArray0.getOwnPropertyDescriptor((Context) null, synchronizer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.isAccessorDescriptor(importerTopLevel0);
      NativeArray nativeArray0 = new NativeArray(4);
      nativeArray0.defineOwnProperty(context0, importerTopLevel0, nativeIterator_StopIteration0);
      // Undeclared exception!
      try { 
        nativeArray0.setInstanceIdValue(1, nativeIterator_StopIteration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enterContext();
      Delegator delegator0 = new Delegator();
      Class<Delegator> class0 = Delegator.class;
      // Undeclared exception!
      try { 
        ScriptableObject.buildClassCtor((Scriptable) delegator0, class0, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      nativeContinuation0.getClassName();
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      LazilyLoadedCtor lazilyLoadedCtor0 = new LazilyLoadedCtor(nativeError0, "|qT", "|qT", true);
      nativeError0.preventExtensions();
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      String string0 = "getTypeOf";
      nativeArray0.contains("getTypeOf");
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeArray0.applyDescriptorToAttributeBitset((-1912), nativeIterator_StopIteration0);
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.setAttributes("getTypeOf", (Scriptable) nativeArray0, 103);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 103
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      Context context1 = new Context();
      ScriptableObject.defineConstProperty(importerTopLevel0, "SHNE");
      ImporterTopLevel importerTopLevel1 = new ImporterTopLevel();
      try { 
        Long.valueOf("(Ljava/lang/Object;)Z", 120);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix 120 greater than Character.MAX_RADIX
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage(false, "com.google.javascript.rhino.head.ScriptableObject$RelinkedSlot", classLoader0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      String string0 = "|qT";
      NativeError nativeError0 = new NativeError();
      Class<Arguments> class0 = Arguments.class;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "getClassName";
      stringArray0[1] = "com.google.javascript.rhino.head.ScriptableObject$RelinkedSlot";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "com.google.javascript.rhino.head.ScriptableObject$RelinkedSlot";
      stringArray0[5] = "";
      stringArray0[6] = "|qT";
      stringArray0[7] = "|qT";
      stringArray0[8] = "";
      // Undeclared exception!
      try { 
        nativeError0.defineFunctionProperties(stringArray0, class0, 829);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 829
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      String string0 = "; ";
      contextFactory0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null, (ClassLoader) null);
      nativeJavaPackage0.getGetterOrSetter("language version", 0, false);
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        context0.seal(nativeIterator_StopIteration0);
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(1289.5090330189694);
      nativeNumber0.getAllIds();
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(nativeNumber0, nativeNumber0, 2);
      Context context0 = Context.getCurrentContext();
      Context context1 = Context.enter(context0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context1);
      // Undeclared exception!
      try { 
        importerTopLevel0.setInstanceIdValue(0, scriptableObject0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }
}
