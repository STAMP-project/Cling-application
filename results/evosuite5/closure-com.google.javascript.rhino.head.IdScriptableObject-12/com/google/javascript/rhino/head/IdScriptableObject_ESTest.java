/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 22:22:15 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.IdScriptableObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeBoolean;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeWith;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.TopLevel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class IdScriptableObject_ESTest extends IdScriptableObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(13);
      Context context0 = Context.enter();
      nativeArray0.getOwnPropertyDescriptor(context0, "(Lorg/mozilla/javascript/ContextFactory;Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;)V");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test01()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.getOwnPropertyDescriptor(context0, context0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      importerTopLevel0.getOwnPropertyDescriptor(context0, "error reporter");
  }

  @Test(timeout = 4000)
  @Ignore
  public void test03()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      importerTopLevel0.getOwnPropertyDescriptor(context0, "InternalError");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      Context context0 = Context.enter();
      nativeBoolean0.defineOwnProperty(context0, "error reporter", nativeBoolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      IdFunctionObject idFunctionObject0 = nativeBoolean0.exportAsJSClass(4, nativeBoolean0, false);
      nativeBoolean0.defineOwnProperty((Context) null, "", idFunctionObject0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      IdFunctionObject idFunctionObject0 = nativeBoolean0.exportAsJSClass(4, nativeBoolean0, false);
      nativeBoolean0.initPrototypeConstructor(idFunctionObject0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      NativeCall nativeCall0 = context0.currentActivationCall;
      IdFunctionObject idFunctionObject0 = nativeBoolean0.exportAsJSClass(638, nativeCall0, false);
      IdFunctionObject idFunctionObject1 = new IdFunctionObject(idFunctionObject0, "language version", 956, 100);
      // Undeclared exception!
      try { 
        nativeBoolean0.initPrototypeConstructor(idFunctionObject1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      NativeBoolean nativeBoolean1 = new NativeBoolean(true);
      IdFunctionObject idFunctionObject0 = nativeBoolean0.exportAsJSClass(431, nativeBoolean1, true);
      assertEquals(1, idFunctionObject0.methodId());
      assertTrue(idFunctionObject0.isSealed());
      
      nativeBoolean0.initPrototypeConstructor(idFunctionObject0);
      assertEquals(1, idFunctionObject0.getArity());
      assertEquals(1, idFunctionObject0.getLength());
  }

  @Test(timeout = 4000)
  @Ignore
  public void test09()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      // Undeclared exception!
      try { 
        importerTopLevel0.activatePrototypeMap(252);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      nativeBoolean0.exportAsJSClass(5, nativeBoolean0, false);
      boolean boolean0 = nativeBoolean0.hasPrototypeMap();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      IdFunctionObject idFunctionObject0 = nativeBoolean0.exportAsJSClass(5, nativeBoolean0, false);
      boolean boolean0 = idFunctionObject0.hasPrototypeMap();
      assertFalse(boolean0);
      assertTrue(nativeBoolean0.hasPrototypeMap());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      IdFunctionObject idFunctionObject0 = nativeArray0.exportAsJSClass(1913, nativeBoolean0, true);
      Object[] objectArray0 = idFunctionObject0.getAllIds();
      assertEquals(25, objectArray0.length);
      assertEquals(1, idFunctionObject0.getArity());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0);
      nativeArray0.setInstanceIdAttributes(1, 1);
      Object[] objectArray0 = nativeArray0.getIds();
      assertEquals(1, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(110);
      Object[] objectArray0 = nativeArray0.getIds();
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test15()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      nativeBoolean0.exportAsJSClass(4, nativeBoolean0, false);
      // Undeclared exception!
      try { 
        nativeBoolean0.getAttributes("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property  not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test16()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      // Undeclared exception!
      try { 
        nativeBoolean0.getAttributes("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property  not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test17()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      importerTopLevel0.delete("error reporter");
      assertEquals(4, ScriptableObject.PERMANENT);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      nativeBoolean0.delete("InternalError");
      assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test19()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      nativeBoolean0.defineOwnProperty(context0, importerTopLevel0, importerTopLevel0);
      assertEquals(2, ScriptableObject.DONTENUM);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test20()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      // Undeclared exception!
      try { 
        ScriptableObject.redefineProperty(importerTopLevel0, "propertyIsEnumerable", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: redeclaration of var propertyIsEnumerable.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test21()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      // Undeclared exception!
      try { 
        importerTopLevel0.initPrototypeMethod(context0, 1036, "error reporter", 120);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject$PrototypeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      // Undeclared exception!
      try { 
        nativeBoolean0.exportAsJSClass((-1975), (Scriptable) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject$PrototypeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      importerTopLevel0.defaultPut("error reporter", context0);
      assertEquals(170, Context.VERSION_1_7);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-1L));
      // Undeclared exception!
      try { 
        nativeArray0.initPrototypeValue(4, "", "", 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      Object object0 = nativeBoolean0.defaultGet("(Lorg/mozilla/javascript/Callable;Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;Ljava/lang/Object;Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;)Ljava/lang/Object;");
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test26()  throws Throwable  {
      Context context0 = Context.getContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      // Undeclared exception!
      try { 
        importerTopLevel0.getInstanceIdValue(130);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 130
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      // Undeclared exception!
      try { 
        nativeArray0.setInstanceIdValue(4, nativeWith0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      Context context0 = Context.getCurrentContext();
      NativeNumber nativeNumber0 = new NativeNumber(2);
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeNumber0, nativeBoolean0, 1349, 4);
      // Undeclared exception!
      try { 
        nativeNumber0.execIdCall(idFunctionObject0, context0, nativeBoolean0, idFunctionObject0, context0.emptyArgs);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=1349 MASTER=2
         //
         verifyException("com.google.javascript.rhino.head.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      TopLevel topLevel0 = new TopLevel();
      // Undeclared exception!
      try { 
        topLevel0.exportAsJSClass(1, nativeContinuation0, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // constructor
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      IdFunctionObject idFunctionObject0 = nativeBoolean0.exportAsJSClass(638, nativeBoolean0, false);
      // Undeclared exception!
      try { 
        IdScriptableObject.incompatibleCallError(idFunctionObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Method \"Boolean\" called on incompatible object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      // Undeclared exception!
      try { 
        nativeBoolean0.setInstanceIdAttributes(4002, 4002);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 4002
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }
}
