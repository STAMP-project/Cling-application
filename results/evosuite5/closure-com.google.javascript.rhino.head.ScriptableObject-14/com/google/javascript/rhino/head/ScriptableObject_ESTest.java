/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 23:52:26 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Arguments;
import com.google.javascript.rhino.head.BaseFunction;
import com.google.javascript.rhino.head.BoundFunction;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.Delegator;
import com.google.javascript.rhino.head.IdFunctionCall;
import com.google.javascript.rhino.head.IdFunctionObject;
import com.google.javascript.rhino.head.ImporterTopLevel;
import com.google.javascript.rhino.head.InterpretedFunction;
import com.google.javascript.rhino.head.Interpreter;
import com.google.javascript.rhino.head.InterpreterData;
import com.google.javascript.rhino.head.JavaAdapter;
import com.google.javascript.rhino.head.JavaMembers;
import com.google.javascript.rhino.head.LazilyLoadedCtor;
import com.google.javascript.rhino.head.NativeArray;
import com.google.javascript.rhino.head.NativeBoolean;
import com.google.javascript.rhino.head.NativeCall;
import com.google.javascript.rhino.head.NativeContinuation;
import com.google.javascript.rhino.head.NativeError;
import com.google.javascript.rhino.head.NativeGenerator;
import com.google.javascript.rhino.head.NativeIterator;
import com.google.javascript.rhino.head.NativeJavaArray;
import com.google.javascript.rhino.head.NativeJavaMethod;
import com.google.javascript.rhino.head.NativeJavaPackage;
import com.google.javascript.rhino.head.NativeJavaTopPackage;
import com.google.javascript.rhino.head.NativeNumber;
import com.google.javascript.rhino.head.NativeObject;
import com.google.javascript.rhino.head.NativeScript;
import com.google.javascript.rhino.head.NativeString;
import com.google.javascript.rhino.head.NativeWith;
import com.google.javascript.rhino.head.Scriptable;
import com.google.javascript.rhino.head.ScriptableObject;
import com.google.javascript.rhino.head.Synchronizer;
import com.google.javascript.rhino.head.TopLevel;
import com.google.javascript.rhino.head.UniqueTag;
import java.lang.reflect.Member;
import java.util.Set;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ScriptableObject_ESTest extends ScriptableObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = Context.getCurrentContext();
      Context.enter(context0, contextFactory0);
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptable(contextFactory0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type com.google.javascript.rhino.head.ContextFactory
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test01()  throws Throwable  {
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      // Undeclared exception!
      try { 
        ScriptableObject.ensureScriptableObject(context0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type com.google.javascript.rhino.head.Context
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test02()  throws Throwable  {
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null);
      BaseFunction baseFunction0 = new BaseFunction(nativeJavaPackage0, nativeJavaPackage0);
      NativeWith nativeWith0 = new NativeWith(nativeJavaPackage0, baseFunction0);
      // Undeclared exception!
      try { 
        baseFunction0.put(13, (Scriptable) nativeJavaPackage0, (Object) nativeWith0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Java package names may not be numbers.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Context context0 = new Context();
      NativeArray nativeArray0 = new NativeArray(130);
      TreeSet<NativeError> treeSet0 = new TreeSet<NativeError>();
      NativeWith nativeWith0 = new NativeWith((Scriptable) null, (Scriptable) null);
      ScriptableObject.buildDataDescriptor(nativeArray0, nativeWith0, 13);
      NativeCall nativeCall0 = new NativeCall();
      Arguments arguments0 = null;
      try {
        arguments0 = new Arguments(nativeCall0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(2047L);
      Class<NativeWith> class0 = NativeWith.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeArray0, "eik`n?", class0);
      NativeCall nativeCall0 = new NativeCall();
      NativeArray nativeArray1 = new NativeArray(8);
      NativeArray nativeArray2 = new NativeArray(13);
      // Undeclared exception!
      try { 
        nativeArray2.getInstanceIdName(2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 2
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test05()  throws Throwable  {
      ContextFactory.getGlobal();
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      // Undeclared exception!
      try { 
        importerTopLevel0.getAttributes("DbL", (Scriptable) nativeBoolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property DbL not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      TreeSet<NativeError> treeSet0 = new TreeSet<NativeError>();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) treeSet0;
      objectArray0[1] = (Object) treeSet0;
      // Undeclared exception!
      try { 
        ScriptableObject.callMethod((Scriptable) nativeArray0, "/SGr&<Fj", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: java.lang.String@0000000003 is not a function, it is object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader1);
      ScriptableObject.deleteProperty((Scriptable) nativeJavaTopPackage0, "language version");
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      classLoader1.getParent();
      ScriptableObject.redefineProperty(nativeJavaTopPackage0, "language version", false);
      // Undeclared exception!
      try { 
        Interpreter.captureContinuation(context0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Interpreter frames not found
         //
         verifyException("com.google.javascript.rhino.head.Interpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      // Undeclared exception!
      try { 
        topLevel0.setAttributes((-5), (-986));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -986
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test09()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      context0.lastInterpreterFrame = (Object) nativeIterator_StopIteration0;
      Scriptable scriptable0 = context0.topCallScope;
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version");
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      ScriptableObject.isTrue(nativeJavaTopPackage0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      NativeWith nativeWith0 = new NativeWith(importerTopLevel0, importerTopLevel0);
      Scriptable scriptable0 = ScriptableObject.getArrayPrototype(nativeWith0);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      BoundFunction boundFunction0 = new BoundFunction(context0, scriptable0, nativeContinuation0, scriptable0, context0.emptyArgs);
      Context.enter(context0);
      ScriptableObject.deleteProperty((Scriptable) boundFunction0, 6);
      nativeContinuation0.isGetterOrSetter("error reporter", 258, false);
      nativeContinuation0.get(0, (Scriptable) boundFunction0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      // Undeclared exception!
      try { 
        nativeBoolean0.initPrototypeId(4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test11()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(2060L);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "X5) F8'k`g";
      stringArray0[1] = "1:`# )MX]-L~";
      Class<NativeObject> class0 = NativeObject.class;
      // Undeclared exception!
      try { 
        nativeArray0.defineFunctionProperties(stringArray0, class0, (-354));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Method \"X5) F8'k`g\" not found in \"com.google.javascript.rhino.head.NativeObject\".
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("Z", classLoader0);
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      classLoader0.setDefaultAssertionStatus(true);
      BoundFunction boundFunction0 = new BoundFunction(context0, nativeIterator_StopIteration0, nativeJavaTopPackage0, nativeIterator_StopIteration0, context0.emptyArgs);
      ScriptableObject.ensureScriptable(nativeIterator_StopIteration0);
      ScriptableObject.isTrue(importerTopLevel0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.keySet();
      ScriptableObject.hasProperty((Scriptable) nativeObject0, "2U9");
      Class<String> class0 = String.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeObject0, 0, class0);
      NativeArray nativeArray0 = new NativeArray(0L);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(2060L);
      String[] stringArray0 = new String[6];
      ScriptableObject.buildDataDescriptor(nativeArray0, nativeArray0, 52);
      Class<String> class0 = String.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeArray0, 1, class0);
      stringArray0[0] = "X5) F8'k`g";
      NativeArray nativeArray1 = new NativeArray(1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      TreeSet<NativeError> treeSet0 = new TreeSet<NativeError>();
      nativeArray0.containsAll(treeSet0);
      ScriptableObject.buildDataDescriptor(nativeArray0, "ei5k`n?N@", 179);
      NativeCall nativeCall0 = new NativeCall();
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      // Undeclared exception!
      try { 
        nativeBoolean0.initPrototypeId(8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 8
         //
         verifyException("com.google.javascript.rhino.head.NativeBoolean", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context();
      Context context1 = Context.enter(context0);
      Context context2 = contextFactory0.enterContext(context1);
      Context.enter(context2, contextFactory0);
      ScriptableObject.isFalse((Object) null);
      Delegator delegator0 = new Delegator();
      NativeArray nativeArray0 = new NativeArray(3);
      // Undeclared exception!
      try { 
        nativeArray0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test17()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      TreeSet<NativeError> treeSet0 = new TreeSet<NativeError>();
      ScriptableObject.isFalse(nativeArray0);
      Delegator delegator0 = new Delegator();
      NativeJavaArray nativeJavaArray0 = null;
      try {
        nativeJavaArray0 = new NativeJavaArray(nativeArray0, delegator0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test18()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      context0.lastInterpreterFrame = (Object) nativeIterator_StopIteration0;
      Synchronizer synchronizer0 = new Synchronizer(nativeIterator_StopIteration0);
      Context context1 = Context.getCurrentContext();
      ClassLoader classLoader0 = context1.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      // Undeclared exception!
      try { 
        nativeJavaTopPackage0.setGetterOrSetter("error reporter", 780, synchronizer0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // error reporter
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Array;
      TopLevel.getBuiltinPrototype((Scriptable) topLevel0, topLevel_Builtins0);
      TopLevel.Builtins topLevel_Builtins1 = TopLevel.Builtins.Array;
      topLevel0.getBuiltinCtor(topLevel_Builtins1);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test20()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      context0.lastInterpreterFrame = (Object) nativeIterator_StopIteration0;
      Scriptable scriptable0 = context0.topCallScope;
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("language version");
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      // Undeclared exception!
      try { 
        nativeJavaTopPackage0.setAttributes("msg.arg.not.object", (Scriptable) nativeJavaPackage0, (-3920));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -3920
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Context context0 = new Context();
      NativeArray nativeArray0 = new NativeArray(130);
      NativeWith nativeWith0 = new NativeWith((Scriptable) null, (Scriptable) null);
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(nativeArray0, nativeWith0, 13);
      String string0 = "pI$h%QJcecM3";
      ScriptableObject.defineConstProperty(scriptableObject0, "pI$h%QJcecM3");
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      contextFactory1.enterContext();
      NativeJavaArray nativeJavaArray0 = null;
      try {
        nativeJavaArray0 = new NativeJavaArray(nativeWith0, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't find top level scope for ClassCache.get
         //
         verifyException("com.google.javascript.rhino.head.ClassCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Context context0 = new Context();
      NativeArray nativeArray0 = new NativeArray(130);
      TreeSet<NativeError> treeSet0 = new TreeSet<NativeError>();
      NativeCall nativeCall0 = new NativeCall();
      Arguments arguments0 = null;
      try {
        arguments0 = new Arguments(nativeCall0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Context context0 = new Context();
      NativeArray nativeArray0 = new NativeArray(130);
      NativeWith nativeWith0 = new NativeWith((Scriptable) null, (Scriptable) null);
      ScriptableObject.buildDataDescriptor(nativeArray0, nativeWith0, 13);
      // Undeclared exception!
      try { 
        ScriptableObject.defineConstProperty(nativeWith0, "error reporter");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeWith", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      ScriptableObject.getClassPrototype(nativeArray0, "");
      nativeArray0.get(771, (Scriptable) null);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test25()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(2060L);
      String string0 = NativeIterator.ITERATOR_PROPERTY_NAME;
      Class<NativeScript> class0 = NativeScript.class;
      // Undeclared exception!
      try { 
        ScriptableObject.defineClass((Scriptable) nativeArray0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.NativeScript\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-1129L));
      String string0 = "X5) F8'k`g";
      String string1 = "1:`# )MX]-L~";
      Class<NativeObject> class0 = NativeObject.class;
      NativeArray nativeArray1 = new NativeArray(90L);
      String[] stringArray0 = new String[1];
      String string2 = "put";
      stringArray0[0] = "put";
      nativeArray1.defineFunctionProperties(stringArray0, class0, 8);
      Object[] objectArray0 = new Object[9];
      NativeString nativeString0 = new NativeString("X5) F8'k`g");
      IdFunctionObject idFunctionObject0 = new IdFunctionObject(nativeString0, "X5) F8'k`g", (-354), 2);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      // Undeclared exception!
      try { 
        nativeString0.execIdCall(idFunctionObject0, context0, nativeArray1, nativeArray1, objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BAD FUNCTION ID=-354 MASTER=X5) F8'k`g
         //
         verifyException("com.google.javascript.rhino.head.IdFunctionObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      ScriptableObject.ensureScriptableObject(nativeObject0);
      Class<Object> class0 = Object.class;
      nativeObject0.defineProperty("isScript", class0, 4);
      nativeObject0.keySet();
      Class<String> class1 = String.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeObject0, 0, class1);
      NativeArray nativeArray0 = new NativeArray(0L);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test28()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(0.0);
      ScriptableObject.redefineProperty(nativeNumber0, "call", false);
      // Undeclared exception!
      try { 
        nativeNumber0.getAttributes(21);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property 21 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-181L));
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeArray0.sameValue(nativeIterator_StopIteration0, nativeIterator_StopIteration0);
      // Undeclared exception!
      try { 
        nativeArray0.get(2033);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      NativeWith nativeWith0 = new NativeWith(importerTopLevel0, importerTopLevel0);
      NativeArray nativeArray0 = (NativeArray)ScriptableObject.getArrayPrototype(nativeWith0);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      BoundFunction boundFunction0 = new BoundFunction(context0, nativeArray0, nativeContinuation0, nativeArray0, context0.emptyArgs);
      Context.enter(context0);
      ScriptableObject.deleteProperty((Scriptable) boundFunction0, 6);
      nativeWith0.getIds();
      nativeContinuation0.isGetterOrSetter("error reporter", 258, false);
      nativeContinuation0.get(0, (Scriptable) boundFunction0);
      NativeBoolean nativeBoolean0 = new NativeBoolean(false);
      NativeArray nativeArray1 = new NativeArray(0L);
      // Undeclared exception!
      try { 
        nativeArray0.getInstanceIdName(6);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 6
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Class<Short> class0 = Short.class;
      Class<IdFunctionObject> class1 = IdFunctionObject.class;
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TopLevel topLevel0 = new TopLevel();
      TopLevel.Builtins topLevel_Builtins0 = TopLevel.Builtins.Error;
      topLevel0.getBuiltinCtor(topLevel_Builtins0);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test33()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(2060L);
      Class<NativeJavaPackage> class0 = NativeJavaPackage.class;
      // Undeclared exception!
      try { 
        ScriptableObject.buildClassCtor((Scriptable) nativeArray0, class0, true, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.NativeJavaPackage\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test34()  throws Throwable  {
      Class<IdFunctionObject> class0 = IdFunctionObject.class;
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      JavaMembers javaMembers0 = new JavaMembers(nativeIterator_StopIteration0, class0, false);
      NativeJavaMethod nativeJavaMethod0 = javaMembers0.ctors;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
      ScriptableObject.ensureScriptableObject(nativeIterator_StopIteration0);
      Class<BoundFunction> class1 = BoundFunction.class;
      Class<BaseFunction> class2 = BaseFunction.class;
      JavaMembers.lookupClass(importerTopLevel0, class1, class2, false);
      ContextFactory contextFactory1 = new ContextFactory();
      contextFactory0.enterContext();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = "9`xe1hi#q'\\fqUf\"5";
      Member member0 = null;
      NativeError nativeError0 = new NativeError();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        nativeError0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TypeError: Cannot find default value for object.
         //
         verifyException("com.google.javascript.rhino.head.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.delete("getClassName");
      NativeWith nativeWith0 = new NativeWith(nativeIterator_StopIteration0, nativeIterator_StopIteration0);
      nativeIterator_StopIteration0.put((String) null, (Scriptable) nativeWith0, (Object) null);
      nativeIterator_StopIteration0.getAllIds();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enterContext();
      contextFactory0.enterContext();
      NativeString nativeString0 = new NativeString((CharSequence) null);
      nativeString0.getClassName();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader1);
      ScriptableObject.deleteProperty((Scriptable) nativeJavaTopPackage0, "language version");
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      classLoader1.getParent();
      ClassLoader.getSystemClassLoader();
      contextFactory0.getApplicationClassLoader();
      NativeCall nativeCall0 = new NativeCall();
      NativeBoolean nativeBoolean1 = new NativeBoolean(false);
      // Undeclared exception!
      try { 
        nativeBoolean0.initPrototypeId(2280);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 2280
         //
         verifyException("com.google.javascript.rhino.head.NativeBoolean", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test38()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray((-181L));
      nativeArray0.isEmpty();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Class<BoundFunction> class0 = BoundFunction.class;
      // Undeclared exception!
      try { 
        nativeIterator_StopIteration0.getDefaultValue(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid JavaScript value of type class com.google.javascript.rhino.head.BoundFunction
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(0.0);
      Context context0 = null;
      Context context1 = Context.enter((Context) null);
      NativeContinuation.init(context1, nativeNumber0, false);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) null;
      context1.initStandardObjects((ScriptableObject) nativeNumber0);
      ImporterTopLevel importerTopLevel0 = null;
      try {
        importerTopLevel0 = new ImporterTopLevel((Context) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ImporterTopLevel", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test40()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
      NativeWith nativeWith0 = new NativeWith(importerTopLevel0, importerTopLevel0);
      Scriptable scriptable0 = ScriptableObject.getArrayPrototype(nativeWith0);
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      BoundFunction boundFunction0 = new BoundFunction(context0, scriptable0, nativeContinuation0, scriptable0, context0.emptyArgs);
      Context context1 = Context.enter(context0);
      ScriptableObject.deleteProperty((Scriptable) boundFunction0, 6);
      nativeContinuation0.get(0, (Scriptable) boundFunction0);
      BoundFunction boundFunction1 = new BoundFunction(context1, nativeContinuation0, nativeContinuation0, nativeContinuation0, context1.emptyArgs);
      // Undeclared exception!
      try { 
        boundFunction1.construct(context1, scriptable0, context0.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.BoundFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.keySet();
      Class<String> class0 = String.class;
      ScriptableObject.getTypedProperty((Scriptable) nativeObject0, 0, class0);
      NativeArray nativeArray0 = new NativeArray(0L);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test42()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context();
      Context context1 = Context.enter(context0);
      Context context2 = contextFactory0.enterContext(context1);
      Context.enter(context2, contextFactory0);
      Context.getCurrentContext();
      NativeString nativeString0 = new NativeString("error reporter");
      ScriptableObject.hasProperty((Scriptable) nativeString0, (-1));
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context2.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test43()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      TreeSet<NativeError> treeSet0 = new TreeSet<NativeError>();
      ScriptableObject.isFalse(nativeArray0);
      Delegator delegator0 = new Delegator();
      // Undeclared exception!
      try { 
        nativeArray0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context();
      Context context1 = Context.enter(context0);
      Context context2 = contextFactory0.enterContext(context1);
      Context context3 = Context.enter(context2, contextFactory0);
      Context.getCurrentContext();
      NativeString nativeString0 = new NativeString("error reporter");
      Delegator delegator0 = new Delegator();
      BoundFunction boundFunction0 = new BoundFunction(context0, nativeString0, delegator0, delegator0, context3.emptyArgs);
      Scriptable scriptable0 = context1.initStandardObjects((ScriptableObject) nativeString0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context3);
      importerTopLevel0.isDataDescriptor(nativeString0);
      boundFunction0.delete(160);
      JavaAdapter.getFunction(scriptable0, "language version");
      StringBuffer stringBuffer0 = new StringBuffer();
      NativeString nativeString1 = new NativeString(stringBuffer0);
      NativeArray nativeArray0 = new NativeArray(1);
      // Undeclared exception!
      try { 
        nativeArray0.getInstanceIdName(8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 8
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Context context0 = Context.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
      NativeCall nativeCall0 = new NativeCall();
      Delegator delegator0 = new Delegator(nativeCall0);
      delegator0.delete("error reporter");
      nativeCall0.isGenericDescriptor(importerTopLevel0);
      NativeString nativeString0 = new NativeString("error reporter");
      importerTopLevel0.isDataDescriptor(nativeString0);
      nativeString0.size();
      nativeString0.defineOwnProperties(context0, nativeCall0);
      Long.getLong("jsStaticFunction_");
      Long.getLong("error reporter", (Long) null);
      try { 
        Long.parseUnsignedLong("error reporter");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"error reporter\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      NativeJavaTopPackage nativeJavaTopPackage1 = new NativeJavaTopPackage(classLoader0);
      classLoader0.setDefaultAssertionStatus(true);
      BoundFunction boundFunction0 = new BoundFunction(context0, nativeIterator_StopIteration0, nativeJavaTopPackage1, nativeIterator_StopIteration0, context0.emptyArgs);
      ScriptableObject.ensureScriptable(nativeIterator_StopIteration0);
      ScriptableObject.isTrue(importerTopLevel0);
      nativeJavaTopPackage0.has("isScript", (Scriptable) importerTopLevel0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      nativeIterator_StopIteration0.getAllIds();
      ContextFactory.getGlobal();
      Context.getCurrentContext();
  }

  @Test(timeout = 4000)
  @Ignore
  public void test48()  throws Throwable  {
      Context context0 = new Context();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context1 = contextFactory0.makeContext();
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      Scriptable scriptable0 = context1.topCallScope;
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage("error reporter");
      NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
      ScriptableObject.isTrue((Object) null);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      NativeNumber nativeNumber0 = new NativeNumber(0.0);
      Context context0 = null;
      Context context1 = Context.enter((Context) null);
      NativeContinuation.init(context1, nativeNumber0, false);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) null;
      nativeNumber0.has(160, (Scriptable) null);
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) context1;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) context1;
      objectArray0[5] = (Object) null;
      objectArray0[6] = (Object) nativeNumber0;
      NativeArray nativeArray0 = new NativeArray(objectArray0);
      nativeArray0.setInstanceIdAttributes((-57), 2102);
      NativeArray nativeArray1 = new NativeArray(objectArray0);
      NativeGenerator nativeGenerator0 = NativeGenerator.init(nativeNumber0, false);
      // Undeclared exception!
      try { 
        nativeArray1.putConst("error reporter", (Scriptable) null, nativeGenerator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Context context0 = Context.enter();
      NativeCall nativeCall0 = context0.currentActivationCall;
      IdFunctionObject idFunctionObject0 = null;
      try {
        idFunctionObject0 = new IdFunctionObject((IdFunctionCall) null, (Object) null, (-2641), "language version", 13, (Scriptable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      NativeError nativeError0 = new NativeError();
      ScriptableObject.getPropertyIds(nativeError0);
      // Undeclared exception!
      try { 
        nativeError0.getInstanceIdValue((-145));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -145
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      ScriptableObject.ensureScriptableObject(importerTopLevel0);
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      contextFactory1.enterContext();
      NativeNumber.init(importerTopLevel0, false);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
      UniqueTag uniqueTag0 = (UniqueTag)Scriptable.NOT_FOUND;
      ContextFactory contextFactory0 = new ContextFactory();
      NativeIterator.StopIteration nativeIterator_StopIteration1 = new NativeIterator.StopIteration();
      ScriptableObject.getTopScopeValue(nativeIterator_StopIteration0, contextFactory0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      BaseFunction baseFunction0 = new BaseFunction();
      int int0 = (-1);
      LazilyLoadedCtor lazilyLoadedCtor0 = null;
      // Undeclared exception!
      try { 
        baseFunction0.addLazilyInitializedValue("msg.invalid.type", (-1), (LazilyLoadedCtor) null, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // msg.invalid.type
         //
         verifyException("com.google.javascript.rhino.head.ScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test55()  throws Throwable  {
      NativeArray nativeArray0 = new NativeArray(0L);
      nativeArray0.isEmpty();
      nativeArray0.toArray();
      // Undeclared exception!
      try { 
        nativeArray0.getAttributes((-2807));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Property -2807 not found.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test56()  throws Throwable  {
      Context context0 = Context.getCurrentContext();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
      BoundFunction boundFunction0 = new BoundFunction(context0, nativeContinuation0, nativeContinuation0, nativeContinuation0, context0.emptyArgs);
      InterpreterData interpreterData0 = new InterpreterData(67232232, "error reporter", "language version", false);
      InterpreterData interpreterData1 = new InterpreterData(interpreterData0);
      // Undeclared exception!
      try { 
        InterpretedFunction.createFunction(context0, boundFunction0, interpreterData1, boundFunction0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.InterpretedFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Context context0 = new Context();
      NativeArray nativeArray0 = new NativeArray(130);
      NativeWith nativeWith0 = new NativeWith((Scriptable) null, (Scriptable) null);
      ScriptableObject scriptableObject0 = ScriptableObject.buildDataDescriptor(nativeArray0, nativeWith0, 13);
      ScriptableObject.defineConstProperty(scriptableObject0, "pI$h%QJcecM3");
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      contextFactory1.enterContext();
      NativeArray nativeArray1 = new NativeArray(2147483647L);
      // Undeclared exception!
      try { 
        nativeArray0.getInstanceIdName((-2408));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2408
         //
         verifyException("com.google.javascript.rhino.head.IdScriptableObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      Delegator delegator0 = new Delegator();
      // Undeclared exception!
      try { 
        NativeJavaTopPackage.init(context0, delegator0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Delegator", e);
      }
  }

  @Test(timeout = 4000)
  @Ignore
  public void test59()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context();
      Context context1 = Context.enter(context0);
      Context context2 = contextFactory0.enterContext(context1);
      Context context3 = Context.enter(context2, contextFactory0);
      Context.getCurrentContext();
      NativeString nativeString0 = new NativeString("error reporter");
      Scriptable scriptable0 = context1.initStandardObjects((ScriptableObject) nativeString0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context3);
      importerTopLevel0.isDataDescriptor(nativeString0);
      JavaAdapter.getFunction(scriptable0, "language version");
      NativeArray nativeArray0 = null;
      try {
        nativeArray0 = new NativeArray(context2.emptyArgs);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.NativeArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      nativeObject0.keySet();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      contextFactory0.removeListener(contextFactory_Listener0);
      ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
      ScriptableObject.getClassPrototype(importerTopLevel0, "getLength");
      Class<NativeScript> class0 = NativeScript.class;
      // Undeclared exception!
      try { 
        ScriptableObject.defineClass((Scriptable) null, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot load class \"com.google.javascript.rhino.head.NativeScript\" which has no zero-parameter constructor.
         //
         verifyException("com.google.javascript.rhino.head.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      NativeObject nativeObject0 = new NativeObject();
      Set<Object> set0 = nativeObject0.keySet();
      NativeArray nativeArray0 = new NativeArray(13);
      nativeArray0.containsAll(set0);
      NativeWith nativeWith0 = new NativeWith(nativeArray0, nativeArray0);
      ScriptableObject.buildDataDescriptor(nativeWith0, (Object) null, 224);
      ScriptableObject.defineConstProperty(nativeWith0, "6^+|p#P+;u$]fsaw");
      NativeBoolean nativeBoolean0 = new NativeBoolean(true);
      // Undeclared exception!
      try { 
        nativeBoolean0.initPrototypeId(8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 8
         //
         verifyException("com.google.javascript.rhino.head.NativeBoolean", e);
      }
  }
}
