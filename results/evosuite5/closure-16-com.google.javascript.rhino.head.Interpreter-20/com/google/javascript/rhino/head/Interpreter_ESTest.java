/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 15:05:36 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ContextFactory;
import com.google.javascript.rhino.head.EvaluatorException;
import com.google.javascript.rhino.head.InterpreterData;
import com.google.javascript.rhino.head.NativeContinuation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Interpreter_ESTest extends Interpreter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(1, "error reporter", "language version", false);
      byte[] byteArray0 = new byte[15];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)33;
      byteArray0[2] = (byte)33;
      byteArray0[5] = (byte) (-39);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Context context0 = new Context();
      NativeContinuation nativeContinuation0 = new NativeContinuation();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(0, "error reporter", "error reporter", false);
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte)1;
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(85, "error reporter", "error reporter", false);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-12);
      byteArray0[1] = (byte) (-6);
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte) (-19);
      byteArray0[0] = (byte) (-19);
      byteArray0[5] = (byte)15;
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InterpreterData interpreterData0 = new InterpreterData(0, "h*iYU+!pW8`<c'-3H", "h*iYU+!pW8`<c'-3H", false);
  }

  @Test(timeout = 4000)
  @Ignore
  public void test05()  throws Throwable  {
      Context.enter();
      EvaluatorException evaluatorException0 = null;
      try {
        evaluatorException0 = new EvaluatorException("error reporter", "language version", 170, "language version", 160);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(120, "error reporter", "gaKv\"e", false);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-12);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[2] = (byte) (-8);
      byteArray0[5] = (byte)6;
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(120, "error reporter", "gaKv\"e", false);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-12);
      byteArray0[2] = (byte) (-8);
      byteArray0[3] = (byte) (-8);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Context.getCurrentContext();
      InterpreterData interpreterData0 = new InterpreterData(1, "error reporter", "language version", false);
      byte[] byteArray0 = new byte[15];
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[2] = (byte)33;
      byteArray0[5] = (byte) (-21);
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(85, "error reporter", "error reporter", false);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-12);
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)33;
      byteArray0[4] = (byte)33;
      byteArray0[5] = (byte)6;
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Context.enter();
      InterpreterData interpreterData0 = new InterpreterData(85, "error reporter", "gaKv\"e", false);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-12);
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte)33;
      byteArray0[4] = (byte)33;
      interpreterData0.itsICode = byteArray0;
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enterContext();
  }
}
