/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 20 21:20:04 GMT 2019
 */

package org.apache.commons.math.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolator;
import org.apache.commons.math.ode.ContinuousOutputModel;
import org.apache.commons.math.ode.DummyStepHandler;
import org.apache.commons.math.ode.FirstOrderConverter;
import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math.ode.FixedStepHandler;
import org.apache.commons.math.ode.GraggBulirschStoerIntegrator;
import org.apache.commons.math.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math.ode.StepHandler;
import org.apache.commons.math.ode.StepNormalizer;
import org.apache.commons.math.ode.SwitchingFunction;
import org.apache.commons.math.ode.SwitchingFunctionsHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 2883.3130138;
      doubleArray0[1] = 2883.3130138;
      doubleArray0[2] = 2883.3130138;
      doubleArray0[3] = 2883.3130138;
      doubleArray0[4] = 2883.3130138;
      doubleArray0[5] = 2883.3130138;
      doubleArray0[6] = 2883.3130138;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2883.3130138, 2883.3130138, doubleArray0, doubleArray0);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(78.3370777, 2883.3130138, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.filterStep((-2139.4191353245124), false);
      StepHandler stepHandler0 = graggBulirschStoerIntegrator1.getStepHandler();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      graggBulirschStoerIntegrator1.resetInternalState();
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      graggBulirschStoerIntegrator0.setStepsizeControl(0, 2883.3130138, 78.3370777, 2883.3130138);
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 0.0, 2883.3130138, 0);
      graggBulirschStoerIntegrator0.getName();
      graggBulirschStoerIntegrator1.setOrderControl(0, 2883.3130138, 0.0);
      graggBulirschStoerIntegrator0.setStepHandler(stepHandler0);
      graggBulirschStoerIntegrator1.setStepsizeControl(2883.3130138, 1792.99, 2883.3130138, 2883.3130138);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1470.0, 1470.0, 2037.730991925, 0.0);
      graggBulirschStoerIntegrator0.setStepsizeControl(2037.730991925, 2037.730991925, 2037.730991925, (-5188.5088));
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 468);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 468, 9, 1356.648121);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1186.6297126689126), (-1186.6297126689126), (-1186.6297126689126), 0.0);
      graggBulirschStoerIntegrator0.scalRelativeTolerance = 0.0;
      graggBulirschStoerIntegrator0.resetInternalState();
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-175), 18, (-175));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 18, 974, 0.0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-679.3231);
      doubleArray0[2] = (-679.3231);
      doubleArray0[3] = 1183.75526;
      doubleArray0[4] = (-679.3231);
      doubleArray0[5] = (-679.3231);
      doubleArray0[6] = 2167.05;
      doubleArray0[7] = (-679.3231);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-679.3231), (-679.3231), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = (-1255.45);
      graggBulirschStoerIntegrator0.stepStart = (-679.3231);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 0.9;
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = doubleArray0;
      DummyStepHandler.getInstance();
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 1183.75526, (-679.3231), (-18));
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-18));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(999.324461771123, 2799.174390918, (-2454.929), 0.9);
      graggBulirschStoerIntegrator1.setOrderControl(18, (-0.3111643669578199), 0.9);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator1.integrate(firstOrderConverter0, 2302.62174894288, graggBulirschStoerIntegrator0.vecAbsoluteTolerance, (-1255.45), graggBulirschStoerIntegrator0.vecAbsoluteTolerance);
      SwitchingFunction switchingFunction1 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator1.addSwitchingFunction(switchingFunction1, (-2454.929), 18, 18);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(806.8, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setOrderControl(1, 1002.70435, 1002.70435);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = 4.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2753.7, 2753.7, 2753.7, 4.0);
      graggBulirschStoerIntegrator0.setStepsizeControl(0.6, 0.001, 2883.3130138, 4.0);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 4.0, 2753.7, 1017169606);
      ClassicalRungeKuttaStepInterpolator classicalRungeKuttaStepInterpolator0 = null;
      try {
        classicalRungeKuttaStepInterpolator0 = new ClassicalRungeKuttaStepInterpolator((ClassicalRungeKuttaStepInterpolator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.AbstractStepInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-679.3231);
      doubleArray0[1] = (-679.3231);
      doubleArray0[2] = (-679.3231);
      doubleArray0[3] = 1183.75526;
      doubleArray0[4] = (-679.3231);
      doubleArray0[5] = (-679.3231);
      doubleArray0[6] = 2168.658182796392;
      doubleArray0[7] = (-679.3231);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-679.3231), (-679.3231), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = (-1255.45);
      graggBulirschStoerIntegrator0.stepStart = (-679.3231);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 0.9;
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = doubleArray0;
      DummyStepHandler.getInstance();
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 1183.75526, (-679.3231), (-18));
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-18));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(999.324461771123, 2799.174390918, 668.241253162545, 0.9);
      graggBulirschStoerIntegrator1.setOrderControl(18, (-0.3111643669578199), 0.9);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator1.integrate(firstOrderConverter0, 2302.62174894288, graggBulirschStoerIntegrator0.vecAbsoluteTolerance, (-1255.45), graggBulirschStoerIntegrator0.vecAbsoluteTolerance);
      SwitchingFunction switchingFunction1 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn((-679.3231), 2168.658182796392, (-1462.620671368), 2418264.085774299, 2400.8417547583117).when(switchingFunction1).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator1.addSwitchingFunction(switchingFunction1, 668.241253162545, 18, 18);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator1.integrate(firstOrderConverter0, 1.0E-4, doubleArray0, (-1255.45), doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Endpoints do not specify an interval: [1.0E-4,-17.9999]
         //
         verifyException("org.apache.commons.math.analysis.UnivariateRealSolverImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1437.4746442999), (-1437.4746442999), (-1437.4746442999), (-1437.4746442999));
      graggBulirschStoerIntegrator0.resetInternalState();
      ContinuousOutputModel continuousOutputModel0 = new ContinuousOutputModel();
      graggBulirschStoerIntegrator0.setStepHandler(continuousOutputModel0);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.resetInternalState();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = (-395.3722);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(44.657051703285305, 18, (-395.3722), 0.9);
      graggBulirschStoerIntegrator0.setOrderControl(18, 389.0, (-395.3722));
      int int0 = 4;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 18, doubleArray0, 4492.904094911253, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-2.778205752353508);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2754.4277994115423, (-2.778205752353508), doubleArray0, doubleArray0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(18.0, (-2.778205752353508), (-2.778205752353508), 1.0E-10);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator1.addSwitchingFunction(switchingFunction0, 357.6391179106141, (-4864.400996130108), 1783);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      double[] doubleArray1 = new double[0];
      // Undeclared exception!
      graggBulirschStoerIntegrator1.integrate(firstOrderConverter1, 1.0E-10, doubleArray1, (-1799.849829146877), doubleArray1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-679.3231);
      doubleArray0[1] = (-679.3231);
      doubleArray0[2] = (-679.3231);
      doubleArray0[3] = 1183.75526;
      doubleArray0[4] = (-679.3231);
      doubleArray0[5] = (-679.3231);
      doubleArray0[6] = 2167.05;
      doubleArray0[7] = (-679.3231);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-679.3231), (-679.3231), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 2167.05;
      graggBulirschStoerIntegrator0.stepStart = (-679.3231);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 0.9;
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = doubleArray0;
      DummyStepHandler.getInstance();
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 1183.75526, (-679.3231), (-18));
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-18));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(999.324461771123, 2799.174390918, (-2454.929), 0.9);
      graggBulirschStoerIntegrator1.setOrderControl(18, (-0.3111643669578199), 0.9);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator1.integrate(firstOrderConverter0, 2302.62174894288, graggBulirschStoerIntegrator0.vecAbsoluteTolerance, (-1255.45), graggBulirschStoerIntegrator0.vecAbsoluteTolerance);
      SwitchingFunction switchingFunction1 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator1.addSwitchingFunction(switchingFunction1, (-2454.929), 18, 18);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 1.0001, doubleArray0, Double.NaN, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-248.97809), 4.0, 3335.491, 4.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1920.0682757, 4125.917062764746, 2742.390203596, 2302.62174894288);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator1.addSwitchingFunction(switchingFunction0, (-248.97809), 0.01, (-3785));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator1.integrate(firstOrderConverter0, 2302.62174894288, doubleArray0, 4125.917062764746, doubleArray0);
      ClassicalRungeKuttaStepInterpolator classicalRungeKuttaStepInterpolator0 = new ClassicalRungeKuttaStepInterpolator();
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = classicalRungeKuttaStepInterpolator0.equations;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator((-134.06615010886), (-451.2856841136176), 2302.62174894288, (-248.97809));
      SwitchingFunction switchingFunction1 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator2.addSwitchingFunction(switchingFunction1, 6.120170479781395E-6, (-1459.59), (-3785));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-395.37222765861), (-395.37222765861), doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, (-395.37222765861), doubleArray0, 78.0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math.ode.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-63.0), (-63.0), (-63.0), (-63.0));
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.setInitialStepSize((-63.0));
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, (-63.0), (-1437.4746442999), 977);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 977);
      graggBulirschStoerIntegrator0.setOrderControl(977, 0.0, 977);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(668.241253162545, (-189.17813819516758), (-189.17813819516758), 9.445862117824712);
      graggBulirschStoerIntegrator0.setOrderControl(1699, (-189.17813819516758), 9.445862117824712);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-678.74), 1.7976931348623157E308, (-678.74), (-303.5043860057053));
      ClassicalRungeKuttaStepInterpolator classicalRungeKuttaStepInterpolator0 = new ClassicalRungeKuttaStepInterpolator();
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = classicalRungeKuttaStepInterpolator0.equations;
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, 1737, 1737);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.setStepHandler(dummyStepHandler0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-395.37222765861), 2302.62174894288, doubleArray0, doubleArray0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(2302.62174894288, (-395.37222765861), (-631.52466577), (-631.52466577));
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator((-2723.1355061839176), (-533.34), (-2723.1355061839176), 679.4977834842125);
      graggBulirschStoerIntegrator2.setOrderControl((-1745), 14.357537258253416, 398.94528633482);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator2.integrate(firstOrderConverter0, 222.5646533233, doubleArray0, 1.0E-10, doubleArray0);
      graggBulirschStoerIntegrator2.addSwitchingFunction(switchingFunction0, 1.0E-15, 398.94528633482, (-1745));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-395.37222765861), 2302.62174894288, doubleArray0, doubleArray0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(2302.62174894288, (-395.37222765861), (-631.52466577), (-631.52466577));
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(4.0245034590697556E-25, 1626.44, (-395.37222765861)).when(switchingFunction0).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator1.addSwitchingFunction(switchingFunction0, 357.6391179106141, 0.6, 11);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(11).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator1.integrate(firstOrderConverter1, 7.569339260217169, doubleArray0, 2302.62174894288, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Endpoints do not specify an interval: [-190.71677456908782,-388.4028883983928]
         //
         verifyException("org.apache.commons.math.analysis.UnivariateRealSolverImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 242.28349177525817;
      doubleArray0[1] = 242.28349177525817;
      doubleArray0[2] = 242.28349177525817;
      doubleArray0[3] = 242.28349177525817;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(242.28349177525817, 242.28349177525817, doubleArray0, doubleArray0);
      int int0 = 0;
      graggBulirschStoerIntegrator0.setOrderControl(0, 0.04471061572777259, (-1755.0530028617582));
      double double0 = (-1437.4746442999);
      graggBulirschStoerIntegrator0.setStepsizeControl(2917.3552, 2917.3552, 10.0, (-1437.4746442999));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double double1 = (-2811.83472447);
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 0, doubleArray0, (-2811.83472447), doubleArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // dimensions mismatch: ODE problem has dimension 0, initial state vector has dimension 4
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-679.3231);
      doubleArray0[1] = (-679.3231);
      doubleArray0[2] = (-679.3231);
      doubleArray0[3] = 1183.75526;
      doubleArray0[4] = (-679.3231);
      doubleArray0[5] = (-679.3231);
      doubleArray0[6] = 2167.05;
      doubleArray0[7] = (-679.3231);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-679.3231), (-679.3231), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = (-1255.45);
      graggBulirschStoerIntegrator0.stepStart = (-679.3231);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 2167.05;
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = doubleArray0;
      DummyStepHandler.getInstance();
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-18));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(999.324461771123, 2799.174390918, (-2454.929), (-1255.45));
      SwitchingFunctionsHandler switchingFunctionsHandler0 = new SwitchingFunctionsHandler();
      graggBulirschStoerIntegrator1.switchesHandler = switchingFunctionsHandler0;
      graggBulirschStoerIntegrator1.setOrderControl(18, (-0.3111643669578199), 2167.05);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator1.integrate(firstOrderConverter0, 2302.62174894288, graggBulirschStoerIntegrator0.vecAbsoluteTolerance, (-1255.45), graggBulirschStoerIntegrator0.vecAbsoluteTolerance);
      SwitchingFunction switchingFunction1 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator1.addSwitchingFunction(switchingFunction1, (-2454.929), 18, 18);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-0.3111643669578199), 0.0, (-0.3111643669578199), (-0.3111643669578199));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-395.37222765861);
      doubleArray0[1] = 1622.9275725168;
      doubleArray0[2] = 0.5;
      doubleArray0[3] = 1622.9275725168;
      doubleArray0[4] = 0.5;
      doubleArray0[5] = 1622.9275725168;
      doubleArray0[6] = 0.5;
      doubleArray0[7] = 1622.9275725168;
      doubleArray0[8] = 0.5;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1622.9275725168, 0.5, doubleArray0, doubleArray0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(0.5, fixedStepHandler0);
      graggBulirschStoerIntegrator0.handler = (StepHandler) stepNormalizer0;
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.resetInternalState();
      stepNormalizer0.reset();
      stepNormalizer0.reset();
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 527.8081592054236, (-43.53345659001114), 2146501716);
      graggBulirschStoerIntegrator0.addSwitchingFunction((SwitchingFunction) null, 1622.9275725168, 1622.9275725168, 2146362334);
      graggBulirschStoerIntegrator0.addSwitchingFunction((SwitchingFunction) null, 0.9999, 0.5, 2146501716);
      graggBulirschStoerIntegrator0.addSwitchingFunction((SwitchingFunction) null, 452.0636597136, 1622.9275725168, (-2485));
      graggBulirschStoerIntegrator0.addSwitchingFunction((SwitchingFunction) null, 0.5, 1.7976931348623157E308, (-2485));
      ClassicalRungeKuttaStepInterpolator classicalRungeKuttaStepInterpolator0 = new ClassicalRungeKuttaStepInterpolator();
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = classicalRungeKuttaStepInterpolator0.equations;
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 2146362334;
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((FirstOrderDifferentialEquations) null, 0.5, doubleArray0, (-2485), doubleArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-0.10416666666666667), (-848.0), (-848.0), (-848.0));
      graggBulirschStoerIntegrator0.setStepsizeControl(1.3333333333333333, 0.9999, 1.3333333333333333, (-848.0));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(803.0356869093306, 0.0, 0.0, 0.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(803.0356869093306, 4.0, (double[]) null, (double[]) null);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator0.setOrderControl(616, 616, 0.02);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(firstOrderConverter0, 803.0356869093306, (double[]) null, (-860.191336649), (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(806.8, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 1);
      graggBulirschStoerIntegrator0.setOrderControl(1, 1002.70435, 1002.70435);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3782.91), (-3782.91), 1565.01315439, 1565.01315439);
      graggBulirschStoerIntegrator0.setStepsizeControl((-3782.91), 3046.232, (-900.7846614330496), (-3842.92446059581));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-679.3231);
      doubleArray0[1] = (-679.3231);
      doubleArray0[2] = (-679.3231);
      doubleArray0[3] = 1183.75526;
      doubleArray0[4] = (-679.3231);
      doubleArray0[5] = (-679.3231);
      doubleArray0[6] = 2168.658182796392;
      doubleArray0[7] = (-679.3231);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-679.3231), (-679.3231), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = (-1255.45);
      graggBulirschStoerIntegrator0.stepStart = (-679.3231);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 0.9;
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = doubleArray0;
      DummyStepHandler.getInstance();
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 1183.75526, (-679.3231), (-18));
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-18));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(999.324461771123, 2799.174390918, 668.241253162545, 0.9);
      graggBulirschStoerIntegrator1.setOrderControl(18, (-0.3111643669578199), 0.9);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator1.integrate(firstOrderConverter0, 2302.62174894288, graggBulirschStoerIntegrator0.vecAbsoluteTolerance, (-1255.45), graggBulirschStoerIntegrator0.vecAbsoluteTolerance);
      SwitchingFunction switchingFunction1 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(switchingFunction1).g(anyDouble() , any(double[].class));
      graggBulirschStoerIntegrator1.addSwitchingFunction(switchingFunction1, 668.241253162545, 18, 18);
      graggBulirschStoerIntegrator1.integrate(firstOrderConverter0, 1.0E-4, doubleArray0, (-1255.45), doubleArray0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2743.0, (-1655.86935), 0.0, 2743.0);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      SwitchingFunctionsHandler switchingFunctionsHandler0 = new SwitchingFunctionsHandler();
      switchingFunctionsHandler0.getEventTime();
      graggBulirschStoerIntegrator0.switchesHandler = switchingFunctionsHandler0;
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, (-1655.86935), (-1655.86935), 1861);
      graggBulirschStoerIntegrator0.setStepsizeControl(0.0, 0.0, 0.0, 1861);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2753.7, 2753.7, 2753.7, 4.0);
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.addSwitchingFunction(switchingFunction0, 4.0, 2753.7, 1017169606);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-395.37222765861), 2302.62174894288, doubleArray0, doubleArray0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(2302.62174894288, (-395.37222765861), (-631.52466577), (-631.52466577));
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator((-2723.1355061839176), (-533.34), (-2723.1355061839176), 679.4977834842125);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      // Undeclared exception!
      graggBulirschStoerIntegrator1.integrate(firstOrderConverter1, (-631.52466577), doubleArray0, 2610.81967, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-679.3231);
      doubleArray0[1] = (-679.3231);
      doubleArray0[2] = (-679.3231);
      doubleArray0[3] = 1183.75526;
      doubleArray0[4] = (-679.3231);
      doubleArray0[5] = (-679.3231);
      doubleArray0[6] = 2168.658182796392;
      doubleArray0[7] = (-679.3231);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-679.3231), (-679.3231), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = (-1255.45);
      graggBulirschStoerIntegrator0.stepStart = (-679.3231);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 0.9;
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = doubleArray0;
      DummyStepHandler.getInstance();
      SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-18));
      double double0 = 668.241253162545;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(999.324461771123, 0.9, 668.241253162545, 0.9);
      int int0 = 18;
      graggBulirschStoerIntegrator1.setOrderControl(18, (-0.3111643669578199), 0.9);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      try { 
        graggBulirschStoerIntegrator1.integrate(firstOrderConverter0, 2302.62174894288, graggBulirschStoerIntegrator0.vecAbsoluteTolerance, (-1255.45), graggBulirschStoerIntegrator0.vecAbsoluteTolerance);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // minimal step size (999.324) reached, integration needs 1.671
         //
         verifyException("org.apache.commons.math.ode.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1942.804027), (-2126.65329985), (-1942.804027), 0.0);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 0.0;
      graggBulirschStoerIntegrator0.setOrderControl(0, (-1942.804027), 0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, 1236, 0.5);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1), (-1), (-1231.39));
      assertEquals((-1942.804027), graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.02;
      doubleArray0[1] = 0.02;
      doubleArray0[2] = 0.02;
      doubleArray0[3] = 0.02;
      doubleArray0[4] = 0.02;
      doubleArray0[5] = 0.02;
      doubleArray0[6] = 0.02;
      doubleArray0[7] = 0.02;
      doubleArray0[8] = 0.02;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.02, 0.02, doubleArray0, doubleArray0);
      DummyStepHandler dummyStepHandler0 = (DummyStepHandler)graggBulirschStoerIntegrator0.handler;
      graggBulirschStoerIntegrator0.handler = (StepHandler) dummyStepHandler0;
      graggBulirschStoerIntegrator0.setStepsizeControl(0.02, 0.02, 0.02, 0.9);
      graggBulirschStoerIntegrator0.setStepsizeControl(0.9, 0.02, 0.02, 0.001);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 642);
      assertEquals(0.02, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      String string0 = graggBulirschStoerIntegrator0.getName();
      assertEquals("Gragg-Bulirsch-Stoer", string0);
  }
}
