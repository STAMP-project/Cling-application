/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 23:20:23 GMT 2019
 */

package com.google.javascript.rhino.head;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.head.Decompiler;
import com.google.javascript.rhino.head.UintMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Decompiler_ESTest extends Decompiler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("f(H&jPYR@e*uV[S", 3117, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile("^(DzLv", 132, uintMap0);
      assertEquals("\n <<= 2.7592572715552443e-306\n", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile(")\u0085Cannot capture ontination from JavaScript code not called directly by executeScriptWithContinuations or callFunctionWithContinuations", 1, uintMap0);
      assertEquals("\n\"Cannot capture ontination from JavaScript code not called directly by executeScriptWithContinuations or callFunctionWithContinuations\"", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile("g\u0001", 2, uintMap0);
      assertEquals(":", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile("\u0004\u0001", 3, uintMap0);
      assertEquals("return ", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Tary'!-", 10, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile("\u0001\u0001'\u000BlastIndexOfm\u0001", 1, uintMap0);
      assertEquals("\nlastIndexOffunction ", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      UintMap uintMap0 = new UintMap(86);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile("\u0001\u0001V", 1, uintMap0);
      assertEquals("\n}", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile("\u0001\u0001s", 1, uintMap0);
      assertEquals("\ncase ", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile("V\u0001", 2864, uintMap0);
      assertEquals("\n}\n\n", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile("U\u0001", 1, uintMap0);
      assertEquals("", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0000\u0001", 153, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 0
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A3\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 163
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u00A2\u0001", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 162
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      UintMap uintMap0 = new UintMap(161);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("(S\u0003\u00A1", 161, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 161
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u009F\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 159
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u009E\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 158
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u009Dm\u009D", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 157
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u009C\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 156
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u009B\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 155
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile("(S\u0003\u009A\u0001", 3, uintMap0);
      assertEquals("3const ", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile("\u0099\u0001", 1, uintMap0);
      assertEquals("", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0001\u0001\u0098\u0001", 1, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0097\u0001", 1, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0096\u0001", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 150
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0095\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 149
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0094\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 148
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile("\u0093\u0001", 2, uintMap0);
      assertEquals("@", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile("\u0092\u0001", 3, uintMap0);
      assertEquals(".(", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0091\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 145
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile("\u0090\u0001", 2, uintMap0);
      assertEquals("::", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile("\u008F\u0001", 1, uintMap0);
      assertEquals("", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("m\u008E\u008E\u0001", 2014, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 142
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u008D\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 141
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      UintMap uintMap0 = new UintMap(140);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0001\u0001\u008C", 1647, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 140
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u008B\u0001", 2583, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 139
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u008A\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 138
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0089\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 137
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0001\u0001\u0088\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 136
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0087\u0001", 3281, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 135
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0086\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 134
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0085\u0001", 133, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 133
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0084\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 132
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0083\u0001", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 131
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0082\u0001", 298, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 130
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0081\u0001", 129, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 129
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0080\u0001m\u0080", 128, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 128
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("5/", 146, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 127
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("~2x'7S", 2, uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("zw&\"yYQ!R~vMOX7%D", 117, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 38
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile("\u0001\u0001t", 116, uintMap0);
      assertEquals("\n\n\ndefault\n", string0);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("com/google/javascript/rhino/head/ScriptRuntime", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 111
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("java.lang.Throwable", (-816), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 110
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("s9XU}4I m#3T>k", 124, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 57
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("kZVqb;+!", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 59
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("PEbgl~PLq==h) d9R#b", 137, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 80
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("WOsB|y%o4# SC&`e}", 85, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 79
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("l[*QdN\"`K(6.", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 78
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("UVM\"ab;~,dC0I,D", 131, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 77
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("xXUK3{I\"*4U'OlKh@E", (-608), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 75
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      UintMap uintMap0 = new UintMap(40);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("JftHa?JlE7EY.o", 40, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 74
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("RHINO USAGE WARNING: onExit terminated with exception", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 73
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(",hTqTGn7^4/o]fu", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 71
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      UintMap uintMap0 = new UintMap(4);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("FH1!V,@c#<", 4, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 70
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("D@<OB/&09t}Rdq(", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 68
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Cannot capture continuation from JavaScript code not called directly by executeScriptWithContinuations or callFunctionWithContinuations", (-2166), uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 67
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("B_L&n)tYH", 406, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 76
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("lA V{rQ/$R", 1635, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 65
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("c@o?$,", 553, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 64
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("Y-qx?!8TtfB", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 63
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(" >>= ", 18, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 62
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(" <<= ", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 60
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(":-6", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 58
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("qieVu^968mgLiW_KP", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 57
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("uua87C*gtv#FUB", 40, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 56
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("g6/AsL{FwEDu", 119, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 54
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile(",2]5Vy;0*jRN-!pu1X", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 59
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      String string0 = Decompiler.decompile("*U_4", (-63), uintMap0);
      assertEquals("\nnull{ >>=  in ", string0);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("3kVjt)_`4!", 93, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 51
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("S`2rs[XEa;y{v32", 149, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 69
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("d1", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 49
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("d{c_/f/71TUI", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 55
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("ed(Jl}a@Qs)=", (-38), uintMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("u|.&.U(", 5, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 38
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      assertEquals(0, uintMap0.size());
      assertTrue(uintMap0.isEmpty());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("ki_U%<bZLU;N)", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 37
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      UintMap uintMap0 = new UintMap(121);
      assertTrue(uintMap0.isEmpty());
      assertEquals(0, uintMap0.size());
      assertNotNull(uintMap0);
      
      // Undeclared exception!
      try { 
        Decompiler.decompile("y*,f$7^?r{8z", 121, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 36
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("gSep#H|R+", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 35
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("+_l\";)zm3L.w&F)", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 34
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("U!#1%*fwmv'pW4^dMja", 146, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 33
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile(" == ", 2, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 61
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u001F\u0001", 2, uintMap0);
      assertEquals("delete ", string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      UintMap uintMap0 = new UintMap(30);
      String string0 = Decompiler.decompile("\u001E\u0001", 1, uintMap0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      String string0 = Decompiler.decompile("\u001D\u0001", 1, uintMap0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u001C\u0001", 2, uintMap0);
      assertEquals("+", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u001B\u0001", 2, uintMap0);
      assertEquals("~", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u001A\u0001'\ninstanceof", 2, uintMap0);
      assertEquals("!instanceof", string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      UintMap uintMap0 = new UintMap(25);
      String string0 = Decompiler.decompile("\u00A4\u0019\u0001", 2, uintMap0);
      assertEquals(" % ", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u0017\u0001", 1, uintMap0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u0016\u0001", 2, uintMap0);
      assertEquals(" - ", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      String string0 = Decompiler.decompile("m\u0015\u0015\u0001", 1, uintMap0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u0014\u0001", 2, uintMap0);
      assertEquals(" >>> ", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u0013\u0001", 2, uintMap0);
      assertEquals(" >> ", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      UintMap uintMap0 = new UintMap(18);
      String string0 = Decompiler.decompile("\u0012\u0001", 18, uintMap0);
      assertEquals(" << ", string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      String string0 = Decompiler.decompile("\u0011\u0001", 138, uintMap0);
      assertEquals(" >= ", string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u0010\u0001", 1, uintMap0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u000F\u0001", 2, uintMap0);
      assertEquals(" <= ", string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u000E\u0001", 2, uintMap0);
      assertEquals(" < ", string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\r\u0001\r\u0001", 2, uintMap0);
      assertEquals(" !=  != ", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\f\u0001", 2, uintMap0);
      assertEquals(" == ", string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u000B\u0001", 3, uintMap0);
      assertEquals(" & ", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\n}\n\n", 2, uintMap0);
      assertEquals(" ^ finally  ^  ^ ", string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\t\u0001", 2, uintMap0);
      assertEquals(" | ", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      // Undeclared exception!
      try { 
        Decompiler.decompile("\b\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 8
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0007\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 7
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      UintMap uintMap0 = new UintMap(2);
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0005\u0001", 1, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 5
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u0004R\u0001", 2, uintMap0);
      assertEquals("return;", string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      // Undeclared exception!
      try { 
        Decompiler.decompile("\u0002\u0001", 3, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 2
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("0\u0002//\u0018\u0001", 2, uintMap0);
      assertEquals("(// / )", string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      UintMap uintMap0 = new UintMap(1);
      uintMap0.put(1, 160);
      // Undeclared exception!
      try { 
        Decompiler.decompile("(S\u0003\u00A0\u00A0\u0001\u0003\u0001", 1048576, uintMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Token: 3
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("\u0088\u0001", 2, uintMap0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      uintMap0.put(3, (-124));
      // Undeclared exception!
      try { 
        Decompiler.decompile("delete ", 273, uintMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      uintMap0.put(2, (-1224));
      // Undeclared exception!
      try { 
        Decompiler.decompile("qwVhhrW+{{b.P:II", 2296, uintMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      UintMap uintMap0 = new UintMap(3);
      uintMap0.put(1, (-661));
      // Undeclared exception!
      try { 
        Decompiler.decompile("GOTO", 2, uintMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      UintMap uintMap0 = new UintMap();
      String string0 = Decompiler.decompile("", 34, uintMap0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addRegexp("Cannot capture ontination from JavaScript code not called directly by executeScriptWithContinuations or cllFunctionWithContinuations", "Cannot capture ontination from JavaScript code not called directly by executeScriptWithContinuations or cllFunctionWithContinuations");
      decompiler0.addRegexp("Cannot capture ontination from JavaScript code not called directly by executeScriptWithContinuations or cllFunctionWithContinuations", "Cannot capture ontination from JavaScript code not called directly by executeScriptWithContinuations or cllFunctionWithContinuations");
      assertEquals(1, Decompiler.ONLY_BODY_FLAG);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addNumber(9.223372036854776E18);
      assertEquals(2, Decompiler.INDENT_GAP_PROP);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addNumber((-752.0));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.head.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addNumber(1274.3544968);
      assertEquals(2, Decompiler.TO_SOURCE_FLAG);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addNumber(2);
      assertEquals(3, Decompiler.CASE_GAP_PROP);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addEOL(2626);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addEOL(1);
      assertEquals(2, Decompiler.TO_SOURCE_FLAG);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addEOL((-979));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addToken(2881);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      // Undeclared exception!
      try { 
        decompiler0.addToken((-847));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.head.Decompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addString("Cannot capture ontination from JavaScript code not called directly by executeScriptWithContinuations or callFunctionWithContinuations");
      assertEquals(1, Decompiler.INITIAL_INDENT_PROP);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      int int0 = decompiler0.markFunctionEnd(25);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      decompiler0.addName("lastIndexOf");
      assertEquals(2, Decompiler.INDENT_GAP_PROP);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      int int0 = decompiler0.markFunctionStart(1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Decompiler decompiler0 = new Decompiler();
      String string0 = decompiler0.getEncodedSource();
      assertEquals("", string0);
  }
}
