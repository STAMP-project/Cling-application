Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=167
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T02:56:46.428Z     112MB used)
Progress update: steps=551, test inputs generated=519, failing inputs=0      (2020-11-25T02:57:46.455Z     838MB used)
Progress update: steps=1000, test inputs generated=956, failing inputs=0      (2020-11-25T02:58:11.068Z     65MB used)
Progress update: steps=1502, test inputs generated=1439, failing inputs=0      (2020-11-25T02:58:46.456Z     418MB used)
Progress update: steps=2000, test inputs generated=1923, failing inputs=0      (2020-11-25T02:59:12.495Z     520MB used)
Progress update: steps=2373, test inputs generated=2289, failing inputs=0      (2020-11-25T02:59:46.456Z     605MB used)
Progress update: steps=3000, test inputs generated=2895, failing inputs=0      (2020-11-25T03:00:18.962Z     470MB used)
Progress update: steps=3805, test inputs generated=3681, failing inputs=0      (2020-11-25T03:00:46.457Z     609MB used)
Progress update: steps=4000, test inputs generated=3869, failing inputs=0      (2020-11-25T03:00:53.762Z     990MB used)
Progress update: steps=5000, test inputs generated=4832, failing inputs=0      (2020-11-25T03:01:30.462Z     1024MB used)
Progress update: steps=5424, test inputs generated=5240, failing inputs=0      (2020-11-25T03:01:46.465Z     104MB used)
Progress update: steps=5424, test inputs generated=5240, failing inputs=0      (2020-11-25T03:01:46.483Z     104MB used)
Normal method executions: 5279560
Exceptional method executions: 910

Average method execution time (normal termination):      0.000817
Average method execution time (exceptional termination): 0.141
Approximate memory usage 104MB
Explorer = ForwardGenerator(steps: 5424, null steps: 184, num_sequences_generated: 5240;
    allSequences: 5240, regresson seqs: 5174, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 66;
    runtimePrimitivesSeen:1235)

No error-revealing tests to output.

About to look for failing assertions in 2837 regression sequences.

Regression test output:
Regression test count: 2837
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-19/RegressionTest0.java
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-19/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-19/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-19/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-19/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-19/RegressionTest5.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-19/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValue()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
