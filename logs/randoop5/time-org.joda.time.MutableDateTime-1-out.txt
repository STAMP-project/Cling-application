Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=183
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=2, test inputs generated=1, failing inputs=0      (2020-11-25T01:43:32.354Z     112MB used)
Progress update: steps=848, test inputs generated=800, failing inputs=28      (2020-11-25T01:44:32.385Z     673MB used)
Progress update: steps=1000, test inputs generated=948, failing inputs=32      (2020-11-25T01:44:43.427Z     792MB used)
Progress update: steps=1643, test inputs generated=1582, failing inputs=51      (2020-11-25T01:45:32.391Z     297MB used)
Progress update: steps=2000, test inputs generated=1933, failing inputs=62      (2020-11-25T01:46:12.505Z     626MB used)
Progress update: steps=2224, test inputs generated=2155, failing inputs=69      (2020-11-25T01:46:32.392Z     1016MB used)
Progress update: steps=3000, test inputs generated=2917, failing inputs=86      (2020-11-25T01:47:30.506Z     757MB used)
Progress update: steps=3052, test inputs generated=2968, failing inputs=88      (2020-11-25T01:47:32.392Z     1100MB used)
Progress update: steps=4000, test inputs generated=3905, failing inputs=121      (2020-11-25T01:48:19.214Z     574MB used)
Progress update: steps=4066, test inputs generated=3972, failing inputs=122      (2020-11-25T01:48:32.393Z     1139MB used)
Progress update: steps=4066, test inputs generated=3972, failing inputs=122      (2020-11-25T01:48:32.409Z     1139MB used)
Normal method executions: 1803166
Exceptional method executions: 537

Average method execution time (normal termination):      0.00171
Average method execution time (exceptional termination): 0.155
Approximate memory usage 1139MB
Explorer = ForwardGenerator(steps: 4066, null steps: 94, num_sequences_generated: 3972;
    allSequences: 3972, regresson seqs: 3849, error seqs: 122=122=122, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:2191)

Error-revealing test output:
Error-revealing test count: 122
Writing error-revealing JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-1/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-1/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 2040 regression sequences.

Regression test output:
Regression test count: 2040
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-1/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-1/RegressionTest1.java
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-1/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-1/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-1/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-1/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
