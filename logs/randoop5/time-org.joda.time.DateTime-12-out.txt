Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=195
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T02:34:20.162Z     112MB used)
Progress update: steps=695, test inputs generated=615, failing inputs=15      (2020-11-25T02:35:20.284Z     873MB used)
Progress update: steps=1000, test inputs generated=916, failing inputs=18      (2020-11-25T02:35:59.158Z     157MB used)
Progress update: steps=1180, test inputs generated=1095, failing inputs=19      (2020-11-25T02:36:20.285Z     510MB used)
Progress update: steps=2000, test inputs generated=1897, failing inputs=24      (2020-11-25T02:37:14.263Z     183MB used)
Progress update: steps=2075, test inputs generated=1970, failing inputs=24      (2020-11-25T02:37:20.286Z     867MB used)
Progress update: steps=2618, test inputs generated=2501, failing inputs=26      (2020-11-25T02:38:20.286Z     606MB used)
Progress update: steps=3000, test inputs generated=2873, failing inputs=29      (2020-11-25T02:38:43.706Z     703MB used)
Progress update: steps=3465, test inputs generated=3323, failing inputs=32      (2020-11-25T02:39:20.237Z     1228MB used)
Normal method executions: 3305655
Exceptional method executions: 527

Average method execution time (normal termination):      0.000723
Average method execution time (exceptional termination): 0.364
Approximate memory usage 1228MB
Explorer = ForwardGenerator(steps: 3465, null steps: 142, num_sequences_generated: 3323;
    allSequences: 3323, regresson seqs: 3267, error seqs: 32=32=32, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 24;
    runtimePrimitivesSeen:185)

Error-revealing test output:
Error-revealing test count: 32
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.DateTime-12/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-12/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 1755 regression sequences.

Regression test output:
Regression test count: 1755
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-12/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-12/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-12/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-12/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-12/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getDifferenceAsLong(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getDifference(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getAsString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.equals(java.lang.Object)
  Possibly flaky:  org.joda.time.base.BaseDateTime.getChronology()
  Possibly flaky:  org.joda.time.base.AbstractInstant.toMutableDateTime(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.base.AbstractInstant.toMutableDateTime()
  Possibly flaky:  org.joda.time.base.AbstractInstant.toMutableDateTime(org.joda.time.DateTimeZone)
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
