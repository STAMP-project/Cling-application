Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=99
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T01:13:01.643Z     112MB used)
Progress update: steps=678, test inputs generated=643, failing inputs=0      (2020-11-25T01:14:01.778Z     616MB used)
Progress update: steps=1000, test inputs generated=943, failing inputs=0      (2020-11-25T01:14:39.448Z     1179MB used)
Progress update: steps=1245, test inputs generated=1177, failing inputs=0      (2020-11-25T01:15:01.778Z     244MB used)
Progress update: steps=1706, test inputs generated=1600, failing inputs=0      (2020-11-25T01:16:01.779Z     998MB used)
Progress update: steps=2000, test inputs generated=1861, failing inputs=0      (2020-11-25T01:16:23.171Z     807MB used)
Progress update: steps=2528, test inputs generated=2351, failing inputs=0      (2020-11-25T01:17:01.779Z     841MB used)Long execution time 19 sec for
org.joda.time.YearMonthDay yearMonthDay1 = new org.joda.time.YearMonthDay((long)(short)100);
org.joda.time.DateTimeFieldType dateTimeFieldType2 = null;
int int3 = yearMonthDay1.indexOf(dateTimeFieldType2);
org.joda.time.YearMonthDay yearMonthDay5 = yearMonthDay1.minusYears((int)'a');
org.joda.time.DateTime dateTime6 = yearMonthDay1.toDateTimeAtCurrentTime();
org.joda.time.ReadablePeriod readablePeriod7 = null;
org.joda.time.YearMonthDay yearMonthDay9 = yearMonthDay1.withPeriodAdded(readablePeriod7, (int)'a');
org.joda.time.YearMonthDay yearMonthDay11 = yearMonthDay9.withDayOfMonth(1);
org.joda.time.ReadablePeriod readablePeriod12 = null;
org.joda.time.YearMonthDay yearMonthDay13 = yearMonthDay9.minus(readablePeriod12);
org.joda.time.YearMonthDay.Property property14 = yearMonthDay9.dayOfMonth();
org.joda.time.YearMonthDay yearMonthDay16 = new org.joda.time.YearMonthDay((long)(short)100);
org.joda.time.DateTimeFieldType dateTimeFieldType17 = null;
int int18 = yearMonthDay16.indexOf(dateTimeFieldType17);
org.joda.time.YearMonthDay yearMonthDay20 = yearMonthDay16.minusYears((int)'a');
org.joda.time.DateTime dateTime21 = yearMonthDay16.toDateTimeAtCurrentTime();
org.joda.time.ReadablePeriod readablePeriod22 = null;
org.joda.time.YearMonthDay yearMonthDay24 = yearMonthDay16.withPeriodAdded(readablePeriod22, (int)'a');
org.joda.time.YearMonthDay yearMonthDay26 = yearMonthDay24.withDayOfMonth(1);
org.joda.time.ReadablePeriod readablePeriod27 = null;
org.joda.time.YearMonthDay yearMonthDay28 = yearMonthDay24.minus(readablePeriod27);
org.joda.time.YearMonthDay.Property property29 = yearMonthDay28.monthOfYear();
org.joda.time.DateTimeZone dateTimeZone30 = null;
org.joda.time.DateTime dateTime31 = yearMonthDay28.toDateTimeAtCurrentTime(dateTimeZone30);
int int32 = property14.compareTo((org.joda.time.ReadableInstant)dateTime31);
int int33 = property14.getMinimumValue();
org.joda.time.YearMonthDay yearMonthDay35 = property14.addToCopy((-292275054));


Progress update: steps=3000, test inputs generated=2769, failing inputs=0      (2020-11-25T01:17:59.837Z     762MB used)
Progress update: steps=3010, test inputs generated=2779, failing inputs=0      (2020-11-25T01:18:01.780Z     999MB used)
Progress update: steps=3010, test inputs generated=2779, failing inputs=0      (2020-11-25T01:18:01.889Z     999MB used)
Normal method executions: 5159214
Exceptional method executions: 344

Average method execution time (normal termination):      0.00463
Average method execution time (exceptional termination): 0.259
Approximate memory usage 999MB
Explorer = ForwardGenerator(steps: 3010, null steps: 231, num_sequences_generated: 2779;
    allSequences: 2779, regresson seqs: 2778, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:82)

No error-revealing tests to output.

About to look for failing assertions in 1489 regression sequences.

Regression test output:
Regression test count: 1489
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.YearMonthDay-11/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.YearMonthDay-11/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.YearMonthDay-11/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.YearMonthDay-11/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Invalid tests generated: 0
