Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=167
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=4, test inputs generated=0, failing inputs=0      (2020-11-25T02:52:53.235Z     112MB used)
Progress update: steps=809, test inputs generated=770, failing inputs=0      (2020-11-25T02:53:53.379Z     48MB used)
Progress update: steps=1000, test inputs generated=953, failing inputs=0      (2020-11-25T02:54:11.140Z     764MB used)
Progress update: steps=1506, test inputs generated=1432, failing inputs=0      (2020-11-25T02:54:53.379Z     226MB used)
Progress update: steps=2000, test inputs generated=1910, failing inputs=0      (2020-11-25T02:55:49.109Z     78MB used)
Progress update: steps=2074, test inputs generated=1984, failing inputs=0      (2020-11-25T02:55:53.380Z     699MB used)
Progress update: steps=2869, test inputs generated=2742, failing inputs=0      (2020-11-25T02:56:53.380Z     554MB used)
Progress update: steps=3000, test inputs generated=2868, failing inputs=0      (2020-11-25T02:57:12.780Z     495MB used)
Progress update: steps=3465, test inputs generated=3319, failing inputs=0      (2020-11-25T02:57:53.194Z     989MB used)
Normal method executions: 3993872
Exceptional method executions: 611

Average method execution time (normal termination):      0.000843
Average method execution time (exceptional termination): 0.206
Approximate memory usage 989MB
Explorer = ForwardGenerator(steps: 3465, null steps: 146, num_sequences_generated: 3319;
    allSequences: 3319, regresson seqs: 3258, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 61;
    runtimePrimitivesSeen:1044)

No error-revealing tests to output.

About to look for failing assertions in 1784 regression sequences.

Regression test output:
Regression test count: 1784
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-1/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-1/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-1/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-1/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-1/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.LocalDateTime.isSupported(org.joda.time.DateTimeFieldType)
  Possibly flaky:  org.joda.time.LocalDateTime.get(org.joda.time.DateTimeFieldType)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
