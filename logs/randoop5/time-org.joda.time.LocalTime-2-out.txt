Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=122
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T01:51:31.971Z     112MB used)
Progress update: steps=747, test inputs generated=716, failing inputs=0      (2020-11-25T01:52:32.152Z     306MB used)
Progress update: steps=1000, test inputs generated=964, failing inputs=0      (2020-11-25T01:52:50.507Z     843MB used)
Progress update: steps=1355, test inputs generated=1299, failing inputs=0      (2020-11-25T01:53:32.153Z     504MB used)
Progress update: steps=2000, test inputs generated=1900, failing inputs=0      (2020-11-25T01:54:04.552Z     807MB used)
Progress update: steps=2373, test inputs generated=2255, failing inputs=0      (2020-11-25T01:54:32.153Z     64MB used)
Progress update: steps=3000, test inputs generated=2843, failing inputs=0      (2020-11-25T01:55:30.562Z     292MB used)
Progress update: steps=3008, test inputs generated=2851, failing inputs=0      (2020-11-25T01:55:32.154Z     375MB used)
Progress update: steps=3751, test inputs generated=3553, failing inputs=0      (2020-11-25T01:56:31.962Z     741MB used)
Normal method executions: 7401183
Exceptional method executions: 504

Average method execution time (normal termination):      0.000509
Average method execution time (exceptional termination): 0.198
Approximate memory usage 741MB
Explorer = ForwardGenerator(steps: 3751, null steps: 198, num_sequences_generated: 3553;
    allSequences: 3553, regresson seqs: 3551, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 2;
    runtimePrimitivesSeen:782)

No error-revealing tests to output.

About to look for failing assertions in 1900 regression sequences.

Regression test output:
Regression test count: 1900
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-2/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-2/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-2/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-2/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-2/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.LocalTime.now()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
