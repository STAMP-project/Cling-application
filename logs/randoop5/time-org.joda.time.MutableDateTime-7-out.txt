Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=183
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=2, test inputs generated=0, failing inputs=0      (2020-11-25T01:44:36.950Z     112MB used)
Progress update: steps=570, test inputs generated=527, failing inputs=15      (2020-11-25T01:45:37.133Z     534MB used)
Progress update: steps=1000, test inputs generated=952, failing inputs=28      (2020-11-25T01:46:23.756Z     461MB used)
Progress update: steps=1138, test inputs generated=1086, failing inputs=30      (2020-11-25T01:46:37.133Z     567MB used)
Progress update: steps=2000, test inputs generated=1933, failing inputs=56      (2020-11-25T01:47:36.806Z     1120MB used)
Progress update: steps=2007, test inputs generated=1940, failing inputs=56      (2020-11-25T01:47:37.134Z     78MB used)
Progress update: steps=2879, test inputs generated=2790, failing inputs=83      (2020-11-25T01:48:37.134Z     737MB used)
Progress update: steps=3000, test inputs generated=2908, failing inputs=87      (2020-11-25T01:48:49.863Z     343MB used)
Progress update: steps=4000, test inputs generated=3892, failing inputs=117      (2020-11-25T01:49:33.047Z     632MB used)
Progress update: steps=4092, test inputs generated=3980, failing inputs=121      (2020-11-25T01:49:36.915Z     1275MB used)
Normal method executions: 2112396
Exceptional method executions: 540

Average method execution time (normal termination):      0.00113
Average method execution time (exceptional termination): 0.170
Approximate memory usage 1275MB
Explorer = ForwardGenerator(steps: 4092, null steps: 112, num_sequences_generated: 3980;
    allSequences: 3980, regresson seqs: 3858, error seqs: 121=121=121, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:3022)

Error-revealing test output:
Error-revealing test count: 121
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-7/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-7/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 2080 regression sequences.

Regression test output:
Regression test count: 2080
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-7/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-7/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-7/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-7/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-7/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-7/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getDifference(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.base.AbstractInstant.toMutableDateTime(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.base.AbstractInstant.isAfter(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)
  Possibly flaky:  org.joda.time.MutableDateTime.setChronology(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
