Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=19
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T02:24:37.527Z     102MB used)
Progress update: steps=1000, test inputs generated=309, failing inputs=0      (2020-11-25T02:24:52.077Z     606MB used)
Progress update: steps=2000, test inputs generated=553, failing inputs=0      (2020-11-25T02:25:01.479Z     142MB used)
Progress update: steps=3000, test inputs generated=788, failing inputs=0      (2020-11-25T02:25:10.009Z     150MB used)
Progress update: steps=4000, test inputs generated=1025, failing inputs=0      (2020-11-25T02:25:17.217Z     149MB used)
Progress update: steps=5000, test inputs generated=1272, failing inputs=0      (2020-11-25T02:25:24.091Z     1121MB used)
Progress update: steps=6000, test inputs generated=1522, failing inputs=0      (2020-11-25T02:25:30.717Z     1024MB used)
Progress update: steps=7000, test inputs generated=1747, failing inputs=0      (2020-11-25T02:25:36.323Z     819MB used)
Progress update: steps=7213, test inputs generated=1792, failing inputs=0      (2020-11-25T02:25:37.574Z     1028MB used)
Progress update: steps=8000, test inputs generated=1982, failing inputs=0      (2020-11-25T02:25:42.293Z     509MB used)
Progress update: steps=9000, test inputs generated=2217, failing inputs=0      (2020-11-25T02:25:48.381Z     180MB used)
Progress update: steps=10000, test inputs generated=2442, failing inputs=0      (2020-11-25T02:25:54.125Z     1111MB used)
Progress update: steps=11000, test inputs generated=2660, failing inputs=0      (2020-11-25T02:26:09.114Z     700MB used)
Progress update: steps=12000, test inputs generated=2888, failing inputs=0      (2020-11-25T02:26:24.196Z     338MB used)
Progress update: steps=13000, test inputs generated=3112, failing inputs=0      (2020-11-25T02:26:37.184Z     1271MB used)
Progress update: steps=13055, test inputs generated=3125, failing inputs=0      (2020-11-25T02:26:37.575Z     1328MB used)
Progress update: steps=14000, test inputs generated=3323, failing inputs=0      (2020-11-25T02:26:44.637Z     857MB used)
Progress update: steps=15000, test inputs generated=3558, failing inputs=0      (2020-11-25T02:26:52.853Z     546MB used)
Progress update: steps=16000, test inputs generated=3776, failing inputs=0      (2020-11-25T02:27:00.893Z     186MB used)
Progress update: steps=17000, test inputs generated=4008, failing inputs=0      (2020-11-25T02:27:10.126Z     1168MB used)
Progress update: steps=18000, test inputs generated=4228, failing inputs=0      (2020-11-25T02:27:16.916Z     803MB used)
Progress update: steps=19000, test inputs generated=4490, failing inputs=0      (2020-11-25T02:27:30.928Z     625MB used)
Progress update: steps=19330, test inputs generated=4572, failing inputs=0      (2020-11-25T02:27:37.575Z     993MB used)
Progress update: steps=20000, test inputs generated=4709, failing inputs=0      (2020-11-25T02:27:48.157Z     290MB used)
Progress update: steps=21000, test inputs generated=4934, failing inputs=0      (2020-11-25T02:28:04.761Z     1260MB used)
Progress update: steps=22000, test inputs generated=5174, failing inputs=0      (2020-11-25T02:28:27.497Z     1008MB used)
Progress update: steps=22395, test inputs generated=5257, failing inputs=0      (2020-11-25T02:28:37.575Z     69MB used)
Progress update: steps=23000, test inputs generated=5385, failing inputs=0      (2020-11-25T02:28:51.130Z     629MB used)
Progress update: steps=24000, test inputs generated=5611, failing inputs=0      (2020-11-25T02:29:05.222Z     319MB used)
Progress update: steps=25000, test inputs generated=5870, failing inputs=0      (2020-11-25T02:29:20.272Z     168MB used)
Progress update: steps=26000, test inputs generated=6115, failing inputs=0      (2020-11-25T02:29:37.111Z     1207MB used)
Progress update: steps=26053, test inputs generated=6123, failing inputs=0      (2020-11-25T02:29:37.520Z     1258MB used)
Normal method executions: 205710
Exceptional method executions: 3

Average method execution time (normal termination):      0.00662
Average method execution time (exceptional termination): 1.02
Approximate memory usage 1258MB
Explorer = ForwardGenerator(steps: 26053, null steps: 19930, num_sequences_generated: 6123;
    allSequences: 6123, regresson seqs: 6122, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:40)

No error-revealing tests to output.
                                                                                                                                                                                                       
About to look for failing assertions in 3007 regression sequences.

Regression test output:
Regression test count: 3007
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-2/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-2/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-2/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-2/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-2/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-2/RegressionTest5.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-2/RegressionTest6.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-2/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.DateTimeUtils.getInstantMillis(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.DateTimeUtils.currentTimeMillis()
  Possibly flaky:  java.lang.String.valueOf(long)
  Possibly flaky:  java.lang.Long.valueOf(long)
  Possibly flaky:  java.lang.Long.toString(long)
  Possibly flaky:  java.lang.Long.toOctalString(long)
  Possibly flaky:  java.lang.Long.toHexString(long)
  Possibly flaky:  java.lang.Long.toBinaryString(long)
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
