Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=38
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T00:00:38.167Z     102MB used)
Progress update: steps=1000, test inputs generated=796, failing inputs=0      (2020-11-25T00:01:36.650Z     142MB used)
Progress update: steps=1026, test inputs generated=817, failing inputs=0      (2020-11-25T00:01:38.198Z     441MB used)
Progress update: steps=1812, test inputs generated=1342, failing inputs=0      (2020-11-25T00:02:38.199Z     999MB used)
Progress update: steps=2000, test inputs generated=1475, failing inputs=0      (2020-11-25T00:02:54.005Z     99MB used)
Progress update: steps=3000, test inputs generated=2133, failing inputs=0      (2020-11-25T00:03:33.982Z     103MB used)
Progress update: steps=3117, test inputs generated=2198, failing inputs=0      (2020-11-25T00:03:38.199Z     819MB used)
Progress update: steps=4000, test inputs generated=2764, failing inputs=0      (2020-11-25T00:04:15.481Z     1309MB used)
Progress update: steps=4410, test inputs generated=3017, failing inputs=0      (2020-11-25T00:04:38.200Z     794MB used)Long generation time 1245 msec (= 1245 + 0) for
java.lang.Object[] objArray2 = new java.lang.Object[] { 100L, 1L };
java.lang.Class<?>[] wildcardClassArray3 = org.apache.commons.lang3.ClassUtils.toClass(objArray2);
java.lang.Class<?> wildcardClass4 = null;
java.lang.Class[] classArray6 = new java.lang.Class[ 1 ];
@SuppressWarnings("unchecked")
java.lang.Class<?>[] wildcardClassArray7 = (java.lang.Class<?>[])classArray6;
wildcardClassArray7[0] = wildcardClass4;
java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray7);
java.lang.Class[] classArray12 = new java.lang.Class[ 0 ];
@SuppressWarnings("unchecked")
java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[])classArray12;
boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray10, (java.lang.Class<?>[])classArray12, false);
java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[])wildcardClassArray10);
java.lang.Class<?> wildcardClass17 = null;
java.lang.Class[] classArray19 = new java.lang.Class[ 1 ];
@SuppressWarnings("unchecked")
java.lang.Class<?>[] wildcardClassArray20 = (java.lang.Class<?>[])classArray19;
wildcardClassArray20[0] = wildcardClass17;
java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray20);
java.lang.Class<?> wildcardClass24 = null;
java.lang.Class[] classArray26 = new java.lang.Class[ 1 ];
@SuppressWarnings("unchecked")
java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[])classArray26;
wildcardClassArray27[0] = wildcardClass24;
java.lang.Class<?>[] wildcardClassArray30 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray27);
boolean boolean31 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray23, wildcardClassArray27);
boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray10, wildcardClassArray23, false);
java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[])wildcardClassArray10);
java.lang.String str36 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object)wildcardClassArray34, "Short");
java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[])wildcardClassArray34);
boolean boolean39 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, wildcardClassArray37, true);
java.lang.Class<?> wildcardClass40 = wildcardClassArray3.getClass();
java.lang.Object[] objArray43 = new java.lang.Object[] { 100L, 1L };
java.lang.Class<?>[] wildcardClassArray44 = org.apache.commons.lang3.ClassUtils.toClass(objArray43);
java.lang.Class<?> wildcardClass45 = null;
java.lang.Class[] classArray47 = new java.lang.Class[ 1 ];
@SuppressWarnings("unchecked")
java.lang.Class<?>[] wildcardClassArray48 = (java.lang.Class<?>[])classArray47;
wildcardClassArray48[0] = wildcardClass45;
java.lang.Class<?>[] wildcardClassArray51 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray48);
java.lang.Class[] classArray53 = new java.lang.Class[ 0 ];
@SuppressWarnings("unchecked")
java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[])classArray53;
boolean boolean56 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray51, (java.lang.Class<?>[])classArray53, false);
java.lang.Class<?>[] wildcardClassArray57 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[])wildcardClassArray51);
java.lang.Class<?> wildcardClass58 = null;
java.lang.Class[] classArray60 = new java.lang.Class[ 1 ];
@SuppressWarnings("unchecked")
java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[])classArray60;
wildcardClassArray61[0] = wildcardClass58;
java.lang.Class<?>[] wildcardClassArray64 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray61);
java.lang.Class<?> wildcardClass65 = null;
java.lang.Class[] classArray67 = new java.lang.Class[ 1 ];
@SuppressWarnings("unchecked")
java.lang.Class<?>[] wildcardClassArray68 = (java.lang.Class<?>[])classArray67;
wildcardClassArray68[0] = wildcardClass65;
java.lang.Class<?>[] wildcardClassArray71 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray68);
boolean boolean72 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray64, wildcardClassArray68);
boolean boolean74 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray51, wildcardClassArray64, false);
java.lang.Class<?>[] wildcardClassArray75 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[])wildcardClassArray51);
java.lang.String str77 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object)wildcardClassArray75, "Short");
java.lang.Class<?>[] wildcardClassArray78 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[])wildcardClassArray75);
boolean boolean80 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray44, wildcardClassArray78, true);
java.lang.Class<?> wildcardClass81 = wildcardClassArray44.getClass();
boolean boolean83 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<Capture78>)wildcardClass40, (java.lang.Class<Capture79>)wildcardClass81, false);
java.util.List<java.lang.Class<?>> wildcardClassList84 = org.apache.commons.lang3.ClassUtils.getAllInterfaces((java.lang.Class<Capture139>)wildcardClass81);
java.lang.String str85 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Class<Capture379>)wildcardClass81);
java.lang.String str86 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Class<Capture1716>)wildcardClass81);
java.util.List<java.lang.Class<?>> wildcardClassList87 = org.apache.commons.lang3.ClassUtils.getAllInterfaces((java.lang.Class<Capture124239>)wildcardClass81);
java.util.List<java.lang.String> strList88 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture126295>>)wildcardClassList87);


Progress update: steps=5000, test inputs generated=3389, failing inputs=0      (2020-11-25T00:05:13.599Z     659MB used)
Progress update: steps=5626, test inputs generated=3772, failing inputs=0      (2020-11-25T00:05:38.172Z     988MB used)
Normal method executions: 10720280
Exceptional method executions: 234

Average method execution time (normal termination):      0.000277
Average method execution time (exceptional termination): 0.339
Approximate memory usage 988MB
Explorer = ForwardGenerator(steps: 5626, null steps: 1854, num_sequences_generated: 3772;
    allSequences: 3772, regresson seqs: 1273, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 2499;
    runtimePrimitivesSeen:60)

No error-revealing tests to output.

About to look for failing assertions in 807 regression sequences.
                                                                                                                                                                                                       
Regression test output:
Regression test count: 807
Writing regression JUnit tests...
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.ClassUtils-4/RegressionTest0.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.ClassUtils-4/RegressionTest1.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.ClassUtils-4/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Invalid tests generated: 0

Uncompilable sequences generated (count: 2498).
Please report at https://github.com/randoop/randoop/issues ,
providing the information requested at https://randoop.github.io/randoop/manual/index.html#bug-reporting .
