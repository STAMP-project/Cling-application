Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=38
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T00:01:53.147Z     102MB used)
Progress update: steps=400, test inputs generated=328, failing inputs=0      (2020-11-25T00:02:53.230Z     362MB used)
Progress update: steps=1000, test inputs generated=796, failing inputs=0      (2020-11-25T00:03:21.098Z     653MB used)
Progress update: steps=1719, test inputs generated=1289, failing inputs=0      (2020-11-25T00:03:53.231Z     1004MB used)
Progress update: steps=2000, test inputs generated=1475, failing inputs=0      (2020-11-25T00:04:04.646Z     995MB used)
Progress update: steps=2811, test inputs generated=2003, failing inputs=0      (2020-11-25T00:04:53.231Z     1030MB used)
Progress update: steps=3000, test inputs generated=2133, failing inputs=0      (2020-11-25T00:05:05.102Z     1334MB used)
Progress update: steps=4000, test inputs generated=2764, failing inputs=0      (2020-11-25T00:05:34.412Z     1155MB used)
Progress update: steps=4569, test inputs generated=3124, failing inputs=0      (2020-11-25T00:05:53.232Z     741MB used)
Progress update: steps=5000, test inputs generated=3389, failing inputs=0      (2020-11-25T00:06:10.764Z     448MB used)Long generation time 1059 msec (= 1059 + 0) for
java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList2, strArray1);
java.util.List<java.lang.Class<?>> wildcardClassList4 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>)strList2);
java.util.List<java.lang.String> strList5 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture33>>)wildcardClassList4);
java.util.List<java.lang.Class<?>> wildcardClassList6 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses(strList5);
java.util.List<java.lang.String> strList7 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture98>>)wildcardClassList6);
java.util.List<java.lang.String> strList8 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture8962>>)wildcardClassList6);
java.util.List<java.lang.String> strList9 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture247061>>)wildcardClassList6);

Long generation time 1143 msec (= 1142 + 0) for
java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList2, strArray1);
java.util.List<java.lang.Class<?>> wildcardClassList4 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>)strList2);
java.util.List<java.lang.String> strList5 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture33>>)wildcardClassList4);
java.util.List<java.lang.Class<?>> wildcardClassList6 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses(strList5);
java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses(strList5);
java.util.List<java.lang.String> strList8 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture767>>)strList5);
java.util.List<java.lang.Class<?>> wildcardClassList9 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses(strList5);
java.util.List<java.lang.String> strList10 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture252020>>)wildcardClassList9);


Progress update: steps=5676, test inputs generated=3802, failing inputs=0      (2020-11-25T00:06:53.232Z     926MB used)
Progress update: steps=5676, test inputs generated=3802, failing inputs=0      (2020-11-25T00:06:53.248Z     926MB used)
Normal method executions: 10845043
Exceptional method executions: 234

Average method execution time (normal termination):      0.000289
Average method execution time (exceptional termination): 0.158
Approximate memory usage 926MB
Explorer = ForwardGenerator(steps: 5676, null steps: 1874, num_sequences_generated: 3802;
    allSequences: 3802, regresson seqs: 1280, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 2522;
    runtimePrimitivesSeen:60)

No error-revealing tests to output.

About to look for failing assertions in 811 regression sequences.

Regression test output:
Regression test count: 811
Writing regression JUnit tests...
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.ClassUtils-16/RegressionTest0.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.ClassUtils-16/RegressionTest1.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.ClassUtils-16/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Invalid tests generated: 0

Uncompilable sequences generated (count: 2521).
Please report at https://github.com/randoop/randoop/issues ,
providing the information requested at https://randoop.github.io/randoop/manual/index.html#bug-reporting .
