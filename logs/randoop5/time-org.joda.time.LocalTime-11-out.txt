Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=122
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=2, test inputs generated=0, failing inputs=0      (2020-11-25T01:53:11.072Z     112MB used)
Progress update: steps=818, test inputs generated=779, failing inputs=0      (2020-11-25T01:54:11.231Z     142MB used)
Progress update: steps=1000, test inputs generated=947, failing inputs=0      (2020-11-25T01:54:20.696Z     678MB used)
Progress update: steps=1577, test inputs generated=1495, failing inputs=0      (2020-11-25T01:55:11.241Z     767MB used)
Progress update: steps=2000, test inputs generated=1893, failing inputs=0      (2020-11-25T01:56:00.004Z     210MB used)
Progress update: steps=2210, test inputs generated=2095, failing inputs=0      (2020-11-25T01:56:11.242Z     65MB used)
Progress update: steps=3000, test inputs generated=2842, failing inputs=0      (2020-11-25T01:56:56.685Z     941MB used)
Progress update: steps=3312, test inputs generated=3138, failing inputs=0      (2020-11-25T01:57:11.243Z     871MB used)
Progress update: steps=4000, test inputs generated=3782, failing inputs=0      (2020-11-25T01:57:58.735Z     251MB used)
Progress update: steps=4052, test inputs generated=3835, failing inputs=0      (2020-11-25T01:58:11.243Z     903MB used)
Progress update: steps=4052, test inputs generated=3835, failing inputs=0      (2020-11-25T01:58:11.277Z     903MB used)
Normal method executions: 7621145
Exceptional method executions: 548

Average method execution time (normal termination):      0.000491
Average method execution time (exceptional termination): 0.245
Approximate memory usage 903MB
Explorer = ForwardGenerator(steps: 4052, null steps: 217, num_sequences_generated: 3835;
    allSequences: 3835, regresson seqs: 3834, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:951)

No error-revealing tests to output.

About to look for failing assertions in 2065 regression sequences.

Regression test output:
Regression test count: 2065
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-11/RegressionTest0.java
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-11/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-11/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-11/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-11/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-11/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getDifference(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
