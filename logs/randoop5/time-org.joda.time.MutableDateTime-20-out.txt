Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=183
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T01:45:04.946Z     112MB used)
Progress update: steps=517, test inputs generated=471, failing inputs=21      (2020-11-25T01:46:05.039Z     415MB used)
Progress update: steps=1000, test inputs generated=950, failing inputs=42      (2020-11-25T01:47:03.463Z     517MB used)
Progress update: steps=1013, test inputs generated=964, failing inputs=43      (2020-11-25T01:47:05.039Z     646MB used)
Progress update: steps=2000, test inputs generated=1939, failing inputs=99      (2020-11-25T01:47:47.347Z     156MB used)
Progress update: steps=2328, test inputs generated=2266, failing inputs=110      (2020-11-25T01:48:05.040Z     1154MB used)
Progress update: steps=3000, test inputs generated=2925, failing inputs=133      (2020-11-25T01:49:00.470Z     882MB used)
Progress update: steps=3105, test inputs generated=3026, failing inputs=135      (2020-11-25T01:49:05.040Z     477MB used)
Progress update: steps=4000, test inputs generated=3904, failing inputs=175      (2020-11-25T01:49:45.172Z     885MB used)
Progress update: steps=4237, test inputs generated=4137, failing inputs=190      (2020-11-25T01:50:05.029Z     424MB used)
Normal method executions: 2318518
Exceptional method executions: 556

Average method execution time (normal termination):      0.000847
Average method execution time (exceptional termination): 0.161
Approximate memory usage 424MB
Explorer = ForwardGenerator(steps: 4237, null steps: 100, num_sequences_generated: 4137;
    allSequences: 4137, regresson seqs: 3946, error seqs: 190=190=190, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:2564)

Error-revealing test output:
Error-revealing test count: 190
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-20/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-20/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 2122 regression sequences.

Regression test output:
Regression test count: 2122
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-20/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-20/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-20/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-20/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-20/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-20/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.base.AbstractInstant.toMutableDateTime(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.MutableDateTime.setMillis(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.MutableDateTime.setChronology(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
