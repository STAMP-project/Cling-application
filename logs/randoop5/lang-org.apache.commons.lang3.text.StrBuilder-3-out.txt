Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=135
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=4, test inputs generated=0, failing inputs=0      (2020-11-25T00:43:05.806Z     112MB used)
Progress update: steps=672, test inputs generated=641, failing inputs=0      (2020-11-25T00:44:05.896Z     475MB used)
Progress update: steps=1000, test inputs generated=952, failing inputs=0      (2020-11-25T00:44:31.150Z     638MB used)
Progress update: steps=1414, test inputs generated=1342, failing inputs=0      (2020-11-25T00:45:05.896Z     383MB used)
Progress update: steps=2000, test inputs generated=1885, failing inputs=0      (2020-11-25T00:46:02.272Z     741MB used)
Progress update: steps=2066, test inputs generated=1944, failing inputs=0      (2020-11-25T00:46:05.897Z     144MB used)
Progress update: steps=2910, test inputs generated=2716, failing inputs=0      (2020-11-25T00:47:05.897Z     616MB used)
Progress update: steps=3000, test inputs generated=2796, failing inputs=0      (2020-11-25T00:47:12.494Z     66MB used)
Progress update: steps=3546, test inputs generated=3284, failing inputs=0      (2020-11-25T00:48:05.812Z     352MB used)
Normal method executions: 2301619
Exceptional method executions: 531

Average method execution time (normal termination):      0.000665
Average method execution time (exceptional termination): 0.135
Approximate memory usage 352MB
Explorer = ForwardGenerator(steps: 3546, null steps: 262, num_sequences_generated: 3284;
    allSequences: 3284, regresson seqs: 3283, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:154)

No error-revealing tests to output.

About to look for failing assertions in 1776 regression sequences.

Regression test output:
Regression test count: 1776
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.text.StrBuilder-3/RegressionTest0.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.text.StrBuilder-3/RegressionTest1.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.text.StrBuilder-3/RegressionTest2.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.text.StrBuilder-3/RegressionTest3.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.text.StrBuilder-3/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.toCharArray()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.replaceFirst(org.apache.commons.lang3.text.StrMatcher,java.lang.String)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.asWriter()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.asTokenizer()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.asReader()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.appendln(boolean)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.appendNewLine()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
