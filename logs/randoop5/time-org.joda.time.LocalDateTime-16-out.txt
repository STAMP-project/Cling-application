Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=167
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=4, test inputs generated=0, failing inputs=0      (2020-11-25T02:55:41.304Z     112MB used)
Progress update: steps=866, test inputs generated=816, failing inputs=0      (2020-11-25T02:56:41.347Z     337MB used)
Progress update: steps=1000, test inputs generated=943, failing inputs=0      (2020-11-25T02:56:51.362Z     340MB used)
Progress update: steps=1448, test inputs generated=1372, failing inputs=0      (2020-11-25T02:57:41.348Z     267MB used)
Progress update: steps=2000, test inputs generated=1907, failing inputs=0      (2020-11-25T02:58:12.277Z     806MB used)
Progress update: steps=2396, test inputs generated=2283, failing inputs=0      (2020-11-25T02:58:41.348Z     403MB used)
Progress update: steps=3000, test inputs generated=2863, failing inputs=0      (2020-11-25T02:59:15.702Z     419MB used)
Progress update: steps=3218, test inputs generated=3074, failing inputs=0      (2020-11-25T02:59:41.349Z     1277MB used)
Progress update: steps=4000, test inputs generated=3830, failing inputs=0      (2020-11-25T03:00:22.035Z     683MB used)
Progress update: steps=4510, test inputs generated=4324, failing inputs=0      (2020-11-25T03:00:41.299Z     533MB used)
Normal method executions: 4885104
Exceptional method executions: 745

Average method execution time (normal termination):      0.000725
Average method execution time (exceptional termination): 0.124
Approximate memory usage 533MB
Explorer = ForwardGenerator(steps: 4510, null steps: 186, num_sequences_generated: 4324;
    allSequences: 4324, regresson seqs: 4258, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 66;
    runtimePrimitivesSeen:857)

No error-revealing tests to output.

About to look for failing assertions in 2309 regression sequences.

Regression test output:
Regression test count: 2309
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-16/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-16/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-16/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-16/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-16/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-16/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValue()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
