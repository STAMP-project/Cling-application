Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=55
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T01:25:31.094Z     112MB used)
Progress update: steps=470, test inputs generated=429, failing inputs=0      (2020-11-25T01:26:31.149Z     59MB used)
Progress update: steps=1000, test inputs generated=870, failing inputs=0      (2020-11-25T01:27:25.633Z     393MB used)
Progress update: steps=1046, test inputs generated=908, failing inputs=0      (2020-11-25T01:27:31.150Z     841MB used)
Progress update: steps=1832, test inputs generated=1527, failing inputs=0      (2020-11-25T01:28:31.150Z     735MB used)
Progress update: steps=2000, test inputs generated=1652, failing inputs=0      (2020-11-25T01:28:42.613Z     856MB used)
Progress update: steps=2485, test inputs generated=2013, failing inputs=0      (2020-11-25T01:29:31.151Z     1219MB used)
Progress update: steps=3000, test inputs generated=2401, failing inputs=0      (2020-11-25T01:30:01.566Z     371MB used)
Progress update: steps=3663, test inputs generated=2895, failing inputs=0      (2020-11-25T01:30:31.097Z     964MB used)
Normal method executions: 7845321
Exceptional method executions: 247

Average method execution time (normal termination):      0.000503
Average method execution time (exceptional termination): 0.161
Approximate memory usage 964MB
Explorer = ForwardGenerator(steps: 3663, null steps: 768, num_sequences_generated: 2895;
    allSequences: 2895, regresson seqs: 2894, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:348)

No error-revealing tests to output.

About to look for failing assertions in 1506 regression sequences.

Regression test output:
Regression test count: 1506
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-20/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-20/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-20/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-20/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-20/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.base.BaseInterval.getStartMillis()
  Possibly flaky:  org.joda.time.base.BaseInterval.getEndMillis()
  Possibly flaky:  org.joda.time.base.BaseInterval.getChronology()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toString()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toPeriod()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toPeriod(org.joda.time.PeriodType)
  Possibly flaky:  org.joda.time.base.AbstractInterval.toMutableInterval()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toInterval()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toDurationMillis()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toDuration()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
