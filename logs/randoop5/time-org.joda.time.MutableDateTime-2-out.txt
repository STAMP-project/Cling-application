Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=183
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T01:43:45.451Z     112MB used)
Progress update: steps=688, test inputs generated=641, failing inputs=29      (2020-11-25T01:44:45.509Z     416MB used)
Progress update: steps=1000, test inputs generated=947, failing inputs=44      (2020-11-25T01:45:06.854Z     123MB used)
Progress update: steps=1372, test inputs generated=1313, failing inputs=63      (2020-11-25T01:45:45.510Z     136MB used)
Progress update: steps=1887, test inputs generated=1824, failing inputs=89      (2020-11-25T01:46:45.511Z     862MB used)
Progress update: steps=2000, test inputs generated=1935, failing inputs=97      (2020-11-25T01:47:05.125Z     364MB used)
Progress update: steps=2901, test inputs generated=2828, failing inputs=133      (2020-11-25T01:47:45.513Z     140MB used)
Progress update: steps=3000, test inputs generated=2926, failing inputs=137      (2020-11-25T01:47:49.435Z     862MB used)
Progress update: steps=3621, test inputs generated=3541, failing inputs=159      (2020-11-25T01:48:45.437Z     291MB used)
Normal method executions: 1420465
Exceptional method executions: 490

Average method execution time (normal termination):      0.00218
Average method execution time (exceptional termination): 0.198
Approximate memory usage 291MB
Explorer = ForwardGenerator(steps: 3621, null steps: 80, num_sequences_generated: 3541;
    allSequences: 3541, regresson seqs: 3381, error seqs: 159=159=159, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:2164)

Error-revealing test output:
Error-revealing test count: 159
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-2/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-2/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 1831 regression sequences.

Regression test output:
Regression test count: 1831
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-2/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-2/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-2/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-2/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-2/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.base.AbstractInstant.isEqual(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.MutableDateTime.now(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
