Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=183
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T01:44:44.518Z     112MB used)
Progress update: steps=558, test inputs generated=514, failing inputs=21      (2020-11-25T01:45:44.542Z     406MB used)
Progress update: steps=1000, test inputs generated=952, failing inputs=45      (2020-11-25T01:46:28.922Z     202MB used)
Progress update: steps=1109, test inputs generated=1058, failing inputs=49      (2020-11-25T01:46:44.543Z     117MB used)
Progress update: steps=2000, test inputs generated=1941, failing inputs=91      (2020-11-25T01:47:39.528Z     947MB used)
Progress update: steps=2123, test inputs generated=2064, failing inputs=96      (2020-11-25T01:47:44.543Z     770MB used)
Progress update: steps=2880, test inputs generated=2813, failing inputs=130      (2020-11-25T01:48:44.544Z     1064MB used)
Progress update: steps=3000, test inputs generated=2931, failing inputs=131      (2020-11-25T01:48:52.258Z     869MB used)
Progress update: steps=4000, test inputs generated=3913, failing inputs=185      (2020-11-25T01:49:34.006Z     979MB used)
Progress update: steps=4198, test inputs generated=4108, failing inputs=195      (2020-11-25T01:49:44.504Z     1147MB used)
Normal method executions: 1705868
Exceptional method executions: 525

Average method execution time (normal termination):      0.00141
Average method execution time (exceptional termination): 0.279
Approximate memory usage 1147MB
Explorer = ForwardGenerator(steps: 4198, null steps: 90, num_sequences_generated: 4108;
    allSequences: 4108, regresson seqs: 3912, error seqs: 195=195=195, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:2542)

Error-revealing test output:
Error-revealing test count: 195
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-9/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-9/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 2074 regression sequences.

Regression test output:
Regression test count: 2074
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-9/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-9/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-9/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-9/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-9/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-9/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.DateTimeZone)
  Possibly flaky:  org.joda.time.MutableDateTime.setZone(org.joda.time.DateTimeZone)
  Possibly flaky:  org.joda.time.MutableDateTime.now(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
