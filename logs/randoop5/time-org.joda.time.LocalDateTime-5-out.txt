Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=167
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=4, test inputs generated=0, failing inputs=0      (2020-11-25T02:53:22.775Z     112MB used)
Progress update: steps=681, test inputs generated=639, failing inputs=0      (2020-11-25T02:54:22.820Z     327MB used)
Progress update: steps=1000, test inputs generated=943, failing inputs=0      (2020-11-25T02:54:49.026Z     435MB used)
Progress update: steps=1237, test inputs generated=1177, failing inputs=0      (2020-11-25T02:55:22.820Z     725MB used)
Progress update: steps=2000, test inputs generated=1911, failing inputs=0      (2020-11-25T02:56:13.698Z     233MB used)
Progress update: steps=2124, test inputs generated=2030, failing inputs=0      (2020-11-25T02:56:22.821Z     168MB used)
Progress update: steps=2638, test inputs generated=2524, failing inputs=0      (2020-11-25T02:57:22.821Z     427MB used)
Progress update: steps=3000, test inputs generated=2868, failing inputs=0      (2020-11-25T02:57:50.626Z     491MB used)
Progress update: steps=3491, test inputs generated=3346, failing inputs=0      (2020-11-25T02:58:22.748Z     464MB used)
Normal method executions: 4663017
Exceptional method executions: 628

Average method execution time (normal termination):      0.000561
Average method execution time (exceptional termination): 0.125
Approximate memory usage 464MB
Explorer = ForwardGenerator(steps: 3491, null steps: 145, num_sequences_generated: 3346;
    allSequences: 3346, regresson seqs: 3298, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 48;
    runtimePrimitivesSeen:1165)

No error-revealing tests to output.

About to look for failing assertions in 1762 regression sequences.

Regression test output:
Regression test count: 1762
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-5/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-5/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-5/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-5/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-5/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValue()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
