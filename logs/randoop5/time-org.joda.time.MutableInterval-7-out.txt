Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=55
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T01:21:27.274Z     112MB used)
Progress update: steps=602, test inputs generated=542, failing inputs=0      (2020-11-25T01:22:27.312Z     961MB used)
Progress update: steps=1000, test inputs generated=870, failing inputs=0      (2020-11-25T01:23:03.088Z     839MB used)
Progress update: steps=1539, test inputs generated=1300, failing inputs=0      (2020-11-25T01:23:27.313Z     533MB used)
Progress update: steps=2000, test inputs generated=1651, failing inputs=0      (2020-11-25T01:23:48.471Z     726MB used)
Progress update: steps=2550, test inputs generated=2078, failing inputs=0      (2020-11-25T01:24:27.317Z     428MB used)
Progress update: steps=3000, test inputs generated=2425, failing inputs=0      (2020-11-25T01:25:09.753Z     729MB used)
Progress update: steps=3346, test inputs generated=2691, failing inputs=0      (2020-11-25T01:25:27.317Z     1245MB used)
Progress update: steps=4000, test inputs generated=3175, failing inputs=0      (2020-11-25T01:26:20.224Z     685MB used)
Progress update: steps=4093, test inputs generated=3238, failing inputs=0      (2020-11-25T01:26:27.318Z     105MB used)
Progress update: steps=4093, test inputs generated=3238, failing inputs=0      (2020-11-25T01:26:27.330Z     105MB used)
Normal method executions: 9006105
Exceptional method executions: 296

Average method execution time (normal termination):      0.000386
Average method execution time (exceptional termination): 0.166
Approximate memory usage 105MB
Explorer = ForwardGenerator(steps: 4093, null steps: 855, num_sequences_generated: 3238;
    allSequences: 3238, regresson seqs: 3237, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:393)

No error-revealing tests to output.

About to look for failing assertions in 1674 regression sequences.

Regression test output:
Regression test count: 1674
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-7/RegressionTest0.java
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-7/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-7/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-7/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-7/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.base.BaseInterval.getStartMillis()
  Possibly flaky:  org.joda.time.base.BaseInterval.getEndMillis()
  Possibly flaky:  org.joda.time.base.BaseInterval.getChronology()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toString()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toPeriod()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toPeriod(org.joda.time.PeriodType)
  Possibly flaky:  org.joda.time.base.AbstractInterval.toMutableInterval()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toInterval()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toDurationMillis()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toDuration()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
