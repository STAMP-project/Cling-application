Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=183
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T01:44:25.952Z     112MB used)
Progress update: steps=605, test inputs generated=563, failing inputs=13      (2020-11-25T01:45:26.132Z     627MB used)
Progress update: steps=1000, test inputs generated=955, failing inputs=24      (2020-11-25T01:46:08.727Z     828MB used)
Progress update: steps=1187, test inputs generated=1141, failing inputs=26      (2020-11-25T01:46:26.133Z     299MB used)
Progress update: steps=1918, test inputs generated=1863, failing inputs=52      (2020-11-25T01:47:26.133Z     145MB used)
Progress update: steps=2000, test inputs generated=1943, failing inputs=55      (2020-11-25T01:47:29.194Z     690MB used)
Progress update: steps=3000, test inputs generated=2933, failing inputs=89      (2020-11-25T01:48:15.363Z     421MB used)
Progress update: steps=3107, test inputs generated=3040, failing inputs=94      (2020-11-25T01:48:26.134Z     1125MB used)
Progress update: steps=4000, test inputs generated=3920, failing inputs=129      (2020-11-25T01:49:18.223Z     655MB used)
Progress update: steps=4184, test inputs generated=4103, failing inputs=133      (2020-11-25T01:49:25.950Z     913MB used)
Normal method executions: 2330331
Exceptional method executions: 575

Average method execution time (normal termination):      0.00104
Average method execution time (exceptional termination): 0.187
Approximate memory usage 913MB
Explorer = ForwardGenerator(steps: 4184, null steps: 81, num_sequences_generated: 4103;
    allSequences: 4103, regresson seqs: 3969, error seqs: 133=133=133, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:2190)

Error-revealing test output:
Error-revealing test count: 133
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-4/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-4/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 2149 regression sequences.

Regression test output:
Regression test count: 2149
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-4/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-4/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-4/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-4/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-4/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-4/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)
  Possibly flaky:  org.joda.time.MutableDateTime.setChronology(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
