Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=105
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T01:32:33.261Z     112MB used)
Progress update: steps=627, test inputs generated=581, failing inputs=0      (2020-11-25T01:33:33.304Z     464MB used)
Progress update: steps=1000, test inputs generated=932, failing inputs=0      (2020-11-25T01:34:22.514Z     489MB used)
Progress update: steps=1062, test inputs generated=992, failing inputs=0      (2020-11-25T01:34:33.305Z     966MB used)
Progress update: steps=2000, test inputs generated=1872, failing inputs=0      (2020-11-25T01:35:26.926Z     575MB used)
Progress update: steps=2088, test inputs generated=1958, failing inputs=0      (2020-11-25T01:35:33.305Z     238MB used)
Progress update: steps=2848, test inputs generated=2663, failing inputs=0      (2020-11-25T01:36:33.306Z     702MB used)
Progress update: steps=3000, test inputs generated=2804, failing inputs=0      (2020-11-25T01:36:39.126Z     770MB used)
Progress update: steps=3975, test inputs generated=3715, failing inputs=0      (2020-11-25T01:37:33.254Z     1204MB used)
Normal method executions: 4321206
Exceptional method executions: 623

Average method execution time (normal termination):      0.000485
Average method execution time (exceptional termination): 0.122
Approximate memory usage 1204MB
Explorer = ForwardGenerator(steps: 3975, null steps: 260, num_sequences_generated: 3715;
    allSequences: 3715, regresson seqs: 3714, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:172)

No error-revealing tests to output.

About to look for failing assertions in 2041 regression sequences.

Regression test output:
Regression test count: 2041
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.TimeOfDay-13/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.TimeOfDay-13/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.TimeOfDay-13/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.TimeOfDay-13/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.TimeOfDay-13/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.TimeOfDay-13/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getMaximumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getMaximumValue()
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getFieldType()
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getDurationField()
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getAsText(java.util.Locale)
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getAsText()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
