Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=19
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=1, failing inputs=0      (2020-11-25T02:24:33.386Z     102MB used)
Progress update: steps=1000, test inputs generated=309, failing inputs=0      (2020-11-25T02:24:46.413Z     601MB used)
Progress update: steps=2000, test inputs generated=553, failing inputs=0      (2020-11-25T02:24:55.650Z     154MB used)
Progress update: steps=3000, test inputs generated=788, failing inputs=0      (2020-11-25T02:25:04.010Z     167MB used)
Progress update: steps=4000, test inputs generated=1025, failing inputs=0      (2020-11-25T02:25:11.474Z     186MB used)
Progress update: steps=5000, test inputs generated=1272, failing inputs=0      (2020-11-25T02:25:18.925Z     104MB used)
Progress update: steps=6000, test inputs generated=1522, failing inputs=0      (2020-11-25T02:25:25.961Z     1098MB used)
Progress update: steps=7000, test inputs generated=1747, failing inputs=0      (2020-11-25T02:25:31.046Z     930MB used)
Progress update: steps=7415, test inputs generated=1836, failing inputs=0      (2020-11-25T02:25:33.503Z     47MB used)
Progress update: steps=8000, test inputs generated=1982, failing inputs=0      (2020-11-25T02:25:37.767Z     653MB used)
Progress update: steps=9000, test inputs generated=2217, failing inputs=0      (2020-11-25T02:25:43.026Z     333MB used)
Progress update: steps=10000, test inputs generated=2442, failing inputs=0      (2020-11-25T02:25:49.446Z     1261MB used)
Progress update: steps=11000, test inputs generated=2660, failing inputs=0      (2020-11-25T02:25:55.019Z     854MB used)
Progress update: steps=12000, test inputs generated=2888, failing inputs=0      (2020-11-25T02:26:09.757Z     517MB used)
Progress update: steps=13000, test inputs generated=3112, failing inputs=0      (2020-11-25T02:26:23.379Z     131MB used)
Progress update: steps=13683, test inputs generated=3261, failing inputs=0      (2020-11-25T02:26:33.504Z     793MB used)
Progress update: steps=14000, test inputs generated=3323, failing inputs=0      (2020-11-25T02:26:36.457Z     1053MB used)
Progress update: steps=15000, test inputs generated=3558, failing inputs=0      (2020-11-25T02:26:44.582Z     724MB used)
Progress update: steps=16000, test inputs generated=3776, failing inputs=0      (2020-11-25T02:26:52.902Z     365MB used)
Progress update: steps=17000, test inputs generated=4008, failing inputs=0      (2020-11-25T02:27:01.976Z     57MB used)
Progress update: steps=18000, test inputs generated=4228, failing inputs=0      (2020-11-25T02:27:10.544Z     982MB used)
Progress update: steps=19000, test inputs generated=4490, failing inputs=0      (2020-11-25T02:27:18.975Z     830MB used)
Progress update: steps=20000, test inputs generated=4709, failing inputs=0      (2020-11-25T02:27:33.122Z     468MB used)
Progress update: steps=20005, test inputs generated=4713, failing inputs=0      (2020-11-25T02:27:33.506Z     502MB used)
Progress update: steps=21000, test inputs generated=4934, failing inputs=0      (2020-11-25T02:27:51.201Z     163MB used)
Progress update: steps=22000, test inputs generated=5174, failing inputs=0      (2020-11-25T02:28:08.713Z     1184MB used)
Progress update: steps=23000, test inputs generated=5385, failing inputs=0      (2020-11-25T02:28:30.082Z     825MB used)
Progress update: steps=23129, test inputs generated=5413, failing inputs=0      (2020-11-25T02:28:33.506Z     932MB used)
Progress update: steps=24000, test inputs generated=5611, failing inputs=0      (2020-11-25T02:28:53.443Z     521MB used)
Progress update: steps=25000, test inputs generated=5870, failing inputs=0      (2020-11-25T02:29:09.465Z     343MB used)
Progress update: steps=26000, test inputs generated=6115, failing inputs=0      (2020-11-25T02:29:24.818Z     142MB used)
Progress update: steps=26666, test inputs generated=6230, failing inputs=0      (2020-11-25T02:29:33.376Z     649MB used)
Normal method executions: 209419
Exceptional method executions: 3

Average method execution time (normal termination):      0.00650
Average method execution time (exceptional termination): 1.01
Approximate memory usage 649MB
Explorer = ForwardGenerator(steps: 26666, null steps: 20436, num_sequences_generated: 6230;
    allSequences: 6230, regresson seqs: 6229, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:40)

No error-revealing tests to output.

About to look for failing assertions in 3061 regression sequences.

Regression test output:
Regression test count: 3061
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-1/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-1/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-1/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-1/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-1/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-1/RegressionTest5.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-1/RegressionTest6.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-1/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.DateTimeUtils.getInstantMillis(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.DateTimeUtils.currentTimeMillis()
  Possibly flaky:  java.lang.String.valueOf(long)
  Possibly flaky:  java.lang.Long.valueOf(long)
  Possibly flaky:  java.lang.Long.toString(long)
  Possibly flaky:  java.lang.Long.toOctalString(long)
  Possibly flaky:  java.lang.Long.toHexString(long)
  Possibly flaky:  java.lang.Long.toBinaryString(long)
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
