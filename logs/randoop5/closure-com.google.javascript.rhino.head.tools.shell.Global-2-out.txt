Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=132
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=2, test inputs generated=0, failing inputs=0      (2020-11-25T10:21:08.618Z     123MB used)
Progress update: steps=330, test inputs generated=291, failing inputs=4      (2020-11-25T10:22:08.938Z     36MB used)




Progress update: steps=1000, test inputs generated=747, failing inputs=5      (2020-11-25T10:22:45.868Z     117MB used)


Progress update: steps=1435, test inputs generated=1033, failing inputs=5      (2020-11-25T10:23:08.945Z     189MB used)







Progress update: steps=2000, test inputs generated=1373, failing inputs=5      (2020-11-25T10:23:39.197Z     49MB used)



Progress update: steps=2499, test inputs generated=1665, failing inputs=7      (2020-11-25T10:24:09.125Z     52MB used)

Progress update: steps=3000, test inputs generated=1981, failing inputs=7      (2020-11-25T10:24:48.274Z     463MB used)



Progress update: steps=3369, test inputs generated=2196, failing inputs=7      (2020-11-25T10:25:09.254Z     59MB used)




Progress update: steps=4000, test inputs generated=2570, failing inputs=7      (2020-11-25T10:25:42.184Z     188MB used)




Progress update: steps=4540, test inputs generated=2884, failing inputs=7      (2020-11-25T10:26:08.581Z     78MB used)
Normal method executions: 3264927
Exceptional method executions: 829

Average method execution time (normal termination):      0.0304
Average method execution time (exceptional termination): 1.11
Approximate memory usage 78MB
Explorer = ForwardGenerator(steps: 4540, null steps: 1656, num_sequences_generated: 2884;
    allSequences: 2884, regresson seqs: 2757, error seqs: 7=7=7, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 120;
    runtimePrimitivesSeen:47)

Error-revealing test output:
Error-revealing test count: 7
Writing error-revealing JUnit tests...
Created file /experiment/results/randoop5/closure-com.google.javascript.rhino.head.tools.shell.Global-2/ErrorTest0.java
Created file /experiment/results/randoop5/closure-com.google.javascript.rhino.head.tools.shell.Global-2/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 1555 regression sequences.

Regression test output:
Regression test count: 1555
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/closure-com.google.javascript.rhino.head.tools.shell.Global-2/RegressionTest0.java
Created file /experiment/results/randoop5/closure-com.google.javascript.rhino.head.tools.shell.Global-2/RegressionTest1.java
Created file /experiment/results/randoop5/closure-com.google.javascript.rhino.head.tools.shell.Global-2/RegressionTest2.java
Created file /experiment/results/randoop5/closure-com.google.javascript.rhino.head.tools.shell.Global-2/RegressionTest3.java
Created file /experiment/results/randoop5/closure-com.google.javascript.rhino.head.tools.shell.Global-2/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  java.util.Collections.addAll(java.util.Collection<java.lang.String>,java.lang.String[])
  Possibly flaky:  com.google.javascript.rhino.head.tools.shell.Global.setOut(java.io.PrintStream)
  Possibly flaky:  com.google.javascript.rhino.head.tools.shell.Global.setIn(java.io.InputStream)
  Possibly flaky:  com.google.javascript.rhino.head.tools.shell.Global.setErr(java.io.PrintStream)
  Possibly flaky:  com.google.javascript.rhino.head.tools.shell.Global.seal(com.google.javascript.rhino.head.Context,com.google.javascript.rhino.head.Scriptable,java.lang.Object[],com.google.javascript.rhino.head.Function)
  Possibly flaky:  com.google.javascript.rhino.head.tools.shell.Global.runDoctest(com.google.javascript.rhino.head.Context,com.google.javascript.rhino.head.Scriptable,java.lang.String,java.lang.String,int)
  Possibly flaky:  com.google.javascript.rhino.head.tools.shell.Global.quit(com.google.javascript.rhino.head.Context,com.google.javascript.rhino.head.Scriptable,java.lang.Object[],com.google.javascript.rhino.head.Function)
  Possibly flaky:  com.google.javascript.rhino.head.tools.shell.Global.load(com.google.javascript.rhino.head.Context,com.google.javascript.rhino.head.Scriptable,java.lang.Object[],com.google.javascript.rhino.head.Function)
  Possibly flaky:  com.google.javascript.rhino.head.tools.shell.Global.isInitialized()
  Possibly flaky:  com.google.javascript.rhino.head.tools.shell.Global.installRequire(com.google.javascript.rhino.head.Context,java.util.List<java.lang.String>,boolean)
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0

Uncompilable sequences generated (count: 119).
Please report at https://github.com/randoop/randoop/issues ,
providing the information requested at https://randoop.github.io/randoop/manual/index.html#bug-reporting .
