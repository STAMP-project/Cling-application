Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=55
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=3, test inputs generated=1, failing inputs=0      (2020-11-25T01:25:26.010Z     112MB used)
Progress update: steps=523, test inputs generated=475, failing inputs=0      (2020-11-25T01:26:26.047Z     177MB used)
Progress update: steps=1000, test inputs generated=870, failing inputs=0      (2020-11-25T01:27:13.051Z     457MB used)
Progress update: steps=1088, test inputs generated=940, failing inputs=0      (2020-11-25T01:27:26.048Z     199MB used)
Progress update: steps=1870, test inputs generated=1545, failing inputs=0      (2020-11-25T01:28:26.053Z     877MB used)
Progress update: steps=2000, test inputs generated=1642, failing inputs=0      (2020-11-25T01:28:34.395Z     731MB used)
Progress update: steps=2557, test inputs generated=2063, failing inputs=0      (2020-11-25T01:29:26.053Z     692MB used)
Progress update: steps=3000, test inputs generated=2419, failing inputs=0      (2020-11-25T01:29:58.938Z     1243MB used)
Progress update: steps=3592, test inputs generated=2881, failing inputs=0      (2020-11-25T01:30:26.050Z     506MB used)
Normal method executions: 8073560
Exceptional method executions: 245

Average method execution time (normal termination):      0.000467
Average method execution time (exceptional termination): 0.141
Approximate memory usage 506MB
Explorer = ForwardGenerator(steps: 3592, null steps: 711, num_sequences_generated: 2881;
    allSequences: 2881, regresson seqs: 2880, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:328)
                                                                                                                                                                                                       
No error-revealing tests to output.

About to look for failing assertions in 1447 regression sequences.

Regression test output:
Regression test count: 1447
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-14/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-14/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-14/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-14/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.base.BaseInterval.getStartMillis()
  Possibly flaky:  org.joda.time.base.BaseInterval.getEndMillis()
  Possibly flaky:  org.joda.time.base.BaseInterval.getChronology()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toString()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toPeriod()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toPeriod(org.joda.time.PeriodType)
  Possibly flaky:  org.joda.time.base.AbstractInterval.toMutableInterval()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toInterval()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toDurationMillis()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toDuration()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
