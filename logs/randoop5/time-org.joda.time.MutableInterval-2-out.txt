Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=55
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T01:21:16.160Z     112MB used)
Progress update: steps=641, test inputs generated=574, failing inputs=0      (2020-11-25T01:22:16.187Z     720MB used)
Progress update: steps=1000, test inputs generated=870, failing inputs=0      (2020-11-25T01:22:56.379Z     563MB used)
Progress update: steps=1413, test inputs generated=1201, failing inputs=0      (2020-11-25T01:23:16.188Z     899MB used)
Progress update: steps=2000, test inputs generated=1642, failing inputs=0      (2020-11-25T01:23:40.967Z     937MB used)
Progress update: steps=2592, test inputs generated=2087, failing inputs=0      (2020-11-25T01:24:16.189Z     868MB used)
Progress update: steps=3000, test inputs generated=2419, failing inputs=0      (2020-11-25T01:25:04.542Z     1086MB used)
Progress update: steps=3205, test inputs generated=2587, failing inputs=0      (2020-11-25T01:25:16.189Z     481MB used)
Progress update: steps=4000, test inputs generated=3193, failing inputs=0      (2020-11-25T01:26:13.160Z     204MB used)
Progress update: steps=4037, test inputs generated=3222, failing inputs=0      (2020-11-25T01:26:16.189Z     513MB used)
Progress update: steps=4037, test inputs generated=3222, failing inputs=0      (2020-11-25T01:26:16.218Z     513MB used)
Normal method executions: 9127666
Exceptional method executions: 279

Average method execution time (normal termination):      0.000417
Average method execution time (exceptional termination): 0.198
Approximate memory usage 513MB
Explorer = ForwardGenerator(steps: 4037, null steps: 815, num_sequences_generated: 3222;
    allSequences: 3222, regresson seqs: 3221, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:370)

No error-revealing tests to output.

About to look for failing assertions in 1649 regression sequences.

Regression test output:
Regression test count: 1649
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-2/RegressionTest0.java
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-2/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-2/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-2/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-2/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.base.BaseInterval.getStartMillis()
  Possibly flaky:  org.joda.time.base.BaseInterval.getEndMillis()
  Possibly flaky:  org.joda.time.base.BaseInterval.getChronology()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toString()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toPeriod()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toPeriod(org.joda.time.PeriodType)
  Possibly flaky:  org.joda.time.base.AbstractInterval.toMutableInterval()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toInterval()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toDurationMillis()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toDuration()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
