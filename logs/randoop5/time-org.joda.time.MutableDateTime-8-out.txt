Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=183
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=2, test inputs generated=1, failing inputs=0      (2020-11-25T01:44:42.297Z     112MB used)
Progress update: steps=605, test inputs generated=560, failing inputs=20      (2020-11-25T01:45:42.433Z     539MB used)
Progress update: steps=1000, test inputs generated=952, failing inputs=35      (2020-11-25T01:46:21.926Z     49MB used)
Progress update: steps=1186, test inputs generated=1138, failing inputs=40      (2020-11-25T01:46:42.433Z     443MB used)
Progress update: steps=2000, test inputs generated=1936, failing inputs=75      (2020-11-25T01:47:32.332Z     716MB used)
Progress update: steps=2268, test inputs generated=2202, failing inputs=87      (2020-11-25T01:47:42.434Z     802MB used)
Progress update: steps=3000, test inputs generated=2926, failing inputs=116      (2020-11-25T01:48:20.340Z     153MB used)
Progress update: steps=3128, test inputs generated=3053, failing inputs=121      (2020-11-25T01:48:42.434Z     1043MB used)
Progress update: steps=4000, test inputs generated=3910, failing inputs=152      (2020-11-25T01:49:19.934Z     1137MB used)
Progress update: steps=4503, test inputs generated=4404, failing inputs=174      (2020-11-25T01:49:42.317Z     349MB used)
Normal method executions: 1803124
Exceptional method executions: 603

Average method execution time (normal termination):      0.00117
Average method execution time (exceptional termination): 0.144
Approximate memory usage 349MB
Explorer = ForwardGenerator(steps: 4503, null steps: 99, num_sequences_generated: 4404;
    allSequences: 4404, regresson seqs: 4229, error seqs: 174=174=174, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:2697)

Error-revealing test output:
Error-revealing test count: 174
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-8/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-8/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 2248 regression sequences.

Regression test output:
Regression test count: 2248
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-8/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-8/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-8/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-8/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-8/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-8/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.MutableDateTime.setChronology(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
