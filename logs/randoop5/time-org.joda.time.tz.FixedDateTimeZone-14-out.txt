Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=39
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T01:05:53.182Z     102MB used)
Progress update: steps=591, test inputs generated=520, failing inputs=0      (2020-11-25T01:06:53.206Z     230MB used)
Progress update: steps=1000, test inputs generated=861, failing inputs=0      (2020-11-25T01:07:11.422Z     832MB used)
Progress update: steps=1680, test inputs generated=1437, failing inputs=0      (2020-11-25T01:07:53.206Z     440MB used)
Progress update: steps=2000, test inputs generated=1710, failing inputs=0      (2020-11-25T01:08:14.614Z     479MB used)
Progress update: steps=2333, test inputs generated=1991, failing inputs=0      (2020-11-25T01:08:53.207Z     620MB used)
Progress update: steps=3000, test inputs generated=2544, failing inputs=0      (2020-11-25T01:09:26.257Z     982MB used)
Progress update: steps=3524, test inputs generated=2972, failing inputs=0      (2020-11-25T01:09:53.207Z     876MB used)
Progress update: steps=4000, test inputs generated=3356, failing inputs=0      (2020-11-25T01:10:21.454Z     668MB used)
Progress update: steps=4293, test inputs generated=3603, failing inputs=0      (2020-11-25T01:10:53.208Z     908MB used)
Progress update: steps=4293, test inputs generated=3603, failing inputs=0      (2020-11-25T01:10:53.245Z     908MB used)
Normal method executions: 76351
Exceptional method executions: 86

Average method execution time (normal termination):      0.00821
Average method execution time (exceptional termination): 0.507
Approximate memory usage 908MB
Explorer = ForwardGenerator(steps: 4293, null steps: 690, num_sequences_generated: 3603;
    allSequences: 3603, regresson seqs: 3602, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:359)

No error-revealing tests to output.

About to look for failing assertions in 1842 regression sequences.

Regression test output:
Regression test count: 1842
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.tz.FixedDateTimeZone-14/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.tz.FixedDateTimeZone-14/RegressionTest1.java
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.tz.FixedDateTimeZone-14/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.tz.FixedDateTimeZone-14/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.tz.FixedDateTimeZone-14/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.tz.FixedDateTimeZone.toTimeZone()
  Possibly flaky:  org.joda.time.tz.FixedDateTimeZone.previousTransition(long)
  Possibly flaky:  org.joda.time.tz.FixedDateTimeZone.nextTransition(long)
  Possibly flaky:  org.joda.time.tz.FixedDateTimeZone.isFixed()
  Possibly flaky:  org.joda.time.tz.FixedDateTimeZone.getStandardOffset(long)
  Possibly flaky:  org.joda.time.tz.FixedDateTimeZone.getOffsetFromLocal(long)
  Possibly flaky:  org.joda.time.tz.FixedDateTimeZone.getOffset(long)
  Possibly flaky:  org.joda.time.tz.FixedDateTimeZone.getNameKey(long)
  Possibly flaky:  org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)
  Possibly flaky:  org.joda.time.DateTimeZone.toString()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
