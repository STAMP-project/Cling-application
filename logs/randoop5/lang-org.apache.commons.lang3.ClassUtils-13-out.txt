Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=38
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T00:01:39.339Z     102MB used)
Progress update: steps=431, test inputs generated=358, failing inputs=0      (2020-11-25T00:02:39.385Z     784MB used)
Progress update: steps=1000, test inputs generated=796, failing inputs=0      (2020-11-25T00:03:11.176Z     555MB used)
Progress update: steps=1654, test inputs generated=1248, failing inputs=0      (2020-11-25T00:03:39.386Z     883MB used)
Progress update: steps=2000, test inputs generated=1475, failing inputs=0      (2020-11-25T00:03:55.063Z     1233MB used)
Progress update: steps=2865, test inputs generated=2043, failing inputs=0      (2020-11-25T00:04:39.386Z     84MB used)
Progress update: steps=3000, test inputs generated=2133, failing inputs=0      (2020-11-25T00:04:54.113Z     1160MB used)
Progress update: steps=4000, test inputs generated=2764, failing inputs=0      (2020-11-25T00:05:30.571Z     942MB used)
Progress update: steps=4265, test inputs generated=2929, failing inputs=0      (2020-11-25T00:05:39.387Z     530MB used)
Progress update: steps=5000, test inputs generated=3389, failing inputs=0      (2020-11-25T00:06:09.289Z     187MB used)Long generation time 1586 msec (= 1585 + 0) for
java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList2, strArray1);
java.util.List<java.lang.Class<?>> wildcardClassList4 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>)strList2);
java.util.List<java.lang.String> strList5 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture33>>)wildcardClassList4);
java.util.List<java.lang.Class<?>> wildcardClassList6 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses(strList5);
java.util.List<java.lang.String> strList7 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture98>>)wildcardClassList6);
java.util.List<java.lang.String> strList8 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture8962>>)wildcardClassList6);
java.util.List<java.lang.String> strList9 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture247061>>)wildcardClassList6);


Progress update: steps=5567, test inputs generated=3737, failing inputs=0      (2020-11-25T00:06:39.387Z     1085MB used)Long generation time 1251 msec (= 1231 + 20) for
java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList2, strArray1);
java.util.List<java.lang.Class<?>> wildcardClassList4 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>)strList2);
java.util.List<java.lang.String> strList5 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture33>>)wildcardClassList4);
java.util.List<java.lang.Class<?>> wildcardClassList6 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses(strList5);
java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses(strList5);
java.util.List<java.lang.String> strList8 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture767>>)strList5);
java.util.List<java.lang.Class<?>> wildcardClassList9 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses(strList5);
java.util.List<java.lang.String> strList10 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture252020>>)wildcardClassList9);


Progress update: steps=5567, test inputs generated=3738, failing inputs=0      (2020-11-25T00:06:39.968Z     1111MB used)
Normal method executions: 10617294
Exceptional method executions: 234

Average method execution time (normal termination):      0.000299
Average method execution time (exceptional termination): 0.477
Approximate memory usage 1111MB
Explorer = ForwardGenerator(steps: 5567, null steps: 1829, num_sequences_generated: 3738;
    allSequences: 3738, regresson seqs: 1262, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 2476;
    runtimePrimitivesSeen:60)

No error-revealing tests to output.

About to look for failing assertions in 805 regression sequences.

Regression test output:
Regression test count: 805
Writing regression JUnit tests...
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.ClassUtils-13/RegressionTest0.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.ClassUtils-13/RegressionTest1.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.ClassUtils-13/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Invalid tests generated: 0

Uncompilable sequences generated (count: 2475).
Please report at https://github.com/randoop/randoop/issues ,
providing the information requested at https://randoop.github.io/randoop/manual/index.html#bug-reporting .
