Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=195
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T02:33:01.478Z     112MB used)
Progress update: steps=485, test inputs generated=406, failing inputs=9      (2020-11-25T02:34:01.637Z     559MB used)
Progress update: steps=1000, test inputs generated=917, failing inputs=18      (2020-11-25T02:34:43.735Z     446MB used)
Progress update: steps=1200, test inputs generated=1112, failing inputs=20      (2020-11-25T02:35:01.638Z     411MB used)
Progress update: steps=1689, test inputs generated=1596, failing inputs=24      (2020-11-25T02:36:01.638Z     428MB used)
Progress update: steps=2000, test inputs generated=1900, failing inputs=27      (2020-11-25T02:36:29.761Z     957MB used)
Progress update: steps=2551, test inputs generated=2440, failing inputs=31      (2020-11-25T02:37:01.639Z     682MB used)
Progress update: steps=3000, test inputs generated=2876, failing inputs=31      (2020-11-25T02:37:37.266Z     343MB used)
Progress update: steps=3122, test inputs generated=2998, failing inputs=31      (2020-11-25T02:38:01.502Z     396MB used)
Normal method executions: 3247495
Exceptional method executions: 445

Average method execution time (normal termination):      0.000836
Average method execution time (exceptional termination): 0.528
Approximate memory usage 396MB
Explorer = ForwardGenerator(steps: 3122, null steps: 124, num_sequences_generated: 2998;
    allSequences: 2998, regresson seqs: 2953, error seqs: 31=31=31, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 14;
    runtimePrimitivesSeen:192)

Error-revealing test output:
Error-revealing test count: 31
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.DateTime-6/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-6/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 1594 regression sequences.

Regression test output:
Regression test count: 1594
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-6/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-6/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-6/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-6/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-6/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumTextLength(java.util.Locale)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumShortTextLength(java.util.Locale)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getLeapDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getFieldType()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getDifferenceAsLong(org.joda.time.ReadableInstant)
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
