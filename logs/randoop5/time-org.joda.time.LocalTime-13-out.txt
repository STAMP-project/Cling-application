Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=122
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T01:54:01.381Z     112MB used)
Progress update: steps=730, test inputs generated=701, failing inputs=0      (2020-11-25T01:55:01.422Z     211MB used)
Progress update: steps=1000, test inputs generated=958, failing inputs=0      (2020-11-25T01:55:24.991Z     436MB used)
Progress update: steps=1312, test inputs generated=1260, failing inputs=0      (2020-11-25T01:56:01.423Z     921MB used)
Progress update: steps=2000, test inputs generated=1912, failing inputs=0      (2020-11-25T01:56:37.798Z     1324MB used)
Progress update: steps=2405, test inputs generated=2294, failing inputs=0      (2020-11-25T01:57:01.423Z     1021MB used)
Progress update: steps=3000, test inputs generated=2845, failing inputs=0      (2020-11-25T01:57:28.305Z     1327MB used)
Progress update: steps=3355, test inputs generated=3176, failing inputs=0      (2020-11-25T01:58:01.424Z     198MB used)
Progress update: steps=3928, test inputs generated=3709, failing inputs=0      (2020-11-25T01:59:01.393Z     430MB used)
Normal method executions: 6957807
Exceptional method executions: 538

Average method execution time (normal termination):      0.000551
Average method execution time (exceptional termination): 0.148
Approximate memory usage 430MB
Explorer = ForwardGenerator(steps: 3928, null steps: 219, num_sequences_generated: 3709;
    allSequences: 3709, regresson seqs: 3708, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:899)

No error-revealing tests to output.

About to look for failing assertions in 1981 regression sequences.

Regression test output:
Regression test count: 1981
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-13/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-13/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-13/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-13/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-13/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getDifference(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getAsShortText(java.util.Locale)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.get()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
