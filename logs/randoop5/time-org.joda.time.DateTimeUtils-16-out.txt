Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=19
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T02:27:15.577Z     102MB used)
Progress update: steps=1000, test inputs generated=309, failing inputs=0      (2020-11-25T02:27:42.922Z     602MB used)
Progress update: steps=2000, test inputs generated=553, failing inputs=0      (2020-11-25T02:28:03.216Z     850MB used)
Progress update: steps=2722, test inputs generated=717, failing inputs=0      (2020-11-25T02:28:15.620Z     584MB used)
Progress update: steps=3000, test inputs generated=788, failing inputs=0      (2020-11-25T02:28:24.458Z     871MB used)
Progress update: steps=4000, test inputs generated=1025, failing inputs=0      (2020-11-25T02:28:52.138Z     850MB used)
Progress update: steps=5000, test inputs generated=1272, failing inputs=0      (2020-11-25T02:29:07.222Z     892MB used)
Progress update: steps=5585, test inputs generated=1415, failing inputs=0      (2020-11-25T02:29:15.620Z     349MB used)
Progress update: steps=6000, test inputs generated=1522, failing inputs=0      (2020-11-25T02:29:22.714Z     779MB used)
Progress update: steps=7000, test inputs generated=1747, failing inputs=0      (2020-11-25T02:29:38.318Z     538MB used)
Progress update: steps=8000, test inputs generated=1982, failing inputs=0      (2020-11-25T02:29:54.382Z     178MB used)
Progress update: steps=9000, test inputs generated=2217, failing inputs=0      (2020-11-25T02:30:09.156Z     1163MB used)
Progress update: steps=9497, test inputs generated=2329, failing inputs=0      (2020-11-25T02:30:15.621Z     318MB used)
Progress update: steps=10000, test inputs generated=2442, failing inputs=0      (2020-11-25T02:30:23.147Z     785MB used)
Progress update: steps=11000, test inputs generated=2660, failing inputs=0      (2020-11-25T02:30:40.826Z     378MB used)
Progress update: steps=12000, test inputs generated=2888, failing inputs=0      (2020-11-25T02:31:07.975Z     52MB used)
Progress update: steps=12350, test inputs generated=2966, failing inputs=0      (2020-11-25T02:31:15.621Z     399MB used)
Progress update: steps=13000, test inputs generated=3112, failing inputs=0      (2020-11-25T02:31:24.081Z     985MB used)
Progress update: steps=14000, test inputs generated=3323, failing inputs=0      (2020-11-25T02:31:35.733Z     646MB used)
Progress update: steps=15000, test inputs generated=3558, failing inputs=0      (2020-11-25T02:31:46.398Z     445MB used)
Progress update: steps=16000, test inputs generated=3776, failing inputs=0      (2020-11-25T02:31:57.883Z     211MB used)
Progress update: steps=17000, test inputs generated=4008, failing inputs=0      (2020-11-25T02:32:09.737Z     99MB used)
Progress update: steps=17531, test inputs generated=4116, failing inputs=0      (2020-11-25T02:32:15.577Z     554MB used)
Normal method executions: 134286
Exceptional method executions: 3

Average method execution time (normal termination):      0.00486
Average method execution time (exceptional termination): 1.08
Approximate memory usage 554MB
Explorer = ForwardGenerator(steps: 17531, null steps: 13415, num_sequences_generated: 4116;
    allSequences: 4116, regresson seqs: 4115, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:40)

No error-revealing tests to output.
                                                                                                                                                                                                       
About to look for failing assertions in 2002 regression sequences.

Regression test output:
Regression test count: 2002
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-16/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-16/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-16/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-16/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-16/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-16/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.DateTimeUtils.getInstantMillis(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.DateTimeUtils.currentTimeMillis()
  Possibly flaky:  java.lang.String.valueOf(long)
  Possibly flaky:  java.lang.Long.valueOf(long)
  Possibly flaky:  java.lang.Long.toString(long)
  Possibly flaky:  java.lang.Long.toOctalString(long)
  Possibly flaky:  java.lang.Long.toHexString(long)
  Possibly flaky:  java.lang.Long.toBinaryString(long)
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
