Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=105
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=16, test inputs generated=1, failing inputs=0      (2020-11-25T01:32:00.076Z     112MB used)
Progress update: steps=640, test inputs generated=594, failing inputs=0      (2020-11-25T01:33:00.151Z     369MB used)
Progress update: steps=1000, test inputs generated=942, failing inputs=0      (2020-11-25T01:33:36.970Z     407MB used)
Progress update: steps=1218, test inputs generated=1149, failing inputs=0      (2020-11-25T01:34:00.152Z     491MB used)
Progress update: steps=1812, test inputs generated=1693, failing inputs=0      (2020-11-25T01:35:00.152Z     137MB used)
Progress update: steps=2000, test inputs generated=1867, failing inputs=0      (2020-11-25T01:35:10.618Z     951MB used)
Progress update: steps=2666, test inputs generated=2490, failing inputs=0      (2020-11-25T01:36:00.153Z     396MB used)
Progress update: steps=3000, test inputs generated=2796, failing inputs=0      (2020-11-25T01:36:25.240Z     603MB used)
Progress update: steps=3853, test inputs generated=3581, failing inputs=0      (2020-11-25T01:37:00.073Z     402MB used)
Normal method executions: 4518169
Exceptional method executions: 594

Average method execution time (normal termination):      0.000543
Average method execution time (exceptional termination): 0.202
Approximate memory usage 402MB
Explorer = ForwardGenerator(steps: 3853, null steps: 272, num_sequences_generated: 3581;
    allSequences: 3581, regresson seqs: 3580, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:141)

No error-revealing tests to output.

About to look for failing assertions in 1944 regression sequences.

Regression test output:
Regression test count: 1944
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.TimeOfDay-3/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.TimeOfDay-3/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.TimeOfDay-3/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.TimeOfDay-3/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.TimeOfDay-3/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getMaximumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getMaximumTextLength(java.util.Locale)
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getMaximumShortTextLength(java.util.Locale)
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getFieldType()
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getDurationField()
  Possibly flaky:  org.joda.time.field.AbstractPartialFieldProperty.getAsText(java.util.Locale)
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
