Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=55
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T01:21:35.020Z     112MB used)
Progress update: steps=553, test inputs generated=499, failing inputs=0      (2020-11-25T01:22:35.105Z     699MB used)
Progress update: steps=1000, test inputs generated=870, failing inputs=0      (2020-11-25T01:23:07.279Z     241MB used)
Progress update: steps=1612, test inputs generated=1350, failing inputs=0      (2020-11-25T01:23:35.105Z     896MB used)
Progress update: steps=2000, test inputs generated=1652, failing inputs=0      (2020-11-25T01:23:56.967Z     495MB used)
Progress update: steps=2466, test inputs generated=1998, failing inputs=0      (2020-11-25T01:24:35.106Z     686MB used)
Progress update: steps=3000, test inputs generated=2401, failing inputs=0      (2020-11-25T01:25:15.324Z     1264MB used)
Progress update: steps=3397, test inputs generated=2694, failing inputs=0      (2020-11-25T01:25:35.106Z     788MB used)
Progress update: steps=4000, test inputs generated=3125, failing inputs=0      (2020-11-25T01:26:22.838Z     658MB used)
Progress update: steps=4165, test inputs generated=3248, failing inputs=0      (2020-11-25T01:26:35.107Z     689MB used)
Progress update: steps=4165, test inputs generated=3248, failing inputs=0      (2020-11-25T01:26:35.158Z     689MB used)
Normal method executions: 8819628
Exceptional method executions: 281

Average method execution time (normal termination):      0.000369
Average method execution time (exceptional termination): 0.301
Approximate memory usage 689MB
Explorer = ForwardGenerator(steps: 4165, null steps: 917, num_sequences_generated: 3248;
    allSequences: 3248, regresson seqs: 3247, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:393)

No error-revealing tests to output.

About to look for failing assertions in 1679 regression sequences.

Regression test output:
Regression test count: 1679
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-10/RegressionTest0.java
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-10/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-10/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-10/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableInterval-10/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.base.BaseInterval.getStartMillis()
  Possibly flaky:  org.joda.time.base.BaseInterval.getEndMillis()
  Possibly flaky:  org.joda.time.base.BaseInterval.getChronology()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toString()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toPeriod()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toPeriod(org.joda.time.PeriodType)
  Possibly flaky:  org.joda.time.base.AbstractInterval.toMutableInterval()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toInterval()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toDurationMillis()
  Possibly flaky:  org.joda.time.base.AbstractInterval.toDuration()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
