Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=183
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=2, test inputs generated=1, failing inputs=0      (2020-11-25T01:44:58.307Z     112MB used)
Progress update: steps=552, test inputs generated=509, failing inputs=13      (2020-11-25T01:45:58.370Z     580MB used)
Progress update: steps=1000, test inputs generated=951, failing inputs=24      (2020-11-25T01:46:48.225Z     374MB used)
Progress update: steps=1058, test inputs generated=1010, failing inputs=24      (2020-11-25T01:46:58.371Z     818MB used)
Progress update: steps=2000, test inputs generated=1936, failing inputs=54      (2020-11-25T01:47:41.086Z     648MB used)
Progress update: steps=2429, test inputs generated=2360, failing inputs=69      (2020-11-25T01:47:58.371Z     813MB used)
Progress update: steps=3000, test inputs generated=2919, failing inputs=89      (2020-11-25T01:48:50.128Z     703MB used)
Progress update: steps=3211, test inputs generated=3127, failing inputs=98      (2020-11-25T01:48:58.372Z     964MB used)
Progress update: steps=4000, test inputs generated=3907, failing inputs=126      (2020-11-25T01:49:29.406Z     165MB used)
Progress update: steps=4506, test inputs generated=4407, failing inputs=142      (2020-11-25T01:49:58.342Z     1217MB used)
Normal method executions: 1767696
Exceptional method executions: 645

Average method execution time (normal termination):      0.00116
Average method execution time (exceptional termination): 0.141
Approximate memory usage 1217MB
Explorer = ForwardGenerator(steps: 4506, null steps: 99, num_sequences_generated: 4407;
    allSequences: 4407, regresson seqs: 4264, error seqs: 142=142=142, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:3198)

Error-revealing test output:
Error-revealing test count: 142
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-15/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-15/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 2306 regression sequences.

Regression test output:
Regression test count: 2306
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-15/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-15/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-15/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-15/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-15/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-15/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.DateTimeZone)
  Possibly flaky:  org.joda.time.MutableDateTime.setZoneRetainFields(org.joda.time.DateTimeZone)
  Possibly flaky:  org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)
  Possibly flaky:  org.joda.time.MutableDateTime.setChronology(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.MutableDateTime.now(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
