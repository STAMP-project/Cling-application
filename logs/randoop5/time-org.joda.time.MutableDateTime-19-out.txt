Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=183
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=2, test inputs generated=1, failing inputs=0      (2020-11-25T01:45:03.608Z     112MB used)
Progress update: steps=540, test inputs generated=495, failing inputs=13      (2020-11-25T01:46:03.677Z     729MB used)
Progress update: steps=1000, test inputs generated=946, failing inputs=30      (2020-11-25T01:46:59.350Z     288MB used)
Progress update: steps=1028, test inputs generated=975, failing inputs=31      (2020-11-25T01:47:03.677Z     485MB used)
Progress update: steps=2000, test inputs generated=1927, failing inputs=73      (2020-11-25T01:47:47.762Z     1129MB used)
Progress update: steps=2274, test inputs generated=2196, failing inputs=87      (2020-11-25T01:48:03.678Z     1072MB used)
Progress update: steps=2999, test inputs generated=2909, failing inputs=121      (2020-11-25T01:49:03.679Z     734MB used)
Progress update: steps=3000, test inputs generated=2909, failing inputs=121      (2020-11-25T01:49:03.689Z     734MB used)
Progress update: steps=4000, test inputs generated=3888, failing inputs=166      (2020-11-25T01:49:54.846Z     219MB used)
Progress update: steps=4109, test inputs generated=3996, failing inputs=171      (2020-11-25T01:50:03.609Z     1221MB used)
Normal method executions: 2746969
Exceptional method executions: 543

Average method execution time (normal termination):      0.000810
Average method execution time (exceptional termination): 0.154
Approximate memory usage 1221MB
Explorer = ForwardGenerator(steps: 4109, null steps: 113, num_sequences_generated: 3996;
    allSequences: 3996, regresson seqs: 3824, error seqs: 171=171=171, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:2638)

Error-revealing test output:
Error-revealing test count: 171
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-19/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-19/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 2066 regression sequences.

Regression test output:
Regression test count: 2066
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-19/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-19/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-19/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-19/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-19/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-19/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.MutableDateTime.setZoneRetainFields(org.joda.time.DateTimeZone)
  Possibly flaky:  org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField)
  Possibly flaky:  org.joda.time.MutableDateTime.setChronology(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.MutableDateTime.property(org.joda.time.DateTimeFieldType)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
