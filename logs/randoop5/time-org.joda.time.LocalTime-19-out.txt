Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=122
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T01:54:34.727Z     112MB used)
Progress update: steps=576, test inputs generated=555, failing inputs=0      (2020-11-25T01:55:34.847Z     606MB used)
Progress update: steps=1000, test inputs generated=961, failing inputs=0      (2020-11-25T01:56:12.569Z     1183MB used)
Progress update: steps=1389, test inputs generated=1329, failing inputs=0      (2020-11-25T01:56:34.848Z     506MB used)
Progress update: steps=2000, test inputs generated=1908, failing inputs=0      (2020-11-25T01:57:08.299Z     1273MB used)
Progress update: steps=2487, test inputs generated=2368, failing inputs=0      (2020-11-25T01:57:34.848Z     1284MB used)
Progress update: steps=2928, test inputs generated=2780, failing inputs=0      (2020-11-25T01:58:34.849Z     1206MB used)
Progress update: steps=3000, test inputs generated=2850, failing inputs=0      (2020-11-25T01:58:42.149Z     89MB used)
Progress update: steps=3748, test inputs generated=3551, failing inputs=0      (2020-11-25T01:59:34.765Z     1081MB used)
Normal method executions: 8216268
Exceptional method executions: 466

Average method execution time (normal termination):      0.000396
Average method execution time (exceptional termination): 0.224
Approximate memory usage 1081MB
Explorer = ForwardGenerator(steps: 3748, null steps: 197, num_sequences_generated: 3551;
    allSequences: 3551, regresson seqs: 3550, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:796)

No error-revealing tests to output.

About to look for failing assertions in 1899 regression sequences.

Regression test output:
Regression test count: 1899
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-19/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-19/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-19/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-19/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-19/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getDifferenceAsLong(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText(java.util.Locale)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getAsString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getAsShortText(java.util.Locale)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.get()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
