Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=99
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T01:10:07.768Z     112MB used)
Progress update: steps=500, test inputs generated=472, failing inputs=0      (2020-11-25T01:11:07.852Z     255MB used)
Progress update: steps=1000, test inputs generated=943, failing inputs=0      (2020-11-25T01:11:38.894Z     1064MB used)
Progress update: steps=1382, test inputs generated=1306, failing inputs=0      (2020-11-25T01:12:07.854Z     1250MB used)
Progress update: steps=2000, test inputs generated=1861, failing inputs=0      (2020-11-25T01:13:01.978Z     1302MB used)
Progress update: steps=2071, test inputs generated=1923, failing inputs=0      (2020-11-25T01:13:07.855Z     792MB used)
Progress update: steps=2844, test inputs generated=2631, failing inputs=0      (2020-11-25T01:14:07.855Z     275MB used)Long execution time 14 sec for
org.joda.time.YearMonthDay yearMonthDay1 = new org.joda.time.YearMonthDay((long)(short)100);
org.joda.time.DateTimeFieldType dateTimeFieldType2 = null;
int int3 = yearMonthDay1.indexOf(dateTimeFieldType2);
org.joda.time.YearMonthDay yearMonthDay5 = yearMonthDay1.minusYears((int)'a');
org.joda.time.DateTime dateTime6 = yearMonthDay1.toDateTimeAtCurrentTime();
org.joda.time.ReadablePeriod readablePeriod7 = null;
org.joda.time.YearMonthDay yearMonthDay9 = yearMonthDay1.withPeriodAdded(readablePeriod7, (int)'a');
org.joda.time.YearMonthDay yearMonthDay11 = yearMonthDay9.withDayOfMonth(1);
org.joda.time.ReadablePeriod readablePeriod12 = null;
org.joda.time.YearMonthDay yearMonthDay13 = yearMonthDay9.minus(readablePeriod12);
org.joda.time.YearMonthDay.Property property14 = yearMonthDay9.dayOfMonth();
org.joda.time.YearMonthDay yearMonthDay16 = new org.joda.time.YearMonthDay((long)(short)100);
org.joda.time.DateTimeFieldType dateTimeFieldType17 = null;
int int18 = yearMonthDay16.indexOf(dateTimeFieldType17);
org.joda.time.YearMonthDay yearMonthDay20 = yearMonthDay16.minusYears((int)'a');
org.joda.time.DateTime dateTime21 = yearMonthDay16.toDateTimeAtCurrentTime();
org.joda.time.ReadablePeriod readablePeriod22 = null;
org.joda.time.YearMonthDay yearMonthDay24 = yearMonthDay16.withPeriodAdded(readablePeriod22, (int)'a');
org.joda.time.YearMonthDay yearMonthDay26 = yearMonthDay24.withDayOfMonth(1);
org.joda.time.ReadablePeriod readablePeriod27 = null;
org.joda.time.YearMonthDay yearMonthDay28 = yearMonthDay24.minus(readablePeriod27);
org.joda.time.YearMonthDay.Property property29 = yearMonthDay28.monthOfYear();
org.joda.time.DateTimeZone dateTimeZone30 = null;
org.joda.time.DateTime dateTime31 = yearMonthDay28.toDateTimeAtCurrentTime(dateTimeZone30);
int int32 = property14.compareTo((org.joda.time.ReadableInstant)dateTime31);
int int33 = property14.getMinimumValue();
org.joda.time.YearMonthDay yearMonthDay35 = property14.addToCopy((-292275054));


Progress update: steps=3000, test inputs generated=2769, failing inputs=0      (2020-11-25T01:14:40.398Z     64MB used)
Progress update: steps=3322, test inputs generated=3058, failing inputs=0      (2020-11-25T01:15:07.754Z     403MB used)
Normal method executions: 5790212
Exceptional method executions: 373

Average method execution time (normal termination):      0.00327
Average method execution time (exceptional termination): 0.224
Approximate memory usage 403MB
Explorer = ForwardGenerator(steps: 3322, null steps: 264, num_sequences_generated: 3058;
    allSequences: 3058, regresson seqs: 3057, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:84)

No error-revealing tests to output.

About to look for failing assertions in 1645 regression sequences.

Regression test output:
Regression test count: 1645
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.YearMonthDay-10/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.YearMonthDay-10/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.YearMonthDay-10/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.YearMonthDay-10/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.YearMonthDay-10/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Invalid tests generated: 0
