Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=38
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T00:02:06.348Z     102MB used)
Progress update: steps=563, test inputs generated=460, failing inputs=0      (2020-11-25T00:03:06.461Z     373MB used)
Progress update: steps=1000, test inputs generated=796, failing inputs=0      (2020-11-25T00:03:30.070Z     663MB used)
Progress update: steps=1817, test inputs generated=1347, failing inputs=0      (2020-11-25T00:04:06.461Z     317MB used)
Progress update: steps=2000, test inputs generated=1475, failing inputs=0      (2020-11-25T00:04:14.883Z     754MB used)
Progress update: steps=2768, test inputs generated=1972, failing inputs=0      (2020-11-25T00:05:06.462Z     215MB used)
Progress update: steps=3000, test inputs generated=2133, failing inputs=0      (2020-11-25T00:05:14.883Z     889MB used)
Progress update: steps=4000, test inputs generated=2764, failing inputs=0      (2020-11-25T00:05:45.927Z     682MB used)
Progress update: steps=4511, test inputs generated=3087, failing inputs=0      (2020-11-25T00:06:06.462Z     1106MB used)
Progress update: steps=5000, test inputs generated=3389, failing inputs=0      (2020-11-25T00:06:24.326Z     1233MB used)Long generation time 1244 msec (= 1244 + 0) for
java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList2, strArray1);
java.util.List<java.lang.Class<?>> wildcardClassList4 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>)strList2);
java.util.List<java.lang.String> strList5 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture33>>)wildcardClassList4);
java.util.List<java.lang.Class<?>> wildcardClassList6 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses(strList5);
java.util.List<java.lang.String> strList7 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture98>>)wildcardClassList6);
java.util.List<java.lang.String> strList8 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture8962>>)wildcardClassList6);
java.util.List<java.lang.String> strList9 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture9790>>)strList8);
java.util.List<java.lang.String> strList10 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture23780>>)strList9);
java.util.List<java.lang.String> strList11 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture26780>>)strList10);
java.util.List<java.lang.String> strList12 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture150420>>)strList10);
java.util.List<java.lang.String> strList13 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture216773>>)strList10);


Progress update: steps=5495, test inputs generated=3695, failing inputs=0      (2020-11-25T00:07:06.315Z     293MB used)
Normal method executions: 10532808
Exceptional method executions: 233

Average method execution time (normal termination):      0.000320
Average method execution time (exceptional termination): 0.366
Approximate memory usage 293MB
Explorer = ForwardGenerator(steps: 5495, null steps: 1800, num_sequences_generated: 3695;
    allSequences: 3695, regresson seqs: 1251, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 2444;
    runtimePrimitivesSeen:60)

No error-revealing tests to output.

About to look for failing assertions in 796 regression sequences.

Regression test output:
Regression test count: 796
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.ClassUtils-19/RegressionTest0.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.ClassUtils-19/RegressionTest1.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.ClassUtils-19/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Invalid tests generated: 0

Uncompilable sequences generated (count: 2443).
Please report at https://github.com/randoop/randoop/issues ,
providing the information requested at https://randoop.github.io/randoop/manual/index.html#bug-reporting .
java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[])classArray60;
wildcardClassArray61[0] = wildcardClass58;
java.lang.Class<?>[] wildcardClassArray64 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray61);
java.lang.Class<?> wildcardClass65 = null;
java.lang.Class[] classArray67 = new java.lang.Class[ 1 ];
@SuppressWarnings("unchecked")
java.lang.Class<?>[] wildcardClassArray68 = (java.lang.Class<?>[])classArray67;
wildcardClassArray68[0] = wildcardClass65;
java.lang.Class<?>[] wildcardClassArray71 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray68);
boolean boolean72 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray64, wildcardClassArray68);
boolean boolean74 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray51, wildcardClassArray64, false);
java.lang.Class<?>[] wildcardClassArray75 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[])wildcardClassArray51);
java.lang.String str77 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object)wildcardClassArray75, "Short");
java.lang.Class<?>[] wildcardClassArray78 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[])wildcardClassArray75);
boolean boolean80 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray44, wildcardClassArray78, true);
java.lang.Class<?> wildcardClass81 = wildcardClassArray44.getClass();
boolean boolean83 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<Capture78>)wildcardClass40, (java.lang.Class<Capture79>)wildcardClass81, false);
java.util.List<java.lang.Class<?>> wildcardClassList84 = org.apache.commons.lang3.ClassUtils.getAllInterfaces((java.lang.Class<Capture139>)wildcardClass81);
java.lang.String str85 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Class<Capture379>)wildcardClass81);
java.lang.String str86 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Class<Capture1716>)wildcardClass81);
java.util.List<java.lang.Class<?>> wildcardClassList87 = org.apache.commons.lang3.ClassUtils.getAllInterfaces((java.lang.Class<Capture124239>)wildcardClass81);
java.util.List<java.lang.String> strList88 = org.apache.commons.lang3.ClassUtils.convertClassesToClassNames((java.util.List<java.lang.Class<Capture126295>>)wildcardClassList87);


Progress update: steps=5000, test inputs generated=3389, failing inputs=0      (2020-11-25T00:05:13.307Z     289MB used)
Progress update: steps=5179, test inputs generated=3492, failing inputs=0      (2020-11-25T00:05:19.216Z     617MB used)
Progress update: steps=5179, test inputs generated=3492, failing inputs=0      (2020-11-25T00:05:19.224Z     617MB used)
Normal method executions: 9827737
Exceptional method executions: 229

Average method execution time (normal termination):      0.000314
Average method execution time (exceptional termination): 0.184
Approximate memory usage 617MB
Explorer = ForwardGenerator(steps: 5179, null steps: 1687, num_sequences_generated: 3492;
    allSequences: 3492, regresson seqs: 1188, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 2304;
    runtimePrimitivesSeen:60)

No error-revealing tests to output.

About to look for failing assertions in 762 regression sequences.

Regression test output:
Regression test count: 762
Writing regression JUnit tests...
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.ClassUtils-19/RegressionTest0.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.ClassUtils-19/RegressionTest1.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.ClassUtils-19/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Invalid tests generated: 0

Uncompilable sequences generated (count: 2303).
Please report at https://github.com/randoop/randoop/issues ,
providing the information requested at https://randoop.github.io/randoop/manual/index.html#bug-reporting .
