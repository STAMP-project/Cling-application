Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=183
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=2, test inputs generated=0, failing inputs=0      (2020-11-25T01:44:18.500Z     112MB used)
Progress update: steps=658, test inputs generated=614, failing inputs=21      (2020-11-25T01:45:18.595Z     305MB used)
Progress update: steps=1000, test inputs generated=954, failing inputs=41      (2020-11-25T01:45:53.598Z     332MB used)
Progress update: steps=1256, test inputs generated=1207, failing inputs=58      (2020-11-25T01:46:18.595Z     844MB used)
Progress update: steps=1908, test inputs generated=1854, failing inputs=80      (2020-11-25T01:47:18.596Z     557MB used)
Progress update: steps=2000, test inputs generated=1943, failing inputs=83      (2020-11-25T01:47:22.478Z     117MB used)
Progress update: steps=3000, test inputs generated=2927, failing inputs=117      (2020-11-25T01:48:04.508Z     598MB used)
Progress update: steps=3224, test inputs generated=3149, failing inputs=123      (2020-11-25T01:48:18.596Z     786MB used)
Progress update: steps=4000, test inputs generated=3914, failing inputs=153      (2020-11-25T01:49:11.264Z     1195MB used)
Progress update: steps=4183, test inputs generated=4092, failing inputs=160      (2020-11-25T01:49:18.473Z     1296MB used)
Normal method executions: 1763930
Exceptional method executions: 578

Average method execution time (normal termination):      0.00130
Average method execution time (exceptional termination): 0.235
Approximate memory usage 1296MB
Explorer = ForwardGenerator(steps: 4183, null steps: 91, num_sequences_generated: 4092;
    allSequences: 4092, regresson seqs: 3931, error seqs: 160=160=160, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:2362)

Error-revealing test output:
Error-revealing test count: 160
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-3/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-3/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 2112 regression sequences.

Regression test output:
Regression test count: 2112
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-3/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-3/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-3/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-3/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-3/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-3/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.MutableDateTime.setChronology(org.joda.time.Chronology)
  Possibly flaky:  java.util.Calendar.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
