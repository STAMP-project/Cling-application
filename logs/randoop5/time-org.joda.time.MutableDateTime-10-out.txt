Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=183
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T01:44:51.505Z     112MB used)
Progress update: steps=582, test inputs generated=542, failing inputs=18      (2020-11-25T01:45:51.611Z     60MB used)
Progress update: steps=1000, test inputs generated=956, failing inputs=36      (2020-11-25T01:46:32.724Z     402MB used)
Progress update: steps=1099, test inputs generated=1055, failing inputs=41      (2020-11-25T01:46:51.612Z     294MB used)
Progress update: steps=2000, test inputs generated=1938, failing inputs=85      (2020-11-25T01:47:40.134Z     167MB used)
Progress update: steps=2285, test inputs generated=2219, failing inputs=102      (2020-11-25T01:47:51.612Z     1143MB used)
Progress update: steps=3000, test inputs generated=2922, failing inputs=125      (2020-11-25T01:48:51.208Z     526MB used)
Progress update: steps=3009, test inputs generated=2932, failing inputs=125      (2020-11-25T01:48:51.613Z     609MB used)
Progress update: steps=4000, test inputs generated=3901, failing inputs=172      (2020-11-25T01:49:32.953Z     169MB used)
Progress update: steps=4306, test inputs generated=4201, failing inputs=185      (2020-11-25T01:49:51.545Z     454MB used)
Normal method executions: 3027124
Exceptional method executions: 607

Average method execution time (normal termination):      0.000787
Average method execution time (exceptional termination): 0.190
Approximate memory usage 454MB
Explorer = ForwardGenerator(steps: 4306, null steps: 105, num_sequences_generated: 4201;
    allSequences: 4201, regresson seqs: 4015, error seqs: 185=185=185, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:2756)

Error-revealing test output:
Error-revealing test count: 185
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-10/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-10/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 2175 regression sequences.

Regression test output:
Regression test count: 2175
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-10/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-10/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-10/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-10/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-10/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-10/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.Chronology)
  Possibly flaky:  java.util.Calendar.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
