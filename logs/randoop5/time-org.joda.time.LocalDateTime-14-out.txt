Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=167
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=4, test inputs generated=0, failing inputs=0      (2020-11-25T02:54:27.179Z     112MB used)
Progress update: steps=447, test inputs generated=419, failing inputs=0      (2020-11-25T02:55:27.229Z     274MB used)
Progress update: steps=1000, test inputs generated=948, failing inputs=0      (2020-11-25T02:56:01.311Z     96MB used)
Progress update: steps=1394, test inputs generated=1333, failing inputs=0      (2020-11-25T02:56:27.229Z     423MB used)
Progress update: steps=1911, test inputs generated=1829, failing inputs=0      (2020-11-25T02:57:27.230Z     968MB used)
Progress update: steps=2000, test inputs generated=1915, failing inputs=0      (2020-11-25T02:57:36.667Z     415MB used)
Progress update: steps=2762, test inputs generated=2653, failing inputs=0      (2020-11-25T02:58:27.230Z     244MB used)
Progress update: steps=3000, test inputs generated=2882, failing inputs=0      (2020-11-25T02:58:46.614Z     1269MB used)
Progress update: steps=3627, test inputs generated=3489, failing inputs=0      (2020-11-25T02:59:27.231Z     1226MB used)
Progress update: steps=3627, test inputs generated=3489, failing inputs=0      (2020-11-25T02:59:27.332Z     1226MB used)
Normal method executions: 4203137
Exceptional method executions: 615

Average method execution time (normal termination):      0.000721
Average method execution time (exceptional termination): 0.178
Approximate memory usage 1226MB
Explorer = ForwardGenerator(steps: 3627, null steps: 138, num_sequences_generated: 3489;
    allSequences: 3489, regresson seqs: 3440, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 49;
    runtimePrimitivesSeen:1052)

No error-revealing tests to output.

About to look for failing assertions in 1886 regression sequences.

Regression test output:
Regression test count: 1886
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-14/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-14/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-14/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-14/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-14/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValue()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
