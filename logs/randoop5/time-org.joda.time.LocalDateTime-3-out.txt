Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=167
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T02:53:17.072Z     112MB used)
Progress update: steps=740, test inputs generated=692, failing inputs=0      (2020-11-25T02:54:17.147Z     105MB used)
Progress update: steps=1000, test inputs generated=941, failing inputs=0      (2020-11-25T02:54:39.907Z     773MB used)
Progress update: steps=1286, test inputs generated=1224, failing inputs=0      (2020-11-25T02:55:17.151Z     709MB used)
Progress update: steps=2000, test inputs generated=1918, failing inputs=0      (2020-11-25T02:56:07.470Z     961MB used)
Progress update: steps=2157, test inputs generated=2073, failing inputs=0      (2020-11-25T02:56:17.153Z     1021MB used)
Progress update: steps=2725, test inputs generated=2618, failing inputs=0      (2020-11-25T02:57:17.153Z     1095MB used)
Progress update: steps=3000, test inputs generated=2884, failing inputs=0      (2020-11-25T02:57:43.934Z     985MB used)
Progress update: steps=3515, test inputs generated=3380, failing inputs=0      (2020-11-25T02:58:17.121Z     808MB used)
Normal method executions: 3550073
Exceptional method executions: 614

Average method execution time (normal termination):      0.000780
Average method execution time (exceptional termination): 0.140
Approximate memory usage 808MB
Explorer = ForwardGenerator(steps: 3515, null steps: 135, num_sequences_generated: 3380;
    allSequences: 3380, regresson seqs: 3335, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 45;
    runtimePrimitivesSeen:988)

No error-revealing tests to output.
                                                                                                                                                                                                       
About to look for failing assertions in 1847 regression sequences.

Regression test output:
Regression test count: 1847
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-3/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-3/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-3/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-3/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-3/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.LocalDateTime.get(org.joda.time.DateTimeFieldType)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
