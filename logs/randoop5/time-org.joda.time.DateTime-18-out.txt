Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=195
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=8, test inputs generated=0, failing inputs=0      (2020-11-25T02:35:33.126Z     112MB used)
Progress update: steps=547, test inputs generated=468, failing inputs=13      (2020-11-25T02:36:33.177Z     481MB used)
Progress update: steps=1000, test inputs generated=917, failing inputs=18      (2020-11-25T02:36:58.365Z     963MB used)
Progress update: steps=1456, test inputs generated=1362, failing inputs=23      (2020-11-25T02:37:33.178Z     1229MB used)
Progress update: steps=2000, test inputs generated=1894, failing inputs=27      (2020-11-25T02:38:29.348Z     1092MB used)
Progress update: steps=2072, test inputs generated=1964, failing inputs=27      (2020-11-25T02:38:33.178Z     347MB used)
Progress update: steps=2876, test inputs generated=2754, failing inputs=29      (2020-11-25T02:39:33.179Z     219MB used)
Progress update: steps=3000, test inputs generated=2871, failing inputs=30      (2020-11-25T02:39:57.549Z     159MB used)
Progress update: steps=3504, test inputs generated=3354, failing inputs=34      (2020-11-25T02:40:33.112Z     148MB used)
Normal method executions: 3429363
Exceptional method executions: 518

Average method execution time (normal termination):      0.000632
Average method execution time (exceptional termination): 0.223
Approximate memory usage 148MB
Explorer = ForwardGenerator(steps: 3504, null steps: 150, num_sequences_generated: 3354;
    allSequences: 3354, regresson seqs: 3302, error seqs: 34=34=34, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 18;
    runtimePrimitivesSeen:191)

Error-revealing test output:
Error-revealing test count: 34
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.DateTime-18/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-18/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 1815 regression sequences.

Regression test output:
Regression test count: 1815
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-18/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-18/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-18/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-18/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-18/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValue()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumTextLength(java.util.Locale)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumShortTextLength(java.util.Locale)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getLeapAmount()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getFieldType()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getDifferenceAsLong(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getDifference(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
