Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=183
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=2, test inputs generated=0, failing inputs=0      (2020-11-25T01:45:02.041Z     112MB used)
Progress update: steps=558, test inputs generated=517, failing inputs=15      (2020-11-25T01:46:02.088Z     603MB used)
Progress update: steps=1000, test inputs generated=952, failing inputs=20      (2020-11-25T01:46:53.674Z     350MB used)
Progress update: steps=1054, test inputs generated=1007, failing inputs=23      (2020-11-25T01:47:02.088Z     650MB used)
Progress update: steps=2000, test inputs generated=1942, failing inputs=50      (2020-11-25T01:47:40.741Z     613MB used)
Progress update: steps=2505, test inputs generated=2444, failing inputs=65      (2020-11-25T01:48:02.089Z     1123MB used)
Progress update: steps=3000, test inputs generated=2932, failing inputs=80      (2020-11-25T01:48:49.638Z     469MB used)
Progress update: steps=3320, test inputs generated=3250, failing inputs=90      (2020-11-25T01:49:02.089Z     281MB used)
Progress update: steps=4000, test inputs generated=3917, failing inputs=113      (2020-11-25T01:49:28.344Z     731MB used)
Progress update: steps=4578, test inputs generated=4488, failing inputs=131      (2020-11-25T01:50:02.029Z     283MB used)
Normal method executions: 2021884
Exceptional method executions: 636

Average method execution time (normal termination):      0.00103
Average method execution time (exceptional termination): 0.146
Approximate memory usage 283MB
Explorer = ForwardGenerator(steps: 4578, null steps: 90, num_sequences_generated: 4488;
    allSequences: 4488, regresson seqs: 4356, error seqs: 131=131=131, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:2828)

Error-revealing test output:
Error-revealing test count: 131
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-17/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-17/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 2341 regression sequences.

Regression test output:
Regression test count: 2341
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-17/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-17/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-17/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-17/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-17/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.MutableDateTime-17/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.Chronology)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
