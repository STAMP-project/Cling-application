Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=122
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=3, test inputs generated=0, failing inputs=0      (2020-11-25T01:52:25.827Z     112MB used)
Progress update: steps=566, test inputs generated=543, failing inputs=0      (2020-11-25T01:53:25.885Z     540MB used)
Progress update: steps=1000, test inputs generated=958, failing inputs=0      (2020-11-25T01:53:54.643Z     843MB used)
Progress update: steps=1498, test inputs generated=1425, failing inputs=0      (2020-11-25T01:54:25.888Z     636MB used)
Progress update: steps=2000, test inputs generated=1892, failing inputs=0      (2020-11-25T01:55:09.829Z     887MB used)
Progress update: steps=2159, test inputs generated=2041, failing inputs=0      (2020-11-25T01:55:25.889Z     349MB used)
Progress update: steps=2833, test inputs generated=2672, failing inputs=0      (2020-11-25T01:56:25.889Z     842MB used)
Progress update: steps=3000, test inputs generated=2828, failing inputs=0      (2020-11-25T01:56:35.764Z     138MB used)
Progress update: steps=3949, test inputs generated=3709, failing inputs=0      (2020-11-25T01:57:25.836Z     714MB used)
Normal method executions: 7304816
Exceptional method executions: 546

Average method execution time (normal termination):      0.000546
Average method execution time (exceptional termination): 0.195
Approximate memory usage 714MB
Explorer = ForwardGenerator(steps: 3949, null steps: 240, num_sequences_generated: 3709;
    allSequences: 3709, regresson seqs: 3708, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:1054)

No error-revealing tests to output.

About to look for failing assertions in 1977 regression sequences.

Regression test output:
Regression test count: 1977
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-9/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-9/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-9/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-9/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-9/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValue()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
