Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=122
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=0, test inputs generated=0, failing inputs=0      (2020-11-25T01:54:22.033Z     112MB used)
Progress update: steps=647, test inputs generated=615, failing inputs=0      (2020-11-25T01:55:22.087Z     804MB used)
Progress update: steps=1000, test inputs generated=948, failing inputs=0      (2020-11-25T01:56:02.968Z     898MB used)
Progress update: steps=1338, test inputs generated=1270, failing inputs=0      (2020-11-25T01:56:22.088Z     322MB used)
Progress update: steps=2000, test inputs generated=1891, failing inputs=0      (2020-11-25T01:56:56.177Z     209MB used)
Progress update: steps=2484, test inputs generated=2337, failing inputs=0      (2020-11-25T01:57:22.089Z     869MB used)
Progress update: steps=2977, test inputs generated=2794, failing inputs=0      (2020-11-25T01:58:22.090Z     324MB used)
Progress update: steps=3000, test inputs generated=2816, failing inputs=0      (2020-11-25T01:58:25.488Z     505MB used)
Progress update: steps=3836, test inputs generated=3597, failing inputs=0      (2020-11-25T01:59:22.043Z     791MB used)
Normal method executions: 6298559
Exceptional method executions: 489

Average method execution time (normal termination):      0.000555
Average method execution time (exceptional termination): 0.264
Approximate memory usage 791MB
Explorer = ForwardGenerator(steps: 3836, null steps: 239, num_sequences_generated: 3597;
    allSequences: 3597, regresson seqs: 3594, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 3;
    runtimePrimitivesSeen:656)

No error-revealing tests to output.

About to look for failing assertions in 1930 regression sequences.

Regression test output:
Regression test count: 1930
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-17/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-17/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-17/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-17/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalTime-17/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getAsShortText(java.util.Locale)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
