Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=135
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=16, test inputs generated=1, failing inputs=0      (2020-11-25T00:44:13.463Z     112MB used)
Progress update: steps=690, test inputs generated=658, failing inputs=0      (2020-11-25T00:45:13.511Z     490MB used)
Progress update: steps=1000, test inputs generated=952, failing inputs=0      (2020-11-25T00:45:54.549Z     331MB used)
Progress update: steps=1316, test inputs generated=1251, failing inputs=0      (2020-11-25T00:46:13.512Z     950MB used)
Progress update: steps=2000, test inputs generated=1885, failing inputs=0      (2020-11-25T00:47:02.267Z     771MB used)
Progress update: steps=2150, test inputs generated=2021, failing inputs=0      (2020-11-25T00:47:13.512Z     699MB used)
Progress update: steps=2809, test inputs generated=2623, failing inputs=0      (2020-11-25T00:48:13.513Z     581MB used)
Progress update: steps=3000, test inputs generated=2796, failing inputs=0      (2020-11-25T00:48:23.552Z     788MB used)
Progress update: steps=3722, test inputs generated=3447, failing inputs=0      (2020-11-25T00:49:13.450Z     680MB used)
Normal method executions: 2432452
Exceptional method executions: 556

Average method execution time (normal termination):      0.000562
Average method execution time (exceptional termination): 0.0877
Approximate memory usage 680MB
Explorer = ForwardGenerator(steps: 3722, null steps: 275, num_sequences_generated: 3447;
    allSequences: 3447, regresson seqs: 3446, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:162)

No error-revealing tests to output.

About to look for failing assertions in 1862 regression sequences.

Regression test output:
Regression test count: 1862
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.text.StrBuilder-13/RegressionTest0.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.text.StrBuilder-13/RegressionTest1.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.text.StrBuilder-13/RegressionTest2.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.text.StrBuilder-13/RegressionTest3.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.text.StrBuilder-13/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.toCharArray()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.replaceFirst(org.apache.commons.lang3.text.StrMatcher,java.lang.String)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.asWriter()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.asTokenizer()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.asReader()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.appendln(boolean)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.appendNewLine()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
most likely to be the problem.
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.toCharArray()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.rightString(int)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.replaceFirst(org.apache.commons.lang3.text.StrMatcher,java.lang.String)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.insert(int,char[])
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
