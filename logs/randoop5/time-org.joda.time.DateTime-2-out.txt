Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=195
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=10, test inputs generated=0, failing inputs=0      (2020-11-25T02:32:23.154Z     112MB used)
Progress update: steps=738, test inputs generated=658, failing inputs=15      (2020-11-25T02:33:23.261Z     454MB used)
Progress update: steps=1000, test inputs generated=917, failing inputs=18      (2020-11-25T02:33:58.665Z     194MB used)
Progress update: steps=1331, test inputs generated=1239, failing inputs=22      (2020-11-25T02:34:23.261Z     377MB used)
Progress update: steps=2000, test inputs generated=1892, failing inputs=26      (2020-11-25T02:35:22.182Z     1003MB used)
Progress update: steps=2011, test inputs generated=1903, failing inputs=27      (2020-11-25T02:35:23.262Z     1086MB used)
Progress update: steps=2508, test inputs generated=2385, failing inputs=30      (2020-11-25T02:36:23.262Z     242MB used)
Progress update: steps=3000, test inputs generated=2866, failing inputs=32      (2020-11-25T02:36:52.295Z     1040MB used)
Progress update: steps=3421, test inputs generated=3276, failing inputs=32      (2020-11-25T02:37:23.132Z     1326MB used)
Normal method executions: 3258057
Exceptional method executions: 499

Average method execution time (normal termination):      0.000973
Average method execution time (exceptional termination): 0.456
Approximate memory usage 1326MB
Explorer = ForwardGenerator(steps: 3421, null steps: 145, num_sequences_generated: 3276;
    allSequences: 3276, regresson seqs: 3225, error seqs: 32=32=32, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 19;
    runtimePrimitivesSeen:179)

Error-revealing test output:
Error-revealing test count: 32
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.DateTime-2/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-2/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 1764 regression sequences.

Regression test output:
Regression test count: 1764
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-2/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-2/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-2/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-2/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-2/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumTextLength(java.util.Locale)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getLeapAmount()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getFieldType()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getDifferenceAsLong(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getDifference(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText(java.util.Locale)
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
