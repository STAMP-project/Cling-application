Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=167
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=4, test inputs generated=0, failing inputs=0      (2020-11-25T02:53:54.615Z     112MB used)
Progress update: steps=635, test inputs generated=596, failing inputs=0      (2020-11-25T02:54:54.661Z     150MB used)
Progress update: steps=1000, test inputs generated=947, failing inputs=0      (2020-11-25T02:55:38.443Z     532MB used)
Progress update: steps=1258, test inputs generated=1197, failing inputs=0      (2020-11-25T02:55:54.662Z     344MB used)
Progress update: steps=2000, test inputs generated=1916, failing inputs=0      (2020-11-25T02:56:49.149Z     749MB used)
Progress update: steps=2073, test inputs generated=1986, failing inputs=0      (2020-11-25T02:56:54.662Z     427MB used)
Progress update: steps=2682, test inputs generated=2578, failing inputs=0      (2020-11-25T02:57:54.663Z     191MB used)
Progress update: steps=3000, test inputs generated=2886, failing inputs=0      (2020-11-25T02:58:14.071Z     578MB used)
Progress update: steps=3501, test inputs generated=3373, failing inputs=0      (2020-11-25T02:58:54.663Z     1207MB used)
Progress update: steps=3501, test inputs generated=3374, failing inputs=0      (2020-11-25T02:58:54.735Z     1207MB used)
Normal method executions: 4213986
Exceptional method executions: 618

Average method execution time (normal termination):      0.000539
Average method execution time (exceptional termination): 0.149
Approximate memory usage 1207MB
Explorer = ForwardGenerator(steps: 3501, null steps: 127, num_sequences_generated: 3374;
    allSequences: 3374, regresson seqs: 3319, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 55;
    runtimePrimitivesSeen:1315)

No error-revealing tests to output.

About to look for failing assertions in 1809 regression sequences.

Regression test output:
Regression test count: 1809
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-11/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-11/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-11/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-11/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-11/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValue()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
