Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=167
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T02:53:17.994Z     112MB used)
Progress update: steps=700, test inputs generated=663, failing inputs=0      (2020-11-25T02:54:18.080Z     50MB used)
Progress update: steps=1000, test inputs generated=950, failing inputs=0      (2020-11-25T02:54:43.924Z     733MB used)
Progress update: steps=1236, test inputs generated=1184, failing inputs=0      (2020-11-25T02:55:18.081Z     358MB used)
Progress update: steps=2000, test inputs generated=1923, failing inputs=0      (2020-11-25T02:56:11.171Z     718MB used)
Progress update: steps=2101, test inputs generated=2019, failing inputs=0      (2020-11-25T02:56:18.081Z     736MB used)
Progress update: steps=2672, test inputs generated=2566, failing inputs=0      (2020-11-25T02:57:18.085Z     447MB used)
Progress update: steps=3000, test inputs generated=2881, failing inputs=0      (2020-11-25T02:57:46.566Z     1218MB used)
Progress update: steps=3539, test inputs generated=3401, failing inputs=0      (2020-11-25T02:58:18.006Z     996MB used)
Normal method executions: 4000580
Exceptional method executions: 595

Average method execution time (normal termination):      0.000718
Average method execution time (exceptional termination): 0.201
Approximate memory usage 996MB
Explorer = ForwardGenerator(steps: 3539, null steps: 138, num_sequences_generated: 3401;
    allSequences: 3401, regresson seqs: 3350, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 51;
    runtimePrimitivesSeen:1091)

No error-revealing tests to output.

About to look for failing assertions in 1802 regression sequences.

Regression test output:
Regression test count: 1802
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-4/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-4/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-4/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-4/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-4/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValue()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
