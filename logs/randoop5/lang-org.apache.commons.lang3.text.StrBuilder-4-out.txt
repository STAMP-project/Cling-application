Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=135
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T00:43:08.954Z     112MB used)
Progress update: steps=697, test inputs generated=664, failing inputs=0      (2020-11-25T00:44:09.005Z     650MB used)
Progress update: steps=1000, test inputs generated=952, failing inputs=0      (2020-11-25T00:44:32.329Z     648MB used)
Progress update: steps=1462, test inputs generated=1387, failing inputs=0      (2020-11-25T00:45:09.005Z     746MB used)
Progress update: steps=2000, test inputs generated=1885, failing inputs=0      (2020-11-25T00:46:01.007Z     625MB used)
Progress update: steps=2145, test inputs generated=2016, failing inputs=0      (2020-11-25T00:46:09.010Z     523MB used)
Progress update: steps=3000, test inputs generated=2796, failing inputs=0      (2020-11-25T00:47:07.247Z     652MB used)
Progress update: steps=3025, test inputs generated=2818, failing inputs=0      (2020-11-25T00:47:09.010Z     836MB used)
Progress update: steps=3669, test inputs generated=3398, failing inputs=0      (2020-11-25T00:48:08.941Z     402MB used)
Normal method executions: 2390664
Exceptional method executions: 550

Average method execution time (normal termination):      0.000684
Average method execution time (exceptional termination): 0.0805
Approximate memory usage 402MB
Explorer = ForwardGenerator(steps: 3669, null steps: 271, num_sequences_generated: 3398;
    allSequences: 3398, regresson seqs: 3397, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:160)

No error-revealing tests to output.

About to look for failing assertions in 1838 regression sequences.

Regression test output:
Regression test count: 1838
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.text.StrBuilder-4/RegressionTest0.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.text.StrBuilder-4/RegressionTest1.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.text.StrBuilder-4/RegressionTest2.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.text.StrBuilder-4/RegressionTest3.java
Created file /experiment/results/randoop5/lang-org.apache.commons.lang3.text.StrBuilder-4/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.toCharArray()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.replaceFirst(org.apache.commons.lang3.text.StrMatcher,java.lang.String)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.asWriter()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.asTokenizer()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.asReader()
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.appendln(boolean)
  Possibly flaky:  org.apache.commons.lang3.text.StrBuilder.appendNewLine()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
