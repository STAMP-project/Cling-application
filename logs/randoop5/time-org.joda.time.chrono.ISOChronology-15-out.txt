Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=55
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T02:19:10.787Z     112MB used)
Progress update: steps=1000, test inputs generated=906, failing inputs=9      (2020-11-25T02:19:55.527Z     136MB used)
Progress update: steps=1330, test inputs generated=1230, failing inputs=15      (2020-11-25T02:20:10.882Z     227MB used)
Progress update: steps=2000, test inputs generated=1888, failing inputs=32      (2020-11-25T02:20:43.434Z     253MB used)
Progress update: steps=2391, test inputs generated=2269, failing inputs=40      (2020-11-25T02:21:10.883Z     307MB used)
Progress update: steps=3000, test inputs generated=2859, failing inputs=50      (2020-11-25T02:21:44.306Z     249MB used)
Progress update: steps=3907, test inputs generated=3747, failing inputs=70      (2020-11-25T02:22:10.883Z     494MB used)
Progress update: steps=4000, test inputs generated=3839, failing inputs=73      (2020-11-25T02:22:13.214Z     970MB used)
Progress update: steps=5000, test inputs generated=4812, failing inputs=100      (2020-11-25T02:22:47.156Z     1268MB used)
Progress update: steps=5694, test inputs generated=5493, failing inputs=114      (2020-11-25T02:23:10.884Z     1248MB used)
Progress update: steps=6000, test inputs generated=5794, failing inputs=121      (2020-11-25T02:23:20.485Z     377MB used)
Progress update: steps=7000, test inputs generated=6775, failing inputs=142      (2020-11-25T02:24:08.622Z     841MB used)
Progress update: steps=7109, test inputs generated=6885, failing inputs=143      (2020-11-25T02:24:10.783Z     256MB used)
Normal method executions: 3448904
Exceptional method executions: 1048

Average method execution time (normal termination):      0.000621
Average method execution time (exceptional termination): 0.280
Approximate memory usage 256MB
Explorer = ForwardGenerator(steps: 7109, null steps: 224, num_sequences_generated: 6885;
    allSequences: 6885, regresson seqs: 6741, error seqs: 143=143=143, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:158)

Error-revealing test output:
Error-revealing test count: 143
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.chrono.ISOChronology-15/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.chrono.ISOChronology-15/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 3570 regression sequences.

Regression test output:
Regression test count: 3570
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.chrono.ISOChronology-15/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.chrono.ISOChronology-15/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.chrono.ISOChronology-15/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.chrono.ISOChronology-15/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.chrono.ISOChronology-15/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.chrono.ISOChronology-15/RegressionTest5.java
Created file /experiment/results/randoop5/time-org.joda.time.chrono.ISOChronology-15/RegressionTest6.java
Created file /experiment/results/randoop5/time-org.joda.time.chrono.ISOChronology-15/RegressionTest7.java
Created file /experiment/results/randoop5/time-org.joda.time.chrono.ISOChronology-15/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Invalid tests generated: 0
