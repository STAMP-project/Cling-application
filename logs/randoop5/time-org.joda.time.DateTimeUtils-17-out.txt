Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=19
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T02:27:18.793Z     102MB used)
Progress update: steps=1000, test inputs generated=309, failing inputs=0      (2020-11-25T02:27:48.130Z     602MB used)
Progress update: steps=2000, test inputs generated=553, failing inputs=0      (2020-11-25T02:28:07.489Z     36MB used)
Progress update: steps=2626, test inputs generated=692, failing inputs=0      (2020-11-25T02:28:18.831Z     582MB used)
Progress update: steps=3000, test inputs generated=788, failing inputs=0      (2020-11-25T02:28:32.442Z     958MB used)
Progress update: steps=4000, test inputs generated=1025, failing inputs=0      (2020-11-25T02:28:54.789Z     959MB used)
Progress update: steps=5000, test inputs generated=1272, failing inputs=0      (2020-11-25T02:29:09.294Z     1006MB used)
Progress update: steps=5632, test inputs generated=1431, failing inputs=0      (2020-11-25T02:29:18.831Z     574MB used)
Progress update: steps=6000, test inputs generated=1522, failing inputs=0      (2020-11-25T02:29:24.801Z     943MB used)
Progress update: steps=7000, test inputs generated=1747, failing inputs=0      (2020-11-25T02:29:40.314Z     743MB used)
Progress update: steps=8000, test inputs generated=1982, failing inputs=0      (2020-11-25T02:29:56.690Z     457MB used)
Progress update: steps=9000, test inputs generated=2217, failing inputs=0      (2020-11-25T02:30:11.437Z     202MB used)
Progress update: steps=9558, test inputs generated=2340, failing inputs=0      (2020-11-25T02:30:18.832Z     721MB used)
Progress update: steps=10000, test inputs generated=2442, failing inputs=0      (2020-11-25T02:30:25.560Z     1156MB used)
Progress update: steps=11000, test inputs generated=2660, failing inputs=0      (2020-11-25T02:30:46.809Z     767MB used)
Progress update: steps=12000, test inputs generated=2888, failing inputs=0      (2020-11-25T02:31:13.441Z     416MB used)
Progress update: steps=12326, test inputs generated=2964, failing inputs=0      (2020-11-25T02:31:18.832Z     733MB used)
Progress update: steps=13000, test inputs generated=3112, failing inputs=0      (2020-11-25T02:31:27.937Z     55MB used)
Progress update: steps=14000, test inputs generated=3323, failing inputs=0      (2020-11-25T02:31:38.932Z     936MB used)
Progress update: steps=15000, test inputs generated=3558, failing inputs=0      (2020-11-25T02:31:50.293Z     623MB used)
Progress update: steps=16000, test inputs generated=3776, failing inputs=0      (2020-11-25T02:32:00.977Z     238MB used)
Progress update: steps=17000, test inputs generated=4008, failing inputs=0      (2020-11-25T02:32:13.254Z     1221MB used)
Progress update: steps=17531, test inputs generated=4116, failing inputs=0      (2020-11-25T02:32:18.770Z     392MB used)
Normal method executions: 134286
Exceptional method executions: 3

Average method execution time (normal termination):      0.00487
Average method execution time (exceptional termination): 1.00
Approximate memory usage 392MB
Explorer = ForwardGenerator(steps: 17531, null steps: 13415, num_sequences_generated: 4116;
    allSequences: 4116, regresson seqs: 4115, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:40)

No error-revealing tests to output.

About to look for failing assertions in 2002 regression sequences.

Regression test output:
Regression test count: 2002
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-17/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-17/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-17/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-17/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-17/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTimeUtils-17/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.DateTimeUtils.getInstantMillis(org.joda.time.ReadableInstant)
  Possibly flaky:  org.joda.time.DateTimeUtils.currentTimeMillis()
  Possibly flaky:  java.lang.String.valueOf(long)
  Possibly flaky:  java.lang.Long.valueOf(long)
  Possibly flaky:  java.lang.Long.toString(long)
  Possibly flaky:  java.lang.Long.toOctalString(long)
  Possibly flaky:  java.lang.Long.toHexString(long)
  Possibly flaky:  java.lang.Long.toBinaryString(long)
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
