Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=167
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T02:55:53.026Z     112MB used)
Progress update: steps=832, test inputs generated=790, failing inputs=0      (2020-11-25T02:56:53.054Z     103MB used)
Progress update: steps=1000, test inputs generated=951, failing inputs=0      (2020-11-25T02:57:13.126Z     463MB used)
Progress update: steps=1551, test inputs generated=1483, failing inputs=0      (2020-11-25T02:57:53.055Z     565MB used)
Progress update: steps=2000, test inputs generated=1916, failing inputs=0      (2020-11-25T02:58:17.824Z     705MB used)
Progress update: steps=2503, test inputs generated=2405, failing inputs=0      (2020-11-25T02:58:53.056Z     135MB used)
Progress update: steps=3000, test inputs generated=2886, failing inputs=0      (2020-11-25T02:59:17.073Z     498MB used)
Progress update: steps=3387, test inputs generated=3261, failing inputs=0      (2020-11-25T02:59:53.056Z     921MB used)
Progress update: steps=4000, test inputs generated=3854, failing inputs=0      (2020-11-25T03:00:17.733Z     667MB used)
Progress update: steps=5000, test inputs generated=4819, failing inputs=0      (2020-11-25T03:00:51.590Z     486MB used)
Progress update: steps=5025, test inputs generated=4844, failing inputs=0      (2020-11-25T03:00:53.028Z     719MB used)
Normal method executions: 4250943
Exceptional method executions: 879

Average method execution time (normal termination):      0.000828
Average method execution time (exceptional termination): 0.130
Approximate memory usage 719MB
Explorer = ForwardGenerator(steps: 5025, null steps: 181, num_sequences_generated: 4844;
    allSequences: 4844, regresson seqs: 4787, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 57;
    runtimePrimitivesSeen:1172)

No error-revealing tests to output.
                                                                                                                                                                                                       
About to look for failing assertions in 2633 regression sequences.

Regression test output:
Regression test count: 2633
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-17/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-17/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-17/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-17/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-17/RegressionTest4.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-17/RegressionTest5.java
Created file /experiment/results/randoop5/time-org.joda.time.LocalDateTime-17/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValue()
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
