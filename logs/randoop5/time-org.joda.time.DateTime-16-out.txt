Randoop for Java version "4.2.4, branch master, commit be6dbd3, 2020-07-14".

Will try to generate tests for 1 classes.
PUBLIC MEMBERS=195
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2020-11-25T02:34:40.770Z     112MB used)
Progress update: steps=659, test inputs generated=579, failing inputs=14      (2020-11-25T02:35:40.882Z     573MB used)
Progress update: steps=1000, test inputs generated=914, failing inputs=18      (2020-11-25T02:36:24.283Z     534MB used)
Progress update: steps=1266, test inputs generated=1175, failing inputs=19      (2020-11-25T02:36:40.882Z     256MB used)
Progress update: steps=2000, test inputs generated=1895, failing inputs=25      (2020-11-25T02:37:27.346Z     438MB used)
Progress update: steps=2143, test inputs generated=2033, failing inputs=25      (2020-11-25T02:37:40.883Z     632MB used)
Progress update: steps=2838, test inputs generated=2718, failing inputs=30      (2020-11-25T02:38:40.883Z     571MB used)
Progress update: steps=3000, test inputs generated=2877, failing inputs=34      (2020-11-25T02:38:51.864Z     937MB used)
Progress update: steps=3503, test inputs generated=3372, failing inputs=35      (2020-11-25T02:39:40.762Z     626MB used)
Normal method executions: 3132041
Exceptional method executions: 514

Average method execution time (normal termination):      0.000778
Average method execution time (exceptional termination): 0.354
Approximate memory usage 626MB
Explorer = ForwardGenerator(steps: 3503, null steps: 131, num_sequences_generated: 3372;
    allSequences: 3372, regresson seqs: 3313, error seqs: 35=35=35, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 24;
    runtimePrimitivesSeen:198)

Error-revealing test output:
Error-revealing test count: 35
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop5/time-org.joda.time.DateTime-16/ErrorTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-16/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 1782 regression sequences.

Regression test output:
Regression test count: 1782
Writing regression JUnit tests...
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-16/RegressionTest0.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-16/RegressionTest1.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-16/RegressionTest2.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-16/RegressionTest3.java
Created file /experiment/results/randoop5/time-org.joda.time.DateTime-16/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toString()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getName()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValue()
  Possibly flaky:  org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumTextLength(java.util.Locale)
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
