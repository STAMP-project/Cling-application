Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".
Cannot instantiate non-accessible class org.mockito.asm.MethodWriter specified via --testclass or --classlist; will use its static methods.

Will try to generate tests for 12 classes.
PUBLIC MEMBERS=120
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=0, test inputs generated=0, failing inputs=0      (2022-02-22T16:07:10.895Z     226M used)
Progress update: steps=1000, test inputs generated=562, failing inputs=0      (2022-02-22T16:07:37.038Z     687M used)
Progress update: steps=2000, test inputs generated=1186, failing inputs=0      (2022-02-22T16:07:48.579Z     1.53G used)
Progress update: steps=3000, test inputs generated=1792, failing inputs=0      (2022-02-22T16:07:58.337Z     2.15G used)
Progress update: steps=3945, test inputs generated=2359, failing inputs=0      (2022-02-22T16:08:10.933Z     2.67G used)
Progress update: steps=4000, test inputs generated=2390, failing inputs=0      (2022-02-22T16:08:11.674Z     2.81G used)
Progress update: steps=5000, test inputs generated=3014, failing inputs=0      (2022-02-22T16:08:30.335Z     655M used)
Progress update: steps=6000, test inputs generated=3707, failing inputs=0      (2022-02-22T16:08:46.189Z     2.90G used)
Progress update: steps=7000, test inputs generated=4407, failing inputs=0      (2022-02-22T16:09:04.496Z     2.56G used)
Progress update: steps=7452, test inputs generated=4726, failing inputs=0      (2022-02-22T16:09:10.934Z     3.12G used)
Progress update: steps=8000, test inputs generated=5127, failing inputs=0      (2022-02-22T16:09:22.406Z     3.51G used)Long generation time 3015 msec (= 3015 + 0) for
org.mockito.asm.ClassReader classReader1 = new org.mockito.asm.ClassReader("java.io.IOException");
int int2 = classReader1.header;
int int4 = classReader1.readByte((int)' ');
long long6 = classReader1.readLong(0);
int int7 = classReader1.getAccess();
org.mockito.asm.ClassWriter classWriter9 = new org.mockito.asm.ClassWriter(classReader1, 7);
java.lang.String str10 = classReader1.getClassName();
java.lang.String str11 = classReader1.getSuperName();


Progress update: steps=9000, test inputs generated=5816, failing inputs=0      (2022-02-22T16:09:40.651Z     2.82G used)Long generation time 1737 msec (= 1737 + 0) for
org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int)(short)-1);
classWriter1.visitSource("hi!", "hi!");
classWriter1.visitOuterClass("hi!", "", "");
org.mockito.asm.ClassWriter classWriter15 = new org.mockito.asm.ClassWriter(2);
classWriter15.visitOuterClass("", "hi!", "hi!");
java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "", "" };
classWriter15.visit((int)(short)10, (-1), "hi!", "", "", strArray28);
classWriter1.visit((int)(short)-1, (int)'#', "java/lang/Exception", "java.io.IOException: java.io.IOException", "hi!", strArray28);
org.mockito.asm.AnnotationVisitor annotationVisitor33 = classWriter1.visitAnnotation("", false);
annotationVisitor33.visitEnum("L652780390", "L994583783", "L1382634883");

Long generation time 2051 msec (= 2051 + 0) for
org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int)(short)34);
org.mockito.asm.ByteVector byteVector3 = byteVector1.putShort((int)(byte)-1);
org.mockito.asm.ClassReader classReader5 = new org.mockito.asm.ClassReader("java.io.IOException");
int int6 = classReader5.header;
byte[] byteArray7 = classReader5.b;
org.mockito.asm.ByteVector byteVector10 = byteVector1.putByteArray(byteArray7, (int)(short)34, 9);
org.mockito.asm.ByteVector byteVector12 = byteVector1.putShort((int)(short)0);
org.mockito.asm.ByteVector byteVector14 = byteVector1.putShort(8449);
org.mockito.asm.ByteVector byteVector16 = byteVector14.putLong((long)(-21316096));
org.mockito.asm.ByteVector byteVector18 = byteVector16.putInt(0);
org.mockito.asm.ByteVector byteVector20 = byteVector18.putShort(29541);
org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("L1820146913");


Progress update: steps=10000, test inputs generated=6525, failing inputs=0      (2022-02-22T16:10:06.591Z     3.97G used)
Progress update: steps=10141, test inputs generated=6618, failing inputs=0      (2022-02-22T16:10:10.935Z     3.93G used)Long generation time 1370 msec (= 1369 + 0) for
org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter(2);
classWriter1.visitOuterClass("", "hi!", "hi!");
classWriter1.visitEnd();
org.mockito.asm.ClassWriter classWriter13 = new org.mockito.asm.ClassWriter(2);
classWriter13.visitOuterClass("", "hi!", "hi!");
java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "" };
classWriter13.visit((int)(short)10, (-1), "hi!", "", "", strArray26);
classWriter1.visit(0, (int)(short)100, "hi!", "hi!", "", strArray26);
java.io.IOException iOException34 = new java.io.IOException();
java.io.IOException iOException35 = new java.io.IOException((java.lang.Throwable)iOException34);
java.io.IOException iOException36 = new java.io.IOException();
java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable)iOException36);
iOException35.addSuppressed((java.lang.Throwable)iOException37);
java.io.IOException iOException39 = new java.io.IOException("hi!", (java.lang.Throwable)iOException37);
org.mockito.asm.FieldVisitor fieldVisitor40 = classWriter1.visitField((int)' ', "hi!", "java.io.IOException", "", (java.lang.Object)"hi!");
org.mockito.asm.AnnotationVisitor annotationVisitor43 = fieldVisitor40.visitAnnotation("hi!", false);
org.mockito.asm.AnnotationVisitor annotationVisitor46 = fieldVisitor40.visitAnnotation("java.io.IOException: L1023661464", true);
org.mockito.asm.AnnotationVisitor annotationVisitor49 = fieldVisitor40.visitAnnotation("java/io/IOException", true);
org.mockito.asm.AnnotationVisitor annotationVisitor52 = fieldVisitor40.visitAnnotation("L1772732156", true);


Progress update: steps=11000, test inputs generated=7204, failing inputs=0      (2022-02-22T16:10:42.975Z     3.96G used)Long generation time 1066 msec (= 1066 + 0) for
org.mockito.asm.Label label0 = new org.mockito.asm.Label();
java.lang.Object obj1 = null;
label0.info = obj1;
org.mockito.asm.ClassWriter classWriter4 = new org.mockito.asm.ClassWriter((int)(short)-1);
classWriter4.visitSource("hi!", "hi!");
org.mockito.asm.ClassReader classReader9 = new org.mockito.asm.ClassReader("java.io.IOException");
int int10 = classReader9.header;
long long12 = classReader9.readLong((int)'#');
long long14 = classReader9.readLong(8);
java.lang.String str15 = classReader9.getSuperName();
int int16 = classWriter4.newConst((java.lang.Object)str15);
label0.info = classWriter4;
java.lang.Object obj18 = label0.info;
org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter(2);
classWriter20.visitOuterClass("", "hi!", "hi!");
classWriter20.visitEnd();
org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter(2);
classWriter32.visitOuterClass("", "hi!", "hi!");
java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "", "" };
classWriter32.visit((int)(short)10, (-1), "hi!", "", "", strArray45);
classWriter20.visit(0, (int)(short)100, "hi!", "hi!", "", strArray45);
java.io.IOException iOException53 = new java.io.IOException();
java.io.IOException iOException54 = new java.io.IOException((java.lang.Throwable)iOException53);
java.io.IOException iOException55 = new java.io.IOException();
java.io.IOException iOException56 = new java.io.IOException((java.lang.Throwable)iOException55);
iOException54.addSuppressed((java.lang.Throwable)iOException56);
java.io.IOException iOException58 = new java.io.IOException("hi!", (java.lang.Throwable)iOException56);
org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter20.visitField((int)' ', "hi!", "java.io.IOException", "", (java.lang.Object)"hi!");
fieldVisitor59.visitEnd();
fieldVisitor59.visitEnd();
org.mockito.asm.AnnotationVisitor annotationVisitor64 = fieldVisitor59.visitAnnotation("L1023661464", false);
label0.info = fieldVisitor59;
org.mockito.asm.ClassWriter classWriter67 = new org.mockito.asm.ClassWriter((int)(short)1901);
int int71 = classWriter67.newField("L80901126", "", "L394615810");
label0.info = int71;
org.mockito.asm.ClassReader classReader74 = new org.mockito.asm.ClassReader("java.io.IOException");
int int75 = classReader74.header;
int int77 = classReader74.readByte((int)' ');
int int78 = classReader74.getAccess();
org.mockito.asm.ClassWriter classWriter80 = new org.mockito.asm.ClassWriter(2);
classWriter80.visitInnerClass("", "L1147761442", "java.io.IOException", (int)(byte)10);
classReader74.accept((org.mockito.asm.ClassVisitor)classWriter80, 8714);
byte[] byteArray88 = classReader74.b;
org.mockito.asm.ClassReader classReader91 = new org.mockito.asm.ClassReader(byteArray88, (int)'4', (int)(short)0);
org.mockito.asm.ClassReader classReader92 = new org.mockito.asm.ClassReader(byteArray88);
label0.info = classReader92;
int int94 = label0.getOffset();

Long generation time 1041 msec (= 1040 + 0) for
org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int)(short)34);
org.mockito.asm.ByteVector byteVector3 = byteVector1.putShort((int)(byte)-1);
org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte(47806);
org.mockito.asm.ByteVector byteVector7 = byteVector3.putInt((-1));
org.mockito.asm.ByteVector byteVector9 = byteVector3.putLong((long)7);
org.mockito.asm.ByteVector byteVector11 = byteVector9.putLong((long)5);
org.mockito.asm.ByteVector byteVector13 = byteVector11.putByte(0);
org.mockito.asm.Label label14 = new org.mockito.asm.Label();
java.lang.Object obj15 = null;
label14.info = obj15;
org.mockito.asm.ClassWriter classWriter18 = new org.mockito.asm.ClassWriter((int)(short)-1);
classWriter18.visitSource("hi!", "hi!");
org.mockito.asm.ClassReader classReader23 = new org.mockito.asm.ClassReader("java.io.IOException");
int int24 = classReader23.header;
long long26 = classReader23.readLong((int)'#');
long long28 = classReader23.readLong(8);
java.lang.String str29 = classReader23.getSuperName();
int int30 = classWriter18.newConst((java.lang.Object)str29);
label14.info = classWriter18;
java.lang.Object obj32 = label14.info;
java.lang.Object obj33 = label14.info;
java.lang.String str34 = label14.toString();
java.lang.Object obj35 = label14.info;
org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector((int)(short)34);
org.mockito.asm.ByteVector byteVector39 = byteVector37.putShort((int)(byte)-1);
org.mockito.asm.ClassReader classReader41 = new org.mockito.asm.ClassReader("java.io.IOException");
int int42 = classReader41.header;
byte[] byteArray43 = classReader41.b;
org.mockito.asm.ByteVector byteVector46 = byteVector37.putByteArray(byteArray43, (int)(short)34, 9);
org.mockito.asm.ByteVector byteVector48 = byteVector37.putUTF8("L1664854527");
org.mockito.asm.ByteVector byteVector50 = byteVector48.putLong((-4990551337076522974L));
org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int)(short)34);
label14.info = byteVector52;
org.mockito.asm.ClassReader classReader55 = new org.mockito.asm.ClassReader("java.io.IOException");
int int56 = classReader55.header;
long long58 = classReader55.readLong((int)'#');
int int60 = classReader55.readUnsignedShort((int)(byte)100);
int int61 = classReader55.header;
byte[] byteArray62 = classReader55.b;
org.mockito.asm.ByteVector byteVector65 = byteVector52.putByteArray(byteArray62, 0, 16);
org.mockito.asm.ByteVector byteVector68 = byteVector13.putByteArray(byteArray62, 23, 18);
org.mockito.asm.ClassReader classReader69 = new org.mockito.asm.ClassReader(byteArray62);
org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray62);
org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray62);
java.lang.String str72 = classReader71.getClassName();

Long generation time 1313 msec (= 1313 + 0) for
org.mockito.asm.ClassReader classReader1 = new org.mockito.asm.ClassReader("java.io.IOException");
int int2 = classReader1.header;
long long4 = classReader1.readLong((int)'#');
int int6 = classReader1.readUnsignedShort((int)(byte)100);
int int7 = classReader1.header;
org.mockito.asm.ClassWriter classWriter9 = new org.mockito.asm.ClassWriter(classReader1, 8);
org.mockito.asm.ClassWriter classWriter11 = new org.mockito.asm.ClassWriter(classReader1, 1903104);
byte[] byteArray12 = classReader1.b;
org.mockito.asm.ClassReader classReader15 = new org.mockito.asm.ClassReader(byteArray12, 146, 254);

Long generation time 1123 msec (= 1123 + 0) for
org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter(2);
classWriter1.visitOuterClass("", "hi!", "hi!");
classWriter1.visitEnd();
classWriter1.visitInnerClass("hi!", "hi!", "", 1);
org.mockito.asm.AnnotationVisitor annotationVisitor14 = classWriter1.visitAnnotation("L1023661464", true);
classWriter1.visitOuterClass("L1664854527", "java.io.IOException: java.io.IOException", "hi!");
org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader("java.io.IOException");
int int25 = classReader24.header;
long long27 = classReader24.readLong((int)'#');
int int28 = classReader24.header;
java.lang.String str29 = classReader24.getClassName();
int int31 = classReader24.readInt(7);
byte[] byteArray32 = classReader24.b;
long long34 = classReader24.readLong((int)'#');
org.mockito.asm.FieldVisitor fieldVisitor35 = classWriter1.visitField(100670474, "", "L511765389", "L1190452886", (java.lang.Object)long34);
org.mockito.asm.AnnotationVisitor annotationVisitor38 = fieldVisitor35.visitAnnotation("L279381681", false);
org.mockito.asm.AnnotationVisitor annotationVisitor41 = fieldVisitor35.visitAnnotation("L268247075", true);
fieldVisitor35.visitEnd();
org.mockito.asm.AnnotationVisitor annotationVisitor45 = fieldVisitor35.visitAnnotation("L474524780", true);
fieldVisitor35.visitEnd();

Long generation time 2537 msec (= 2536 + 0) for
org.mockito.asm.ClassReader classReader1 = new org.mockito.asm.ClassReader("java.io.IOException");
int int2 = classReader1.header;
int int4 = classReader1.readByte((int)' ');
int int5 = classReader1.getAccess();
int int7 = classReader1.readUnsignedShort(1);
org.mockito.asm.ClassWriter classWriter9 = new org.mockito.asm.ClassWriter(2);
classWriter9.visitOuterClass("", "hi!", "hi!");
int int15 = classWriter9.newConst((java.lang.Object)(short)10);
classWriter9.visitInnerClass("", "", "java.io.IOException", (int)(short)-1);
classWriter9.visitInnerClass("java.io.IOException", "hi!", "java.io.IOException", 100);
classWriter9.visitEnd();
org.mockito.asm.ClassReader classReader28 = new org.mockito.asm.ClassReader("java.io.IOException");
int int29 = classReader28.header;
long long31 = classReader28.readLong((int)'#');
long long33 = classReader28.readLong(8);
java.lang.String str34 = classReader28.getSuperName();
org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter(2);
classWriter36.visitOuterClass("", "hi!", "hi!");
java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "" };
classWriter36.visit((int)(short)10, (-1), "hi!", "", "", strArray49);
org.mockito.asm.Attribute[] attributeArray51 = new org.mockito.asm.Attribute[] {  };
classReader28.accept((org.mockito.asm.ClassVisitor)classWriter36, attributeArray51, (int)(short)0);
classReader1.accept((org.mockito.asm.ClassVisitor)classWriter9, attributeArray51, (int)(byte)10);
org.mockito.asm.ClassWriter classWriter57 = new org.mockito.asm.ClassWriter(classReader1, 8714);
classWriter57.visitOuterClass("L1316267001", "L1949141924", "L218811940");
int int64 = classWriter57.newNameType("java.io.IOException: L1129261089", "java/lang/Exception");
int int66 = classWriter57.newClass("L274354000");


Progress update: steps=11484, test inputs generated=7541, failing inputs=0      (2022-02-22T16:11:11.174Z     3.93G used)Long generation time 1047 msec (= 1047 + 0) for
org.mockito.asm.ClassReader classReader1 = new org.mockito.asm.ClassReader("java.io.IOException");
int int2 = classReader1.header;
byte[] byteArray3 = classReader1.b;
short short5 = classReader1.readShort(202);
org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter(classReader1, 44);
org.mockito.asm.Attribute attribute8 = null;
classWriter7.visitAttribute(attribute8);

Long generation time 1978 msec for null sequence.
Long generation time 2347 msec (= 2347 + 0) for
org.mockito.asm.ClassReader classReader1 = new org.mockito.asm.ClassReader("java.io.IOException");
int int2 = classReader1.header;
long long4 = classReader1.readLong((int)'#');
int int5 = classReader1.header;
short short7 = classReader1.readShort((int)(short)0);
org.mockito.asm.ClassWriter classWriter9 = new org.mockito.asm.ClassWriter(classReader1, 2230784);
int int11 = classWriter9.newUTF8("L370966702");
org.mockito.asm.AnnotationVisitor annotationVisitor14 = classWriter9.visitAnnotation("L1614227749", false);


Progress update: steps=12000, test inputs generated=7889, failing inputs=0      (2022-02-22T16:11:36.372Z     3.95G used)Long generation time 1039 msec (= 1039 + 0) for
org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter(2);
classWriter1.visitOuterClass("", "hi!", "hi!");
int int7 = classWriter1.newConst((java.lang.Object)(short)10);
org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(7, "L977848372", "L394615810", "L650139252", (java.lang.Object)29);
classWriter1.visitInnerClass("L2023213266", "L1017635113", "L285329686", 43);

Long generation time 1412 msec (= 1412 + 0) for
org.mockito.asm.ClassReader classReader1 = new org.mockito.asm.ClassReader("java.io.IOException");
int int2 = classReader1.header;
int int4 = classReader1.readByte((int)' ');
long long6 = classReader1.readLong(0);
int int7 = classReader1.getAccess();
int int8 = classReader1.getAccess();
int int9 = classReader1.header;


Progress update: steps=12778, test inputs generated=8412, failing inputs=0      (2022-02-22T16:12:11.230Z     3.94G used)
Progress update: steps=13000, test inputs generated=8571, failing inputs=0      (2022-02-22T16:12:20.836Z     3.99G used)Long generation time 1230 msec (= 1230 + 0) for
org.mockito.asm.ClassReader classReader1 = new org.mockito.asm.ClassReader("java.io.IOException");
int int2 = classReader1.header;
int int4 = classReader1.getItem(0);
int int6 = classReader1.readByte((int)(short)10);
long long8 = classReader1.readLong(693502208);


Progress update: steps=13957, test inputs generated=9236, failing inputs=0      (2022-02-22T16:13:11.959Z     3.96G used)
Progress update: steps=14000, test inputs generated=9265, failing inputs=0      (2022-02-22T16:13:13.567Z     3.98G used)Long generation time 1728 msec for null sequence.
Long generation time 1376 msec (= 1376 + 0) for
org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int)(short)0);
org.mockito.asm.ClassReader classReader7 = new org.mockito.asm.ClassReader("java.io.IOException");
int int8 = classReader7.header;
long long10 = classReader7.readLong((int)'#');
int int12 = classReader7.readUnsignedShort((int)(byte)100);
int int13 = classReader7.header;
java.lang.String str14 = classReader7.getSuperName();
int int16 = classReader7.readUnsignedShort(2);
short short18 = classReader7.readShort(35);
int int20 = classReader7.readUnsignedShort(0);
java.lang.String[] strArray21 = classReader7.getInterfaces();
org.mockito.asm.MethodVisitor methodVisitor22 = classWriter1.visitMethod(65210, "L1124204343", "java.io.IOException", "L968859758", strArray21);
org.mockito.asm.Label label23 = new org.mockito.asm.Label();
java.lang.Object obj24 = null;
label23.info = obj24;
org.mockito.asm.ClassWriter classWriter27 = new org.mockito.asm.ClassWriter((int)(short)-1);
classWriter27.visitSource("hi!", "hi!");
org.mockito.asm.ClassReader classReader32 = new org.mockito.asm.ClassReader("java.io.IOException");
int int33 = classReader32.header;
long long35 = classReader32.readLong((int)'#');
long long37 = classReader32.readLong(8);
java.lang.String str38 = classReader32.getSuperName();
int int39 = classWriter27.newConst((java.lang.Object)str38);
label23.info = classWriter27;
org.mockito.asm.ClassReader classReader42 = new org.mockito.asm.ClassReader("java.io.IOException");
int int43 = classReader42.header;
long long45 = classReader42.readLong((int)'#');
int int47 = classReader42.readUnsignedShort((int)(byte)100);
int int48 = classReader42.header;
java.lang.String str49 = classReader42.getSuperName();
label23.info = str49;
java.lang.String str51 = label23.toString();
java.lang.Object obj52 = label23.info;
java.io.IOException iOException53 = new java.io.IOException();
java.io.IOException iOException54 = new java.io.IOException();
java.io.IOException iOException55 = new java.io.IOException((java.lang.Throwable)iOException54);
java.io.IOException iOException56 = new java.io.IOException();
java.io.IOException iOException57 = new java.io.IOException((java.lang.Throwable)iOException56);
iOException55.addSuppressed((java.lang.Throwable)iOException57);
iOException53.addSuppressed((java.lang.Throwable)iOException55);
label23.info = iOException55;
int[] intArray63 = new int[] { (short)-13570, (-21316096) };
org.mockito.asm.Label[] labelArray64 = new org.mockito.asm.Label[] {  };
methodVisitor22.visitLookupSwitchInsn(label23, intArray63, labelArray64);
org.mockito.asm.Attribute attribute66 = null;
methodVisitor22.visitAttribute(attribute66);


Progress update: steps=15000, test inputs generated=9956, failing inputs=0      (2022-02-22T16:14:11.828Z     4.00G used)
Progress update: steps=15002, test inputs generated=9958, failing inputs=0      (2022-02-22T16:14:12.326Z     3.97G used)Long generation time 1049 msec (= 1049 + 0) for
java.io.IOException iOException1 = new java.io.IOException("L776637125");
java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable)iOException1);


Progress update: steps=15883, test inputs generated=10564, failing inputs=0      (2022-02-22T16:15:12.378Z     3.98G used)
Progress update: steps=16000, test inputs generated=10641, failing inputs=0      (2022-02-22T16:15:21.344Z     3.99G used)
Progress update: steps=16561, test inputs generated=11035, failing inputs=0      (2022-02-22T16:16:12.479Z     3.99G used)
Progress update: steps=17000, test inputs generated=11334, failing inputs=0      (2022-02-22T16:16:53.307Z     3.99G used)
Progress update: steps=17166, test inputs generated=11451, failing inputs=0      (2022-02-22T16:17:11.028Z     3.99G used)
Normal method executions: 3153295
Exceptional method executions: 2375

Average method execution time (normal termination):      0.00317
Average method execution time (exceptional termination): 7.02
Approximate memory usage 3.99G
Explorer = ForwardGenerator(steps: 17166, null steps: 5715, num_sequences_generated: 11451;
    allSequences: 11451, regresson seqs: 8483, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 2968;
    runtimePrimitivesSeen:885)

No error-revealing tests to output.

About to look for failing assertions in 4840 regression sequences.

Regression test output:
Regression test count: 4840
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest0.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest1.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest2.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest3.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest4.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest5.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest6.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest7.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest8.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest9.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest10.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest11.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest12.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest13.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest14.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest15.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest16.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest17.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest18.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest19.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest20.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest21.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest22.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest23.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest24.java
Created file /experiment/results/randoop10/mockito-org.mockito.asm.MethodWriter-org.mockito.asm.ClassWriter-6/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  org.mockito.asm.MethodVisitor.visitLookupSwitchInsn(org.mockito.asm.Label,int[],org.mockito.asm.Label[])
  Possibly flaky:  org.mockito.asm.MethodVisitor.visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,org.mockito.asm.Label,org.mockito.asm.Label,int)
  Possibly flaky:  org.mockito.asm.Label.toString()
  Possibly flaky:  org.mockito.asm.MethodVisitor.visitLineNumber(int,org.mockito.asm.Label)
  Possibly flaky:  org.mockito.asm.Label.getOffset()
  Possibly flaky:  org.mockito.asm.MethodVisitor.visitJumpInsn(int,org.mockito.asm.Label)
  Possibly flaky:  org.mockito.asm.MethodVisitor.visitLabel(org.mockito.asm.Label)
  Possibly flaky:  java.lang.Throwable.toString()
  Possibly flaky:  org.mockito.asm.ByteVector.putLong(long)
  Possibly flaky:  org.mockito.asm.ByteVector.putByte(int)
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0
