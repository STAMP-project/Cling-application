Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".
Cannot instantiate non-accessible class org.mockito.asm.MethodWriter specified via --testclass or --classlist.

Will try to generate tests for 11 out of 12 classes.
PUBLIC MEMBERS=120
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-21T14:33:32.990Z     193M used)
Progress update: steps=1000, test inputs generated=687, failing inputs=0      (2022-02-21T14:33:47.528Z     131M used)
Progress update: steps=2000, test inputs generated=1422, failing inputs=0      (2022-02-21T14:33:59.602Z     595M used)
Progress update: steps=3000, test inputs generated=2167, failing inputs=0      (2022-02-21T14:34:11.221Z     504M used)
Progress update: steps=3944, test inputs generated=2861, failing inputs=0      (2022-02-21T14:34:33.002Z     3.28G used)
Progress update: steps=4000, test inputs generated=2903, failing inputs=0      (2022-02-21T14:34:33.703Z     3.51G used)
Progress update: steps=5000, test inputs generated=3647, failing inputs=0      (2022-02-21T14:34:46.862Z     3.49G used)
Progress update: steps=6000, test inputs generated=4348, failing inputs=0      (2022-02-21T14:35:01.330Z     3.62G used)
Progress update: steps=7000, test inputs generated=5068, failing inputs=0      (2022-02-21T14:35:13.089Z     3.05G used)
Progress update: steps=8000, test inputs generated=5777, failing inputs=0      (2022-02-21T14:35:25.656Z     3.72G used)
Progress update: steps=8616, test inputs generated=6215, failing inputs=0      (2022-02-21T14:35:33.002Z     3.72G used)
Progress update: steps=9000, test inputs generated=6477, failing inputs=0      (2022-02-21T14:35:37.475Z     3.61G used)
Progress update: steps=10000, test inputs generated=7169, failing inputs=0      (2022-02-21T14:35:55.313Z     3.50G used)
Progress update: steps=11000, test inputs generated=7877, failing inputs=0      (2022-02-21T14:36:16.866Z     3.72G used)
Progress update: steps=11508, test inputs generated=8246, failing inputs=0      (2022-02-21T14:36:33.088Z     3.72G used)
Progress update: steps=12000, test inputs generated=8594, failing inputs=0      (2022-02-21T14:36:50.974Z     3.73G used)
Progress update: steps=12896, test inputs generated=9224, failing inputs=0      (2022-02-21T14:37:33.275Z     3.73G used)
Progress update: steps=13000, test inputs generated=9295, failing inputs=0      (2022-02-21T14:37:39.205Z     3.73G used)
Progress update: steps=13667, test inputs generated=9754, failing inputs=0      (2022-02-21T14:38:33.424Z     3.73G used)
Progress update: steps=13952, test inputs generated=9956, failing inputs=0      (2022-02-21T14:39:33.512Z     3.74G used)
Progress update: steps=14000, test inputs generated=9986, failing inputs=0      (2022-02-21T14:39:53.755Z     3.74G used)
Progress update: steps=14053, test inputs generated=10029, failing inputs=0      (2022-02-21T14:40:33.977Z     3.74G used)
Progress update: steps=14108, test inputs generated=10068, failing inputs=0      (2022-02-21T14:41:37.686Z     3.74G used)
Progress update: steps=14132, test inputs generated=10085, failing inputs=0      (2022-02-21T14:42:52.733Z     3.74G used)
Progress update: steps=14141, test inputs generated=10092, failing inputs=0      (2022-02-21T14:43:57.588Z     3.74G used)
Progress update: steps=14141, test inputs generated=10092, failing inputs=0      (2022-02-21T14:45:00.884Z     3.74G used)

*** Randoop has spent over 10 seconds executing the following test.
See https://randoop.github.io/randoop/manual/index.html#no-input-generation .

org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int)(short)100);
java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!" };
classWriter1.visit((int)(short)100, 10, "java.io.IOException", "java.io.IOException", "java.io.IOException: hi!", strArray9);
byte[] byteArray11 = classWriter1.toByteArray();
org.mockito.asm.ClassReader classReader14 = new org.mockito.asm.ClassReader(byteArray11, 0, 0);
java.lang.String str15 = classReader14.getSuperName();
int int17 = classReader14.readInt(0);
int int19 = classReader14.readByte(2);
java.lang.String[] strArray20 = classReader14.getInterfaces();
java.lang.String[] strArray21 = classReader14.getInterfaces();
org.mockito.asm.ClassWriter classWriter23 = new org.mockito.asm.ClassWriter((int)(short)100);
int int27 = classWriter23.newField("hi!", "hi!", "hi!");
classWriter23.visitEnd();
classWriter23.visitSource("java.io.IOException", "");
int int33 = classWriter23.newClass("L1171266150");
org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter((int)(short)100);
java.lang.String[] strArray43 = new java.lang.String[] { "", "hi!" };
classWriter35.visit((int)(short)100, 10, "java.io.IOException", "java.io.IOException", "java.io.IOException: hi!", strArray43);
byte[] byteArray45 = classWriter35.toByteArray();
org.mockito.asm.ClassReader classReader46 = new org.mockito.asm.ClassReader(byteArray45);
org.mockito.asm.ClassWriter classWriter48 = new org.mockito.asm.ClassWriter((int)(short)100);
int int52 = classWriter48.newField("hi!", "hi!", "hi!");
int int56 = classWriter48.newField("", "L389172848", "java.io.IOException");
classWriter48.visitSource("", "L1474557181");
byte[] byteArray60 = classWriter48.toByteArray();
org.mockito.asm.Attribute attribute61 = null;
org.mockito.asm.Attribute[] attributeArray62 = new org.mockito.asm.Attribute[] { attribute61 };
classReader46.accept((org.mockito.asm.ClassVisitor)classWriter48, attributeArray62, 27233);
classReader14.accept((org.mockito.asm.ClassVisitor)classWriter23, attributeArray62, 190);
org.mockito.asm.ClassWriter classWriter68 = new org.mockito.asm.ClassWriter((int)(byte)1);
org.mockito.asm.ClassWriter classWriter74 = new org.mockito.asm.ClassWriter((int)(short)100);
java.lang.String[] strArray82 = new java.lang.String[] { "", "hi!" };
classWriter74.visit((int)(short)100, 10, "java.io.IOException", "java.io.IOException", "java.io.IOException: hi!", strArray82);
byte[] byteArray84 = classWriter74.toByteArray();
org.mockito.asm.ClassReader classReader85 = new org.mockito.asm.ClassReader(byteArray84);
int int87 = classReader85.readByte((int)(byte)1);
int int89 = classReader85.readByte(11);
byte[] byteArray90 = classReader85.b;
int int91 = classReader85.header;
java.lang.String str92 = classReader85.getClassName();
org.mockito.asm.FieldVisitor fieldVisitor93 = classWriter68.visitField((int)(short)3, "java.io.IOException: L1208571821", "java.io.IOException: L64823882", "L32026908", (java.lang.Object)str92);
classReader14.accept((org.mockito.asm.ClassVisitor)classWriter68, (int)(short)27233);


Will dump a heap profile to randoop-slow.hprof.

Progress update: steps=14141, test inputs generated=10092, failing inputs=0      (2022-02-21T14:49:14.136Z     3.74G used)
Normal method executions: 4388371
Exceptional method executions: 1932

Average method execution time (normal termination):      0.00141
Average method execution time (exceptional termination): 7.90
Approximate memory usage 3.74G
Explorer = ForwardGenerator(steps: 14141, null steps: 4049, num_sequences_generated: 10092;
    allSequences: 10092, regresson seqs: 10076, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 16;
    runtimePrimitivesSeen:512)

No error-revealing tests to output.

About to look for failing assertions in 5630 regression sequences.

Regression test output:
Regression test count: 5630
Writing regression JUnit tests...
