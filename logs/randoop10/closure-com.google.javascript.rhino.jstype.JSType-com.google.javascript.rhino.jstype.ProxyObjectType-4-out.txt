Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".
Cannot instantiate non-accessible class com.google.javascript.rhino.jstype.PrototypeObjectType specified via --testclass or --classlist; will use its static methods.
Cannot instantiate non-accessible class com.google.javascript.rhino.jstype.ProxyObjectType specified via --testclass or --classlist; will use its static methods.

Will try to generate tests for 37 classes.
PUBLIC MEMBERS=958
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-23T03:36:47.413Z     355M used)
Progress update: steps=1000, test inputs generated=357, failing inputs=0      (2022-02-23T03:36:48.762Z     265M used)
Progress update: steps=2000, test inputs generated=750, failing inputs=0      (2022-02-23T03:36:50.046Z     259M used)
Progress update: steps=3000, test inputs generated=1152, failing inputs=0      (2022-02-23T03:36:51.510Z     177M used)
Progress update: steps=4000, test inputs generated=1563, failing inputs=0      (2022-02-23T03:36:52.913Z     950M used)
Progress update: steps=5000, test inputs generated=1956, failing inputs=1      (2022-02-23T03:36:54.180Z     812M used)
Progress update: steps=6000, test inputs generated=2357, failing inputs=1      (2022-02-23T03:36:55.718Z     770M used)
Progress update: steps=7000, test inputs generated=2780, failing inputs=1      (2022-02-23T03:36:57.261Z     846M used)
Progress update: steps=8000, test inputs generated=3150, failing inputs=1      (2022-02-23T03:36:59.043Z     774M used)
Progress update: steps=9000, test inputs generated=3560, failing inputs=1      (2022-02-23T03:37:01.275Z     930M used)
Progress update: steps=10000, test inputs generated=3975, failing inputs=1      (2022-02-23T03:37:03.495Z     815M used)
Progress update: steps=11000, test inputs generated=4391, failing inputs=1      (2022-02-23T03:37:06.017Z     938M used)
Progress update: steps=12000, test inputs generated=4809, failing inputs=1      (2022-02-23T03:37:08.717Z     1.11G used)
Progress update: steps=13000, test inputs generated=5237, failing inputs=1      (2022-02-23T03:37:11.853Z     137M used)
Progress update: steps=14000, test inputs generated=5650, failing inputs=1      (2022-02-23T03:37:14.701Z     461M used)
Progress update: steps=15000, test inputs generated=6036, failing inputs=1      (2022-02-23T03:37:18.104Z     1.11G used)
Progress update: steps=16000, test inputs generated=6441, failing inputs=1      (2022-02-23T03:37:21.944Z     382M used)
Progress update: steps=17000, test inputs generated=6824, failing inputs=1      (2022-02-23T03:37:24.964Z     733M used)
Progress update: steps=18000, test inputs generated=7231, failing inputs=1      (2022-02-23T03:37:29.158Z     222M used)
Progress update: steps=19000, test inputs generated=7617, failing inputs=1      (2022-02-23T03:37:33.585Z     1.20G used)
Progress update: steps=20000, test inputs generated=8015, failing inputs=1      (2022-02-23T03:37:38.205Z     1.04G used)
Progress update: steps=21000, test inputs generated=8419, failing inputs=2      (2022-02-23T03:37:42.091Z     577M used)
Progress update: steps=22000, test inputs generated=8845, failing inputs=3      (2022-02-23T03:37:46.925Z     418M used)
Progress update: steps=22107, test inputs generated=8895, failing inputs=3      (2022-02-23T03:37:47.431Z     703M used)
Progress update: steps=23000, test inputs generated=9279, failing inputs=3      (2022-02-23T03:37:51.876Z     389M used)
Progress update: steps=24000, test inputs generated=9646, failing inputs=3      (2022-02-23T03:37:57.657Z     609M used)
Progress update: steps=25000, test inputs generated=10065, failing inputs=3      (2022-02-23T03:38:04.088Z     963M used)
Progress update: steps=26000, test inputs generated=10453, failing inputs=3      (2022-02-23T03:38:09.894Z     1.10G used)
Progress update: steps=27000, test inputs generated=10883, failing inputs=3      (2022-02-23T03:38:16.250Z     1.40G used)
Progress update: steps=28000, test inputs generated=11240, failing inputs=3      (2022-02-23T03:38:21.298Z     1.11G used)
Progress update: steps=29000, test inputs generated=11631, failing inputs=4      (2022-02-23T03:38:27.452Z     1,000M used)
Progress update: steps=30000, test inputs generated=12055, failing inputs=4      (2022-02-23T03:38:34.802Z     1.30G used)
Progress update: steps=31000, test inputs generated=12446, failing inputs=4      (2022-02-23T03:38:42.600Z     730M used)
Progress update: steps=31539, test inputs generated=12672, failing inputs=4      (2022-02-23T03:38:47.432Z     1.37G used)
Progress update: steps=32000, test inputs generated=12871, failing inputs=4      (2022-02-23T03:38:51.760Z     153M used)
Progress update: steps=33000, test inputs generated=13281, failing inputs=5      (2022-02-23T03:38:59.840Z     925M used)
Progress update: steps=34000, test inputs generated=13664, failing inputs=5      (2022-02-23T03:39:10.562Z     707M used)
Progress update: steps=35000, test inputs generated=14063, failing inputs=5      (2022-02-23T03:39:20.492Z     487M used)
Progress update: steps=36000, test inputs generated=14462, failing inputs=5      (2022-02-23T03:39:29.662Z     1.33G used)
Progress update: steps=37000, test inputs generated=14848, failing inputs=7      (2022-02-23T03:39:37.339Z     685M used)
Progress update: steps=38000, test inputs generated=15262, failing inputs=7      (2022-02-23T03:39:47.025Z     808M used)
Progress update: steps=38068, test inputs generated=15292, failing inputs=7      (2022-02-23T03:39:47.432Z     1.03G used)
Progress update: steps=39000, test inputs generated=15664, failing inputs=7      (2022-02-23T03:39:56.251Z     514M used)
Progress update: steps=40000, test inputs generated=16068, failing inputs=7      (2022-02-23T03:40:07.261Z     648M used)
Progress update: steps=41000, test inputs generated=16471, failing inputs=8      (2022-02-23T03:40:16.450Z     728M used)
Progress update: steps=42000, test inputs generated=16889, failing inputs=8      (2022-02-23T03:40:27.589Z     438M used)
Progress update: steps=43000, test inputs generated=17281, failing inputs=8      (2022-02-23T03:40:39.274Z     479M used)
Progress update: steps=43487, test inputs generated=17494, failing inputs=8      (2022-02-23T03:40:47.433Z     865M used)Long generation time 1478 msec for null sequence.

Progress update: steps=44000, test inputs generated=17689, failing inputs=8      (2022-02-23T03:40:54.082Z     733M used)Long generation time 1220 msec for null sequence.

Progress update: steps=45000, test inputs generated=18037, failing inputs=8      (2022-02-23T03:41:07.062Z     789M used)
Progress update: steps=46000, test inputs generated=18418, failing inputs=8      (2022-02-23T03:41:21.694Z     386M used)
Progress update: steps=47000, test inputs generated=18795, failing inputs=8      (2022-02-23T03:41:31.668Z     268M used)
Progress update: steps=48000, test inputs generated=19197, failing inputs=8      (2022-02-23T03:41:42.810Z     327M used)
Progress update: steps=48378, test inputs generated=19332, failing inputs=8      (2022-02-23T03:41:47.434Z     893M used)
Progress update: steps=49000, test inputs generated=19578, failing inputs=8      (2022-02-23T03:41:53.199Z     192M used)
Progress update: steps=50000, test inputs generated=19951, failing inputs=8      (2022-02-23T03:42:04.233Z     912M used)
Progress update: steps=51000, test inputs generated=20371, failing inputs=8      (2022-02-23T03:42:17.593Z     243M used)
Progress update: steps=52000, test inputs generated=20744, failing inputs=8      (2022-02-23T03:42:29.354Z     486M used)
Progress update: steps=53000, test inputs generated=21133, failing inputs=8      (2022-02-23T03:42:43.231Z     703M used)
Progress update: steps=53194, test inputs generated=21212, failing inputs=8      (2022-02-23T03:42:47.434Z     687M used)
Progress update: steps=54000, test inputs generated=21533, failing inputs=8      (2022-02-23T03:43:04.890Z     350M used)
Progress update: steps=55000, test inputs generated=21920, failing inputs=8      (2022-02-23T03:43:19.957Z     880M used)
Progress update: steps=56000, test inputs generated=22304, failing inputs=8      (2022-02-23T03:43:38.694Z     312M used)Long generation time 1141 msec for null sequence.

Progress update: steps=56471, test inputs generated=22472, failing inputs=9      (2022-02-23T03:43:47.435Z     168M used)
Progress update: steps=57000, test inputs generated=22683, failing inputs=9      (2022-02-23T03:44:00.509Z     255M used)Long generation time 1775 msec for null sequence.

Progress update: steps=58000, test inputs generated=23082, failing inputs=9      (2022-02-23T03:44:20.506Z     456M used)
Progress update: steps=59000, test inputs generated=23485, failing inputs=9      (2022-02-23T03:44:36.229Z     298M used)
Progress update: steps=59501, test inputs generated=23671, failing inputs=9      (2022-02-23T03:44:47.435Z     734M used)
Progress update: steps=60000, test inputs generated=23873, failing inputs=9      (2022-02-23T03:44:55.984Z     309M used)
Progress update: steps=61000, test inputs generated=24287, failing inputs=10      (2022-02-23T03:45:13.419Z     942M used)Long generation time 1092 msec for null sequence.

Progress update: steps=62000, test inputs generated=24703, failing inputs=10      (2022-02-23T03:45:31.040Z     287M used)
Progress update: steps=62922, test inputs generated=25072, failing inputs=10      (2022-02-23T03:45:47.435Z     415M used)
Progress update: steps=63000, test inputs generated=25107, failing inputs=10      (2022-02-23T03:45:49.221Z     217M used)
Progress update: steps=64000, test inputs generated=25512, failing inputs=11      (2022-02-23T03:46:04.144Z     147M used)
Progress update: steps=65000, test inputs generated=25923, failing inputs=11      (2022-02-23T03:46:21.324Z     326M used)Long generation time 1129 msec (= 1129 + 0) for
java.io.Serializable[] serializableArray0 = new java.io.Serializable[] {  };
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList1 = com.google.common.collect.ImmutableList.copyOf(serializableArray0);
java.util.ListIterator<java.io.Serializable> serializableItor2 = serializableList1.listIterator();
com.google.common.collect.UnmodifiableIterator<java.io.Serializable> serializableItor3 = serializableList1.iterator();
java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {  };
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList5 = com.google.common.collect.ImmutableList.copyOf(serializableArray4);
java.util.Iterator<java.io.Serializable> serializableItor6 = serializableList5.iterator();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList7 = serializableList5.reverse();
java.lang.String[][][][] strArray8 = new java.lang.String[][][][] {  };
com.google.common.collect.ImmutableList<java.lang.String[][][]> strArrayList9 = com.google.common.collect.ImmutableList.of(strArray8);
java.lang.String[][][][] strArray10 = serializableList5.toArray(strArray8);
java.lang.Cloneable[][][] cloneableArray11 = serializableList1.toArray((java.lang.Cloneable[][][])strArray10);
com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString("hi!", (-1), (int)'a');
boolean boolean19 = node18.isReturn();
boolean boolean20 = node18.isEmpty();
com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString("hi!", (-1), (int)'a');
boolean boolean25 = node24.isReturn();
boolean boolean26 = node18.isEquivalentTo(node24);
com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newString("hi!", (-1), (int)'a');
boolean boolean32 = node31.isReturn();
boolean boolean33 = node31.isEmpty();
com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newString("hi!", (-1), (int)'a');
boolean boolean38 = node37.isReturn();
boolean boolean39 = node31.isEquivalentTo(node37);
node31.setQuotedString();
com.google.javascript.rhino.Node node44 = com.google.javascript.rhino.Node.newString("hi!", (-1), (int)'a');
boolean boolean45 = node44.isReturn();
boolean boolean46 = node44.isEmpty();
com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("hi!", (-1), (int)'a');
boolean boolean51 = node50.isReturn();
boolean boolean52 = node44.isEquivalentTo(node50);
boolean boolean53 = node44.isAnd();
com.google.javascript.rhino.Node node57 = com.google.javascript.rhino.Node.newString("hi!", (-1), (int)'a');
boolean boolean58 = node57.isReturn();
boolean boolean59 = node57.isEmpty();
com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString("hi!", (-1), (int)'a');
boolean boolean64 = node63.isReturn();
boolean boolean65 = node57.isEquivalentTo(node63);
int int66 = node57.getChildCount();
java.io.Serializable[] serializableArray72 = new java.io.Serializable[] { (short)10 };
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList73 = com.google.common.collect.ImmutableList.of((java.io.Serializable)(short)100, (java.io.Serializable)10, (java.io.Serializable)(-1), (java.io.Serializable)node24, (java.io.Serializable)1L, (java.io.Serializable)node31, (java.io.Serializable)boolean53, (java.io.Serializable)node57, (java.io.Serializable)(short)1, (java.io.Serializable)10, (java.io.Serializable)(short)10, (java.io.Serializable)(short)-1, serializableArray72);
java.lang.Object[] objArray74 = serializableList73.toArray();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList75 = serializableList73.asList();
boolean boolean76 = serializableList73.isEmpty();
com.google.common.collect.ImmutableList<java.util.AbstractSet<java.lang.String>> strSetList77 = com.google.common.collect.ImmutableList.copyOf((java.util.Collection<java.io.Serializable>)serializableList73);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList78 = serializableList73.asList();
com.google.common.collect.ImmutableList<java.util.Iterator<java.io.Serializable>> serializableItorList79 = com.google.common.collect.ImmutableList.copyOf((java.util.Collection<java.io.Serializable>)serializableList73);
boolean boolean80 = serializableList73.isEmpty();
boolean boolean81 = serializableList1.retainAll((java.util.Collection<java.io.Serializable>)serializableList73);

Long generation time 1515 msec for null sequence.

Progress update: steps=66000, test inputs generated=26338, failing inputs=11      (2022-02-23T03:46:45.103Z     531M used)
Progress update: steps=66159, test inputs generated=26401, failing inputs=11      (2022-02-23T03:46:47.427Z     663M used)
Normal method executions: 13016652
Exceptional method executions: 2909

Average method execution time (normal termination):      0.000231
Average method execution time (exceptional termination): 0.0512
Approximate memory usage 663M
Explorer = ForwardGenerator(steps: 66159, null steps: 39758, num_sequences_generated: 26401;
    allSequences: 26401, regresson seqs: 696, error seqs: 11=11=11, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 25694;
    runtimePrimitivesSeen:305)

Error-revealing test output:
Error-revealing test count: 11
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-4/ErrorTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-4/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 383 regression sequences.

Regression test output:
Regression test count: 383
Writing regression JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-4/RegressionTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-4/RegressionTest1.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-4/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Invalid tests generated: 0
