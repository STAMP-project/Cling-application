Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".
Cannot instantiate non-accessible class com.google.javascript.rhino.jstype.PrototypeObjectType specified via --testclass or --classlist; will use its static methods.
Cannot instantiate non-accessible class com.google.javascript.rhino.jstype.ProxyObjectType specified via --testclass or --classlist; will use its static methods.

Will try to generate tests for 30 classes.
PUBLIC MEMBERS=938
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-23T03:55:23.359Z     355M used)
Progress update: steps=1000, test inputs generated=387, failing inputs=0      (2022-02-23T03:55:25.696Z     441M used)
Progress update: steps=2000, test inputs generated=834, failing inputs=0      (2022-02-23T03:55:26.863Z     479M used)
Progress update: steps=3000, test inputs generated=1287, failing inputs=0      (2022-02-23T03:55:28.320Z     521M used)
Progress update: steps=4000, test inputs generated=1752, failing inputs=0      (2022-02-23T03:55:29.743Z     412M used)
Progress update: steps=5000, test inputs generated=2163, failing inputs=0      (2022-02-23T03:55:31.332Z     318M used)
Progress update: steps=6000, test inputs generated=2602, failing inputs=0      (2022-02-23T03:55:32.878Z     269M used)
Progress update: steps=7000, test inputs generated=3036, failing inputs=0      (2022-02-23T03:55:34.430Z     1.16G used)
Progress update: steps=8000, test inputs generated=3463, failing inputs=0      (2022-02-23T03:55:35.995Z     865M used)
Progress update: steps=9000, test inputs generated=3876, failing inputs=0      (2022-02-23T03:55:37.365Z     529M used)
Progress update: steps=10000, test inputs generated=4288, failing inputs=0      (2022-02-23T03:55:39.017Z     56.3M used)
Progress update: steps=11000, test inputs generated=4718, failing inputs=0      (2022-02-23T03:55:40.898Z     1.09G used)
Progress update: steps=12000, test inputs generated=5171, failing inputs=0      (2022-02-23T03:55:43.356Z     864M used)
Progress update: steps=13000, test inputs generated=5610, failing inputs=0      (2022-02-23T03:55:45.513Z     435M used)
Progress update: steps=14000, test inputs generated=6048, failing inputs=0      (2022-02-23T03:55:47.775Z     113M used)
Progress update: steps=15000, test inputs generated=6477, failing inputs=0      (2022-02-23T03:55:50.024Z     1.16G used)
Progress update: steps=16000, test inputs generated=6909, failing inputs=0      (2022-02-23T03:55:52.623Z     1.11G used)
Progress update: steps=17000, test inputs generated=7349, failing inputs=0      (2022-02-23T03:55:55.260Z     969M used)
Progress update: steps=18000, test inputs generated=7784, failing inputs=0      (2022-02-23T03:55:58.312Z     785M used)
Progress update: steps=19000, test inputs generated=8205, failing inputs=0      (2022-02-23T03:56:00.689Z     330M used)
Progress update: steps=20000, test inputs generated=8623, failing inputs=0      (2022-02-23T03:56:02.931Z     1.19G used)
Progress update: steps=21000, test inputs generated=9045, failing inputs=0      (2022-02-23T03:56:06.275Z     948M used)
Progress update: steps=22000, test inputs generated=9460, failing inputs=0      (2022-02-23T03:56:09.702Z     627M used)
Progress update: steps=23000, test inputs generated=9881, failing inputs=0      (2022-02-23T03:56:13.429Z     523M used)
Progress update: steps=24000, test inputs generated=10299, failing inputs=0      (2022-02-23T03:56:17.335Z     335M used)
Progress update: steps=25000, test inputs generated=10704, failing inputs=0      (2022-02-23T03:56:21.144Z     149M used)
Progress update: steps=25567, test inputs generated=10919, failing inputs=0      (2022-02-23T03:56:23.377Z     756M used)
Progress update: steps=26000, test inputs generated=11098, failing inputs=0      (2022-02-23T03:56:25.436Z     1.27G used)
Progress update: steps=27000, test inputs generated=11517, failing inputs=0      (2022-02-23T03:56:29.557Z     1.12G used)
Progress update: steps=28000, test inputs generated=11963, failing inputs=0      (2022-02-23T03:56:34.021Z     1.04G used)
Progress update: steps=29000, test inputs generated=12364, failing inputs=0      (2022-02-23T03:56:38.455Z     908M used)
Progress update: steps=30000, test inputs generated=12774, failing inputs=0      (2022-02-23T03:56:42.966Z     797M used)
Progress update: steps=31000, test inputs generated=13170, failing inputs=0      (2022-02-23T03:56:48.903Z     744M used)
Progress update: steps=32000, test inputs generated=13577, failing inputs=0      (2022-02-23T03:56:54.810Z     611M used)
Progress update: steps=33000, test inputs generated=13989, failing inputs=0      (2022-02-23T03:57:02.185Z     397M used)
Progress update: steps=34000, test inputs generated=14375, failing inputs=0      (2022-02-23T03:57:07.227Z     1.40G used)
Progress update: steps=35000, test inputs generated=14794, failing inputs=0      (2022-02-23T03:57:11.959Z     1.35G used)
Progress update: steps=36000, test inputs generated=15197, failing inputs=0      (2022-02-23T03:57:19.924Z     265M used)
Progress update: steps=36530, test inputs generated=15420, failing inputs=0      (2022-02-23T03:57:23.377Z     978M used)
Progress update: steps=37000, test inputs generated=15620, failing inputs=0      (2022-02-23T03:57:26.632Z     260M used)
Progress update: steps=38000, test inputs generated=16018, failing inputs=0      (2022-02-23T03:57:34.784Z     381M used)
Progress update: steps=39000, test inputs generated=16430, failing inputs=0      (2022-02-23T03:57:41.302Z     471M used)
Progress update: steps=40000, test inputs generated=16842, failing inputs=0      (2022-02-23T03:57:48.956Z     675M used)
Progress update: steps=41000, test inputs generated=17248, failing inputs=0      (2022-02-23T03:57:57.653Z     890M used)
Progress update: steps=42000, test inputs generated=17647, failing inputs=1      (2022-02-23T03:58:05.741Z     1.09G used)
Progress update: steps=43000, test inputs generated=18067, failing inputs=1      (2022-02-23T03:58:14.542Z     139M used)
Progress update: steps=44000, test inputs generated=18443, failing inputs=1      (2022-02-23T03:58:23.275Z     159M used)
Progress update: steps=44029, test inputs generated=18460, failing inputs=1      (2022-02-23T03:58:23.378Z     247M used)
Progress update: steps=45000, test inputs generated=18856, failing inputs=1      (2022-02-23T03:58:36.753Z     702M used)
Progress update: steps=46000, test inputs generated=19223, failing inputs=2      (2022-02-23T03:58:51.595Z     76.3M used)
Progress update: steps=47000, test inputs generated=19655, failing inputs=3      (2022-02-23T03:59:05.012Z     783M used)
Progress update: steps=48000, test inputs generated=20082, failing inputs=3      (2022-02-23T03:59:16.388Z     447M used)Long generation time 1411 msec for null sequence.

Progress update: steps=48463, test inputs generated=20283, failing inputs=3      (2022-02-23T03:59:23.378Z     285M used)
Progress update: steps=49000, test inputs generated=20505, failing inputs=3      (2022-02-23T03:59:29.472Z     210M used)
Progress update: steps=50000, test inputs generated=20913, failing inputs=3      (2022-02-23T03:59:40.980Z     848M used)
Progress update: steps=51000, test inputs generated=21311, failing inputs=3      (2022-02-23T03:59:54.218Z     653M used)Long generation time 1672 msec for null sequence.

Progress update: steps=52000, test inputs generated=21702, failing inputs=3      (2022-02-23T04:00:08.439Z     657M used)
Progress update: steps=53000, test inputs generated=22119, failing inputs=3      (2022-02-23T04:00:20.909Z     532M used)
Progress update: steps=53187, test inputs generated=22191, failing inputs=3      (2022-02-23T04:00:23.379Z     106M used)
Progress update: steps=54000, test inputs generated=22511, failing inputs=3      (2022-02-23T04:00:35.656Z     608M used)
Progress update: steps=55000, test inputs generated=22935, failing inputs=3      (2022-02-23T04:00:47.107Z     637M used)
Progress update: steps=56000, test inputs generated=23327, failing inputs=3      (2022-02-23T04:01:00.528Z     152M used)
Progress update: steps=57000, test inputs generated=23733, failing inputs=3      (2022-02-23T04:01:12.805Z     290M used)
Progress update: steps=57915, test inputs generated=24119, failing inputs=3      (2022-02-23T04:01:23.379Z     147M used)
Progress update: steps=58000, test inputs generated=24159, failing inputs=3      (2022-02-23T04:01:25.711Z     345M used)Long generation time 1949 msec for null sequence.

Progress update: steps=59000, test inputs generated=24559, failing inputs=3      (2022-02-23T04:01:43.536Z     340M used)
Progress update: steps=60000, test inputs generated=24981, failing inputs=3      (2022-02-23T04:02:04.356Z     494M used)Long generation time 1053 msec for null sequence.

Progress update: steps=61000, test inputs generated=25371, failing inputs=3      (2022-02-23T04:02:20.671Z     218M used)
Progress update: steps=61120, test inputs generated=25429, failing inputs=3      (2022-02-23T04:02:23.379Z     457M used)Long generation time 1157 msec for null sequence.

Progress update: steps=62000, test inputs generated=25779, failing inputs=3      (2022-02-23T04:02:37.024Z     81.2M used)Long generation time 1253 msec for null sequence.

Progress update: steps=63000, test inputs generated=26198, failing inputs=4      (2022-02-23T04:02:52.382Z     475M used)Long generation time 1074 msec (= 1074 + 0) for
com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
boolean boolean2 = jSDocInfo0.hasParameter("hi!");
boolean boolean3 = jSDocInfo0.isHidden();
boolean boolean4 = jSDocInfo0.isNoSideEffects();
java.util.Set<java.lang.String> strSet5 = jSDocInfo0.getSuppressions();
com.google.common.collect.ImmutableList<java.lang.Object> objList13 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray14 = objList13.toArray();
java.util.ListIterator<java.lang.Object> objItor15 = objList13.listIterator();
com.google.common.collect.ImmutableList<java.lang.Object> objList16 = objList13.asList();
java.lang.Object[] objArray17 = objList13.toArray();
com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean20 = node19.hasOneChild();
boolean boolean21 = node19.isQuotedString();
int int22 = node19.getSideEffectFlags();
com.google.javascript.rhino.Node node23 = node19.getLastSibling();
boolean boolean24 = node23.isAdd();
int int25 = objList13.indexOf((java.lang.Object)boolean24);
boolean boolean26 = strSet5.containsAll((java.util.Collection<java.lang.Object>)objList13);
java.lang.Object[] objArray27 = objList13.toArray();
java.lang.Object[] objArray28 = objList13.toArray();
java.util.stream.Stream<java.lang.Object> objStream29 = objList13.stream();
com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean32 = node31.hasOneChild();
com.google.javascript.rhino.Node node33 = node31.getLastChild();
java.lang.String str37 = node31.toString(false, false, true);
com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newNumber((double)'4');
com.google.javascript.rhino.Node node40 = node31.copyInformationFrom(node39);
boolean boolean41 = node31.isInc();
com.google.javascript.rhino.Node node42 = node31.cloneTree();
java.lang.String str43 = node31.getQualifiedName();
boolean boolean44 = node31.hasChildren();
boolean boolean45 = objList13.equals((java.lang.Object)node31);
com.google.common.collect.ImmutableList<java.lang.Object> objList53 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray54 = objList53.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList55 = objList53.reverse();
boolean boolean56 = objList55.isEmpty();
com.google.common.collect.ImmutableList<java.lang.Object> objList64 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray65 = objList64.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList66 = objList64.reverse();
boolean boolean67 = objList55.containsAll((java.util.Collection<java.lang.Object>)objList66);
java.lang.Object[] objArray68 = objList55.toArray();
java.util.Spliterator<java.lang.Object> objSpliterator69 = objList55.spliterator();
boolean boolean70 = objList55.isEmpty();
java.lang.Object[] objArray71 = objList55.toArray();
boolean boolean72 = objList13.retainAll((java.util.Collection<java.lang.Object>)objList55);

Long generation time 1101 msec (= 1101 + 0) for
com.google.common.collect.ImmutableList<java.lang.Object> objList7 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray8 = objList7.toArray();
java.util.ListIterator<java.lang.Object> objItor9 = objList7.listIterator();
java.util.ListIterator<java.lang.Object> objItor10 = objList7.listIterator();
com.google.common.collect.ImmutableList<java.lang.Object> objList11 = objList7.reverse();
com.google.common.collect.ImmutableList<java.lang.Object> objList19 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean22 = node21.hasOneChild();
com.google.javascript.rhino.Node node23 = node21.getLastChild();
java.lang.String str27 = node21.toString(false, false, true);
com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newNumber((double)'4');
com.google.javascript.rhino.Node node30 = node21.copyInformationFrom(node29);
int int31 = objList19.lastIndexOf((java.lang.Object)node29);
boolean boolean33 = objList19.contains((java.lang.Object)(short)-1);
int int35 = objList19.indexOf((java.lang.Object)1);
com.google.common.collect.UnmodifiableListIterator<java.lang.Object> objItor36 = objList19.listIterator();
com.google.common.collect.ImmutableList<java.lang.Object> objList44 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray45 = objList44.toArray();
java.util.ListIterator<java.lang.Object> objItor46 = objList44.listIterator();
com.google.common.collect.ImmutableList<java.lang.Object> objList54 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray55 = objList54.toArray();
java.util.ListIterator<java.lang.Object> objItor56 = objList54.listIterator();
boolean boolean57 = objList44.containsAll((java.util.Collection<java.lang.Object>)objList54);
boolean boolean58 = objList44.isEmpty();
com.google.javascript.rhino.Node node60 = com.google.javascript.rhino.Node.newString("(NUMBER 52.0)");
int int61 = objList44.indexOf((java.lang.Object)node60);
boolean boolean62 = node60.isAssignAdd();
int int63 = objList19.indexOf((java.lang.Object)node60);
int int64 = objList19.size();
boolean boolean65 = objList19.isEmpty();
com.google.common.collect.ImmutableList<java.lang.Object> objList66 = objList19.asList();
boolean boolean67 = objList7.containsAll((java.util.Collection<java.lang.Object>)objList19);

Long generation time 1623 msec for null sequence.

Progress update: steps=64000, test inputs generated=26586, failing inputs=4      (2022-02-23T04:03:10.355Z     143M used)
Progress update: steps=64602, test inputs generated=26849, failing inputs=4      (2022-02-23T04:03:23.380Z     430M used)
Progress update: steps=65000, test inputs generated=27003, failing inputs=4      (2022-02-23T04:03:27.329Z     176M used)Long generation time 1145 msec (= 1145 + 0) for
com.google.common.collect.ImmutableList<java.lang.Object> objList0 = com.google.common.collect.ImmutableList.of();
java.util.Spliterator<java.lang.Object> objSpliterator1 = objList0.spliterator();
com.google.common.collect.ImmutableList<java.lang.Object> objList9 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray10 = objList9.toArray();
java.lang.String str11 = objList9.toString();
com.google.common.collect.ImmutableList<java.lang.Object> objList19 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray20 = objList19.toArray();
java.util.ListIterator<java.lang.Object> objItor21 = objList19.listIterator();
java.util.ListIterator<java.lang.Object> objItor22 = objList19.listIterator();
int int23 = objList9.indexOf((java.lang.Object)objList19);
boolean boolean24 = objList0.containsAll((java.util.Collection<java.lang.Object>)objList9);
java.lang.Object[][][] objArray25 = new java.lang.Object[][][] {  };
java.lang.Object[][][] objArray26 = objList0.toArray(objArray25);
int int27 = objList0.size();
com.google.common.collect.ImmutableList<java.lang.Object> objList35 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray36 = objList35.toArray();
java.util.ListIterator<java.lang.Object> objItor37 = objList35.listIterator();
com.google.common.collect.ImmutableList<java.lang.Object> objList38 = objList35.asList();
java.lang.Object[] objArray39 = objList35.toArray();
int int40 = objList35.size();
com.google.common.collect.ImmutableList<java.lang.Object> objList48 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray49 = objList48.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList50 = objList48.reverse();
java.util.stream.Stream<java.lang.Object> objStream51 = objList48.stream();
java.util.ListIterator<java.lang.Object> objItor52 = objList48.listIterator();
boolean boolean53 = objList35.containsAll((java.util.Collection<java.lang.Object>)objList48);
boolean boolean54 = objList35.isEmpty();
com.google.common.collect.ImmutableList<java.lang.Object> objList55 = objList35.asList();
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet56 = com.google.javascript.rhino.jstype.BooleanLiteralSet.BOTH;
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet57 = com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE;
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet58 = booleanLiteralSet56.union(booleanLiteralSet57);
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet59 = com.google.javascript.rhino.jstype.BooleanLiteralSet.FALSE;
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet60 = booleanLiteralSet58.union(booleanLiteralSet59);
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet62 = com.google.javascript.rhino.jstype.BooleanLiteralSet.get(true);
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet63 = booleanLiteralSet60.intersection(booleanLiteralSet62);
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet64 = com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE;
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet65 = com.google.javascript.rhino.jstype.BooleanLiteralSet.EMPTY;
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet66 = booleanLiteralSet64.intersection(booleanLiteralSet65);
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet67 = com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE;
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet68 = com.google.javascript.rhino.jstype.BooleanLiteralSet.EMPTY;
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet69 = booleanLiteralSet67.intersection(booleanLiteralSet68);
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet70 = booleanLiteralSet65.union(booleanLiteralSet67);
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet71 = com.google.javascript.rhino.jstype.BooleanLiteralSet.BOTH;
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet72 = com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE;
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet73 = booleanLiteralSet71.union(booleanLiteralSet72);
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet74 = com.google.javascript.rhino.jstype.BooleanLiteralSet.FALSE;
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet75 = booleanLiteralSet73.union(booleanLiteralSet74);
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet77 = com.google.javascript.rhino.jstype.BooleanLiteralSet.get(true);
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet78 = booleanLiteralSet75.intersection(booleanLiteralSet77);
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet79 = booleanLiteralSet67.union(booleanLiteralSet77);
com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet80 = booleanLiteralSet63.intersection(booleanLiteralSet77);
int int81 = objList55.lastIndexOf((java.lang.Object)booleanLiteralSet80);
java.util.Spliterator<java.lang.Object> objSpliterator82 = objList55.spliterator();
boolean boolean83 = objList0.removeAll((java.util.Collection<java.lang.Object>)objList55);

Long generation time 1129 msec for null sequence.
Long generation time 1048 msec (= 1048 + 0) for
com.google.common.collect.ImmutableList<java.lang.Object> objList7 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean10 = node9.hasOneChild();
com.google.javascript.rhino.Node node11 = node9.getLastChild();
java.lang.String str15 = node9.toString(false, false, true);
com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newNumber((double)'4');
com.google.javascript.rhino.Node node18 = node9.copyInformationFrom(node17);
int int19 = objList7.lastIndexOf((java.lang.Object)node17);
boolean boolean21 = objList7.contains((java.lang.Object)(short)-1);
int int23 = objList7.indexOf((java.lang.Object)1);
com.google.common.collect.ImmutableList<java.lang.Object> objList31 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray32 = objList31.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList33 = objList31.reverse();
com.google.common.collect.ImmutableList<java.lang.Object> objList41 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean44 = node43.hasOneChild();
com.google.javascript.rhino.Node node45 = node43.getLastChild();
java.lang.String str49 = node43.toString(false, false, true);
com.google.javascript.rhino.Node node51 = com.google.javascript.rhino.Node.newNumber((double)'4');
com.google.javascript.rhino.Node node52 = node43.copyInformationFrom(node51);
int int53 = objList41.lastIndexOf((java.lang.Object)node51);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.Object>> objCollectionList54 = com.google.common.collect.ImmutableList.copyOf((java.lang.Iterable<java.lang.Object>)objList41);
com.google.common.collect.ImmutableList<java.lang.Object> objList55 = objList41.reverse();
com.google.common.collect.ImmutableList<java.lang.Object> objList63 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
com.google.javascript.rhino.Node node65 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean66 = node65.hasOneChild();
com.google.javascript.rhino.Node node67 = node65.getLastChild();
java.lang.String str71 = node65.toString(false, false, true);
com.google.javascript.rhino.Node node73 = com.google.javascript.rhino.Node.newNumber((double)'4');
com.google.javascript.rhino.Node node74 = node65.copyInformationFrom(node73);
int int75 = objList63.lastIndexOf((java.lang.Object)node73);
com.google.common.collect.ImmutableList<java.lang.Object> objList83 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray84 = objList83.toArray();
java.util.ListIterator<java.lang.Object> objItor85 = objList83.listIterator();
com.google.common.collect.ImmutableList<java.lang.Iterable<java.lang.Object>> objIterableList86 = com.google.common.collect.ImmutableList.of((java.lang.Iterable<java.lang.Object>)objList31, (java.lang.Iterable<java.lang.Object>)objList55, (java.lang.Iterable<java.lang.Object>)objList63, (java.lang.Iterable<java.lang.Object>)objList83);
boolean boolean87 = objList7.containsAll((java.util.Collection<java.lang.Object>)objList31);
java.lang.Object[] objArray88 = objList31.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList89 = com.google.common.collect.ImmutableList.of();
java.util.Spliterator<java.lang.Object> objSpliterator90 = objList89.spliterator();
com.google.common.collect.ImmutableList<java.lang.Object> objList91 = objList89.asList();
int int92 = objList91.size();
com.google.common.collect.ImmutableList<java.lang.Object> objList93 = objList91.reverse();
boolean boolean94 = objList31.containsAll((java.util.Collection<java.lang.Object>)objList91);
java.util.stream.Stream<java.lang.Object> objStream95 = objList91.stream();
java.lang.Object obj97 = objList91.get(1);

Long generation time 1052 msec (= 1051 + 0) for
com.google.common.collect.ImmutableList<java.lang.Object> objList7 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray8 = objList7.toArray();
java.util.ListIterator<java.lang.Object> objItor9 = objList7.listIterator();
com.google.common.collect.ImmutableList<java.lang.Object> objList10 = objList7.asList();
java.lang.Object[] objArray11 = objList7.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList19 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean22 = node21.hasOneChild();
com.google.javascript.rhino.Node node23 = node21.getLastChild();
java.lang.String str27 = node21.toString(false, false, true);
com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newNumber((double)'4');
com.google.javascript.rhino.Node node30 = node21.copyInformationFrom(node29);
int int31 = objList19.lastIndexOf((java.lang.Object)node29);
com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean34 = node33.hasOneChild();
com.google.javascript.rhino.Node node35 = node33.getLastChild();
java.lang.String str39 = node33.toString(false, false, true);
com.google.javascript.rhino.Node node40 = node29.copyInformationFromForTree(node33);
boolean boolean41 = objList7.contains((java.lang.Object)node40);
int int42 = objList7.size();
com.google.common.collect.ImmutableList<java.lang.Object> objList50 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray51 = objList50.toArray();
java.lang.Object[] objArray52 = objList50.toArray();
java.util.stream.Stream<java.lang.Object> objStream53 = objList50.stream();
boolean boolean54 = objList7.containsAll((java.util.Collection<java.lang.Object>)objList50);
com.google.common.collect.ImmutableList<com.google.common.collect.UnmodifiableListIterator<java.lang.Object>> objItorList55 = com.google.common.collect.ImmutableList.copyOf((java.util.Collection<java.lang.Object>)objList7);

Long generation time 1083 msec (= 1083 + 0) for
com.google.common.collect.ImmutableList<java.lang.Object> objList7 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray8 = objList7.toArray();
java.util.ListIterator<java.lang.Object> objItor9 = objList7.listIterator();
java.util.ListIterator<java.lang.Object> objItor10 = objList7.listIterator();
boolean boolean11 = objList7.isEmpty();
com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString("hi!");
com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile15 = node14.getStaticSourceFile();
com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean18 = node17.hasOneChild();
com.google.javascript.rhino.Node node19 = node17.getLastChild();
java.lang.String str23 = node17.toString(false, false, true);
com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newNumber((double)'4');
com.google.javascript.rhino.Node node26 = node17.copyInformationFrom(node25);
com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean29 = node28.hasOneChild();
int int30 = node28.getType();
boolean boolean31 = node28.isAssign();
com.google.javascript.rhino.Node node32 = node28.getFirstChild();
com.google.javascript.rhino.Node node35 = new com.google.javascript.rhino.Node(8, node14, node17, node28, (-1), 48);
boolean boolean36 = objList7.equals((java.lang.Object)node17);
com.google.common.collect.ImmutableList<java.lang.Object> objList37 = objList7.reverse();
java.lang.Object[] objArray38 = objList7.toArray();
java.lang.Object[] objArray39 = objList7.toArray();
java.util.Spliterator<java.lang.Object> objSpliterator40 = objList7.spliterator();
java.util.Iterator<java.lang.Object> objItor41 = objList7.iterator();

Long generation time 1472 msec (= 1472 + 0) for
com.google.common.collect.ImmutableList<java.lang.Object> objList7 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray8 = objList7.toArray();
boolean boolean10 = objList7.contains((java.lang.Object)31);
com.google.common.collect.ImmutableList<java.lang.Object> objList11 = objList7.reverse();
java.util.Spliterator<java.lang.Object> objSpliterator12 = objList11.spliterator();
int int13 = objList11.size();
com.google.common.collect.ImmutableList<java.lang.Object> objList21 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray22 = objList21.toArray();
java.util.ListIterator<java.lang.Object> objItor23 = objList21.listIterator();
com.google.common.collect.ImmutableList<java.lang.Object> objList24 = objList21.asList();
java.lang.Object[] objArray25 = objList21.toArray();
int int26 = objList21.size();
com.google.common.collect.ImmutableList<java.lang.Object> objList34 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray35 = objList34.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList36 = objList34.reverse();
java.util.stream.Stream<java.lang.Object> objStream37 = objList34.stream();
java.util.ListIterator<java.lang.Object> objItor38 = objList34.listIterator();
boolean boolean39 = objList21.containsAll((java.util.Collection<java.lang.Object>)objList34);
boolean boolean40 = objList11.containsAll((java.util.Collection<java.lang.Object>)objList21);


Progress update: steps=66000, test inputs generated=27404, failing inputs=5      (2022-02-23T04:03:53.078Z     401M used)Long generation time 1398 msec (= 1398 + 0) for
com.google.common.collect.ImmutableList<java.lang.Object> objList7 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean10 = node9.hasOneChild();
com.google.javascript.rhino.Node node11 = node9.getLastChild();
java.lang.String str15 = node9.toString(false, false, true);
com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newNumber((double)'4');
com.google.javascript.rhino.Node node18 = node9.copyInformationFrom(node17);
int int19 = objList7.lastIndexOf((java.lang.Object)node17);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.Object>> objCollectionList20 = com.google.common.collect.ImmutableList.copyOf((java.lang.Iterable<java.lang.Object>)objList7);
com.google.common.collect.ImmutableList<java.lang.Object> objList21 = objList7.reverse();
java.lang.Object[] objArray22 = objList21.toArray();
java.lang.Object obj24 = objList21.get((int)(short)0);
com.google.common.collect.ImmutableList<java.lang.Object> objList25 = com.google.common.collect.ImmutableList.of();
java.util.Spliterator<java.lang.Object> objSpliterator26 = objList25.spliterator();
com.google.common.collect.ImmutableList<java.lang.Object> objList34 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray35 = objList34.toArray();
java.lang.String str36 = objList34.toString();
com.google.common.collect.ImmutableList<java.lang.Object> objList44 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray45 = objList44.toArray();
java.util.ListIterator<java.lang.Object> objItor46 = objList44.listIterator();
java.util.ListIterator<java.lang.Object> objItor47 = objList44.listIterator();
int int48 = objList34.indexOf((java.lang.Object)objList44);
boolean boolean49 = objList25.containsAll((java.util.Collection<java.lang.Object>)objList34);
java.lang.Object[][][] objArray50 = new java.lang.Object[][][] {  };
java.lang.Object[][][] objArray51 = objList25.toArray(objArray50);
int int52 = objList25.size();
boolean boolean53 = objList21.addAll((java.util.Collection<java.lang.Object>)objList25);

Long generation time 1139 msec (= 1139 + 0) for
com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
boolean boolean1 = jSDocInfo0.isIdGenerator();
boolean boolean2 = jSDocInfo0.isDeprecated();
boolean boolean3 = jSDocInfo0.shouldPreserveTry();
boolean boolean4 = jSDocInfo0.containsDeclaration();
boolean boolean5 = jSDocInfo0.isImplicitCast();
boolean boolean6 = jSDocInfo0.isNoAlias();
boolean boolean7 = jSDocInfo0.shouldPreserveTry();
java.util.Set<java.lang.String> strSet8 = jSDocInfo0.getSuppressions();
java.util.Spliterator<java.lang.String> strSpliterator9 = strSet8.spliterator();
com.google.common.collect.ImmutableList<java.lang.Object> objList17 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray18 = objList17.toArray();
boolean boolean20 = objList17.contains((java.lang.Object)31);
com.google.common.collect.ImmutableList<java.lang.Object> objList21 = objList17.reverse();
java.util.Spliterator<java.lang.Object> objSpliterator22 = objList21.spliterator();
boolean boolean23 = strSet8.retainAll((java.util.Collection<java.lang.Object>)objList21);
com.google.common.collect.ImmutableList<java.lang.Object> objList31 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean34 = node33.hasOneChild();
com.google.javascript.rhino.Node node35 = node33.getLastChild();
java.lang.String str39 = node33.toString(false, false, true);
com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newNumber((double)'4');
com.google.javascript.rhino.Node node42 = node33.copyInformationFrom(node41);
int int43 = objList31.lastIndexOf((java.lang.Object)node41);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.Object>> objCollectionList44 = com.google.common.collect.ImmutableList.copyOf((java.lang.Iterable<java.lang.Object>)objList31);
com.google.common.collect.ImmutableList<java.lang.Object> objList45 = objList31.reverse();
com.google.common.collect.ImmutableList<java.lang.Object> objList53 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray54 = objList53.toArray();
java.lang.String str55 = objList53.toString();
com.google.common.collect.ImmutableList<java.lang.Object> objList63 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray64 = objList63.toArray();
java.util.ListIterator<java.lang.Object> objItor65 = objList63.listIterator();
java.util.ListIterator<java.lang.Object> objItor66 = objList63.listIterator();
int int67 = objList53.indexOf((java.lang.Object)objList63);
boolean boolean68 = objList45.containsAll((java.util.Collection<java.lang.Object>)objList53);
com.google.common.collect.ImmutableList<java.lang.Object> objList76 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray77 = objList76.toArray();
java.util.ListIterator<java.lang.Object> objItor78 = objList76.listIterator();
java.util.ListIterator<java.lang.Object> objItor79 = objList76.listIterator();
int int80 = objList76.size();
boolean boolean81 = objList45.containsAll((java.util.Collection<java.lang.Object>)objList76);
boolean boolean82 = objList21.addAll((java.util.Collection<java.lang.Object>)objList76);

Long generation time 1201 msec (= 1201 + 0) for
com.google.common.collect.ImmutableList<java.lang.Object> objList7 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean10 = node9.hasOneChild();
com.google.javascript.rhino.Node node11 = node9.getLastChild();
java.lang.String str15 = node9.toString(false, false, true);
com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newNumber((double)'4');
com.google.javascript.rhino.Node node18 = node9.copyInformationFrom(node17);
int int19 = objList7.lastIndexOf((java.lang.Object)node17);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.Object>> objCollectionList20 = com.google.common.collect.ImmutableList.copyOf((java.lang.Iterable<java.lang.Object>)objList7);
java.util.Iterator<java.lang.Object> objItor21 = objList7.iterator();
java.util.stream.Stream<java.lang.Object> objStream22 = objList7.parallelStream();
com.google.common.collect.ImmutableList<java.lang.Object> objList30 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray31 = objList30.toArray();
java.lang.Object[] objArray32 = objList30.toArray();
com.google.common.collect.UnmodifiableIterator<java.lang.Object> objItor33 = objList30.iterator();
com.google.common.collect.ImmutableList<java.lang.Object> objList34 = objList30.asList();
boolean boolean35 = objList7.containsAll((java.util.Collection<java.lang.Object>)objList34);
java.lang.Object[] objArray36 = objList7.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList37 = com.google.common.collect.ImmutableList.of();
java.util.Spliterator<java.lang.Object> objSpliterator38 = objList37.spliterator();
java.util.stream.Stream<java.lang.Object> objStream39 = objList37.stream();
int int40 = objList37.size();
com.google.javascript.rhino.JSDocInfo jSDocInfo41 = new com.google.javascript.rhino.JSDocInfo();
boolean boolean43 = jSDocInfo41.hasParameter("hi!");
boolean boolean44 = jSDocInfo41.hasType();
com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean47 = node46.hasOneChild();
com.google.javascript.rhino.Node node48 = node46.getLastChild();
boolean boolean49 = node46.isGetterDef();
jSDocInfo41.setAssociatedNode(node46);
java.lang.String str51 = jSDocInfo41.getMeaning();
boolean boolean52 = jSDocInfo41.isConstructor();
java.lang.String str53 = jSDocInfo41.getFileOverview();
com.google.javascript.rhino.JSTypeExpression jSTypeExpression54 = jSDocInfo41.getThisType();
boolean boolean55 = jSDocInfo41.isDefine();
boolean boolean56 = jSDocInfo41.isNoShadow();
boolean boolean57 = objList37.contains((java.lang.Object)boolean56);
com.google.common.collect.UnmodifiableListIterator<java.lang.Object> objItor58 = objList37.listIterator();
boolean boolean59 = objList7.retainAll((java.util.Collection<java.lang.Object>)objList37);

Long generation time 1324 msec (= 1324 + 0) for
com.google.common.collect.ImmutableList<java.lang.Object> objList7 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean10 = node9.hasOneChild();
com.google.javascript.rhino.Node node11 = node9.getLastChild();
java.lang.String str15 = node9.toString(false, false, true);
com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newNumber((double)'4');
com.google.javascript.rhino.Node node18 = node9.copyInformationFrom(node17);
int int19 = objList7.lastIndexOf((java.lang.Object)node17);
com.google.common.collect.ImmutableList<java.lang.Object> objList27 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean30 = node29.hasOneChild();
com.google.javascript.rhino.Node node31 = node29.getLastChild();
java.lang.String str35 = node29.toString(false, false, true);
com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newNumber((double)'4');
com.google.javascript.rhino.Node node38 = node29.copyInformationFrom(node37);
int int39 = objList27.lastIndexOf((java.lang.Object)node37);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.Object>> objCollectionList40 = com.google.common.collect.ImmutableList.copyOf((java.lang.Iterable<java.lang.Object>)objList27);
com.google.common.collect.ImmutableList<java.lang.Object> objList41 = objList27.reverse();
com.google.common.collect.ImmutableList<java.lang.Object> objList49 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray50 = objList49.toArray();
java.lang.String str51 = objList49.toString();
com.google.common.collect.ImmutableList<java.lang.Object> objList59 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray60 = objList59.toArray();
java.util.ListIterator<java.lang.Object> objItor61 = objList59.listIterator();
java.util.ListIterator<java.lang.Object> objItor62 = objList59.listIterator();
int int63 = objList49.indexOf((java.lang.Object)objList59);
boolean boolean64 = objList41.containsAll((java.util.Collection<java.lang.Object>)objList49);
int int65 = objList41.size();
boolean boolean66 = objList7.removeAll((java.util.Collection<java.lang.Object>)objList41);

Long generation time 1093 msec for null sequence.

Progress update: steps=67000, test inputs generated=27833, failing inputs=5      (2022-02-23T04:04:21.075Z     324M used)
Progress update: steps=67071, test inputs generated=27861, failing inputs=5      (2022-02-23T04:04:23.380Z     95.2M used)Long generation time 1352 msec (= 1352 + 0) for
com.google.common.collect.ImmutableList<java.lang.Object> objList7 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray8 = objList7.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList9 = objList7.reverse();
boolean boolean10 = objList9.isEmpty();
com.google.common.collect.UnmodifiableListIterator<java.lang.Object> objItor12 = objList9.listIterator((int)(byte)0);
boolean boolean14 = objList9.contains((java.lang.Object)(short)100);
com.google.common.collect.ImmutableList<java.lang.Object> objList22 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray23 = objList22.toArray();
java.util.ListIterator<java.lang.Object> objItor24 = objList22.listIterator();
java.util.ListIterator<java.lang.Object> objItor25 = objList22.listIterator();
boolean boolean26 = objList22.isEmpty();
boolean boolean27 = objList22.isEmpty();
java.lang.Object obj28 = null;
int int29 = objList22.indexOf(obj28);
java.lang.Object[] objArray30 = objList22.toArray();
boolean boolean31 = objList9.retainAll((java.util.Collection<java.lang.Object>)objList22);

Long generation time 1230 msec for null sequence.
Long generation time 1192 msec for null sequence.
Long generation time 1192 msec for null sequence.
Long generation time 1355 msec for null sequence.

Progress update: steps=68000, test inputs generated=28242, failing inputs=5      (2022-02-23T04:04:52.703Z     94.3M used)Long generation time 1069 msec for null sequence.
Long generation time 1136 msec for null sequence.

Progress update: steps=69000, test inputs generated=28701, failing inputs=5      (2022-02-23T04:05:14.558Z     253M used)Long generation time 1113 msec (= 1112 + 0) for
com.google.common.collect.ImmutableList<java.lang.Object> objList0 = com.google.common.collect.ImmutableList.of();
java.util.Spliterator<java.lang.Object> objSpliterator1 = objList0.spliterator();
java.util.stream.Stream<java.lang.Object> objStream2 = objList0.stream();
int int3 = objList0.size();
java.util.Iterator<java.lang.Object> objItor4 = objList0.iterator();
com.google.common.collect.ImmutableList<java.lang.Object> objList12 = com.google.common.collect.ImmutableList.of((java.lang.Object)100L, (java.lang.Object)10, (java.lang.Object)100.0f, (java.lang.Object)0.0d, (java.lang.Object)(short)100, (java.lang.Object)"hi!", (java.lang.Object)(byte)0);
java.lang.Object[] objArray13 = objList12.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList14 = objList12.reverse();
java.util.stream.Stream<java.lang.Object> objStream15 = objList12.stream();
com.google.common.collect.ImmutableList<java.lang.Object> objList16 = com.google.common.collect.ImmutableList.copyOf((java.lang.Iterable<java.lang.Object>)objList12);
com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean20 = node19.hasOneChild();
com.google.javascript.rhino.Node node21 = node19.getLastChild();
java.lang.String str25 = node19.toString(false, false, true);
com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newNumber((double)'4');
com.google.javascript.rhino.Node node28 = node19.copyInformationFrom(node27);
boolean boolean29 = node19.isInc();
com.google.javascript.rhino.Node node30 = node19.cloneTree();
com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean34 = node33.hasOneChild();
int int35 = node33.getType();
com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean38 = node37.hasOneChild();
com.google.javascript.rhino.Node node39 = node37.getLastChild();
java.lang.String str43 = node37.toString(false, false, true);
com.google.javascript.rhino.Node node45 = com.google.javascript.rhino.Node.newNumber((double)'4');
com.google.javascript.rhino.Node node46 = node37.copyInformationFrom(node45);
com.google.javascript.rhino.Node node49 = new com.google.javascript.rhino.Node(47, node33, node37, 10, 0);
int int51 = node33.getIntProp((int)(short)0);
com.google.javascript.rhino.Node node52 = node33.getParent();
int int53 = node52.getLineno();
java.lang.String str54 = node52.getQualifiedName();
java.lang.String str55 = node52.getSourceFileName();
com.google.javascript.rhino.Node node56 = node19.useSourceInfoFromForTree(node52);
boolean boolean57 = node52.isEmpty();
com.google.javascript.rhino.Node node60 = new com.google.javascript.rhino.Node(0, node52, 4095, 42);
boolean boolean61 = node52.isContinue();
boolean boolean62 = node52.isTry();
boolean boolean63 = objList16.equals((java.lang.Object)boolean62);
boolean boolean64 = objList0.containsAll((java.util.Collection<java.lang.Object>)objList16);
com.google.javascript.rhino.JSDocInfo jSDocInfo65 = new com.google.javascript.rhino.JSDocInfo();
boolean boolean67 = jSDocInfo65.hasParameter("hi!");
boolean boolean68 = jSDocInfo65.hasType();
com.google.javascript.rhino.Node node70 = com.google.javascript.rhino.Node.newNumber((double)'4');
boolean boolean71 = node70.hasOneChild();
com.google.javascript.rhino.Node node72 = node70.getLastChild();
boolean boolean73 = node70.isGetterDef();
jSDocInfo65.setAssociatedNode(node70);
boolean boolean76 = jSDocInfo65.hasParameterType("REGEXP");
java.lang.String str77 = jSDocInfo65.getBlockDescription();
boolean boolean78 = jSDocInfo65.shouldPreserveTry();
boolean boolean79 = jSDocInfo65.isIdGenerator();
boolean boolean80 = objList16.equals((java.lang.Object)boolean79);
com.google.common.collect.ImmutableList<java.lang.Object> objList81 = objList16.asList();
com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableCollection<java.lang.Object>[]> objCollectionArrayList82 = com.google.common.collect.ImmutableList.copyOf((java.util.Collection<java.lang.Object>)objList16);


Progress update: steps=69279, test inputs generated=28808, failing inputs=5      (2022-02-23T04:05:23.381Z     327M used)Long generation time 1590 msec for null sequence.

Progress update: steps=69279, test inputs generated=28808, failing inputs=5      (2022-02-23T04:05:23.523Z     327M used)
Normal method executions: 12512236
Exceptional method executions: 4087

Average method execution time (normal termination):      0.000272
Average method execution time (exceptional termination): 0.0453
Approximate memory usage 327M
Explorer = ForwardGenerator(steps: 69279, null steps: 40471, num_sequences_generated: 28808;
    allSequences: 28808, regresson seqs: 2222, error seqs: 5=5=5, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 26581;
    runtimePrimitivesSeen:266)

Error-revealing test output:
Error-revealing test count: 5
Writing error-revealing JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.UnionType-18/ErrorTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.UnionType-18/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 1292 regression sequences.

Regression test output:
Regression test count: 1292
Writing regression JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.UnionType-18/RegressionTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.UnionType-18/RegressionTest1.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.UnionType-18/RegressionTest2.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.UnionType-18/RegressionTest3.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.UnionType-18/RegressionTest4.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.UnionType-18/RegressionTest5.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.UnionType-18/RegressionTest6.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.UnionType-18/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Invalid tests generated: 0

Uncompilable sequences generated (count: 402).
Please report uncompilable sequences at https://github.com/randoop/randoop/issues ,
providing the information requested at https://randoop.github.io/randoop/manual/index.html#bug-reporting .
