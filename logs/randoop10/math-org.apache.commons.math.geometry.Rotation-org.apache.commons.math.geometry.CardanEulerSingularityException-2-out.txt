Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".

Will try to generate tests for 272 classes.
PUBLIC MEMBERS=3043
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-21T09:13:51.320Z     441M used)
Progress update: steps=1000, test inputs generated=406, failing inputs=0      (2022-02-21T09:14:01.823Z     745M used)
Progress update: steps=2000, test inputs generated=1077, failing inputs=0      (2022-02-21T09:14:15.488Z     84.1M used)
Progress update: steps=3000, test inputs generated=1770, failing inputs=0      (2022-02-21T09:14:28.875Z     414M used)
Progress update: steps=4000, test inputs generated=2485, failing inputs=0      (2022-02-21T09:14:40.792Z     605M used)
Progress update: steps=4941, test inputs generated=3149, failing inputs=0      (2022-02-21T09:14:51.327Z     535M used)
Progress update: steps=5000, test inputs generated=3192, failing inputs=0      (2022-02-21T09:14:52.077Z     1.18G used)
Progress update: steps=6000, test inputs generated=3913, failing inputs=0      (2022-02-21T09:15:03.692Z     1,06G used)Long generation time 1789 msec (= 1789 + 0) for
java.util.Properties properties0 = null;
java.util.Properties properties1 = new java.util.Properties(properties0);
java.util.Properties properties2 = new java.util.Properties(properties0);
java.util.Set<java.lang.Object> objSet3 = properties2.keySet();
java.util.Set<java.lang.String> strSet4 = properties2.stringPropertyNames();

Long generation time 1253 msec (= 1253 + 0) for
java.util.Locale.LanguageRange[] languageRangeArray0 = new java.util.Locale.LanguageRange[] {  };
java.util.ArrayList<java.util.Locale.LanguageRange> languageRangeList1 = new java.util.ArrayList<java.util.Locale.LanguageRange>();
boolean boolean2 = java.util.Collections.addAll((java.util.Collection<java.util.Locale.LanguageRange>)languageRangeList1, languageRangeArray0);
java.lang.String[] strArray5 = new java.lang.String[] { "", "" };
java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList6, strArray5);
java.util.Locale.FilteringMode filteringMode8 = null;
java.util.List<java.lang.String> strList9 = java.util.Locale.filterTags((java.util.List<java.util.Locale.LanguageRange>)languageRangeList1, (java.util.Collection<java.lang.String>)strList6, filteringMode8);
java.util.Map<java.lang.String,java.util.List<java.lang.String>> strMap10 = null;
java.util.List<java.util.Locale.LanguageRange> languageRangeList11 = java.util.Locale.LanguageRange.mapEquivalents((java.util.List<java.util.Locale.LanguageRange>)languageRangeList1, strMap10);
java.util.Set<java.lang.String> strSet12 = java.time.ZoneId.getAvailableZoneIds();
strSet12.clear();
java.time.Period period15 = java.time.Period.ofWeeks((int)(byte)0);
java.time.LocalDate localDate18 = java.time.LocalDate.ofYearDay((int)(short)0, (int)(byte)10);
java.time.LocalDate localDate21 = java.time.LocalDate.ofYearDay((int)(short)0, (int)(byte)10);
java.time.LocalDate localDate23 = localDate21.plusYears((long)(short)-1);
java.time.Period period24 = java.time.Period.between(localDate18, localDate21);
java.time.chrono.ChronoPeriod chronoPeriod25 = period15.plus((java.time.temporal.TemporalAmount)period24);
boolean boolean26 = strSet12.remove((java.lang.Object)chronoPeriod25);
java.util.List<java.lang.String> strList27 = java.util.Locale.filterTags(languageRangeList11, (java.util.Collection<java.lang.String>)strSet12);
java.util.Spliterator<java.lang.String> strSpliterator28 = strSet12.spliterator();
long long29 = strSpliterator28.estimateSize();
int int30 = strSpliterator28.characteristics();

Long generation time 2825 msec for null sequence.
Long generation time 1494 msec (= 1494 + 0) for
java.text.ParsePosition parsePosition1 = new java.text.ParsePosition(2069);
parsePosition1.setErrorIndex(100);
java.util.Locale.Builder builder4 = new java.util.Locale.Builder();
java.util.Locale.Builder builder6 = builder4.setVariant("English");
java.util.Locale.Builder builder7 = builder6.clear();
boolean boolean8 = parsePosition1.equals((java.lang.Object)builder6);
int int9 = parsePosition1.getIndex();
int int10 = parsePosition1.getIndex();

Long generation time 1716 msec for null sequence.
Long generation time 1523 msec (= 1523 + 0) for
int[] intArray2 = new int[] { (byte)100, (short)-1 };
java.util.stream.IntStream intStream3 = java.util.stream.IntStream.of(intArray2);
java.util.stream.IntStream intStream5 = intStream3.skip(0L);
java.util.stream.IntStream intStream6 = intStream3.sorted();
java.util.stream.DoubleStream doubleStream7 = intStream6.asDoubleStream();

Long generation time 1407 msec (= 1407 + 0) for
java.util.stream.IntStream intStream1 = java.util.stream.IntStream.of(2);
java.util.OptionalInt optionalInt2 = intStream1.min();
java.util.function.IntBinaryOperator intBinaryOperator4 = null;
int int5 = intStream1.reduce(31, intBinaryOperator4);

Long generation time 1486 msec for null sequence.

Progress update: steps=7000, test inputs generated=4676, failing inputs=0      (2022-02-21T09:15:36.836Z     3,07G used)Long generation time 1451 msec (= 1451 + 0) for
java.time.OffsetDateTime offsetDateTime0 = java.time.OffsetDateTime.now();
java.time.Month month1 = offsetDateTime0.getMonth();
java.time.ZonedDateTime zonedDateTime2 = offsetDateTime0.toZonedDateTime();
java.time.Duration duration4 = java.time.Duration.ofMinutes((long)100);
long long5 = duration4.toNanos();
java.time.Duration duration7 = duration4.minusSeconds((long)(byte)10);
java.time.chrono.ChronoZonedDateTime<java.time.LocalDate> localDateChronoZonedDateTime8 = zonedDateTime2.plus((java.time.temporal.TemporalAmount)duration7);
int int9 = zonedDateTime2.getHour();
java.time.ZonedDateTime zonedDateTime11 = zonedDateTime2.minusMonths(10L);
java.time.Month month12 = zonedDateTime2.getMonth();
java.time.ZonedDateTime zonedDateTime14 = zonedDateTime2.minusMinutes((long)2069);
java.time.Duration duration16 = java.time.Duration.ofMinutes((long)100);
long long17 = duration16.toNanos();
java.time.Duration duration19 = duration16.plusSeconds((long)'4');
java.time.Duration duration21 = duration19.minusNanos(0L);
java.time.Duration duration23 = java.time.Duration.ofMinutes((long)100);
boolean boolean24 = duration23.isNegative();
java.time.Duration duration26 = duration23.minusMinutes((long)'4');
int int27 = duration19.compareTo(duration26);
java.time.Duration duration29 = duration19.minusNanos((long)'4');
java.time.Duration duration31 = java.time.Duration.ofMinutes((long)100);
long long32 = duration31.toNanos();
java.time.Duration duration34 = duration31.plusSeconds((long)'4');
java.time.Duration duration36 = duration34.minusNanos(0L);
java.time.Duration duration38 = java.time.Duration.ofMinutes((long)100);
boolean boolean39 = duration38.isNegative();
java.time.Duration duration41 = duration38.minusMinutes((long)'4');
int int42 = duration34.compareTo(duration41);
boolean boolean43 = duration41.isZero();
long long44 = duration41.toNanos();
long long45 = duration41.toNanos();
java.time.Duration duration46 = duration29.plus(duration41);
java.time.ZonedDateTime zonedDateTime47 = zonedDateTime2.minus((java.time.temporal.TemporalAmount)duration41);

Long generation time 1778 msec for null sequence.
Long generation time 1223 msec (= 1223 + 0) for
java.time.OffsetDateTime offsetDateTime0 = java.time.OffsetDateTime.now();
java.time.Month month1 = offsetDateTime0.getMonth();
java.time.ZonedDateTime zonedDateTime2 = offsetDateTime0.toZonedDateTime();
java.time.ZonedDateTime zonedDateTime4 = zonedDateTime2.plusHours(0L);
int int5 = zonedDateTime4.getHour();
java.time.temporal.ChronoField chronoField6 = java.time.temporal.ChronoField.EPOCH_DAY;
java.util.Map<java.time.temporal.TemporalField,java.lang.Long> temporalFieldMap7 = null;
java.time.LocalTime localTime8 = java.time.LocalTime.NOON;
java.time.temporal.ChronoField chronoField9 = java.time.temporal.ChronoField.HOUR_OF_DAY;
long long10 = localTime8.getLong((java.time.temporal.TemporalField)chronoField9);
java.time.LocalTime localTime12 = localTime8.withMinute((int)'4');
java.time.format.ResolverStyle resolverStyle13 = java.time.format.ResolverStyle.SMART;
java.time.temporal.TemporalAccessor temporalAccessor14 = chronoField6.resolve(temporalFieldMap7, (java.time.temporal.TemporalAccessor)localTime8, resolverStyle13);
java.time.temporal.ValueRange valueRange15 = zonedDateTime4.range((java.time.temporal.TemporalField)chronoField6);
java.time.ZonedDateTime zonedDateTime16 = zonedDateTime4.withEarlierOffsetAtOverlap();
java.time.OffsetDateTime offsetDateTime17 = java.time.OffsetDateTime.now();
java.time.Month month18 = offsetDateTime17.getMonth();
java.time.ZonedDateTime zonedDateTime19 = offsetDateTime17.toZonedDateTime();
java.time.ZonedDateTime zonedDateTime21 = zonedDateTime19.plusHours(0L);
int int22 = zonedDateTime21.getHour();
java.time.chrono.Chronology chronology23 = zonedDateTime21.getChronology();
boolean boolean24 = zonedDateTime16.isAfter((java.time.chrono.ChronoZonedDateTime<java.time.LocalDate>)zonedDateTime21);
java.time.ZonedDateTime zonedDateTime26 = zonedDateTime21.plusMonths((long)6);

Long generation time 1460 msec (= 1460 + 0) for
java.util.Locale locale0 = java.util.Locale.GERMAN;
java.lang.String str1 = locale0.getDisplayVariant();
java.lang.String str2 = locale0.getISO3Language();

Long generation time 1369 msec (= 1369 + 0) for
java.time.chrono.Chronology chronology1 = java.time.chrono.Chronology.of("2022-02-21T09:14:40.048Z");


Progress update: steps=7546, test inputs generated=5090, failing inputs=0      (2022-02-21T09:15:51.328Z     2,87G used)Long generation time 1362 msec for null sequence.
Long generation time 1162 msec (= 1162 + 0) for
java.nio.CharBuffer charBuffer1 = java.nio.CharBuffer.allocate(5);
java.nio.ByteBuffer byteBuffer3 = java.nio.ByteBuffer.allocateDirect(256);
java.nio.ByteBuffer byteBuffer5 = byteBuffer3.putChar('a');
char char6 = byteBuffer5.getChar();
int int8 = byteBuffer5.getInt((int)(short)10);
int int9 = byteBuffer5.getInt();
java.nio.CharBuffer charBuffer10 = byteBuffer5.asCharBuffer();
java.nio.ByteBuffer byteBuffer12 = java.nio.ByteBuffer.allocateDirect(256);
java.nio.ByteBuffer byteBuffer14 = byteBuffer12.putChar('a');
char char15 = byteBuffer14.getChar();
int int17 = byteBuffer14.getInt((int)(short)10);
int int18 = byteBuffer14.getInt();
java.nio.CharBuffer charBuffer19 = byteBuffer14.asCharBuffer();
java.nio.CharBuffer charBuffer20 = charBuffer10.put(charBuffer19);
java.nio.CharBuffer charBuffer21 = charBuffer20.duplicate();
int int22 = charBuffer1.compareTo(charBuffer21);
int int23 = charBuffer1.length();
java.lang.CharSequence charSequence24 = null;
java.nio.CharBuffer charBuffer25 = charBuffer1.append(charSequence24);
java.nio.CharBuffer charBuffer26 = charBuffer1.asReadOnlyBuffer();
java.nio.CharBuffer charBuffer28 = charBuffer26.append('0');

Long generation time 1690 msec (= 1690 + 0) for
org.apache.commons.math.MathException mathException2 = new org.apache.commons.math.MathException("{}");
java.lang.Throwable[] throwableArray3 = mathException2.getSuppressed();
java.security.KeyException keyException4 = new java.security.KeyException("Asia/Aden", (java.lang.Throwable)mathException2);
java.util.concurrent.ExecutionException executionException5 = new java.util.concurrent.ExecutionException((java.lang.Throwable)mathException2);
java.util.concurrent.TimeoutException timeoutException7 = new java.util.concurrent.TimeoutException();
java.util.concurrent.ExecutionException executionException8 = new java.util.concurrent.ExecutionException((java.lang.Throwable)timeoutException7);
java.security.SignatureException signatureException9 = new java.security.SignatureException("English", (java.lang.Throwable)executionException8);
mathException2.addSuppressed((java.lang.Throwable)executionException8);


Progress update: steps=8000, test inputs generated=5430, failing inputs=0      (2022-02-21T09:16:04.275Z     3,39G used)Long generation time 1138 msec (= 1138 + 0) for
java.io.File file1 = new java.io.File("{}");
long long2 = file1.length();
boolean boolean3 = file1.canWrite();
java.io.PrintWriter printWriter4 = new java.io.PrintWriter(file1);
java.lang.String str5 = file1.getAbsolutePath();
long long6 = file1.getFreeSpace();
boolean boolean8 = file1.setLastModified((long)123);
boolean boolean10 = file1.setWritable(false);

Long generation time 1863 msec for null sequence.
Long generation time 1270 msec (= 1270 + 0) for
java.time.format.DateTimeFormatter dateTimeFormatter0 = java.time.format.DateTimeFormatter.ISO_DATE;
java.time.format.DecimalStyle decimalStyle1 = dateTimeFormatter0.getDecimalStyle();
char char2 = decimalStyle1.getDecimalSeparator();
java.time.format.DecimalStyle decimalStyle4 = decimalStyle1.withZeroDigit('a');

Long generation time 1629 msec (= 1629 + 0) for
java.nio.charset.Charset charset0 = java.nio.charset.Charset.defaultCharset();
boolean boolean1 = charset0.isRegistered();

Long generation time 1467 msec for null sequence.
