Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".
Cannot instantiate non-accessible class com.google.javascript.rhino.jstype.PrototypeObjectType specified via --testclass or --classlist; will use its static methods.
Cannot instantiate non-accessible class com.google.javascript.rhino.jstype.ProxyObjectType specified via --testclass or --classlist; will use its static methods.

Will try to generate tests for 37 classes.
PUBLIC MEMBERS=958
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-23T03:36:36.004Z     355M used)
Progress update: steps=1000, test inputs generated=368, failing inputs=1      (2022-02-23T03:36:37.876Z     449M used)
Progress update: steps=2000, test inputs generated=826, failing inputs=1      (2022-02-23T03:36:39.295Z     711M used)
Progress update: steps=3000, test inputs generated=1280, failing inputs=1      (2022-02-23T03:36:40.323Z     744M used)
Progress update: steps=4000, test inputs generated=1709, failing inputs=1      (2022-02-23T03:36:41.972Z     642M used)
Progress update: steps=5000, test inputs generated=2142, failing inputs=1      (2022-02-23T03:36:43.230Z     513M used)
Progress update: steps=6000, test inputs generated=2571, failing inputs=1      (2022-02-23T03:36:44.262Z     262M used)
Progress update: steps=7000, test inputs generated=2987, failing inputs=1      (2022-02-23T03:36:45.637Z     1.21G used)
Progress update: steps=8000, test inputs generated=3434, failing inputs=1      (2022-02-23T03:36:47.081Z     1.06G used)
Progress update: steps=9000, test inputs generated=3854, failing inputs=1      (2022-02-23T03:36:48.676Z     826M used)
Progress update: steps=10000, test inputs generated=4265, failing inputs=1      (2022-02-23T03:36:50.504Z     484M used)
Progress update: steps=11000, test inputs generated=4715, failing inputs=1      (2022-02-23T03:36:52.024Z     1.29G used)
Progress update: steps=12000, test inputs generated=5126, failing inputs=1      (2022-02-23T03:36:53.849Z     944M used)
Progress update: steps=13000, test inputs generated=5555, failing inputs=1      (2022-02-23T03:36:56.143Z     837M used)
Progress update: steps=14000, test inputs generated=5972, failing inputs=1      (2022-02-23T03:36:58.275Z     436M used)
Progress update: steps=15000, test inputs generated=6387, failing inputs=1      (2022-02-23T03:37:00.576Z     327M used)
Progress update: steps=16000, test inputs generated=6817, failing inputs=1      (2022-02-23T03:37:03.140Z     1.30G used)
Progress update: steps=17000, test inputs generated=7254, failing inputs=1      (2022-02-23T03:37:05.519Z     954M used)
Progress update: steps=18000, test inputs generated=7685, failing inputs=2      (2022-02-23T03:37:08.159Z     626M used)
Progress update: steps=19000, test inputs generated=8112, failing inputs=2      (2022-02-23T03:37:11.122Z     437M used)
Progress update: steps=20000, test inputs generated=8543, failing inputs=2      (2022-02-23T03:37:13.953Z     168M used)
Progress update: steps=21000, test inputs generated=8955, failing inputs=2      (2022-02-23T03:37:16.904Z     1.31G used)
Progress update: steps=22000, test inputs generated=9390, failing inputs=2      (2022-02-23T03:37:20.137Z     1.28G used)
Progress update: steps=23000, test inputs generated=9813, failing inputs=2      (2022-02-23T03:37:23.762Z     1.20G used)
Progress update: steps=24000, test inputs generated=10232, failing inputs=2      (2022-02-23T03:37:27.762Z     1.17G used)
Progress update: steps=25000, test inputs generated=10654, failing inputs=2      (2022-02-23T03:37:32.231Z     1.06G used)
Progress update: steps=26000, test inputs generated=11058, failing inputs=2      (2022-02-23T03:37:35.805Z     824M used)
Progress update: steps=26108, test inputs generated=11104, failing inputs=2      (2022-02-23T03:37:36.022Z     946M used)
Progress update: steps=27000, test inputs generated=11506, failing inputs=2      (2022-02-23T03:37:39.283Z     738M used)
Progress update: steps=28000, test inputs generated=11915, failing inputs=2      (2022-02-23T03:37:43.113Z     552M used)
Progress update: steps=29000, test inputs generated=12317, failing inputs=2      (2022-02-23T03:37:47.923Z     417M used)
Progress update: steps=30000, test inputs generated=12749, failing inputs=2      (2022-02-23T03:37:51.528Z     283M used)
Progress update: steps=31000, test inputs generated=13159, failing inputs=2      (2022-02-23T03:37:55.883Z     1.33G used)
Progress update: steps=32000, test inputs generated=13584, failing inputs=2      (2022-02-23T03:38:01.319Z     1.34G used)
Progress update: steps=33000, test inputs generated=13995, failing inputs=2      (2022-02-23T03:38:07.259Z     203M used)
Progress update: steps=34000, test inputs generated=14395, failing inputs=2      (2022-02-23T03:38:12.332Z     1.37G used)
Progress update: steps=35000, test inputs generated=14811, failing inputs=2      (2022-02-23T03:38:17.742Z     1.26G used)
Progress update: steps=36000, test inputs generated=15230, failing inputs=2      (2022-02-23T03:38:23.689Z     1.27G used)
Progress update: steps=37000, test inputs generated=15660, failing inputs=2      (2022-02-23T03:38:30.062Z     1.13G used)
Progress update: steps=38000, test inputs generated=16087, failing inputs=2      (2022-02-23T03:38:35.058Z     915M used)
Progress update: steps=38147, test inputs generated=16145, failing inputs=2      (2022-02-23T03:38:36.023Z     1.09G used)
Progress update: steps=39000, test inputs generated=16522, failing inputs=2      (2022-02-23T03:38:41.452Z     751M used)
Progress update: steps=40000, test inputs generated=16938, failing inputs=2      (2022-02-23T03:38:47.157Z     698M used)
Progress update: steps=41000, test inputs generated=17353, failing inputs=2      (2022-02-23T03:38:55.100Z     546M used)
Progress update: steps=42000, test inputs generated=17782, failing inputs=2      (2022-02-23T03:39:04.328Z     481M used)
Progress update: steps=43000, test inputs generated=18194, failing inputs=2      (2022-02-23T03:39:12.829Z     345M used)
Progress update: steps=44000, test inputs generated=18603, failing inputs=2      (2022-02-23T03:39:21.376Z     529M used)
Progress update: steps=45000, test inputs generated=19014, failing inputs=2      (2022-02-23T03:39:30.219Z     819M used)
Progress update: steps=45754, test inputs generated=19332, failing inputs=2      (2022-02-23T03:39:36.023Z     598M used)
Progress update: steps=46000, test inputs generated=19435, failing inputs=2      (2022-02-23T03:39:37.991Z     893M used)
Progress update: steps=47000, test inputs generated=19859, failing inputs=2      (2022-02-23T03:39:46.080Z     995M used)
Progress update: steps=48000, test inputs generated=20257, failing inputs=2      (2022-02-23T03:39:56.833Z     237M used)Long generation time 1000 msec for null sequence.

Progress update: steps=49000, test inputs generated=20678, failing inputs=2      (2022-02-23T03:40:06.794Z     698M used)
Progress update: steps=50000, test inputs generated=21088, failing inputs=2      (2022-02-23T03:40:17.878Z     204M used)
Progress update: steps=51000, test inputs generated=21492, failing inputs=2      (2022-02-23T03:40:28.391Z     611M used)
Progress update: steps=51703, test inputs generated=21787, failing inputs=2      (2022-02-23T03:40:36.024Z     798M used)
Progress update: steps=52000, test inputs generated=21908, failing inputs=2      (2022-02-23T03:40:40.055Z     316M used)
Progress update: steps=53000, test inputs generated=22338, failing inputs=2      (2022-02-23T03:40:51.288Z     102M used)
Progress update: steps=54000, test inputs generated=22739, failing inputs=2      (2022-02-23T03:41:03.595Z     785M used)
Progress update: steps=55000, test inputs generated=23143, failing inputs=2      (2022-02-23T03:41:16.856Z     473M used)Long generation time 1156 msec for null sequence.

Progress update: steps=56000, test inputs generated=23538, failing inputs=2      (2022-02-23T03:41:31.925Z     396M used)
Progress update: steps=56339, test inputs generated=23704, failing inputs=2      (2022-02-23T03:41:36.025Z     216M used)
Progress update: steps=57000, test inputs generated=23966, failing inputs=2      (2022-02-23T03:41:44.455Z     451M used)
Progress update: steps=58000, test inputs generated=24387, failing inputs=2      (2022-02-23T03:41:59.268Z     691M used)
Progress update: steps=59000, test inputs generated=24804, failing inputs=2      (2022-02-23T03:42:13.904Z     487M used)
Progress update: steps=60000, test inputs generated=25218, failing inputs=2      (2022-02-23T03:42:28.270Z     247M used)
Progress update: steps=60515, test inputs generated=25423, failing inputs=2      (2022-02-23T03:42:36.025Z     500M used)
Progress update: steps=61000, test inputs generated=25621, failing inputs=2      (2022-02-23T03:42:42.346Z     214M used)Long generation time 2556 msec for null sequence.

Progress update: steps=62000, test inputs generated=26040, failing inputs=2      (2022-02-23T03:42:59.036Z     101M used)
Progress update: steps=63000, test inputs generated=26439, failing inputs=2      (2022-02-23T03:43:13.105Z     149M used)
Progress update: steps=64000, test inputs generated=26806, failing inputs=2      (2022-02-23T03:43:29.203Z     79.5M used)
Progress update: steps=64565, test inputs generated=27038, failing inputs=2      (2022-02-23T03:43:36.026Z     385M used)
Progress update: steps=65000, test inputs generated=27205, failing inputs=2      (2022-02-23T03:43:42.566Z     250M used)
Progress update: steps=66000, test inputs generated=27608, failing inputs=2      (2022-02-23T03:43:57.157Z     376M used)
Progress update: steps=67000, test inputs generated=28004, failing inputs=2      (2022-02-23T03:44:11.615Z     254M used)Long generation time 1076 msec (= 1076 + 0) for
com.google.common.collect.ImmutableList<java.lang.Object> objList2 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
boolean boolean4 = objList2.contains((java.lang.Object)'4');
java.util.Iterator<java.lang.Object> objItor5 = objList2.iterator();
java.util.Spliterator<java.lang.Object> objSpliterator6 = objList2.spliterator();
java.lang.Object[] objArray7 = objList2.toArray();
boolean boolean8 = objList2.isEmpty();
com.google.common.collect.ImmutableList<java.lang.Object> objList9 = objList2.asList();
java.util.Spliterator<java.lang.Object> objSpliterator10 = objList2.spliterator();
java.util.stream.Stream<java.lang.Object> objStream11 = objList2.stream();
com.google.common.collect.ImmutableList<java.lang.Object> objList14 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray15 = objList14.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList18 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray19 = objList18.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList22 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray23 = objList22.toArray();
java.lang.Object[] objArray24 = objList22.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList27 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray28 = objList27.toArray();
int int30 = objList27.indexOf((java.lang.Object)100L);
com.google.common.collect.ImmutableList<java.lang.Object> objList33 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableCollection<java.lang.Object>> objCollectionList34 = com.google.common.collect.ImmutableList.of((com.google.common.collect.ImmutableCollection<java.lang.Object>)objList14, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList18, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList22, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList27, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList33);
com.google.common.collect.ImmutableList<java.lang.Object> objList35 = objList18.asList();
com.google.common.collect.ImmutableList<java.lang.Object> objList38 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray39 = objList38.toArray();
boolean boolean40 = objList18.containsAll((java.util.Collection<java.lang.Object>)objList38);
com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo.NamePosition> namePositionList41 = com.google.common.collect.ImmutableList.copyOf((java.util.Collection<java.lang.Object>)objList38);
com.google.javascript.rhino.JSDocInfo jSDocInfo42 = new com.google.javascript.rhino.JSDocInfo();
boolean boolean43 = jSDocInfo42.hasBaseType();
java.util.List<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList44 = jSDocInfo42.getExtendedInterfaces();
java.lang.String str45 = jSDocInfo42.getDeprecationReason();
java.util.Collection<java.lang.String> strCollection46 = jSDocInfo42.getAuthors();
boolean boolean47 = objList38.contains((java.lang.Object)jSDocInfo42);
boolean boolean48 = objList2.containsAll((java.util.Collection<java.lang.Object>)objList38);


Progress update: steps=68000, test inputs generated=28415, failing inputs=2      (2022-02-23T03:44:28.081Z     100M used)
Progress update: steps=68742, test inputs generated=28714, failing inputs=2      (2022-02-23T03:44:36.026Z     129M used)
Progress update: steps=69000, test inputs generated=28816, failing inputs=2      (2022-02-23T03:44:38.915Z     129M used)Long generation time 1070 msec (= 1070 + 0) for
com.google.common.collect.ImmutableList<java.lang.Object> objList2 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.common.collect.ImmutableList<java.lang.Object> objList5 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.javascript.rhino.Node node8 = com.google.javascript.rhino.Node.newString(32, "(hi!)");
boolean boolean9 = node8.isOnlyModifiesThisCall();
boolean boolean10 = node8.isDebugger();
com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString(32, "(hi!)");
com.google.javascript.rhino.jstype.JSType jSType14 = node13.getJSType();
com.google.javascript.rhino.Node node15 = node8.srcrefTree(node13);
boolean boolean16 = node15.isUnscopedQualifiedName();
boolean boolean17 = objList5.equals((java.lang.Object)node15);
java.util.Iterator<java.lang.Object> objItor18 = objList5.iterator();
com.google.common.collect.ImmutableList<java.lang.Throwable> throwableList19 = com.google.common.collect.ImmutableList.copyOf(objItor18);
com.google.common.collect.ImmutableList<java.lang.Object> objList22 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray23 = objList22.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList26 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray27 = objList26.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList30 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray31 = objList30.toArray();
java.lang.Object[] objArray32 = objList30.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList35 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray36 = objList35.toArray();
int int38 = objList35.indexOf((java.lang.Object)100L);
com.google.common.collect.ImmutableList<java.lang.Object> objList41 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableCollection<java.lang.Object>> objCollectionList42 = com.google.common.collect.ImmutableList.of((com.google.common.collect.ImmutableCollection<java.lang.Object>)objList22, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList26, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList30, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList35, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList41);
com.google.common.collect.ImmutableList<com.google.javascript.rhino.SourcePosition<com.google.javascript.rhino.Node>> nodeSourcePositionList43 = com.google.common.collect.ImmutableList.copyOf((java.lang.Iterable<java.lang.Object>)objList22);
com.google.common.collect.ImmutableList<java.util.RandomAccess> randomAccessList44 = com.google.common.collect.ImmutableList.of((java.util.RandomAccess)objList2, (java.util.RandomAccess)throwableList19, (java.util.RandomAccess)objList22);
java.util.stream.Stream<java.lang.Object> objStream45 = objList22.stream();
com.google.common.collect.ImmutableList<java.lang.Object> objList48 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray49 = objList48.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList52 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray53 = objList52.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList56 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray57 = objList56.toArray();
java.lang.Object[] objArray58 = objList56.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList61 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray62 = objList61.toArray();
int int64 = objList61.indexOf((java.lang.Object)100L);
com.google.common.collect.ImmutableList<java.lang.Object> objList67 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableCollection<java.lang.Object>> objCollectionList68 = com.google.common.collect.ImmutableList.of((com.google.common.collect.ImmutableCollection<java.lang.Object>)objList48, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList52, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList56, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList61, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList67);
boolean boolean69 = objList48.isEmpty();
com.google.common.collect.ImmutableList<java.lang.Object> objList72 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray73 = objList72.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList76 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray77 = objList76.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList80 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray81 = objList80.toArray();
java.lang.Object[] objArray82 = objList80.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList85 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray86 = objList85.toArray();
int int88 = objList85.indexOf((java.lang.Object)100L);
com.google.common.collect.ImmutableList<java.lang.Object> objList91 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableCollection<java.lang.Object>> objCollectionList92 = com.google.common.collect.ImmutableList.of((com.google.common.collect.ImmutableCollection<java.lang.Object>)objList72, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList76, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList80, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList85, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList91);
java.util.stream.Stream<java.lang.Object> objStream93 = objList72.parallelStream();
boolean boolean94 = objList48.containsAll((java.util.Collection<java.lang.Object>)objList72);
boolean boolean95 = objList22.addAll((java.util.Collection<java.lang.Object>)objList48);


Progress update: steps=70000, test inputs generated=29237, failing inputs=2      (2022-02-23T03:44:54.924Z     104M used)
Progress update: steps=71000, test inputs generated=29655, failing inputs=3      (2022-02-23T03:45:10.895Z     250M used)Long generation time 1115 msec for null sequence.
Long generation time 1091 msec for null sequence.

Progress update: steps=72000, test inputs generated=30051, failing inputs=3      (2022-02-23T03:45:29.745Z     147M used)
Progress update: steps=72384, test inputs generated=30203, failing inputs=3      (2022-02-23T03:45:36.027Z     201M used)
Progress update: steps=73000, test inputs generated=30442, failing inputs=3      (2022-02-23T03:45:53.114Z     164M used)
Progress update: steps=74000, test inputs generated=30845, failing inputs=3      (2022-02-23T03:46:07.830Z     204M used)Long generation time 1093 msec for null sequence.

Progress update: steps=75000, test inputs generated=31238, failing inputs=3      (2022-02-23T03:46:27.642Z     138M used)
Progress update: steps=75443, test inputs generated=31420, failing inputs=3      (2022-02-23T03:46:36.004Z     97.9M used)
Normal method executions: 22226801
Exceptional method executions: 4065

Average method execution time (normal termination):      0.000182
Average method execution time (exceptional termination): 0.0515
Approximate memory usage 97.9M
Explorer = ForwardGenerator(steps: 75443, null steps: 44023, num_sequences_generated: 31420;
    allSequences: 31420, regresson seqs: 653, error seqs: 3=3=3, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 30764;
    runtimePrimitivesSeen:319)

Error-revealing test output:
Error-revealing test count: 3
Writing error-revealing JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-1/ErrorTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-1/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 360 regression sequences.

Regression test output:
Regression test count: 360
Writing regression JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-1/RegressionTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-1/RegressionTest1.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-1/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Invalid tests generated: 0

Uncompilable sequences generated (count: 9).
Please report uncompilable sequences at https://github.com/randoop/randoop/issues ,
providing the information requested at https://randoop.github.io/randoop/manual/index.html#bug-reporting .
