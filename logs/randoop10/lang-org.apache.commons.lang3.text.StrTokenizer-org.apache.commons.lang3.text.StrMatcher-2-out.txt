Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".

Will try to generate tests for 268 classes.
PUBLIC MEMBERS=3037
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-21T09:33:47.031Z     430M used)
Progress update: steps=1000, test inputs generated=402, failing inputs=0      (2022-02-21T09:33:57.362Z     636M used)
Progress update: steps=2000, test inputs generated=1065, failing inputs=0      (2022-02-21T09:34:06.250Z     856M used)
Progress update: steps=2776, test inputs generated=1601, failing inputs=0      (2022-02-21T09:34:47.035Z     3.04G used)Long execution time 345 sec for
java.nio.CharBuffer charBuffer1 = java.nio.CharBuffer.allocate(691999999);

Long generation time 1079 msec for null sequence.

Progress update: steps=3000, test inputs generated=1766, failing inputs=0      (2022-02-21T09:40:03.435Z     2.23G used)
Progress update: steps=4000, test inputs generated=2500, failing inputs=0      (2022-02-21T09:40:20.032Z     1.44G used)Long execution time 12 sec for
java.nio.charset.Charset charset0 = java.nio.charset.Charset.defaultCharset();
java.nio.charset.Charset charset1 = java.nio.charset.Charset.defaultCharset();
java.nio.charset.CharsetEncoder charsetEncoder2 = charset1.newEncoder();
java.util.Hashtable<java.security.NoSuchAlgorithmException,java.nio.Buffer> noSuchAlgorithmExceptionMap4 = new java.util.Hashtable<java.security.NoSuchAlgorithmException,java.nio.Buffer>((int)(byte)0);
java.time.Duration duration6 = java.time.Duration.ZERO;
java.time.Duration duration8 = duration6.plusNanos((long)(byte)-1);
boolean boolean9 = noSuchAlgorithmExceptionMap4.remove((java.lang.Object)4096, (java.lang.Object)duration6);
java.lang.Object obj10 = noSuchAlgorithmExceptionMap4.clone();
boolean boolean11 = charset1.equals((java.lang.Object)noSuchAlgorithmExceptionMap4);
int int12 = charset0.compareTo(charset1);
java.nio.charset.CharsetDecoder charsetDecoder13 = charset1.newDecoder();
float float14 = charsetDecoder13.maxCharsPerByte();
java.nio.ByteBuffer byteBuffer16 = java.nio.ByteBuffer.allocateDirect(31);
java.lang.String str17 = byteBuffer16.toString();
byte[] byteArray24 = new byte[] { (byte)0, (byte)0, (byte)10, (byte)100, (byte)1, (byte)10 };
java.nio.ByteBuffer byteBuffer25 = byteBuffer16.get(byteArray24);
boolean boolean26 = byteBuffer25.hasArray();
java.nio.LongBuffer longBuffer27 = byteBuffer25.asLongBuffer();
java.nio.ByteOrder byteOrder28 = byteBuffer25.order();
java.nio.CharBuffer charBuffer30 = java.nio.CharBuffer.allocate(691999999);
java.nio.charset.CoderResult coderResult32 = charsetDecoder13.decode(byteBuffer25, charBuffer30, true);


Progress update: steps=4915, test inputs generated=3196, failing inputs=1      (2022-02-21T09:40:49.917Z     3.30G used)
Progress update: steps=5000, test inputs generated=3258, failing inputs=1      (2022-02-21T09:40:52.168Z     2.86G used)
Progress update: steps=5069, test inputs generated=3315, failing inputs=1      (2022-02-21T09:41:49.918Z     3.40G used)Long execution time 64 sec for
java.util.concurrent.TimeUnit timeUnit0 = java.util.concurrent.TimeUnit.MILLISECONDS;
timeUnit0.sleep((long)64800);

Long generation time 1386 msec (= 1386 + 0) for
java.time.LocalDate localDate2 = java.time.LocalDate.ofYearDay((int)'#', 100);
java.time.temporal.ChronoField chronoField3 = java.time.temporal.ChronoField.EPOCH_DAY;
java.time.chrono.ChronoLocalDate chronoLocalDate5 = localDate2.with((java.time.temporal.TemporalField)chronoField3, 0L);
java.security.CodeSource codeSource6 = null;
java.security.PermissionCollection permissionCollection7 = null;
java.lang.ClassLoader classLoader8 = null;
java.security.Principal principal9 = null;
java.security.Principal[] principalArray10 = new java.security.Principal[] { principal9 };
java.security.ProtectionDomain protectionDomain11 = new java.security.ProtectionDomain(codeSource6, permissionCollection7, classLoader8, principalArray10);
boolean boolean12 = localDate2.equals((java.lang.Object)classLoader8);
java.time.chrono.IsoChronology isoChronology13 = localDate2.getChronology();
java.time.LocalDate localDate16 = java.time.LocalDate.ofYearDay((int)'#', 100);
int int17 = localDate16.getDayOfMonth();
java.time.ZoneId zoneId18 = java.time.ZoneId.systemDefault();
java.time.ZonedDateTime zonedDateTime19 = localDate16.atStartOfDay(zoneId18);
java.util.concurrent.TimeUnit timeUnit20 = java.util.concurrent.TimeUnit.MILLISECONDS;
long long22 = timeUnit20.toDays((-1L));
boolean boolean23 = localDate16.equals((java.lang.Object)timeUnit20);
java.time.LocalDate localDate25 = localDate16.minusWeeks((long)(byte)1);
java.time.chrono.ChronoPeriod chronoPeriod26 = localDate2.until((java.time.chrono.ChronoLocalDate)localDate16);
java.time.LocalDate localDate29 = java.time.LocalDate.ofYearDay((int)'#', 100);
int int30 = localDate29.getDayOfMonth();
java.time.ZoneId zoneId31 = java.time.ZoneId.systemDefault();
java.time.ZonedDateTime zonedDateTime32 = localDate29.atStartOfDay(zoneId31);
java.time.OffsetTime offsetTime33 = java.time.OffsetTime.MIN;
java.time.ZoneOffset zoneOffset34 = offsetTime33.getOffset();
java.time.ZonedDateTime zonedDateTime35 = zonedDateTime32.withZoneSameInstant((java.time.ZoneId)zoneOffset34);
int int36 = zonedDateTime35.getDayOfYear();
java.time.temporal.ChronoField chronoField37 = java.time.temporal.ChronoField.HOUR_OF_DAY;
int int38 = zonedDateTime35.get((java.time.temporal.TemporalField)chronoField37);
boolean boolean39 = localDate16.isSupported((java.time.temporal.TemporalField)chronoField37);
java.time.LocalTime localTime41 = java.time.LocalTime.MAX;
java.time.LocalTime localTime42 = java.time.LocalTime.now();
int int43 = localTime41.compareTo(localTime42);
java.time.Duration duration45 = java.time.Duration.ZERO;
java.time.Duration duration47 = duration45.minusMinutes((long)1);
java.time.temporal.ChronoField chronoField49 = java.time.temporal.ChronoField.HOUR_OF_DAY;
java.time.temporal.TemporalUnit temporalUnit50 = chronoField49.getBaseUnit();
boolean boolean51 = temporalUnit50.isDurationEstimated();
java.time.Duration duration52 = duration45.plus((long)16, temporalUnit50);
java.time.LocalTime localTime53 = localTime42.minus(365249999634L, temporalUnit50);
java.time.LocalDate localDate54 = localDate16.plus((long)'x', temporalUnit50);


Progress update: steps=6000, test inputs generated=4002, failing inputs=2      (2022-02-21T09:42:13.536Z     3.32G used)
Progress update: steps=6352, test inputs generated=4264, failing inputs=2      (2022-02-21T09:42:58.436Z     3.01G used)Long execution time 64 sec for
java.util.concurrent.TimeUnit timeUnit0 = java.util.concurrent.TimeUnit.MILLISECONDS;
timeUnit0.sleep((long)64800);
long long4 = timeUnit0.toNanos((long)691999999);

