Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".
Cannot instantiate non-accessible class com.google.javascript.rhino.jstype.PrototypeObjectType specified via --testclass or --classlist; will use its static methods.
Cannot instantiate non-accessible class com.google.javascript.rhino.jstype.ProxyObjectType specified via --testclass or --classlist; will use its static methods.

Will try to generate tests for 44 classes.
PUBLIC MEMBERS=981
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-23T04:15:29.669Z     365M used)
Progress update: steps=1000, test inputs generated=345, failing inputs=0      (2022-02-23T04:15:32.451Z     869M used)
Progress update: steps=2000, test inputs generated=752, failing inputs=0      (2022-02-23T04:15:33.896Z     277M used)
Progress update: steps=3000, test inputs generated=1194, failing inputs=0      (2022-02-23T04:15:35.261Z     603M used)
Progress update: steps=4000, test inputs generated=1637, failing inputs=0      (2022-02-23T04:15:37.207Z     1.18G used)
Progress update: steps=5000, test inputs generated=2092, failing inputs=0      (2022-02-23T04:15:39.007Z     444M used)
Progress update: steps=6000, test inputs generated=2544, failing inputs=1      (2022-02-23T04:15:41.182Z     1.22G used)
Progress update: steps=7000, test inputs generated=2988, failing inputs=1      (2022-02-23T04:15:42.719Z     1.16G used)
Progress update: steps=8000, test inputs generated=3415, failing inputs=1      (2022-02-23T04:15:44.313Z     1.31G used)
Progress update: steps=9000, test inputs generated=3862, failing inputs=1      (2022-02-23T04:15:46.898Z     487M used)
Progress update: steps=10000, test inputs generated=4314, failing inputs=1      (2022-02-23T04:15:48.954Z     646M used)
Progress update: steps=11000, test inputs generated=4722, failing inputs=1      (2022-02-23T04:15:51.044Z     782M used)
Progress update: steps=12000, test inputs generated=5162, failing inputs=1      (2022-02-23T04:15:53.297Z     1.16G used)
Progress update: steps=13000, test inputs generated=5616, failing inputs=1      (2022-02-23T04:15:54.847Z     1.11G used)
Progress update: steps=14000, test inputs generated=6039, failing inputs=1      (2022-02-23T04:15:56.562Z     1.16G used)
Progress update: steps=15000, test inputs generated=6453, failing inputs=1      (2022-02-23T04:15:59.158Z     1.35G used)
Progress update: steps=16000, test inputs generated=6864, failing inputs=1      (2022-02-23T04:16:01.585Z     1.27G used)
Progress update: steps=17000, test inputs generated=7307, failing inputs=1      (2022-02-23T04:16:04.390Z     516M used)
Progress update: steps=18000, test inputs generated=7746, failing inputs=1      (2022-02-23T04:16:07.474Z     1.06G used)
Progress update: steps=19000, test inputs generated=8170, failing inputs=1      (2022-02-23T04:16:09.919Z     110M used)
Progress update: steps=20000, test inputs generated=8614, failing inputs=1      (2022-02-23T04:16:13.438Z     410M used)
Progress update: steps=21000, test inputs generated=9045, failing inputs=1      (2022-02-23T04:16:16.851Z     712M used)
Progress update: steps=22000, test inputs generated=9446, failing inputs=1      (2022-02-23T04:16:20.323Z     1.03G used)
Progress update: steps=23000, test inputs generated=9858, failing inputs=1      (2022-02-23T04:16:23.863Z     1.33G used)
Progress update: steps=24000, test inputs generated=10272, failing inputs=1      (2022-02-23T04:16:27.593Z     711M used)
Progress update: steps=24490, test inputs generated=10480, failing inputs=1      (2022-02-23T04:16:29.684Z     453M used)
Progress update: steps=25000, test inputs generated=10704, failing inputs=1      (2022-02-23T04:16:31.768Z     1.27G used)
Progress update: steps=26000, test inputs generated=11143, failing inputs=1      (2022-02-23T04:16:36.385Z     605M used)
Progress update: steps=27000, test inputs generated=11566, failing inputs=1      (2022-02-23T04:16:41.425Z     1.26G used)
Progress update: steps=28000, test inputs generated=12035, failing inputs=1      (2022-02-23T04:16:46.652Z     475M used)
Progress update: steps=29000, test inputs generated=12469, failing inputs=1      (2022-02-23T04:16:52.380Z     200M used)
Progress update: steps=30000, test inputs generated=12882, failing inputs=1      (2022-02-23T04:16:57.526Z     500M used)
Progress update: steps=31000, test inputs generated=13293, failing inputs=1      (2022-02-23T04:17:03.052Z     802M used)
Progress update: steps=32000, test inputs generated=13713, failing inputs=1      (2022-02-23T04:17:10.678Z     1.38G used)
Progress update: steps=33000, test inputs generated=14138, failing inputs=1      (2022-02-23T04:17:16.090Z     641M used)
Progress update: steps=34000, test inputs generated=14600, failing inputs=1      (2022-02-23T04:17:23.527Z     65.2M used)
Progress update: steps=35000, test inputs generated=15026, failing inputs=1      (2022-02-23T04:17:29.683Z     755M used)
Progress update: steps=35003, test inputs generated=15027, failing inputs=1      (2022-02-23T04:17:29.685Z     764M used)
Progress update: steps=36000, test inputs generated=15436, failing inputs=1      (2022-02-23T04:17:36.753Z     1.19G used)
Progress update: steps=37000, test inputs generated=15843, failing inputs=1      (2022-02-23T04:17:45.521Z     317M used)
Progress update: steps=38000, test inputs generated=16268, failing inputs=1      (2022-02-23T04:17:54.159Z     1.11G used)Long generation time 1520 msec for null sequence.

Progress update: steps=39000, test inputs generated=16700, failing inputs=1      (2022-02-23T04:18:02.875Z     468M used)
Progress update: steps=40000, test inputs generated=17119, failing inputs=1      (2022-02-23T04:18:13.386Z     170M used)
Progress update: steps=41000, test inputs generated=17507, failing inputs=1      (2022-02-23T04:18:22.150Z     1.14G used)
Progress update: steps=41833, test inputs generated=17862, failing inputs=1      (2022-02-23T04:18:29.685Z     894M used)
Progress update: steps=42000, test inputs generated=17925, failing inputs=1      (2022-02-23T04:18:31.203Z     1.14G used)
Progress update: steps=43000, test inputs generated=18366, failing inputs=1      (2022-02-23T04:18:40.738Z     863M used)
Progress update: steps=44000, test inputs generated=18756, failing inputs=1      (2022-02-23T04:18:49.717Z     818M used)Long generation time 1837 msec for null sequence.

Progress update: steps=45000, test inputs generated=19175, failing inputs=1      (2022-02-23T04:19:01.690Z     814M used)
Progress update: steps=46000, test inputs generated=19575, failing inputs=1      (2022-02-23T04:19:12.913Z     357M used)
Progress update: steps=47000, test inputs generated=19992, failing inputs=1      (2022-02-23T04:19:22.948Z     483M used)
Progress update: steps=47502, test inputs generated=20192, failing inputs=1      (2022-02-23T04:19:29.686Z     564M used)
Progress update: steps=48000, test inputs generated=20395, failing inputs=1      (2022-02-23T04:19:34.715Z     633M used)
Progress update: steps=49000, test inputs generated=20816, failing inputs=1      (2022-02-23T04:19:44.119Z     773M used)
Progress update: steps=50000, test inputs generated=21252, failing inputs=1      (2022-02-23T04:19:58.546Z     517M used)
Progress update: steps=51000, test inputs generated=21685, failing inputs=1      (2022-02-23T04:20:09.416Z     662M used)Long generation time 1452 msec for null sequence.
Long generation time 1037 msec for null sequence.
Long generation time 2040 msec for null sequence.

Progress update: steps=52000, test inputs generated=22121, failing inputs=1      (2022-02-23T04:20:26.846Z     304M used)
Progress update: steps=52282, test inputs generated=22250, failing inputs=1      (2022-02-23T04:20:29.686Z     792M used)Long generation time 2715 msec for null sequence.

Progress update: steps=53000, test inputs generated=22520, failing inputs=1      (2022-02-23T04:20:43.753Z     770M used)Long generation time 1671 msec for null sequence.

Progress update: steps=54000, test inputs generated=22928, failing inputs=1      (2022-02-23T04:21:00.142Z     526M used)
Progress update: steps=55000, test inputs generated=23362, failing inputs=1      (2022-02-23T04:21:14.011Z     321M used)Long generation time 1604 msec for null sequence.

Progress update: steps=55992, test inputs generated=23777, failing inputs=1      (2022-02-23T04:21:29.687Z     588M used)
Progress update: steps=56000, test inputs generated=23780, failing inputs=1      (2022-02-23T04:21:29.765Z     660M used)Long generation time 1430 msec for null sequence.

Progress update: steps=57000, test inputs generated=24222, failing inputs=1      (2022-02-23T04:21:43.518Z     611M used)
Progress update: steps=58000, test inputs generated=24666, failing inputs=1      (2022-02-23T04:22:01.082Z     158M used)
Progress update: steps=59000, test inputs generated=25099, failing inputs=1      (2022-02-23T04:22:18.138Z     225M used)
Progress update: steps=59702, test inputs generated=25404, failing inputs=1      (2022-02-23T04:22:29.687Z     463M used)Long generation time 1006 msec for null sequence.

Progress update: steps=60000, test inputs generated=25526, failing inputs=1      (2022-02-23T04:22:34.093Z     492M used)Long generation time 1149 msec (= 1148 + 0) for
java.lang.Object[] objArray1 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList2 = com.google.common.collect.ImmutableList.copyOf(objArray1);
com.google.common.collect.UnmodifiableIterator<java.lang.Object> objItor3 = objList2.iterator();
com.google.common.collect.ImmutableList<java.util.HashSet<java.lang.String>> strSetList4 = com.google.common.collect.ImmutableList.copyOf((java.util.Collection<java.lang.Object>)objList2);
com.google.common.collect.ImmutableList<java.lang.reflect.Type> typeList5 = com.google.common.collect.ImmutableList.copyOf((java.lang.Iterable<java.lang.Object>)objList2);
java.lang.Object[] objArray6 = objList2.toArray();
java.util.Iterator<java.lang.Object> objItor7 = objList2.iterator();
boolean boolean8 = objList2.isEmpty();
java.lang.Object[] objArray10 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList11 = com.google.common.collect.ImmutableList.copyOf(objArray10);
java.lang.Object[] objArray12 = objList11.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList13 = objList11.asList();
com.google.common.collect.UnmodifiableListIterator<java.lang.Object> objItor15 = objList11.listIterator((int)(short)0);
com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString("", 0, (int)(byte)-1);
boolean boolean20 = node19.isNumber();
boolean boolean21 = node19.isDefaultCase();
boolean boolean22 = node19.isEmpty();
java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable23 = node19.children();
com.google.javascript.rhino.Node node24 = node19.cloneNode();
boolean boolean25 = node24.isDefaultCase();
boolean boolean26 = node24.isString();
com.google.javascript.rhino.Node node30 = com.google.javascript.rhino.Node.newString("", 0, (int)(byte)-1);
boolean boolean31 = node30.isNumber();
boolean boolean32 = node30.isDefaultCase();
boolean boolean33 = node30.isEmpty();
java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable34 = node30.children();
com.google.javascript.rhino.Node node35 = node30.cloneNode();
boolean boolean36 = node35.isDefaultCase();
com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newString("", 0, (int)(byte)-1);
boolean boolean41 = node40.isNumber();
boolean boolean42 = node40.isDefaultCase();
boolean boolean43 = node40.isEmpty();
java.lang.String[] strArray46 = new java.lang.String[] { "", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet47, strArray46);
node40.setDirectives((java.util.Set<java.lang.String>)strSet47);
int int50 = strSet47.size();
node35.setDirectives((java.util.Set<java.lang.String>)strSet47);
int int52 = node35.getSourceOffset();
com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile53 = null;
node35.setStaticSourceFile(staticSourceFile53);
com.google.javascript.rhino.Node node55 = node24.useSourceInfoIfMissingFromForTree(node35);
boolean boolean56 = objList11.equals((java.lang.Object)node24);
boolean boolean57 = objList2.addAll((java.util.Collection<java.lang.Object>)objList11);

Long generation time 2103 msec for null sequence.

Progress update: steps=61000, test inputs generated=25941, failing inputs=1      (2022-02-23T04:22:52.084Z     233M used)Long generation time 1686 msec for null sequence.
Long generation time 3603 msec for null sequence.

Progress update: steps=62000, test inputs generated=26349, failing inputs=1      (2022-02-23T04:23:11.858Z     287M used)Long generation time 2956 msec for null sequence.

Progress update: steps=63000, test inputs generated=26753, failing inputs=1      (2022-02-23T04:23:26.860Z     436M used)
Progress update: steps=63208, test inputs generated=26846, failing inputs=1      (2022-02-23T04:23:29.688Z     471M used)Long generation time 1203 msec (= 1203 + 0) for
java.lang.Object[] objArray1 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList2 = com.google.common.collect.ImmutableList.copyOf(objArray1);
com.google.common.collect.UnmodifiableIterator<java.lang.Object> objItor3 = objList2.iterator();
java.lang.Object[] objArray5 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList6 = com.google.common.collect.ImmutableList.copyOf(objArray5);
boolean boolean7 = objList2.containsAll((java.util.Collection<java.lang.Object>)objList6);
int int9 = objList2.indexOf((java.lang.Object)0.0d);
java.lang.Object[] objArray10 = objList2.toArray();
com.google.common.collect.UnmodifiableIterator<java.lang.Object> objItor11 = objList2.iterator();
java.lang.Object[] objArray12 = objList2.toArray();
java.lang.Object[] objArray14 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList15 = com.google.common.collect.ImmutableList.copyOf(objArray14);
com.google.common.collect.UnmodifiableIterator<java.lang.Object> objItor16 = objList15.iterator();
java.lang.Object[] objArray18 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList19 = com.google.common.collect.ImmutableList.copyOf(objArray18);
boolean boolean20 = objList15.containsAll((java.util.Collection<java.lang.Object>)objList19);
int int22 = objList15.indexOf((java.lang.Object)0.0d);
java.lang.Object[] objArray24 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList25 = com.google.common.collect.ImmutableList.copyOf(objArray24);
com.google.common.collect.UnmodifiableIterator<java.lang.Object> objItor26 = objList25.iterator();
com.google.common.collect.ImmutableList<java.util.HashSet<java.lang.String>> strSetList27 = com.google.common.collect.ImmutableList.copyOf((java.util.Collection<java.lang.Object>)objList25);
java.util.ListIterator<java.lang.Object> objItor28 = objList25.listIterator();
boolean boolean29 = objList15.containsAll((java.util.Collection<java.lang.Object>)objList25);
java.lang.Object[] objArray31 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList32 = com.google.common.collect.ImmutableList.copyOf(objArray31);
com.google.common.collect.UnmodifiableIterator<java.lang.Object> objItor33 = objList32.iterator();
com.google.common.collect.ImmutableList<java.util.HashSet<java.lang.String>> strSetList34 = com.google.common.collect.ImmutableList.copyOf((java.util.Collection<java.lang.Object>)objList32);
java.util.Spliterator<java.lang.Object> objSpliterator35 = objList32.spliterator();
java.util.Iterator<java.lang.Object> objItor36 = objList32.iterator();
java.lang.Object[] objArray37 = objList32.toArray();
boolean boolean38 = objList25.containsAll((java.util.Collection<java.lang.Object>)objList32);
com.google.common.collect.UnmodifiableIterator<java.lang.Object> objItor39 = objList25.iterator();
boolean boolean40 = objList2.retainAll((java.util.Collection<java.lang.Object>)objList25);

Long generation time 1497 msec for null sequence.

Progress update: steps=64000, test inputs generated=27189, failing inputs=1      (2022-02-23T04:23:42.667Z     193M used)Long generation time 1275 msec for null sequence.
Long generation time 1008 msec for null sequence.

Progress update: steps=65000, test inputs generated=27625, failing inputs=1      (2022-02-23T04:24:04.550Z     176M used)Long generation time 1081 msec for null sequence.
Long generation time 1075 msec (= 1075 + 0) for
java.lang.Object[] objArray1 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList2 = com.google.common.collect.ImmutableList.copyOf(objArray1);
java.lang.Object[] objArray3 = objList2.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList4 = objList2.asList();
com.google.javascript.rhino.Node node8 = com.google.javascript.rhino.Node.newString("", 0, (int)(byte)-1);
boolean boolean9 = node8.isNumber();
node8.putProp((int)'a', (java.lang.Object)30);
int int13 = node8.getLength();
java.lang.Class<?> wildcardClass14 = node8.getClass();
com.google.common.collect.ImmutableList<java.lang.reflect.Type> typeList15 = com.google.common.collect.ImmutableList.of((java.lang.reflect.Type)wildcardClass14);
boolean boolean16 = objList4.contains((java.lang.Object)wildcardClass14);
java.lang.Object[] objArray17 = objList4.toArray();
java.util.Iterator<java.lang.Object> objItor18 = objList4.iterator();
com.google.common.collect.ImmutableList<java.lang.Object> objList19 = objList4.asList();
java.lang.String[] strArray21 = new java.lang.String[] { "STRING " };
java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet22, strArray21);
java.lang.Object[] objArray25 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList26 = com.google.common.collect.ImmutableList.copyOf(objArray25);
java.lang.Object[] objArray27 = objList26.toArray();
java.lang.Object[] objArray29 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList30 = com.google.common.collect.ImmutableList.copyOf(objArray29);
java.lang.Object[] objArray31 = objList30.toArray();
java.lang.Object[] objArray33 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList34 = com.google.common.collect.ImmutableList.copyOf(objArray33);
java.lang.Object[] objArray35 = objList34.toArray();
java.lang.Object[] objArray37 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList38 = com.google.common.collect.ImmutableList.copyOf(objArray37);
java.lang.Object[] objArray40 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList41 = com.google.common.collect.ImmutableList.copyOf(objArray40);
java.lang.Object[] objArray42 = objList41.toArray();
boolean boolean43 = objList38.containsAll((java.util.Collection<java.lang.Object>)objList41);
java.lang.Object[] objArray45 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList46 = com.google.common.collect.ImmutableList.copyOf(objArray45);
java.lang.Object[] objArray48 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList49 = com.google.common.collect.ImmutableList.copyOf(objArray48);
java.lang.Object[] objArray50 = objList49.toArray();
boolean boolean51 = objList46.containsAll((java.util.Collection<java.lang.Object>)objList49);
java.lang.Object[] objArray53 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList54 = com.google.common.collect.ImmutableList.copyOf(objArray53);
java.lang.Object[] objArray56 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList57 = com.google.common.collect.ImmutableList.copyOf(objArray56);
java.lang.Object[] objArray58 = objList57.toArray();
boolean boolean59 = objList54.containsAll((java.util.Collection<java.lang.Object>)objList57);
java.lang.Object[] objArray61 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList62 = com.google.common.collect.ImmutableList.copyOf(objArray61);
java.lang.Object[] objArray63 = objList62.toArray();
java.lang.Object[] objArray65 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList66 = com.google.common.collect.ImmutableList.copyOf(objArray65);
java.lang.Object[] objArray68 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList69 = com.google.common.collect.ImmutableList.copyOf(objArray68);
java.lang.Object[] objArray71 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList72 = com.google.common.collect.ImmutableList.copyOf(objArray71);
java.lang.Object[] objArray73 = objList72.toArray();
java.lang.Object[] objArray75 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList76 = com.google.common.collect.ImmutableList.copyOf(objArray75);
java.lang.Object[] objArray78 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList79 = com.google.common.collect.ImmutableList.copyOf(objArray78);
java.lang.Object[] objArray80 = objList79.toArray();
boolean boolean81 = objList76.containsAll((java.util.Collection<java.lang.Object>)objList79);
java.lang.Object[] objArray83 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList84 = com.google.common.collect.ImmutableList.copyOf(objArray83);
java.lang.Object[] objArray85 = objList84.toArray();
com.google.common.collect.ImmutableCollection[] immutableCollectionArray87 = new com.google.common.collect.ImmutableCollection[ 0 ];
@SuppressWarnings("unchecked")
com.google.common.collect.ImmutableCollection<java.lang.Object>[] objCollectionArray88 = (com.google.common.collect.ImmutableCollection<java.lang.Object>[])immutableCollectionArray87;
com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableCollection<java.lang.Object>> objCollectionList89 = com.google.common.collect.ImmutableList.of((com.google.common.collect.ImmutableCollection<java.lang.Object>)objList26, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList30, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList34, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList41, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList49, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList54, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList62, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList66, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList69, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList72, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList76, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList84, objCollectionArray88);
boolean boolean90 = strSet22.containsAll((java.util.Collection<java.lang.Object>)objList66);
boolean boolean91 = objList19.containsAll((java.util.Collection<java.lang.Object>)objList66);
java.util.ListIterator<java.lang.Object> objItor92 = objList66.listIterator();


Progress update: steps=66000, test inputs generated=28048, failing inputs=1      (2022-02-23T04:24:24.012Z     138M used)Long generation time 1037 msec (= 1037 + 0) for
java.lang.Object[] objArray1 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList2 = com.google.common.collect.ImmutableList.copyOf(objArray1);
java.lang.Object[] objArray4 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList5 = com.google.common.collect.ImmutableList.copyOf(objArray4);
java.lang.Object[] objArray6 = objList5.toArray();
boolean boolean7 = objList2.containsAll((java.util.Collection<java.lang.Object>)objList5);
java.util.Iterator<java.lang.Object> objItor8 = objList5.iterator();
com.google.javascript.rhino.Node node10 = new com.google.javascript.rhino.Node(15);
java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable11 = node10.siblings();
int int12 = objList5.indexOf((java.lang.Object)node10);
java.lang.Object[] objArray14 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList15 = com.google.common.collect.ImmutableList.copyOf(objArray14);
java.lang.Object[] objArray16 = objList15.toArray();
java.lang.Object[] objArray18 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList19 = com.google.common.collect.ImmutableList.copyOf(objArray18);
java.lang.Object[] objArray20 = objList19.toArray();
java.lang.Object[] objArray22 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList23 = com.google.common.collect.ImmutableList.copyOf(objArray22);
java.lang.Object[] objArray24 = objList23.toArray();
java.lang.Object[] objArray26 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList27 = com.google.common.collect.ImmutableList.copyOf(objArray26);
java.lang.Object[] objArray29 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList30 = com.google.common.collect.ImmutableList.copyOf(objArray29);
java.lang.Object[] objArray31 = objList30.toArray();
boolean boolean32 = objList27.containsAll((java.util.Collection<java.lang.Object>)objList30);
java.lang.Object[] objArray34 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList35 = com.google.common.collect.ImmutableList.copyOf(objArray34);
java.lang.Object[] objArray37 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList38 = com.google.common.collect.ImmutableList.copyOf(objArray37);
java.lang.Object[] objArray39 = objList38.toArray();
boolean boolean40 = objList35.containsAll((java.util.Collection<java.lang.Object>)objList38);
java.lang.Object[] objArray42 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList43 = com.google.common.collect.ImmutableList.copyOf(objArray42);
java.lang.Object[] objArray45 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList46 = com.google.common.collect.ImmutableList.copyOf(objArray45);
java.lang.Object[] objArray47 = objList46.toArray();
boolean boolean48 = objList43.containsAll((java.util.Collection<java.lang.Object>)objList46);
java.lang.Object[] objArray50 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList51 = com.google.common.collect.ImmutableList.copyOf(objArray50);
java.lang.Object[] objArray52 = objList51.toArray();
java.lang.Object[] objArray54 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList55 = com.google.common.collect.ImmutableList.copyOf(objArray54);
java.lang.Object[] objArray57 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList58 = com.google.common.collect.ImmutableList.copyOf(objArray57);
java.lang.Object[] objArray60 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList61 = com.google.common.collect.ImmutableList.copyOf(objArray60);
java.lang.Object[] objArray62 = objList61.toArray();
java.lang.Object[] objArray64 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList65 = com.google.common.collect.ImmutableList.copyOf(objArray64);
java.lang.Object[] objArray67 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList68 = com.google.common.collect.ImmutableList.copyOf(objArray67);
java.lang.Object[] objArray69 = objList68.toArray();
boolean boolean70 = objList65.containsAll((java.util.Collection<java.lang.Object>)objList68);
java.lang.Object[] objArray72 = new java.lang.Object[] { (short)10 };
com.google.common.collect.ImmutableList<java.lang.Object> objList73 = com.google.common.collect.ImmutableList.copyOf(objArray72);
java.lang.Object[] objArray74 = objList73.toArray();
com.google.common.collect.ImmutableCollection[] immutableCollectionArray76 = new com.google.common.collect.ImmutableCollection[ 0 ];
@SuppressWarnings("unchecked")
com.google.common.collect.ImmutableCollection<java.lang.Object>[] objCollectionArray77 = (com.google.common.collect.ImmutableCollection<java.lang.Object>[])immutableCollectionArray76;
com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableCollection<java.lang.Object>> objCollectionList78 = com.google.common.collect.ImmutableList.of((com.google.common.collect.ImmutableCollection<java.lang.Object>)objList15, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList19, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList23, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList30, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList38, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList43, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList51, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList55, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList58, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList61, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList65, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList73, objCollectionArray77);
com.google.javascript.rhino.Node node82 = com.google.javascript.rhino.Node.newString("", 0, (int)(byte)-1);
boolean boolean83 = node82.isNumber();
boolean boolean84 = node82.isDefaultCase();
boolean boolean85 = node82.isEmpty();
java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable86 = node82.children();
int int87 = objList19.indexOf((java.lang.Object)nodeIterable86);
com.google.common.collect.ImmutableList<java.lang.Object> objList88 = objList19.reverse();
com.google.common.collect.ImmutableList<java.lang.Object> objList89 = objList88.asList();
com.google.common.collect.ImmutableList<java.util.LinkedHashSet<java.lang.String>> strSetList90 = com.google.common.collect.ImmutableList.copyOf((java.lang.Iterable<java.lang.Object>)objList89);
boolean boolean91 = objList5.addAll((java.util.Collection<java.lang.Object>)objList89);


Progress update: steps=66174, test inputs generated=28117, failing inputs=1      (2022-02-23T04:24:29.688Z     104M used)Long generation time 1799 msec for null sequence.
Long generation time 1764 msec for null sequence.
Long generation time 1038 msec for null sequence.

Progress update: steps=67000, test inputs generated=28469, failing inputs=1      (2022-02-23T04:24:51.167Z     240M used)Long generation time 1281 msec for null sequence.
Long generation time 2483 msec for null sequence.
Long generation time 1028 msec for null sequence.
Long generation time 1125 msec for null sequence.

Progress update: steps=68000, test inputs generated=28870, failing inputs=1      (2022-02-23T04:25:19.338Z     204M used)Long generation time 1858 msec for null sequence.
Long generation time 2361 msec for null sequence.

Progress update: steps=68469, test inputs generated=29064, failing inputs=1      (2022-02-23T04:25:29.689Z     391M used)
Progress update: steps=68469, test inputs generated=29064, failing inputs=1      (2022-02-23T04:25:30.198Z     398M used)
Normal method executions: 36229993
Exceptional method executions: 4224

Average method execution time (normal termination):      0.000116
Average method execution time (exceptional termination): 0.0380
Approximate memory usage 398M
Explorer = ForwardGenerator(steps: 68469, null steps: 39405, num_sequences_generated: 29064;
    allSequences: 29064, regresson seqs: 210, error seqs: 1=1=1, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 28853;
    runtimePrimitivesSeen:279)

Error-revealing test output:
Error-revealing test count: 1
Writing error-revealing JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.FunctionType-14/ErrorTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.FunctionType-14/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 143 regression sequences.

Regression test output:
Regression test count: 143
Writing regression JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.FunctionType-14/RegressionTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.FunctionType-14/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Invalid tests generated: 0

Uncompilable sequences generated (count: 3).
Please report uncompilable sequences at https://github.com/randoop/randoop/issues ,
providing the information requested at https://randoop.github.io/randoop/manual/index.html#bug-reporting .
