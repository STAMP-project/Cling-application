Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".

Will try to generate tests for 31 classes.
PUBLIC MEMBERS=741
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-23T04:25:08.685Z     290M used)
Progress update: steps=1000, test inputs generated=561, failing inputs=0      (2022-02-23T04:25:13.468Z     623M used)
Progress update: steps=2000, test inputs generated=1354, failing inputs=0      (2022-02-23T04:25:19.617Z     375M used)
Progress update: steps=3000, test inputs generated=2244, failing inputs=0      (2022-02-23T04:25:26.005Z     1.23G used)
Progress update: steps=4000, test inputs generated=3117, failing inputs=1      (2022-02-23T04:25:33.099Z     1.20G used)
Progress update: steps=5000, test inputs generated=3953, failing inputs=1      (2022-02-23T04:25:40.632Z     1.03G used)
Progress update: steps=6000, test inputs generated=4805, failing inputs=1      (2022-02-23T04:25:48.952Z     1.19G used)
Progress update: steps=7000, test inputs generated=5665, failing inputs=2      (2022-02-23T04:26:00.630Z     771M used)
Progress update: steps=7867, test inputs generated=6378, failing inputs=3      (2022-02-23T04:26:08.699Z     706M used)
Progress update: steps=8000, test inputs generated=6482, failing inputs=3      (2022-02-23T04:26:10.222Z     261M used)
Progress update: steps=9000, test inputs generated=7322, failing inputs=3      (2022-02-23T04:26:19.258Z     1.21G used)
Progress update: steps=10000, test inputs generated=8141, failing inputs=4      (2022-02-23T04:26:29.477Z     1.03G used)
Progress update: steps=11000, test inputs generated=8967, failing inputs=4      (2022-02-23T04:26:40.504Z     1.22G used)
Progress update: steps=12000, test inputs generated=9792, failing inputs=4      (2022-02-23T04:26:53.428Z     274M used)
Progress update: steps=12942, test inputs generated=10589, failing inputs=5      (2022-02-23T04:27:08.700Z     205M used)
Progress update: steps=13000, test inputs generated=10634, failing inputs=5      (2022-02-23T04:27:10.407Z     532M used)
Progress update: steps=14000, test inputs generated=11468, failing inputs=7      (2022-02-23T04:27:25.760Z     284M used)
Progress update: steps=15000, test inputs generated=12273, failing inputs=9      (2022-02-23T04:27:38.279Z     176M used)
Progress update: steps=16000, test inputs generated=13072, failing inputs=9      (2022-02-23T04:27:52.175Z     1.27G used)
Progress update: steps=17000, test inputs generated=13869, failing inputs=9      (2022-02-23T04:28:07.096Z     1.22G used)
Progress update: steps=17075, test inputs generated=13926, failing inputs=9      (2022-02-23T04:28:08.700Z     381M used)
Progress update: steps=18000, test inputs generated=14673, failing inputs=9      (2022-02-23T04:28:23.256Z     352M used)
Progress update: steps=19000, test inputs generated=15468, failing inputs=10      (2022-02-23T04:28:40.750Z     1.45G used)
Progress update: steps=20000, test inputs generated=16267, failing inputs=10      (2022-02-23T04:28:58.568Z     224M used)
Progress update: steps=20532, test inputs generated=16697, failing inputs=10      (2022-02-23T04:29:08.700Z     531M used)
Progress update: steps=21000, test inputs generated=17077, failing inputs=11      (2022-02-23T04:29:18.417Z     556M used)
Progress update: steps=22000, test inputs generated=17890, failing inputs=11      (2022-02-23T04:29:37.125Z     1.38G used)
Progress update: steps=23000, test inputs generated=18692, failing inputs=12      (2022-02-23T04:29:57.306Z     538M used)
Progress update: steps=23526, test inputs generated=19111, failing inputs=12      (2022-02-23T04:30:08.701Z     1.06G used)
Progress update: steps=24000, test inputs generated=19487, failing inputs=12      (2022-02-23T04:30:18.202Z     816M used)Long generation time 1218 msec for null sequence.

Progress update: steps=25000, test inputs generated=20270, failing inputs=12      (2022-02-23T04:30:40.678Z     710M used)
Progress update: steps=26000, test inputs generated=21061, failing inputs=12      (2022-02-23T04:31:02.364Z     771M used)
Progress update: steps=26180, test inputs generated=21197, failing inputs=12      (2022-02-23T04:31:08.701Z     1.38G used)
Progress update: steps=27000, test inputs generated=21841, failing inputs=12      (2022-02-23T04:31:28.311Z     1.08G used)
Progress update: steps=28000, test inputs generated=22626, failing inputs=12      (2022-02-23T04:31:52.047Z     586M used)
Progress update: steps=28649, test inputs generated=23152, failing inputs=14      (2022-02-23T04:32:08.702Z     177M used)
Progress update: steps=29000, test inputs generated=23431, failing inputs=14      (2022-02-23T04:32:21.062Z     1.38G used)
Progress update: steps=30000, test inputs generated=24245, failing inputs=14      (2022-02-23T04:32:48.517Z     1.42G used)Long generation time 1303 msec for null sequence.
Long generation time 1110 msec for null sequence.

Progress update: steps=30663, test inputs generated=24772, failing inputs=14      (2022-02-23T04:33:08.702Z     1.01G used)
Progress update: steps=31000, test inputs generated=25048, failing inputs=14      (2022-02-23T04:33:16.271Z     1.01G used)Long generation time 1372 msec for null sequence.
Long generation time 1171 msec for null sequence.
Long generation time 1498 msec (= 1498 + 0) for
com.google.javascript.rhino.JSDocInfoBuilder jSDocInfoBuilder1 = new com.google.javascript.rhino.JSDocInfoBuilder(true);
com.google.javascript.rhino.JSTypeExpression jSTypeExpression2 = null;
boolean boolean3 = jSDocInfoBuilder1.recordDefineType(jSTypeExpression2);
boolean boolean5 = jSDocInfoBuilder1.recordDeprecationReason("");
java.lang.String[] strArray17 = new java.lang.String[] { "IN\n", "IN\n", "JSDocInfo", "hi!", "hi!", "Not declared as a constructor", "Unknown class name", "", "InputId: hi!", "Named type with empty name component", "InputId: hi!" };
java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet18, strArray17);
boolean boolean20 = jSDocInfoBuilder1.recordSuppressions((java.util.Set<java.lang.String>)strSet18);
com.google.javascript.rhino.Node node22 = new com.google.javascript.rhino.Node(51);
int int23 = node22.getType();
boolean boolean24 = node22.hasOneChild();
com.google.javascript.rhino.Node node26 = new com.google.javascript.rhino.Node(51);
int int27 = node26.getType();
com.google.javascript.rhino.Node node28 = node22.useSourceInfoIfMissingFrom(node26);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList32 = com.google.common.collect.ImmutableList.of((java.io.Serializable)node26, (java.io.Serializable)' ', (java.io.Serializable)"hi!", (java.io.Serializable)"hi!");
com.google.javascript.rhino.Node node34 = new com.google.javascript.rhino.Node(51);
int int35 = node34.getType();
boolean boolean36 = node34.hasOneChild();
com.google.javascript.rhino.Node node38 = new com.google.javascript.rhino.Node(51);
int int39 = node38.getType();
com.google.javascript.rhino.Node node40 = node34.useSourceInfoIfMissingFrom(node38);
boolean boolean41 = node38.isUnscopedQualifiedName();
node38.setType((int)(short)100);
int int44 = serializableList32.lastIndexOf((java.lang.Object)(short)100);
com.google.common.collect.ImmutableList<com.google.javascript.rhino.InputId> inputIdList45 = com.google.common.collect.ImmutableList.copyOf((java.util.Collection<java.io.Serializable>)serializableList32);
boolean boolean46 = strSet18.removeAll((java.util.Collection<java.io.Serializable>)serializableList32);
strSet18.clear();
com.google.javascript.rhino.Node node49 = new com.google.javascript.rhino.Node(51);
int int50 = node49.getType();
boolean boolean51 = node49.hasOneChild();
com.google.javascript.rhino.Node node53 = new com.google.javascript.rhino.Node(51);
int int54 = node53.getType();
com.google.javascript.rhino.Node node55 = node49.useSourceInfoIfMissingFrom(node53);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList59 = com.google.common.collect.ImmutableList.of((java.io.Serializable)node53, (java.io.Serializable)' ', (java.io.Serializable)"hi!", (java.io.Serializable)"hi!");
com.google.javascript.rhino.JSDocInfoBuilder jSDocInfoBuilder61 = new com.google.javascript.rhino.JSDocInfoBuilder(true);
jSDocInfoBuilder61.markText("Node tree inequality:\nTree1:\nIN\n    IN\n\n\nTree2:\nIN\n\n\nSubtree1: IN\n    IN\n\n\nSubtree2: IN\n", (int)(byte)-1, 30, 47, 39);
boolean boolean68 = jSDocInfoBuilder61.isJavaDispatch();
boolean boolean69 = jSDocInfoBuilder61.recordDeprecated();
boolean boolean70 = serializableList59.contains((java.lang.Object)boolean69);
java.util.ListIterator<java.io.Serializable> serializableItor72 = serializableList59.listIterator((int)(byte)1);
boolean boolean73 = strSet18.removeAll((java.util.Collection<java.io.Serializable>)serializableList59);

Long generation time 1238 msec for null sequence.

Progress update: steps=32000, test inputs generated=25824, failing inputs=14      (2022-02-23T04:33:50.780Z     684M used)Long generation time 1027 msec (= 1027 + 0) for
com.google.javascript.rhino.Node node1 = new com.google.javascript.rhino.Node(51);
int int2 = node1.getType();
boolean boolean3 = node1.hasOneChild();
com.google.javascript.rhino.Node node5 = new com.google.javascript.rhino.Node(51);
int int6 = node5.getType();
com.google.javascript.rhino.Node node7 = node1.useSourceInfoIfMissingFrom(node5);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList11 = com.google.common.collect.ImmutableList.of((java.io.Serializable)node5, (java.io.Serializable)' ', (java.io.Serializable)"hi!", (java.io.Serializable)"hi!");
com.google.javascript.rhino.JSDocInfoBuilder jSDocInfoBuilder13 = new com.google.javascript.rhino.JSDocInfoBuilder(true);
jSDocInfoBuilder13.markText("Node tree inequality:\nTree1:\nIN\n    IN\n\n\nTree2:\nIN\n\n\nSubtree1: IN\n    IN\n\n\nSubtree2: IN\n", (int)(byte)-1, 30, 47, 39);
boolean boolean20 = jSDocInfoBuilder13.isJavaDispatch();
boolean boolean21 = jSDocInfoBuilder13.recordDeprecated();
boolean boolean22 = serializableList11.contains((java.lang.Object)boolean21);
com.google.common.collect.UnmodifiableListIterator<java.io.Serializable> serializableItor23 = serializableList11.listIterator();
com.google.javascript.rhino.ErrorReporter errorReporter25 = null;
com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter25, true);
jSTypeRegistry27.clearTemplateTypeNames();
com.google.javascript.rhino.jstype.JSType jSType33 = jSTypeRegistry27.createNamedType("Not declared as a constructor", "Node tree inequality:\nTree1:\nIN\n    IN\n\n\nTree2:\nIN\n\n\nSubtree1: IN\n    IN\n\n\nSubtree2: IN\n", (int)(short)-1, (int)'a');
boolean boolean34 = jSType33.isTemplateType();
com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35, true);
jSTypeRegistry37.clearTemplateTypeNames();
com.google.javascript.rhino.jstype.JSType jSType43 = jSTypeRegistry37.createNamedType("Not declared as a constructor", "Node tree inequality:\nTree1:\nIN\n    IN\n\n\nTree2:\nIN\n\n\nSubtree1: IN\n    IN\n\n\nSubtree2: IN\n", (int)(short)-1, (int)'a');
com.google.javascript.rhino.jstype.JSType jSType48 = jSTypeRegistry37.createNamedType("IN\n", "Named type with empty name component", (int)(short)1, 4);
java.lang.String str49 = jSType48.toDebugHashCodeString();
com.google.javascript.rhino.jstype.JSType jSType51 = jSType48.getRestrictedTypeGivenToBooleanOutcome(true);
boolean boolean52 = jSType33.isSubtype(jSType51);
boolean boolean53 = jSType33.isRegexpType();
java.lang.String str54 = jSType33.toAnnotationString();
boolean boolean55 = jSType33.isNominalConstructor();
java.lang.String str56 = jSType33.toString();
boolean boolean57 = jSType33.isDateType();
boolean boolean58 = jSType33.isUnionType();
java.io.Serializable serializable59 = serializableList11.set(221219, (java.io.Serializable)boolean58);


Progress update: steps=32706, test inputs generated=26384, failing inputs=14      (2022-02-23T04:34:08.702Z     1.18G used)Long generation time 1141 msec (= 1141 + 0) for
com.google.javascript.rhino.Node node1 = new com.google.javascript.rhino.Node(51);
int int2 = node1.getType();
boolean boolean3 = node1.hasOneChild();
com.google.javascript.rhino.Node node5 = new com.google.javascript.rhino.Node(51);
int int6 = node5.getType();
com.google.javascript.rhino.Node node7 = node1.useSourceInfoIfMissingFrom(node5);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList11 = com.google.common.collect.ImmutableList.of((java.io.Serializable)node5, (java.io.Serializable)' ', (java.io.Serializable)"hi!", (java.io.Serializable)"hi!");
com.google.javascript.rhino.JSDocInfoBuilder jSDocInfoBuilder13 = new com.google.javascript.rhino.JSDocInfoBuilder(true);
jSDocInfoBuilder13.markText("Node tree inequality:\nTree1:\nIN\n    IN\n\n\nTree2:\nIN\n\n\nSubtree1: IN\n    IN\n\n\nSubtree2: IN\n", (int)(byte)-1, 30, 47, 39);
boolean boolean20 = jSDocInfoBuilder13.isJavaDispatch();
boolean boolean21 = jSDocInfoBuilder13.recordDeprecated();
boolean boolean22 = serializableList11.contains((java.lang.Object)boolean21);
java.util.ListIterator<java.io.Serializable> serializableItor24 = serializableList11.listIterator((int)(byte)1);
com.google.javascript.rhino.Node node26 = new com.google.javascript.rhino.Node(51);
int int27 = node26.getType();
boolean boolean28 = node26.hasOneChild();
com.google.javascript.rhino.Node node30 = new com.google.javascript.rhino.Node(51);
int int31 = node30.getType();
com.google.javascript.rhino.Node node32 = node26.useSourceInfoIfMissingFrom(node30);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList36 = com.google.common.collect.ImmutableList.of((java.io.Serializable)node30, (java.io.Serializable)' ', (java.io.Serializable)"hi!", (java.io.Serializable)"hi!");
com.google.javascript.rhino.Node node38 = new com.google.javascript.rhino.Node(51);
int int39 = node38.getSourcePosition();
com.google.javascript.rhino.Node node41 = new com.google.javascript.rhino.Node(51);
int int42 = node41.getType();
boolean boolean43 = node41.hasOneChild();
com.google.javascript.rhino.Node node45 = new com.google.javascript.rhino.Node(51);
int int46 = node45.getType();
com.google.javascript.rhino.Node node47 = node41.useSourceInfoIfMissingFrom(node45);
node38.addChildrenToFront(node45);
boolean boolean49 = serializableList36.contains((java.lang.Object)node38);
boolean boolean50 = serializableList36.isEmpty();
java.lang.Object[] objArray51 = serializableList36.toArray();
java.util.stream.Stream<java.io.Serializable> serializableStream52 = serializableList36.parallelStream();
com.google.common.collect.UnmodifiableListIterator<java.io.Serializable> serializableItor53 = serializableList36.listIterator();
boolean boolean54 = serializableList36.isEmpty();
int int55 = serializableList36.size();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList56 = serializableList36.asList();
boolean boolean57 = serializableList11.containsAll((java.util.Collection<java.io.Serializable>)serializableList36);
com.google.common.collect.ImmutableList<java.lang.Class<?>> wildcardClassList58 = com.google.common.collect.ImmutableList.copyOf((java.util.Collection<java.io.Serializable>)serializableList11);
com.google.javascript.rhino.JSDocInfo jSDocInfo59 = new com.google.javascript.rhino.JSDocInfo();
boolean boolean60 = jSDocInfo59.isDefine();
java.lang.String str61 = jSDocInfo59.getDeprecationReason();
boolean boolean62 = jSDocInfo59.isHidden();
int int63 = jSDocInfo59.getParameterCount();
java.util.List<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList64 = jSDocInfo59.getExtendedInterfaces();
com.google.javascript.rhino.JSTypeExpression jSTypeExpression65 = jSDocInfo59.getTypedefType();
java.util.List<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList66 = jSDocInfo59.getThrownTypes();
boolean boolean67 = jSDocInfo59.isNoTypeCheck();
boolean boolean68 = jSDocInfo59.hasEnumParameterType();
int int69 = jSDocInfo59.getImplementedInterfaceCount();
java.util.Collection<java.lang.String> strCollection70 = jSDocInfo59.getAuthors();
java.util.Collection<com.google.javascript.rhino.JSDocInfo.Marker> markerCollection71 = jSDocInfo59.getMarkers();
int int72 = serializableList11.indexOf((java.lang.Object)jSDocInfo59);


Progress update: steps=33000, test inputs generated=26612, failing inputs=14      (2022-02-23T04:34:16.586Z     660M used)Long generation time 1279 msec for null sequence.
Long generation time 1235 msec for null sequence.
Long generation time 1401 msec (= 1401 + 0) for
com.google.javascript.rhino.Node node1 = new com.google.javascript.rhino.Node(51);
int int2 = node1.getType();
boolean boolean3 = node1.hasOneChild();
com.google.javascript.rhino.Node node5 = new com.google.javascript.rhino.Node(51);
int int6 = node5.getType();
com.google.javascript.rhino.Node node7 = node1.useSourceInfoIfMissingFrom(node5);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList11 = com.google.common.collect.ImmutableList.of((java.io.Serializable)node5, (java.io.Serializable)' ', (java.io.Serializable)"hi!", (java.io.Serializable)"hi!");
com.google.javascript.rhino.Node node13 = new com.google.javascript.rhino.Node(51);
int int14 = node13.getSourcePosition();
com.google.javascript.rhino.Node node16 = new com.google.javascript.rhino.Node(51);
int int17 = node16.getType();
boolean boolean18 = node16.hasOneChild();
com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node(51);
int int21 = node20.getType();
com.google.javascript.rhino.Node node22 = node16.useSourceInfoIfMissingFrom(node20);
node13.addChildrenToFront(node20);
boolean boolean24 = serializableList11.contains((java.lang.Object)node13);
com.google.common.collect.UnmodifiableListIterator<java.io.Serializable> serializableItor25 = serializableList11.listIterator();
com.google.javascript.rhino.Node node27 = new com.google.javascript.rhino.Node(51);
int int28 = node27.getSourcePosition();
com.google.javascript.rhino.Node node30 = new com.google.javascript.rhino.Node(51);
int int31 = node30.getType();
boolean boolean32 = node30.hasOneChild();
com.google.javascript.rhino.Node node34 = new com.google.javascript.rhino.Node(51);
int int35 = node34.getType();
com.google.javascript.rhino.Node node36 = node30.useSourceInfoIfMissingFrom(node34);
node27.addChildrenToFront(node34);
boolean boolean38 = node27.isVar();
com.google.javascript.rhino.JSDocInfo jSDocInfo39 = new com.google.javascript.rhino.JSDocInfo();
boolean boolean40 = jSDocInfo39.hasFileOverview();
java.lang.String str41 = jSDocInfo39.toString();
node27.setJSDocInfo(jSDocInfo39);
boolean boolean43 = jSDocInfo39.isNoAlias();
boolean boolean44 = jSDocInfo39.isDeprecated();
java.lang.String str45 = jSDocInfo39.toString();
java.lang.String str46 = jSDocInfo39.getMeaning();
java.lang.String str47 = jSDocInfo39.getLendsName();
int int48 = serializableList11.indexOf((java.lang.Object)jSDocInfo39);
boolean boolean49 = serializableList11.isEmpty();
com.google.javascript.rhino.Node node51 = new com.google.javascript.rhino.Node(51);
int int52 = node51.getType();
boolean boolean53 = node51.hasOneChild();
com.google.javascript.rhino.Node node55 = new com.google.javascript.rhino.Node(51);
int int56 = node55.getType();
com.google.javascript.rhino.Node node57 = node51.useSourceInfoIfMissingFrom(node55);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList61 = com.google.common.collect.ImmutableList.of((java.io.Serializable)node55, (java.io.Serializable)' ', (java.io.Serializable)"hi!", (java.io.Serializable)"hi!");
com.google.javascript.rhino.Node node63 = new com.google.javascript.rhino.Node(51);
int int64 = node63.getSourcePosition();
com.google.javascript.rhino.Node node66 = new com.google.javascript.rhino.Node(51);
int int67 = node66.getType();
boolean boolean68 = node66.hasOneChild();
com.google.javascript.rhino.Node node70 = new com.google.javascript.rhino.Node(51);
int int71 = node70.getType();
com.google.javascript.rhino.Node node72 = node66.useSourceInfoIfMissingFrom(node70);
node63.addChildrenToFront(node70);
boolean boolean74 = serializableList61.contains((java.lang.Object)node63);
boolean boolean75 = serializableList61.isEmpty();
java.lang.Object[] objArray76 = serializableList61.toArray();
java.util.stream.Stream<java.io.Serializable> serializableStream77 = serializableList61.parallelStream();
com.google.common.collect.UnmodifiableListIterator<java.io.Serializable> serializableItor78 = serializableList61.listIterator();
boolean boolean79 = serializableList61.isEmpty();
int int81 = serializableList61.indexOf((java.lang.Object)100L);
java.util.ListIterator<java.io.Serializable> serializableItor82 = serializableList61.listIterator();
com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags84 = new com.google.javascript.rhino.Node.SideEffectFlags((-1));
int int85 = serializableList61.indexOf((java.lang.Object)sideEffectFlags84);
java.lang.Object[] objArray86 = serializableList61.toArray();
int int87 = serializableList61.size();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList88 = serializableList61.asList();
boolean boolean89 = serializableList11.removeAll((java.util.Collection<java.io.Serializable>)serializableList88);

Long generation time 1114 msec for null sequence.

Progress update: steps=34000, test inputs generated=27407, failing inputs=15      (2022-02-23T04:34:53.869Z     225M used)Long generation time 1146 msec (= 1146 + 0) for
com.google.javascript.rhino.Node node1 = new com.google.javascript.rhino.Node(51);
int int2 = node1.getType();
boolean boolean3 = node1.hasOneChild();
com.google.javascript.rhino.Node node5 = new com.google.javascript.rhino.Node(51);
int int6 = node5.getType();
com.google.javascript.rhino.Node node7 = node1.useSourceInfoIfMissingFrom(node5);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList11 = com.google.common.collect.ImmutableList.of((java.io.Serializable)node5, (java.io.Serializable)' ', (java.io.Serializable)"hi!", (java.io.Serializable)"hi!");
com.google.javascript.rhino.Node node13 = new com.google.javascript.rhino.Node(51);
int int14 = node13.getSourcePosition();
com.google.javascript.rhino.Node node16 = new com.google.javascript.rhino.Node(51);
int int17 = node16.getType();
boolean boolean18 = node16.hasOneChild();
com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node(51);
int int21 = node20.getType();
com.google.javascript.rhino.Node node22 = node16.useSourceInfoIfMissingFrom(node20);
node13.addChildrenToFront(node20);
boolean boolean24 = serializableList11.contains((java.lang.Object)node13);
boolean boolean25 = serializableList11.isEmpty();
java.lang.Object[] objArray26 = serializableList11.toArray();
java.util.stream.Stream<java.io.Serializable> serializableStream27 = serializableList11.parallelStream();
com.google.common.collect.UnmodifiableListIterator<java.io.Serializable> serializableItor28 = serializableList11.listIterator();
boolean boolean29 = serializableList11.isEmpty();
int int31 = serializableList11.indexOf((java.lang.Object)100L);
boolean boolean32 = serializableList11.isEmpty();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList33 = serializableList11.reverse();
com.google.javascript.rhino.JSDocInfo jSDocInfo34 = new com.google.javascript.rhino.JSDocInfo();
boolean boolean35 = jSDocInfo34.isDefine();
java.lang.String str36 = jSDocInfo34.getDeprecationReason();
int int37 = jSDocInfo34.getImplementedInterfaceCount();
com.google.javascript.rhino.JSTypeExpression jSTypeExpression38 = jSDocInfo34.getType();
int int39 = jSDocInfo34.getImplementedInterfaceCount();
java.lang.String str41 = jSDocInfo34.getDescriptionForParameter("[IN,  , hi!, hi!]");
java.util.Collection<java.lang.String> strCollection42 = jSDocInfo34.getReferences();
int int43 = serializableList33.indexOf((java.lang.Object)jSDocInfo34);
com.google.javascript.rhino.Node node45 = new com.google.javascript.rhino.Node(51);
int int46 = node45.getType();
boolean boolean47 = node45.hasOneChild();
com.google.javascript.rhino.Node node49 = new com.google.javascript.rhino.Node(51);
int int50 = node49.getType();
com.google.javascript.rhino.Node node51 = node45.useSourceInfoIfMissingFrom(node49);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList55 = com.google.common.collect.ImmutableList.of((java.io.Serializable)node49, (java.io.Serializable)' ', (java.io.Serializable)"hi!", (java.io.Serializable)"hi!");
com.google.javascript.rhino.Node node57 = new com.google.javascript.rhino.Node(51);
int int58 = node57.getSourcePosition();
com.google.javascript.rhino.Node node60 = new com.google.javascript.rhino.Node(51);
int int61 = node60.getType();
boolean boolean62 = node60.hasOneChild();
com.google.javascript.rhino.Node node64 = new com.google.javascript.rhino.Node(51);
int int65 = node64.getType();
com.google.javascript.rhino.Node node66 = node60.useSourceInfoIfMissingFrom(node64);
node57.addChildrenToFront(node64);
boolean boolean68 = serializableList55.contains((java.lang.Object)node57);
boolean boolean69 = serializableList55.isEmpty();
java.lang.Object[] objArray70 = serializableList55.toArray();
java.util.stream.Stream<java.io.Serializable> serializableStream71 = serializableList55.parallelStream();
com.google.common.collect.UnmodifiableListIterator<java.io.Serializable> serializableItor72 = serializableList55.listIterator();
boolean boolean73 = serializableList55.isEmpty();
int int75 = serializableList55.indexOf((java.lang.Object)100L);
boolean boolean76 = serializableList55.isEmpty();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList77 = serializableList55.reverse();
boolean boolean78 = serializableList33.containsAll((java.util.Collection<java.io.Serializable>)serializableList55);
java.util.Spliterator<java.io.Serializable> serializableSpliterator79 = serializableList33.spliterator();
com.google.common.collect.ImmutableList<com.google.javascript.rhino.Node[]> nodeArrayList80 = com.google.common.collect.ImmutableList.copyOf((java.util.Collection<java.io.Serializable>)serializableList33);
java.util.Iterator<java.io.Serializable> serializableItor81 = serializableList33.iterator();
boolean boolean83 = serializableList33.add((java.io.Serializable)"{proxy:{204540894}}");


Progress update: steps=34535, test inputs generated=27818, failing inputs=15      (2022-02-23T04:35:08.688Z     722M used)
Normal method executions: 19346378
Exceptional method executions: 3829

Average method execution time (normal termination):      0.000307
Average method execution time (exceptional termination): 0.0701
Approximate memory usage 722M
Explorer = ForwardGenerator(steps: 34535, null steps: 6717, num_sequences_generated: 27818;
    allSequences: 27818, regresson seqs: 9285, error seqs: 15=15=15, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 18518;
    runtimePrimitivesSeen:5337)

Error-revealing test output:
Error-revealing test count: 15
Writing error-revealing JUnit tests...
                                                                                                                                                                                                       Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/ErrorTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 4881 regression sequences.

Regression test output:
Regression test count: 4881
Writing regression JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest1.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest2.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest3.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest4.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest5.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest6.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest7.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest8.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest9.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest10.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest11.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest12.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest13.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest14.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest15.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest16.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest17.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest18.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest19.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest20.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest21.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest22.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest23.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest24.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-18/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  java.util.Set.toArray(com.google.javascript.rhino.SourcePosition<com.google.javascript.rhino.Node>[])
  Possibly flaky:  java.util.Collection.toArray(com.google.javascript.rhino.SourcePosition<com.google.javascript.rhino.Node>[])
  Possibly flaky:  com.google.javascript.rhino.jstype.JSTypeRegistry.resolveTypesInScope(com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>)
  Possibly flaky:  com.google.javascript.rhino.jstype.JSTypeRegistry.registerPropertyOnType(java.lang.String,com.google.javascript.rhino.jstype.JSType)
  Possibly flaky:  com.google.javascript.rhino.jstype.JSTypeRegistry.getType(com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>,java.lang.String,java.lang.String,int,int)
  Possibly flaky:  com.google.javascript.rhino.jstype.JSTypeRegistry.getNativeFunctionType(com.google.javascript.rhino.jstype.JSTypeNative)
  Possibly flaky:  com.google.javascript.rhino.jstype.JSTypeRegistry.createUnionType(com.google.javascript.rhino.jstype.JSTypeNative[])
  Possibly flaky:  com.google.javascript.rhino.jstype.JSTypeRegistry.createParametersWithVarArgs(com.google.javascript.rhino.jstype.JSType[])
  Possibly flaky:  com.google.javascript.rhino.jstype.JSTypeRegistry.createParameters(com.google.javascript.rhino.jstype.JSType[])
  Possibly flaky:  com.google.javascript.rhino.jstype.JSTypeRegistry.createOptionalParameters(com.google.javascript.rhino.jstype.JSType[])
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0

Uncompilable sequences generated (count: 541).
Please report uncompilable sequences at https://github.com/randoop/randoop/issues ,
providing the information requested at https://randoop.github.io/randoop/manual/index.html#bug-reporting .
