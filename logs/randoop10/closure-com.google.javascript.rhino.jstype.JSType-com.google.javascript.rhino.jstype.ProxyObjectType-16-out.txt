Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".
Cannot instantiate non-accessible class com.google.javascript.rhino.jstype.PrototypeObjectType specified via --testclass or --classlist; will use its static methods.
Cannot instantiate non-accessible class com.google.javascript.rhino.jstype.ProxyObjectType specified via --testclass or --classlist; will use its static methods.

Will try to generate tests for 37 classes.
PUBLIC MEMBERS=958
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-23T03:38:26.854Z     355M used)
Progress update: steps=1000, test inputs generated=336, failing inputs=0      (2022-02-23T03:38:28.084Z     132M used)
Progress update: steps=2000, test inputs generated=784, failing inputs=0      (2022-02-23T03:38:28.854Z     514M used)
Progress update: steps=3000, test inputs generated=1222, failing inputs=0      (2022-02-23T03:38:29.886Z     583M used)
Progress update: steps=4000, test inputs generated=1674, failing inputs=0      (2022-02-23T03:38:31.012Z     570M used)
Progress update: steps=5000, test inputs generated=2103, failing inputs=0      (2022-02-23T03:38:32.301Z     542M used)
Progress update: steps=6000, test inputs generated=2512, failing inputs=0      (2022-02-23T03:38:33.794Z     561M used)
Progress update: steps=7000, test inputs generated=2925, failing inputs=0      (2022-02-23T03:38:35.396Z     683M used)
Progress update: steps=8000, test inputs generated=3338, failing inputs=0      (2022-02-23T03:38:36.872Z     544M used)
Progress update: steps=9000, test inputs generated=3755, failing inputs=0      (2022-02-23T03:38:38.594Z     561M used)
Progress update: steps=10000, test inputs generated=4142, failing inputs=0      (2022-02-23T03:38:41.031Z     825M used)
Progress update: steps=11000, test inputs generated=4540, failing inputs=0      (2022-02-23T03:38:43.523Z     1.21G used)
Progress update: steps=12000, test inputs generated=4946, failing inputs=0      (2022-02-23T03:38:46.296Z     162M used)
Progress update: steps=13000, test inputs generated=5355, failing inputs=0      (2022-02-23T03:38:49.043Z     490M used)
Progress update: steps=14000, test inputs generated=5778, failing inputs=0      (2022-02-23T03:38:52.507Z     1.31G used)
Progress update: steps=15000, test inputs generated=6191, failing inputs=0      (2022-02-23T03:38:55.059Z     300M used)
Progress update: steps=16000, test inputs generated=6598, failing inputs=0      (2022-02-23T03:38:57.688Z     625M used)
Progress update: steps=17000, test inputs generated=7039, failing inputs=0      (2022-02-23T03:39:00.936Z     1.33G used)
Progress update: steps=18000, test inputs generated=7486, failing inputs=0      (2022-02-23T03:39:04.251Z     572M used)
Progress update: steps=19000, test inputs generated=7904, failing inputs=0      (2022-02-23T03:39:07.936Z     1.25G used)
Progress update: steps=20000, test inputs generated=8298, failing inputs=0      (2022-02-23T03:39:12.095Z     1.01G used)
Progress update: steps=21000, test inputs generated=8718, failing inputs=0      (2022-02-23T03:39:16.391Z     765M used)
Progress update: steps=22000, test inputs generated=9134, failing inputs=0      (2022-02-23T03:39:22.278Z     1.34G used)
Progress update: steps=22747, test inputs generated=9433, failing inputs=0      (2022-02-23T03:39:26.868Z     891M used)
Progress update: steps=23000, test inputs generated=9532, failing inputs=0      (2022-02-23T03:39:27.905Z     1.39G used)
Progress update: steps=24000, test inputs generated=9935, failing inputs=0      (2022-02-23T03:39:34.142Z     363M used)
Progress update: steps=25000, test inputs generated=10343, failing inputs=0      (2022-02-23T03:39:39.740Z     500M used)
Progress update: steps=26000, test inputs generated=10740, failing inputs=0      (2022-02-23T03:39:45.984Z     747M used)
Progress update: steps=27000, test inputs generated=11138, failing inputs=0      (2022-02-23T03:39:50.863Z     558M used)
Progress update: steps=28000, test inputs generated=11559, failing inputs=0      (2022-02-23T03:39:57.748Z     1.22G used)
Progress update: steps=29000, test inputs generated=11965, failing inputs=0      (2022-02-23T03:40:04.630Z     478M used)
Progress update: steps=30000, test inputs generated=12358, failing inputs=0      (2022-02-23T03:40:12.067Z     893M used)
Progress update: steps=31000, test inputs generated=12769, failing inputs=0      (2022-02-23T03:40:19.385Z     343M used)
Progress update: steps=31769, test inputs generated=13082, failing inputs=0      (2022-02-23T03:40:26.869Z     878M used)
Progress update: steps=32000, test inputs generated=13178, failing inputs=0      (2022-02-23T03:40:29.032Z     372M used)
Progress update: steps=33000, test inputs generated=13583, failing inputs=0      (2022-02-23T03:40:36.566Z     1.15G used)
Progress update: steps=34000, test inputs generated=14002, failing inputs=0      (2022-02-23T03:40:45.762Z     844M used)
Progress update: steps=35000, test inputs generated=14398, failing inputs=0      (2022-02-23T03:40:53.548Z     1.32G used)
Progress update: steps=36000, test inputs generated=14820, failing inputs=0      (2022-02-23T03:41:04.726Z     1.43G used)
Progress update: steps=37000, test inputs generated=15237, failing inputs=0      (2022-02-23T03:41:17.574Z     340M used)
Progress update: steps=38000, test inputs generated=15645, failing inputs=0      (2022-02-23T03:41:24.313Z     718M used)
Progress update: steps=38278, test inputs generated=15757, failing inputs=0      (2022-02-23T03:41:26.869Z     548M used)
Progress update: steps=39000, test inputs generated=16040, failing inputs=0      (2022-02-23T03:41:35.162Z     905M used)
Progress update: steps=40000, test inputs generated=16445, failing inputs=0      (2022-02-23T03:41:44.693Z     769M used)Long generation time 1101 msec for null sequence.

Progress update: steps=41000, test inputs generated=16829, failing inputs=0      (2022-02-23T03:41:58.045Z     282M used)
Progress update: steps=42000, test inputs generated=17269, failing inputs=0      (2022-02-23T03:42:09.672Z     1.07G used)
Progress update: steps=43000, test inputs generated=17674, failing inputs=0      (2022-02-23T03:42:22.579Z     991M used)
Progress update: steps=43377, test inputs generated=17830, failing inputs=0      (2022-02-23T03:42:26.870Z     1.15G used)
Progress update: steps=44000, test inputs generated=18087, failing inputs=0      (2022-02-23T03:42:33.027Z     835M used)Long generation time 1392 msec for null sequence.

Progress update: steps=45000, test inputs generated=18508, failing inputs=0      (2022-02-23T03:42:44.358Z     525M used)Long generation time 1808 msec for null sequence.

Progress update: steps=46000, test inputs generated=18911, failing inputs=0      (2022-02-23T03:43:01.470Z     321M used)
Progress update: steps=47000, test inputs generated=19310, failing inputs=0      (2022-02-23T03:43:12.657Z     475M used)
Progress update: steps=48000, test inputs generated=19721, failing inputs=0      (2022-02-23T03:43:23.734Z     946M used)
Progress update: steps=48225, test inputs generated=19815, failing inputs=0      (2022-02-23T03:43:26.870Z     681M used)Long generation time 1435 msec for null sequence.

Progress update: steps=49000, test inputs generated=20117, failing inputs=0      (2022-02-23T03:43:38.431Z     642M used)Long generation time 2172 msec for null sequence.

Progress update: steps=50000, test inputs generated=20533, failing inputs=0      (2022-02-23T03:43:51.080Z     946M used)Long generation time 1830 msec for null sequence.

Progress update: steps=51000, test inputs generated=20956, failing inputs=0      (2022-02-23T03:44:07.621Z     1.18G used)Long generation time 1074 msec for null sequence.

Progress update: steps=52000, test inputs generated=21363, failing inputs=0      (2022-02-23T03:44:22.365Z     1.07G used)
Progress update: steps=52262, test inputs generated=21467, failing inputs=0      (2022-02-23T03:44:26.871Z     491M used)
Progress update: steps=53000, test inputs generated=21769, failing inputs=0      (2022-02-23T03:44:39.732Z     599M used)Long generation time 1292 msec for null sequence.

Progress update: steps=54000, test inputs generated=22186, failing inputs=0      (2022-02-23T03:44:58.026Z     240M used)Long generation time 1221 msec for null sequence.

Progress update: steps=55000, test inputs generated=22580, failing inputs=0      (2022-02-23T03:45:14.384Z     781M used)Long generation time 2076 msec for null sequence.
Long generation time 1833 msec for null sequence.

Progress update: steps=55574, test inputs generated=22816, failing inputs=0      (2022-02-23T03:45:26.871Z     524M used)Long generation time 2347 msec for null sequence.

Progress update: steps=56000, test inputs generated=22989, failing inputs=0      (2022-02-23T03:45:37.123Z     347M used)
Progress update: steps=57000, test inputs generated=23410, failing inputs=0      (2022-02-23T03:45:54.976Z     187M used)
Progress update: steps=58000, test inputs generated=23807, failing inputs=0      (2022-02-23T03:46:10.955Z     787M used)Long generation time 1568 msec for null sequence.

Progress update: steps=58997, test inputs generated=24212, failing inputs=0      (2022-02-23T03:46:26.872Z     355M used)
Progress update: steps=59000, test inputs generated=24214, failing inputs=0      (2022-02-23T03:46:27.024Z     355M used)Long generation time 1247 msec for null sequence.
Long generation time 1114 msec (= 1114 + 0) for
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList11 = com.google.common.collect.ImmutableList.of((java.io.Serializable)10.0f, (java.io.Serializable)"", (java.io.Serializable)(-1L), (java.io.Serializable)'a', (java.io.Serializable)(short)1, (java.io.Serializable)1, (java.io.Serializable)false, (java.io.Serializable)1.0d, (java.io.Serializable)0L, (java.io.Serializable)100.0f, (java.io.Serializable)(short)0);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList12 = serializableList11.reverse();
boolean boolean13 = serializableList12.isEmpty();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList14 = serializableList12.asList();
int int15 = serializableList12.size();
java.lang.String str16 = serializableList12.toString();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList28 = com.google.common.collect.ImmutableList.of((java.io.Serializable)10.0f, (java.io.Serializable)"", (java.io.Serializable)(-1L), (java.io.Serializable)'a', (java.io.Serializable)(short)1, (java.io.Serializable)1, (java.io.Serializable)false, (java.io.Serializable)1.0d, (java.io.Serializable)0L, (java.io.Serializable)100.0f, (java.io.Serializable)(short)0);
java.lang.String str29 = serializableList28.toString();
java.util.ListIterator<java.io.Serializable> serializableItor30 = serializableList28.listIterator();
com.google.common.collect.UnmodifiableIterator<java.io.Serializable> serializableItor31 = serializableList28.iterator();
java.util.Spliterator<java.io.Serializable> serializableSpliterator32 = serializableList28.spliterator();
java.lang.Object[] objArray33 = serializableList28.toArray();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList45 = com.google.common.collect.ImmutableList.of((java.io.Serializable)10.0f, (java.io.Serializable)"", (java.io.Serializable)(-1L), (java.io.Serializable)'a', (java.io.Serializable)(short)1, (java.io.Serializable)1, (java.io.Serializable)false, (java.io.Serializable)1.0d, (java.io.Serializable)0L, (java.io.Serializable)100.0f, (java.io.Serializable)(short)0);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList46 = serializableList45.reverse();
com.google.common.collect.ImmutableList<java.lang.Throwable> throwableList47 = com.google.common.collect.ImmutableList.copyOf((java.lang.Iterable<java.io.Serializable>)serializableList46);
com.google.common.collect.UnmodifiableIterator<java.io.Serializable> serializableItor48 = serializableList46.iterator();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList49 = serializableList46.reverse();
boolean boolean51 = serializableList46.equals((java.lang.Object)100);
java.lang.Object[] objArray52 = serializableList46.toArray();
java.util.Spliterator<java.io.Serializable> serializableSpliterator53 = serializableList46.spliterator();
boolean boolean54 = serializableList28.containsAll((java.util.Collection<java.io.Serializable>)serializableList46);
java.util.Spliterator<java.io.Serializable> serializableSpliterator55 = serializableList46.spliterator();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList56 = serializableList46.asList();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList68 = com.google.common.collect.ImmutableList.of((java.io.Serializable)10.0f, (java.io.Serializable)"", (java.io.Serializable)(-1L), (java.io.Serializable)'a', (java.io.Serializable)(short)1, (java.io.Serializable)1, (java.io.Serializable)false, (java.io.Serializable)1.0d, (java.io.Serializable)0L, (java.io.Serializable)100.0f, (java.io.Serializable)(short)0);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList69 = serializableList68.reverse();
com.google.common.collect.ImmutableList<java.lang.Throwable> throwableList70 = com.google.common.collect.ImmutableList.copyOf((java.lang.Iterable<java.io.Serializable>)serializableList69);
com.google.common.collect.UnmodifiableIterator<java.io.Serializable> serializableItor71 = serializableList69.iterator();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList72 = serializableList69.reverse();
java.util.stream.Stream<java.io.Serializable> serializableStream73 = serializableList72.stream();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList76 = serializableList72.subList(4, (int)(byte)10);
boolean boolean77 = serializableList56.containsAll((java.util.Collection<java.io.Serializable>)serializableList72);
com.google.javascript.rhino.JSDocInfo jSDocInfo78 = new com.google.javascript.rhino.JSDocInfo();
java.util.Collection<com.google.javascript.rhino.JSDocInfo.Marker> markerCollection79 = jSDocInfo78.getMarkers();
boolean boolean80 = jSDocInfo78.hasTypedefType();
java.lang.String str81 = jSDocInfo78.getDescription();
java.lang.String str82 = jSDocInfo78.getDescription();
int int83 = jSDocInfo78.getImplementedInterfaceCount();
int int84 = jSDocInfo78.getParameterCount();
java.util.Collection<java.lang.String> strCollection85 = jSDocInfo78.getReferences();
boolean boolean86 = serializableList56.contains((java.lang.Object)strCollection85);
boolean boolean87 = serializableList12.removeAll((java.util.Collection<java.io.Serializable>)serializableList56);


Progress update: steps=60000, test inputs generated=24609, failing inputs=0      (2022-02-23T03:46:46.778Z     428M used)Long generation time 1724 msec for null sequence.
Long generation time 1127 msec for null sequence.
Long generation time 2491 msec for null sequence.

Progress update: steps=61000, test inputs generated=25016, failing inputs=0      (2022-02-23T03:47:12.211Z     1.03G used)Long generation time 2825 msec for null sequence.

Progress update: steps=61766, test inputs generated=25333, failing inputs=0      (2022-02-23T03:47:26.873Z     475M used)Long generation time 1246 msec for null sequence.

Progress update: steps=62000, test inputs generated=25423, failing inputs=0      (2022-02-23T03:47:31.172Z     876M used)Long generation time 1048 msec for null sequence.
Long generation time 1042 msec (= 1042 + 0) for
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList11 = com.google.common.collect.ImmutableList.of((java.io.Serializable)10.0f, (java.io.Serializable)"", (java.io.Serializable)(-1L), (java.io.Serializable)'a', (java.io.Serializable)(short)1, (java.io.Serializable)1, (java.io.Serializable)false, (java.io.Serializable)1.0d, (java.io.Serializable)0L, (java.io.Serializable)100.0f, (java.io.Serializable)(short)0);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList12 = serializableList11.reverse();
boolean boolean13 = serializableList12.isEmpty();
com.google.javascript.rhino.JSDocInfo jSDocInfo14 = new com.google.javascript.rhino.JSDocInfo();
com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(16, "[10.0, , -1, a, 1, 1, false, 1.0, 0, 100.0, 0]", (int)(short)100, 29);
node19.setLineno(31);
jSDocInfo14.setAssociatedNode(node19);
boolean boolean23 = serializableList12.contains((java.lang.Object)jSDocInfo14);
com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString((int)(byte)100, "java.io.IOException: hi!", (int)'4', (int)(short)10);
boolean boolean29 = serializableList12.contains((java.lang.Object)node28);
java.io.Serializable serializable31 = serializableList12.get(4);
com.google.common.collect.UnmodifiableIterator<java.io.Serializable> serializableItor32 = serializableList12.iterator();
java.util.Spliterator<java.io.Serializable> serializableSpliterator33 = serializableList12.spliterator();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList45 = com.google.common.collect.ImmutableList.of((java.io.Serializable)10.0f, (java.io.Serializable)"", (java.io.Serializable)(-1L), (java.io.Serializable)'a', (java.io.Serializable)(short)1, (java.io.Serializable)1, (java.io.Serializable)false, (java.io.Serializable)1.0d, (java.io.Serializable)0L, (java.io.Serializable)100.0f, (java.io.Serializable)(short)0);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList46 = serializableList45.reverse();
com.google.common.collect.ImmutableList<java.lang.Throwable> throwableList47 = com.google.common.collect.ImmutableList.copyOf((java.lang.Iterable<java.io.Serializable>)serializableList46);
com.google.common.collect.UnmodifiableIterator<java.io.Serializable> serializableItor48 = serializableList46.iterator();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList49 = serializableList46.reverse();
com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString(16, "[10.0, , -1, a, 1, 1, false, 1.0, 0, 100.0, 0]", (int)(short)100, 29);
boolean boolean55 = node54.isNumber();
com.google.javascript.rhino.Node node60 = com.google.javascript.rhino.Node.newString(16, "[10.0, , -1, a, 1, 1, false, 1.0, 0, 100.0, 0]", (int)(short)100, 29);
com.google.javascript.rhino.jstype.TernaryValue ternaryValue62 = com.google.javascript.rhino.jstype.TernaryValue.FALSE;
com.google.javascript.rhino.jstype.TernaryValue ternaryValue63 = com.google.javascript.rhino.jstype.TernaryValue.FALSE;
com.google.javascript.rhino.jstype.TernaryValue ternaryValue64 = ternaryValue62.and(ternaryValue63);
node60.putProp(0, (java.lang.Object)ternaryValue64);
boolean boolean66 = node54.isEquivalentTo(node60);
com.google.javascript.rhino.Node.AncestorIterable ancestorIterable67 = node54.getAncestors();
int int68 = serializableList46.lastIndexOf((java.lang.Object)node54);
int int70 = serializableList46.indexOf((java.lang.Object)44);
com.google.common.collect.UnmodifiableIterator<java.io.Serializable> serializableItor71 = serializableList46.iterator();
java.util.Iterator<java.io.Serializable> serializableItor72 = serializableList46.iterator();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList73 = serializableList46.reverse();
boolean boolean74 = serializableList12.removeAll((java.util.Collection<java.io.Serializable>)serializableList46);

Long generation time 1283 msec for null sequence.
Long generation time 2415 msec for null sequence.

Progress update: steps=63000, test inputs generated=25830, failing inputs=0      (2022-02-23T03:47:52.893Z     191M used)Long generation time 2556 msec for null sequence.
Long generation time 1523 msec (= 1523 + 0) for
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList11 = com.google.common.collect.ImmutableList.of((java.io.Serializable)10.0f, (java.io.Serializable)"", (java.io.Serializable)(-1L), (java.io.Serializable)'a', (java.io.Serializable)(short)1, (java.io.Serializable)1, (java.io.Serializable)false, (java.io.Serializable)1.0d, (java.io.Serializable)0L, (java.io.Serializable)100.0f, (java.io.Serializable)(short)0);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList12 = serializableList11.reverse();
java.util.ListIterator<java.io.Serializable> serializableItor13 = serializableList11.listIterator();
com.google.common.collect.UnmodifiableIterator<java.io.Serializable> serializableItor14 = serializableList11.iterator();
java.util.Iterator<java.io.Serializable> serializableItor15 = serializableList11.iterator();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList16 = serializableList11.reverse();
com.google.javascript.rhino.JSDocInfo jSDocInfo17 = new com.google.javascript.rhino.JSDocInfo();
java.util.Set<java.lang.String> strSet18 = jSDocInfo17.getModifies();
java.util.Set<java.lang.String> strSet19 = jSDocInfo17.getSuppressions();
com.google.javascript.rhino.JSDocInfo jSDocInfo20 = new com.google.javascript.rhino.JSDocInfo();
java.util.Set<java.lang.String> strSet21 = jSDocInfo20.getModifies();
java.util.Set<java.lang.String> strSet22 = jSDocInfo20.getSuppressions();
java.lang.Object[] objArray23 = strSet22.toArray();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList35 = com.google.common.collect.ImmutableList.of((java.io.Serializable)10.0f, (java.io.Serializable)"", (java.io.Serializable)(-1L), (java.io.Serializable)'a', (java.io.Serializable)(short)1, (java.io.Serializable)1, (java.io.Serializable)false, (java.io.Serializable)1.0d, (java.io.Serializable)0L, (java.io.Serializable)100.0f, (java.io.Serializable)(short)0);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList36 = serializableList35.reverse();
java.util.ListIterator<java.io.Serializable> serializableItor37 = serializableList35.listIterator();
boolean boolean38 = strSet22.equals((java.lang.Object)serializableList35);
boolean boolean39 = strSet19.retainAll((java.util.Collection<java.io.Serializable>)serializableList35);
com.google.common.collect.ImmutableList<java.lang.Throwable> throwableList40 = com.google.common.collect.ImmutableList.copyOf((java.util.Collection<java.io.Serializable>)serializableList35);
boolean boolean41 = serializableList11.containsAll((java.util.Collection<java.io.Serializable>)serializableList35);
com.google.common.collect.UnmodifiableListIterator<java.io.Serializable> serializableItor42 = serializableList35.listIterator();
java.util.Iterator<java.io.Serializable> serializableItor43 = serializableList35.iterator();
java.io.Serializable serializable45 = serializableList35.get((int)(byte)1);
java.lang.String str46 = serializableList35.toString();
boolean boolean47 = serializableList35.isEmpty();
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList59 = com.google.common.collect.ImmutableList.of((java.io.Serializable)10.0f, (java.io.Serializable)"", (java.io.Serializable)(-1L), (java.io.Serializable)'a', (java.io.Serializable)(short)1, (java.io.Serializable)1, (java.io.Serializable)false, (java.io.Serializable)1.0d, (java.io.Serializable)0L, (java.io.Serializable)100.0f, (java.io.Serializable)(short)0);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList60 = serializableList59.reverse();
com.google.common.collect.ImmutableList<java.lang.Throwable> throwableList61 = com.google.common.collect.ImmutableList.copyOf((java.lang.Iterable<java.io.Serializable>)serializableList60);
java.util.Iterator<java.io.Serializable> serializableItor62 = serializableList60.iterator();
int int63 = serializableList60.size();
boolean boolean64 = serializableList35.removeAll((java.util.Collection<java.io.Serializable>)serializableList60);


Progress update: steps=64000, test inputs generated=26239, failing inputs=0      (2022-02-23T03:48:17.656Z     194M used)Long generation time 1066 msec for null sequence.

Progress update: steps=64477, test inputs generated=26424, failing inputs=0      (2022-02-23T03:48:26.873Z     682M used)
Progress update: steps=64477, test inputs generated=26425, failing inputs=0      (2022-02-23T03:48:27.563Z     127M used)
Normal method executions: 11201426
Exceptional method executions: 3473

Average method execution time (normal termination):      0.000257
Average method execution time (exceptional termination): 0.0484
Approximate memory usage 127M
Explorer = ForwardGenerator(steps: 64477, null steps: 38052, num_sequences_generated: 26425;
    allSequences: 26425, regresson seqs: 95, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 26330;
    runtimePrimitivesSeen:299)

No error-revealing tests to output.

About to look for failing assertions in 54 regression sequences.

Regression test output:
Regression test count: 54
Writing regression JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-16/RegressionTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-16/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Invalid tests generated: 0

Uncompilable sequences generated (count: 1).
Please report uncompilable sequences at https://github.com/randoop/randoop/issues ,
providing the information requested at https://randoop.github.io/randoop/manual/index.html#bug-reporting .
