Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".
Cannot instantiate non-accessible class org.mockito.asm.AnnotationWriter specified via --testclass or --classlist; will use its static methods.

Will try to generate tests for 12 classes.
PUBLIC MEMBERS=120
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-22T15:54:04.897Z     226M used)
Progress update: steps=1000, test inputs generated=613, failing inputs=0      (2022-02-22T15:54:12.776Z     377M used)
Progress update: steps=2000, test inputs generated=1393, failing inputs=0      (2022-02-22T15:54:21.568Z     1.11G used)
Progress update: steps=3000, test inputs generated=2164, failing inputs=0      (2022-02-22T15:54:30Z     1.96G used)
Progress update: steps=4000, test inputs generated=2935, failing inputs=0      (2022-02-22T15:54:38.419Z     1.78G used)
Progress update: steps=5000, test inputs generated=3703, failing inputs=0      (2022-02-22T15:54:47.154Z     1.77G used)
Progress update: steps=6000, test inputs generated=4460, failing inputs=0      (2022-02-22T15:54:55.259Z     1.77G used)
Progress update: steps=7000, test inputs generated=5188, failing inputs=0      (2022-02-22T15:55:04.151Z     1.74G used)
Progress update: steps=7088, test inputs generated=5259, failing inputs=0      (2022-02-22T15:55:04.910Z     2.11G used)
Progress update: steps=8000, test inputs generated=5949, failing inputs=0      (2022-02-22T15:55:12.301Z     1.92G used)
Progress update: steps=9000, test inputs generated=6708, failing inputs=0      (2022-02-22T15:55:21.714Z     2.21G used)
Progress update: steps=10000, test inputs generated=7430, failing inputs=0      (2022-02-22T15:55:31.700Z     989M used)
Progress update: steps=11000, test inputs generated=8153, failing inputs=0      (2022-02-22T15:55:41.500Z     1,000M used)Long generation time 1069 msec (= 1069 + 0) for
org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int)(byte)0);
org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int)'a');
int int11 = classWriter7.newField("L1738674023", "", "L1472682156");
classWriter7.visitEnd();
byte[] byteArray13 = classWriter7.toByteArray();
int int15 = classWriter7.newClass("java.io.IOException: ");
classWriter7.visitOuterClass("L1795800189", "L2091305222", "L1592493167");
int int24 = classWriter7.newMethod("hi!", "L1795800189", "L2082529410", false);
org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int)'a');
byte[] byteArray32 = classWriter31.toByteArray();
byte[] byteArray33 = classWriter31.toByteArray();
org.mockito.asm.AnnotationVisitor annotationVisitor36 = classWriter31.visitAnnotation("L203849460", false);
org.mockito.asm.ClassWriter classWriter43 = new org.mockito.asm.ClassWriter((int)'a');
int int47 = classWriter43.newField("L1738674023", "L203849460", "L1472682156");
java.lang.String[] strArray54 = new java.lang.String[] { "L203849460" };
classWriter43.visit(100, (int)(byte)10, "L1472682156", "L1738674023", "", strArray54);
classWriter31.visit((int)(short)-1, (int)(short)-1, "hi!", "L203849460", "L1738674023", strArray54);
classWriter7.visit((int)(byte)0, 1, "L1546925926", "L1472682156", "", strArray54);
org.mockito.asm.MethodVisitor methodVisitor58 = classWriter1.visitMethod(8, "L1054752209", "L1564238836", "L1562462670", strArray54);
methodVisitor58.visitCode();
methodVisitor58.visitLdcInsn((java.lang.Object)(-1L));
methodVisitor58.visitIntInsn((int)(byte)0, 65210);
methodVisitor58.visitMethodInsn(14, "L773828935", "L1637556511", "L2027439394");
methodVisitor58.visitVarInsn((int)(short)14645, 25);
org.mockito.asm.Label label74 = new org.mockito.asm.Label();
java.lang.String str75 = label74.toString();
org.mockito.asm.Label label76 = new org.mockito.asm.Label();
label74.info = label76;
label76.info = 7;
java.lang.Object obj80 = null;
label76.info = obj80;
java.lang.Object obj82 = label76.info;
java.lang.String str83 = label76.toString();
methodVisitor58.visitJumpInsn(37, label76);


Progress update: steps=12000, test inputs generated=8892, failing inputs=0      (2022-02-22T15:55:55.050Z     2.08G used)
Progress update: steps=12422, test inputs generated=9208, failing inputs=0      (2022-02-22T15:56:04.910Z     2.20G used)
Progress update: steps=13000, test inputs generated=9621, failing inputs=0      (2022-02-22T15:56:16.110Z     3.15G used)
Progress update: steps=14000, test inputs generated=10330, failing inputs=0      (2022-02-22T15:56:26.109Z     3.11G used)
Progress update: steps=15000, test inputs generated=11066, failing inputs=0      (2022-02-22T15:56:41.668Z     2.21G used)Long generation time 2475 msec (= 2474 + 0) for
org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int)'a');
int int5 = classWriter1.newField("L1738674023", "", "L1472682156");
org.mockito.asm.FieldVisitor fieldVisitor11 = classWriter1.visitField(1, "L203849460", "hi!", "hi!", (java.lang.Object)0.0f);
byte[] byteArray12 = classWriter1.toByteArray();
classWriter1.visitOuterClass("", "L2082529410", "L1054752209");
classWriter1.visitEnd();
classWriter1.visitEnd();
classWriter1.visitSource("L175718805", "L941442813");
classWriter1.visitEnd();
org.mockito.asm.ClassWriter classWriter29 = new org.mockito.asm.ClassWriter((int)(byte)0);
org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int)'a');
int int40 = classWriter36.newField("L1738674023", "L203849460", "L1472682156");
java.lang.String[] strArray47 = new java.lang.String[] { "L203849460" };
classWriter36.visit(100, (int)(byte)10, "L1472682156", "L1738674023", "", strArray47);
classWriter29.visit((int)(byte)0, 65210, "L1546925926", "L1738674023", "L1592493167", strArray47);
int int54 = classWriter29.newMethod("L295504976", "L1541186944", "L585275250", true);
classWriter29.visitOuterClass("L609549219", "L802972712", "L1474252020");
int int63 = classWriter29.newMethod("L773849391", "L1245569436", "L34606461", true);
org.mockito.asm.ClassWriter classWriter70 = new org.mockito.asm.ClassWriter((int)'a');
byte[] byteArray71 = classWriter70.toByteArray();
org.mockito.asm.ClassReader classReader72 = new org.mockito.asm.ClassReader(byteArray71);
int int74 = classReader72.readByte(6);
int int75 = classReader72.getAccess();
java.lang.String[] strArray76 = classReader72.getInterfaces();
classWriter29.visit(10, (int)(byte)100, "L1528209911", "L1645280524", "L1492603261", strArray76);
classWriter1.visit(54, 892614453, "L1548065078", "L544936427", "L600902330", strArray76);


Progress update: steps=16000, test inputs generated=11781, failing inputs=0      (2022-02-22T15:56:58.775Z     2.93G used)
Progress update: steps=16309, test inputs generated=12005, failing inputs=0      (2022-02-22T15:57:05.156Z     2.83G used)
Progress update: steps=17000, test inputs generated=12520, failing inputs=0      (2022-02-22T15:57:18.960Z     3.71G used)Long generation time 1551 msec (= 1551 + 0) for
org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
org.mockito.asm.ByteVector byteVector4 = byteVector2.putLong(100L);
org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt(26);
org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector(2);
org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1546925926");
org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long)2);
org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int)(short)-1);
org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L1837750981");
org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long)(short)256);
org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int)'a');
int int24 = classWriter20.newField("L1738674023", "", "L1472682156");
org.mockito.asm.FieldVisitor fieldVisitor30 = classWriter20.visitField(1, "L203849460", "hi!", "hi!", (java.lang.Object)0.0f);
byte[] byteArray31 = classWriter20.toByteArray();
classWriter20.visitOuterClass("", "L2082529410", "L1054752209");
classWriter20.visitOuterClass("L203849460", "L1700218213", "L1738674023");
int int41 = classWriter20.newConst((java.lang.Object)"L566171816");
byte[] byteArray42 = classWriter20.toByteArray();
org.mockito.asm.ByteVector byteVector45 = byteVector14.putByteArray(byteArray42, 22, (int)(short)1);
org.mockito.asm.ByteVector byteVector48 = byteVector4.putByteArray(byteArray42, 2309, (int)(short)100);

Long generation time 1660 msec (= 1660 + 0) for
org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
org.mockito.asm.ByteVector byteVector4 = byteVector2.putShort(0);
org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int)(short)-1);
byte[] byteArray7 = null;
org.mockito.asm.ByteVector byteVector10 = byteVector4.putByteArray(byteArray7, (int)(byte)-1, 18);
org.mockito.asm.ClassWriter classWriter12 = new org.mockito.asm.ClassWriter((int)'a');
byte[] byteArray13 = classWriter12.toByteArray();
org.mockito.asm.ClassReader classReader14 = new org.mockito.asm.ClassReader(byteArray13);
int int16 = classReader14.readByte(6);
java.lang.String str17 = classReader14.getSuperName();
short short19 = classReader14.readShort(11);
short short21 = classReader14.readShort((int)(byte)0);
byte[] byteArray22 = classReader14.b;
org.mockito.asm.ByteVector byteVector25 = byteVector4.putByteArray(byteArray22, (int)(short)1, 2);
org.mockito.asm.ClassWriter classWriter27 = new org.mockito.asm.ClassWriter((int)'a');
byte[] byteArray28 = classWriter27.toByteArray();
org.mockito.asm.ClassReader classReader29 = new org.mockito.asm.ClassReader(byteArray28);
int int31 = classReader29.readByte(6);
java.lang.String str32 = classReader29.getSuperName();
short short34 = classReader29.readShort(11);
short short36 = classReader29.readShort((int)(byte)0);
byte[] byteArray37 = classReader29.b;
org.mockito.asm.ByteVector byteVector40 = byteVector25.putByteArray(byteArray37, 14, 3);
org.mockito.asm.ByteVector byteVector42 = byteVector25.putUTF8("L41949445");
org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int)(short)100);
org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort(14);
org.mockito.asm.ByteVector byteVector48 = byteVector42.putUTF8("L462639084");
org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter((int)'a');
byte[] byteArray51 = classWriter50.toByteArray();
org.mockito.asm.ClassReader classReader52 = new org.mockito.asm.ClassReader(byteArray51);
org.mockito.asm.ClassReader classReader53 = new org.mockito.asm.ClassReader(byteArray51);
org.mockito.asm.ClassReader classReader56 = new org.mockito.asm.ClassReader(byteArray51, 4, (int)(short)1);
org.mockito.asm.ClassReader classReader57 = new org.mockito.asm.ClassReader(byteArray51);
java.lang.String[] strArray58 = classReader57.getInterfaces();
byte[] byteArray59 = classReader57.b;
org.mockito.asm.ByteVector byteVector62 = byteVector48.putByteArray(byteArray59, (int)(short)13825, 0);


Progress update: steps=18000, test inputs generated=13222, failing inputs=0      (2022-02-22T15:57:43.528Z     3.99G used)Long generation time 1141 msec (= 1141 + 0) for
org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int)'a');
byte[] byteArray2 = classWriter1.toByteArray();
byte[] byteArray3 = classWriter1.toByteArray();
int int7 = classWriter1.newField("L203849460", "hi!", "");
org.mockito.asm.ByteVector byteVector9 = new org.mockito.asm.ByteVector(2);
int int10 = classWriter1.newConst((java.lang.Object)2);
int int14 = classWriter1.newField("L14252273", "L831764867", "L1063121537");


Progress update: steps=19000, test inputs generated=13956, failing inputs=0      (2022-02-22T15:58:02.886Z     3.68G used)
Progress update: steps=19177, test inputs generated=14091, failing inputs=0      (2022-02-22T15:58:05.382Z     3.65G used)
Progress update: steps=20000, test inputs generated=14709, failing inputs=0      (2022-02-22T15:58:17.720Z     3.72G used)Long generation time 1133 msec (= 1133 + 0) for
org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int)'4');
org.mockito.asm.ByteVector byteVector3 = byteVector1.putInt(64);

Long generation time 1494 msec for null sequence.

Progress update: steps=21000, test inputs generated=15426, failing inputs=0      (2022-02-22T15:58:41.585Z     3.74G used)
Progress update: steps=22000, test inputs generated=16152, failing inputs=0      (2022-02-22T15:58:58.020Z     3.85G used)
Progress update: steps=22476, test inputs generated=16490, failing inputs=0      (2022-02-22T15:59:05.592Z     3.68G used)
Progress update: steps=23000, test inputs generated=16846, failing inputs=0      (2022-02-22T15:59:13.977Z     3.77G used)
Progress update: steps=24000, test inputs generated=17557, failing inputs=0      (2022-02-22T15:59:36.509Z     3.86G used)
Progress update: steps=25000, test inputs generated=18256, failing inputs=0      (2022-02-22T15:59:58.684Z     3.95G used)
Progress update: steps=25285, test inputs generated=18460, failing inputs=0      (2022-02-22T16:00:05.593Z     3.97G used)Long generation time 1597 msec for null sequence.

Progress update: steps=26000, test inputs generated=18930, failing inputs=0      (2022-02-22T16:00:37.886Z     4.06G used)
Progress update: steps=26072, test inputs generated=18934, failing inputs=0      (2022-02-22T16:01:05.665Z     4.06G used)
Progress update: steps=26232, test inputs generated=18938, failing inputs=0      (2022-02-22T16:02:06.950Z     4.06G used)
Progress update: steps=26377, test inputs generated=18940, failing inputs=0      (2022-02-22T16:03:07.105Z     4.06G used)
Progress update: steps=26510, test inputs generated=18945, failing inputs=0      (2022-02-22T16:04:05.192Z     4.06G used)
Normal method executions: 6584724
Exceptional method executions: 4904

Average method execution time (normal termination):      0.000523
Average method execution time (exceptional termination): 2.03
Approximate memory usage 4.06G
Explorer = ForwardGenerator(steps: 26510, null steps: 7565, num_sequences_generated: 18945;
    allSequences: 18945, regresson seqs: 16293, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 2652;
    runtimePrimitivesSeen:3877)

No error-revealing tests to output.

About to look for failing assertions in 9582 regression sequences.

Regression test output:
Regression test count: 9582
Writing regression JUnit tests...
                                                                                                                                                                                                       GenTests.writeTestFiles threw an exception
java.lang.OutOfMemoryError: GC overhead limit exceeded

Throwable thrown while handling command: java.lang.OutOfMemoryError: GC overhead limit exceeded
java.lang.OutOfMemoryError: GC overhead limit exceeded

Randoop failed.
Last sequence under execution: 
byte[] byteArray0 = new byte[] {  };
org.mockito.asm.ClassReader classReader3 = new org.mockito.asm.ClassReader(byteArray0, (int)(byte)-1, (int)(byte)1);
