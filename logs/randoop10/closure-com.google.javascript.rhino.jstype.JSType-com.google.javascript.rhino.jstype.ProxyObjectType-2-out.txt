Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".
Cannot instantiate non-accessible class com.google.javascript.rhino.jstype.PrototypeObjectType specified via --testclass or --classlist; will use its static methods.
Cannot instantiate non-accessible class com.google.javascript.rhino.jstype.ProxyObjectType specified via --testclass or --classlist; will use its static methods.

Will try to generate tests for 37 classes.
PUBLIC MEMBERS=958
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-23T03:36:36.072Z     355M used)
Progress update: steps=1000, test inputs generated=368, failing inputs=1      (2022-02-23T03:36:38.232Z     454M used)
Progress update: steps=2000, test inputs generated=826, failing inputs=1      (2022-02-23T03:36:39.707Z     723M used)
Progress update: steps=3000, test inputs generated=1280, failing inputs=1      (2022-02-23T03:36:40.645Z     750M used)
Progress update: steps=4000, test inputs generated=1709, failing inputs=1      (2022-02-23T03:36:41.698Z     645M used)
Progress update: steps=5000, test inputs generated=2142, failing inputs=1      (2022-02-23T03:36:43.029Z     477M used)
Progress update: steps=6000, test inputs generated=2571, failing inputs=1      (2022-02-23T03:36:44.140Z     216M used)
Progress update: steps=7000, test inputs generated=2987, failing inputs=1      (2022-02-23T03:36:45.336Z     1.16G used)
Progress update: steps=8000, test inputs generated=3434, failing inputs=1      (2022-02-23T03:36:46.758Z     988M used)
Progress update: steps=9000, test inputs generated=3854, failing inputs=1      (2022-02-23T03:36:48.017Z     749M used)
Progress update: steps=10000, test inputs generated=4265, failing inputs=1      (2022-02-23T03:36:49.621Z     376M used)
Progress update: steps=11000, test inputs generated=4715, failing inputs=1      (2022-02-23T03:36:51.025Z     1.18G used)
Progress update: steps=12000, test inputs generated=5126, failing inputs=1      (2022-02-23T03:36:52.813Z     811M used)
Progress update: steps=13000, test inputs generated=5555, failing inputs=1      (2022-02-23T03:36:54.938Z     706M used)
Progress update: steps=14000, test inputs generated=5972, failing inputs=1      (2022-02-23T03:36:56.989Z     300M used)
Progress update: steps=15000, test inputs generated=6387, failing inputs=1      (2022-02-23T03:36:59.167Z     165M used)
Progress update: steps=16000, test inputs generated=6817, failing inputs=1      (2022-02-23T03:37:01.468Z     1.11G used)
Progress update: steps=17000, test inputs generated=7254, failing inputs=1      (2022-02-23T03:37:03.921Z     767M used)
Progress update: steps=18000, test inputs generated=7685, failing inputs=2      (2022-02-23T03:37:06.615Z     436M used)
Progress update: steps=19000, test inputs generated=8112, failing inputs=2      (2022-02-23T03:37:09.423Z     249M used)
Progress update: steps=20000, test inputs generated=8543, failing inputs=2      (2022-02-23T03:37:12.116Z     1.33G used)
Progress update: steps=21000, test inputs generated=8955, failing inputs=2      (2022-02-23T03:37:14.936Z     1.09G used)
Progress update: steps=22000, test inputs generated=9390, failing inputs=2      (2022-02-23T03:37:17.823Z     1.03G used)
Progress update: steps=23000, test inputs generated=9813, failing inputs=2      (2022-02-23T03:37:20.966Z     954M used)
Progress update: steps=24000, test inputs generated=10232, failing inputs=2      (2022-02-23T03:37:24.366Z     933M used)
Progress update: steps=25000, test inputs generated=10654, failing inputs=2      (2022-02-23T03:37:28.117Z     792M used)
Progress update: steps=26000, test inputs generated=11058, failing inputs=2      (2022-02-23T03:37:31.547Z     522M used)
Progress update: steps=27000, test inputs generated=11506, failing inputs=2      (2022-02-23T03:37:34.819Z     443M used)
Progress update: steps=27388, test inputs generated=11663, failing inputs=2      (2022-02-23T03:37:36.095Z     892M used)
Progress update: steps=28000, test inputs generated=11915, failing inputs=2      (2022-02-23T03:37:38.244Z     226M used)
Progress update: steps=29000, test inputs generated=12317, failing inputs=2      (2022-02-23T03:37:42.752Z     118M used)
Progress update: steps=30000, test inputs generated=12749, failing inputs=2      (2022-02-23T03:37:46.265Z     1.31G used)
Progress update: steps=31000, test inputs generated=13159, failing inputs=2      (2022-02-23T03:37:50.441Z     995M used)
Progress update: steps=32000, test inputs generated=13584, failing inputs=2      (2022-02-23T03:37:56.014Z     1.01G used)
Progress update: steps=33000, test inputs generated=13995, failing inputs=2      (2022-02-23T03:38:01.853Z     1.18G used)
Progress update: steps=34000, test inputs generated=14395, failing inputs=2      (2022-02-23T03:38:06.465Z     989M used)
Progress update: steps=35000, test inputs generated=14811, failing inputs=2      (2022-02-23T03:38:11.685Z     856M used)
Progress update: steps=36000, test inputs generated=15230, failing inputs=2      (2022-02-23T03:38:16.925Z     858M used)
Progress update: steps=37000, test inputs generated=15660, failing inputs=2      (2022-02-23T03:38:22.744Z     723M used)
Progress update: steps=38000, test inputs generated=16087, failing inputs=2      (2022-02-23T03:38:27.284Z     505M used)
Progress update: steps=39000, test inputs generated=16522, failing inputs=2      (2022-02-23T03:38:33.615Z     289M used)
Progress update: steps=39493, test inputs generated=16730, failing inputs=2      (2022-02-23T03:38:36.095Z     952M used)
Progress update: steps=40000, test inputs generated=16938, failing inputs=2      (2022-02-23T03:38:38.771Z     261M used)
Progress update: steps=41000, test inputs generated=17353, failing inputs=2      (2022-02-23T03:38:45.927Z     70.5M used)
Progress update: steps=42000, test inputs generated=17782, failing inputs=2      (2022-02-23T03:38:54.350Z     1.31G used)
Progress update: steps=43000, test inputs generated=18194, failing inputs=2      (2022-02-23T03:39:02.355Z     1.14G used)
Progress update: steps=44000, test inputs generated=18603, failing inputs=2      (2022-02-23T03:39:10.443Z     1.26G used)
Progress update: steps=45000, test inputs generated=19014, failing inputs=2      (2022-02-23T03:39:18.702Z     327M used)
Progress update: steps=46000, test inputs generated=19435, failing inputs=2      (2022-02-23T03:39:26.795Z     386M used)
Progress update: steps=47000, test inputs generated=19859, failing inputs=2      (2022-02-23T03:39:34.718Z     466M used)
Progress update: steps=47235, test inputs generated=19963, failing inputs=2      (2022-02-23T03:39:36.096Z     715M used)
Progress update: steps=48000, test inputs generated=20257, failing inputs=2      (2022-02-23T03:39:45.125Z     794M used)
Progress update: steps=49000, test inputs generated=20678, failing inputs=2      (2022-02-23T03:39:54.659Z     150M used)
Progress update: steps=50000, test inputs generated=21088, failing inputs=2      (2022-02-23T03:40:04.961Z     637M used)
Progress update: steps=51000, test inputs generated=21492, failing inputs=2      (2022-02-23T03:40:14.592Z     68.9M used)
Progress update: steps=52000, test inputs generated=21908, failing inputs=2      (2022-02-23T03:40:25.744Z     667M used)
Progress update: steps=53000, test inputs generated=22338, failing inputs=2      (2022-02-23T03:40:36.075Z     407M used)
Progress update: steps=53019, test inputs generated=22344, failing inputs=2      (2022-02-23T03:40:36.096Z     427M used)
Progress update: steps=54000, test inputs generated=22739, failing inputs=2      (2022-02-23T03:40:47.860Z     216M used)
Progress update: steps=55000, test inputs generated=23143, failing inputs=2      (2022-02-23T03:41:00.468Z     701M used)Long generation time 1100 msec for null sequence.

Progress update: steps=56000, test inputs generated=23538, failing inputs=2      (2022-02-23T03:41:14.689Z     597M used)
Progress update: steps=57000, test inputs generated=23966, failing inputs=2      (2022-02-23T03:41:26.548Z     601M used)
Progress update: steps=57777, test inputs generated=24289, failing inputs=2      (2022-02-23T03:41:36.097Z     303M used)
Progress update: steps=58000, test inputs generated=24387, failing inputs=2      (2022-02-23T03:41:40.551Z     122M used)
Progress update: steps=59000, test inputs generated=24804, failing inputs=2      (2022-02-23T03:41:54.625Z     556M used)
Progress update: steps=60000, test inputs generated=25218, failing inputs=2      (2022-02-23T03:42:08.438Z     273M used)
Progress update: steps=61000, test inputs generated=25621, failing inputs=2      (2022-02-23T03:42:22.943Z     205M used)Long generation time 2374 msec for null sequence.

Progress update: steps=61791, test inputs generated=25964, failing inputs=2      (2022-02-23T03:42:36.098Z     330M used)
Progress update: steps=62000, test inputs generated=26040, failing inputs=2      (2022-02-23T03:42:38.296Z     70.3M used)
Progress update: steps=63000, test inputs generated=26439, failing inputs=2      (2022-02-23T03:42:51.205Z     88.9M used)
Progress update: steps=64000, test inputs generated=26806, failing inputs=2      (2022-02-23T03:43:06.305Z     484M used)
Progress update: steps=65000, test inputs generated=27205, failing inputs=2      (2022-02-23T03:43:18.523Z     150M used)
Progress update: steps=66000, test inputs generated=27608, failing inputs=2      (2022-02-23T03:43:32.498Z     258M used)
Progress update: steps=66307, test inputs generated=27714, failing inputs=2      (2022-02-23T03:43:36.098Z     188M used)
Progress update: steps=67000, test inputs generated=28004, failing inputs=2      (2022-02-23T03:43:46.141Z     118M used)Long generation time 1011 msec (= 1011 + 0) for
com.google.common.collect.ImmutableList<java.lang.Object> objList2 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
boolean boolean4 = objList2.contains((java.lang.Object)'4');
java.util.Iterator<java.lang.Object> objItor5 = objList2.iterator();
java.util.Spliterator<java.lang.Object> objSpliterator6 = objList2.spliterator();
java.lang.Object[] objArray7 = objList2.toArray();
boolean boolean8 = objList2.isEmpty();
com.google.common.collect.ImmutableList<java.lang.Object> objList9 = objList2.asList();
java.util.Spliterator<java.lang.Object> objSpliterator10 = objList2.spliterator();
java.util.stream.Stream<java.lang.Object> objStream11 = objList2.stream();
com.google.common.collect.ImmutableList<java.lang.Object> objList14 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray15 = objList14.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList18 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray19 = objList18.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList22 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray23 = objList22.toArray();
java.lang.Object[] objArray24 = objList22.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList27 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray28 = objList27.toArray();
int int30 = objList27.indexOf((java.lang.Object)100L);
com.google.common.collect.ImmutableList<java.lang.Object> objList33 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableCollection<java.lang.Object>> objCollectionList34 = com.google.common.collect.ImmutableList.of((com.google.common.collect.ImmutableCollection<java.lang.Object>)objList14, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList18, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList22, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList27, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList33);
com.google.common.collect.ImmutableList<java.lang.Object> objList35 = objList18.asList();
com.google.common.collect.ImmutableList<java.lang.Object> objList38 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray39 = objList38.toArray();
boolean boolean40 = objList18.containsAll((java.util.Collection<java.lang.Object>)objList38);
com.google.common.collect.ImmutableList<com.google.javascript.rhino.JSDocInfo.NamePosition> namePositionList41 = com.google.common.collect.ImmutableList.copyOf((java.util.Collection<java.lang.Object>)objList38);
com.google.javascript.rhino.JSDocInfo jSDocInfo42 = new com.google.javascript.rhino.JSDocInfo();
boolean boolean43 = jSDocInfo42.hasBaseType();
java.util.List<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList44 = jSDocInfo42.getExtendedInterfaces();
java.lang.String str45 = jSDocInfo42.getDeprecationReason();
java.util.Collection<java.lang.String> strCollection46 = jSDocInfo42.getAuthors();
boolean boolean47 = objList38.contains((java.lang.Object)jSDocInfo42);
boolean boolean48 = objList2.containsAll((java.util.Collection<java.lang.Object>)objList38);


Progress update: steps=68000, test inputs generated=28415, failing inputs=2      (2022-02-23T03:44:01.914Z     329M used)
Progress update: steps=69000, test inputs generated=28816, failing inputs=2      (2022-02-23T03:44:12.811Z     322M used)Long generation time 1004 msec (= 1004 + 0) for
com.google.common.collect.ImmutableList<java.lang.Object> objList2 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.common.collect.ImmutableList<java.lang.Object> objList5 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.javascript.rhino.Node node8 = com.google.javascript.rhino.Node.newString(32, "(hi!)");
boolean boolean9 = node8.isOnlyModifiesThisCall();
boolean boolean10 = node8.isDebugger();
com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString(32, "(hi!)");
com.google.javascript.rhino.jstype.JSType jSType14 = node13.getJSType();
com.google.javascript.rhino.Node node15 = node8.srcrefTree(node13);
boolean boolean16 = node15.isUnscopedQualifiedName();
boolean boolean17 = objList5.equals((java.lang.Object)node15);
java.util.Iterator<java.lang.Object> objItor18 = objList5.iterator();
com.google.common.collect.ImmutableList<java.lang.Throwable> throwableList19 = com.google.common.collect.ImmutableList.copyOf(objItor18);
com.google.common.collect.ImmutableList<java.lang.Object> objList22 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray23 = objList22.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList26 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray27 = objList26.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList30 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray31 = objList30.toArray();
java.lang.Object[] objArray32 = objList30.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList35 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray36 = objList35.toArray();
int int38 = objList35.indexOf((java.lang.Object)100L);
com.google.common.collect.ImmutableList<java.lang.Object> objList41 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableCollection<java.lang.Object>> objCollectionList42 = com.google.common.collect.ImmutableList.of((com.google.common.collect.ImmutableCollection<java.lang.Object>)objList22, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList26, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList30, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList35, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList41);
com.google.common.collect.ImmutableList<com.google.javascript.rhino.SourcePosition<com.google.javascript.rhino.Node>> nodeSourcePositionList43 = com.google.common.collect.ImmutableList.copyOf((java.lang.Iterable<java.lang.Object>)objList22);
com.google.common.collect.ImmutableList<java.util.RandomAccess> randomAccessList44 = com.google.common.collect.ImmutableList.of((java.util.RandomAccess)objList2, (java.util.RandomAccess)throwableList19, (java.util.RandomAccess)objList22);
java.util.stream.Stream<java.lang.Object> objStream45 = objList22.stream();
com.google.common.collect.ImmutableList<java.lang.Object> objList48 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray49 = objList48.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList52 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray53 = objList52.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList56 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray57 = objList56.toArray();
java.lang.Object[] objArray58 = objList56.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList61 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray62 = objList61.toArray();
int int64 = objList61.indexOf((java.lang.Object)100L);
com.google.common.collect.ImmutableList<java.lang.Object> objList67 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableCollection<java.lang.Object>> objCollectionList68 = com.google.common.collect.ImmutableList.of((com.google.common.collect.ImmutableCollection<java.lang.Object>)objList48, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList52, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList56, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList61, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList67);
boolean boolean69 = objList48.isEmpty();
com.google.common.collect.ImmutableList<java.lang.Object> objList72 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray73 = objList72.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList76 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray77 = objList76.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList80 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray81 = objList80.toArray();
java.lang.Object[] objArray82 = objList80.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList85 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray86 = objList85.toArray();
int int88 = objList85.indexOf((java.lang.Object)100L);
com.google.common.collect.ImmutableList<java.lang.Object> objList91 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableCollection<java.lang.Object>> objCollectionList92 = com.google.common.collect.ImmutableList.of((com.google.common.collect.ImmutableCollection<java.lang.Object>)objList72, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList76, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList80, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList85, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList91);
java.util.stream.Stream<java.lang.Object> objStream93 = objList72.parallelStream();
boolean boolean94 = objList48.containsAll((java.util.Collection<java.lang.Object>)objList72);
boolean boolean95 = objList22.addAll((java.util.Collection<java.lang.Object>)objList48);


Progress update: steps=70000, test inputs generated=29237, failing inputs=2      (2022-02-23T03:44:28.043Z     264M used)
Progress update: steps=70601, test inputs generated=29485, failing inputs=2      (2022-02-23T03:44:36.098Z     327M used)
Progress update: steps=71000, test inputs generated=29655, failing inputs=3      (2022-02-23T03:44:43.186Z     376M used)Long generation time 1055 msec for null sequence.

Progress update: steps=72000, test inputs generated=30051, failing inputs=3      (2022-02-23T03:45:00.556Z     247M used)
Progress update: steps=73000, test inputs generated=30442, failing inputs=3      (2022-02-23T03:45:23.339Z     238M used)
Progress update: steps=73774, test inputs generated=30753, failing inputs=3      (2022-02-23T03:45:36.099Z     198M used)
Progress update: steps=74000, test inputs generated=30845, failing inputs=3      (2022-02-23T03:45:38.004Z     267M used)
Progress update: steps=75000, test inputs generated=31238, failing inputs=3      (2022-02-23T03:45:56.533Z     136M used)
Progress update: steps=76000, test inputs generated=31640, failing inputs=3      (2022-02-23T03:46:13.172Z     220M used)Long generation time 1452 msec for null sequence.
Long generation time 1063 msec for null sequence.

Progress update: steps=77000, test inputs generated=32076, failing inputs=3      (2022-02-23T03:46:30.264Z     146M used)
Progress update: steps=77277, test inputs generated=32185, failing inputs=3      (2022-02-23T03:46:36.099Z     226M used)
Progress update: steps=77277, test inputs generated=32186, failing inputs=3      (2022-02-23T03:46:36.345Z     231M used)
Normal method executions: 22785921
Exceptional method executions: 4179

Average method execution time (normal termination):      0.000177
Average method execution time (exceptional termination): 0.0445
Approximate memory usage 231M
Explorer = ForwardGenerator(steps: 77277, null steps: 45091, num_sequences_generated: 32186;
    allSequences: 32186, regresson seqs: 671, error seqs: 3=3=3, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 31512;
    runtimePrimitivesSeen:328)

Error-revealing test output:
Error-revealing test count: 3
Writing error-revealing JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-2/ErrorTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-2/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 372 regression sequences.

Regression test output:
Regression test count: 372
Writing regression JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-2/RegressionTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-2/RegressionTest1.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-2/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Invalid tests generated: 0

Uncompilable sequences generated (count: 11).
Please report uncompilable sequences at https://github.com/randoop/randoop/issues ,
providing the information requested at https://randoop.github.io/randoop/manual/index.html#bug-reporting .
