Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".
Cannot instantiate non-accessible class com.google.javascript.rhino.head.ScriptableObject$Slot specified via --testclass or --classlist.

Will try to generate tests for 309 out of 310 classes.
PUBLIC MEMBERS=3596
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-21T09:53:55.598Z     505M used)
Progress update: steps=1000, test inputs generated=453, failing inputs=3      (2022-02-21T09:54:09.190Z     138M used)
Progress update: steps=2000, test inputs generated=1071, failing inputs=7      (2022-02-21T09:54:26.198Z     759M used)Long execution time 10 sec for
java.nio.ByteBuffer byteBuffer1 = java.nio.ByteBuffer.allocate(530000000);
java.nio.DoubleBuffer doubleBuffer2 = byteBuffer1.asDoubleBuffer();
float float4 = byteBuffer1.getFloat(1);


Progress update: steps=2487, test inputs generated=1398, failing inputs=7      (2022-02-21T09:54:55.612Z     2.22G used)Long execution time 17 sec for
java.nio.ByteBuffer byteBuffer1 = java.nio.ByteBuffer.allocate(530000000);
java.nio.DoubleBuffer doubleBuffer2 = byteBuffer1.asDoubleBuffer();
float float4 = byteBuffer1.getFloat(1);
java.nio.ByteOrder byteOrder5 = byteBuffer1.order();

Long generation time 1913 msec for null sequence.
Long generation time 1491 msec (= 1491 + 0) for
java.lang.CharSequence charSequence0 = null;
java.time.Period period1 = java.time.Period.parse(charSequence0);

Long generation time 1048 msec for null sequence.

Progress update: steps=2952, test inputs generated=1738, failing inputs=10      (2022-02-21T09:55:55.897Z     3.75G used)Long generation time 1252 msec (= 1251 + 0) for
java.io.PrintStream printStream1 = new java.io.PrintStream("+18:00");
java.io.PrintStream printStream3 = new java.io.PrintStream((java.io.OutputStream)printStream1, false);
java.io.PrintWriter printWriter4 = new java.io.PrintWriter((java.io.OutputStream)printStream1);
char[] charArray8 = new char[] { '.', '\uffff', '#' };
printWriter4.println(charArray8);
java.nio.CharBuffer charBuffer10 = java.nio.CharBuffer.wrap(charArray8);
java.nio.CharBuffer charBuffer12 = charBuffer10.put('.');


Progress update: steps=3000, test inputs generated=1775, failing inputs=10      (2022-02-21T09:55:58.422Z     3.83G used)
Progress update: steps=4000, test inputs generated=2497, failing inputs=15      (2022-02-21T09:56:39.836Z     3.95G used)Long generation time 1098 msec (= 1098 + 0) for
java.util.Properties properties0 = null;
java.util.Properties properties1 = new java.util.Properties(properties0);
java.io.PrintStream printStream3 = new java.io.PrintStream("+18:00");
java.io.PrintStream printStream5 = new java.io.PrintStream((java.io.OutputStream)printStream3, false);
printStream5.print((double)4);
properties1.storeToXML((java.io.OutputStream)printStream5, "PT0S");
printStream5.print((int)(short)-1);
java.time.ZoneId zoneId12 = java.time.ZoneId.systemDefault();
java.time.LocalDateTime localDateTime13 = java.time.LocalDateTime.now(zoneId12);
int int14 = localDateTime13.getNano();
java.time.Period period16 = java.time.Period.ofDays((int)' ');
boolean boolean18 = period16.equals((java.lang.Object)true);
java.time.chrono.Chronology chronology19 = period16.getChronology();
boolean boolean20 = localDateTime13.equals((java.lang.Object)chronology19);
int int21 = localDateTime13.getMinute();
java.time.LocalDateTime localDateTime23 = localDateTime13.plusYears((long)917000000);
printStream5.print((java.lang.Object)localDateTime13);
java.io.PrintStream printStream26 = printStream5.append((java.lang.CharSequence)"2022-02-21T09:54:29.7+18:00");

Long generation time 1310 msec for null sequence.

Progress update: steps=4231, test inputs generated=2660, failing inputs=16      (2022-02-21T09:56:56.006Z     4.02G used)
Progress update: steps=4520, test inputs generated=2710, failing inputs=16      (2022-02-21T09:57:56.280Z     4.01G used)Long generation time 1217 msec for null sequence.

Progress update: steps=4816, test inputs generated=2767, failing inputs=17      (2022-02-21T09:58:56.355Z     4.01G used)
Progress update: steps=5000, test inputs generated=2799, failing inputs=19      (2022-02-21T09:59:32.750Z     4.01G used)
Progress update: steps=5127, test inputs generated=2822, failing inputs=19      (2022-02-21T09:59:56.749Z     4.01G used)Long generation time 1179 msec for null sequence.

Progress update: steps=5435, test inputs generated=2894, failing inputs=21      (2022-02-21T10:00:56.928Z     4.01G used)
Progress update: steps=5817, test inputs generated=2959, failing inputs=21      (2022-02-21T10:01:57.538Z     4.01G used)
Progress update: steps=6000, test inputs generated=3000, failing inputs=23      (2022-02-21T10:02:25.582Z     4.01G used)
Progress update: steps=6202, test inputs generated=3036, failing inputs=23      (2022-02-21T10:02:57.791Z     4.01G used)
Progress update: steps=6576, test inputs generated=3095, failing inputs=24      (2022-02-21T10:03:55.631Z     4.01G used)
Normal method executions: 1605253
Exceptional method executions: 1106

Average method execution time (normal termination):      0.0356
Average method execution time (exceptional termination): 24.6
Approximate memory usage 4.01G
Explorer = ForwardGenerator(steps: 6576, null steps: 3481, num_sequences_generated: 3095;
    allSequences: 3095, regresson seqs: 2936, error seqs: 24=24=24, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 135;
    runtimePrimitivesSeen:533)

Error-revealing test output:
Error-revealing test count: 24
Writing error-revealing JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.head.ScriptRuntime-com.google.javascript.rhino.head.ScriptableObject-2/ErrorTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.head.ScriptRuntime-com.google.javascript.rhino.head.ScriptableObject-2/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 1938 regression sequences.

Regression test output:
Regression test count: 1938
Writing regression JUnit tests...
                                                                                                                                                                                                       