Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".
Cannot instantiate non-accessible class org.mockito.asm.AnnotationWriter specified via --testclass or --classlist; will use its static methods.

Will try to generate tests for 12 classes.
PUBLIC MEMBERS=120
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-22T15:54:05.054Z     226M used)
Progress update: steps=1000, test inputs generated=613, failing inputs=0      (2022-02-22T15:54:13.251Z     379M used)
Progress update: steps=2000, test inputs generated=1393, failing inputs=0      (2022-02-22T15:54:21.503Z     1.12G used)
Progress update: steps=3000, test inputs generated=2164, failing inputs=0      (2022-02-22T15:54:29.837Z     1.94G used)
Progress update: steps=4000, test inputs generated=2935, failing inputs=0      (2022-02-22T15:54:38.088Z     1.76G used)
Progress update: steps=5000, test inputs generated=3703, failing inputs=0      (2022-02-22T15:54:46.333Z     1.75G used)
Progress update: steps=6000, test inputs generated=4460, failing inputs=0      (2022-02-22T15:54:54.780Z     1.75G used)
Progress update: steps=7000, test inputs generated=5188, failing inputs=0      (2022-02-22T15:55:03.191Z     1.69G used)
Progress update: steps=7197, test inputs generated=5347, failing inputs=0      (2022-02-22T15:55:05.067Z     1.28G used)
Progress update: steps=8000, test inputs generated=5949, failing inputs=0      (2022-02-22T15:55:11.733Z     1.87G used)
Progress update: steps=9000, test inputs generated=6708, failing inputs=0      (2022-02-22T15:55:20.533Z     2.16G used)
Progress update: steps=10000, test inputs generated=7430, failing inputs=0      (2022-02-22T15:55:29.408Z     2.20G used)
Progress update: steps=11000, test inputs generated=8153, failing inputs=0      (2022-02-22T15:55:39.264Z     2.24G used)
Progress update: steps=12000, test inputs generated=8892, failing inputs=0      (2022-02-22T15:55:51.961Z     2.06G used)
Progress update: steps=12690, test inputs generated=9396, failing inputs=0      (2022-02-22T15:56:05.067Z     3.14G used)
Progress update: steps=13000, test inputs generated=9621, failing inputs=0      (2022-02-22T15:56:11.102Z     3.12G used)
Progress update: steps=14000, test inputs generated=10330, failing inputs=0      (2022-02-22T15:56:22.737Z     3.08G used)
Progress update: steps=15000, test inputs generated=11066, failing inputs=0      (2022-02-22T15:56:35.097Z     2.19G used)Long generation time 1223 msec for null sequence.

Progress update: steps=16000, test inputs generated=11781, failing inputs=0      (2022-02-22T15:56:50.024Z     3.84G used)
Progress update: steps=16899, test inputs generated=12449, failing inputs=0      (2022-02-22T15:57:05.068Z     3.70G used)
Progress update: steps=17000, test inputs generated=12520, failing inputs=0      (2022-02-22T15:57:06.549Z     3.70G used)Long generation time 1023 msec (= 1023 + 0) for
org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
org.mockito.asm.ByteVector byteVector4 = byteVector2.putLong(100L);
org.mockito.asm.ByteVector byteVector6 = byteVector4.putInt(26);
org.mockito.asm.ByteVector byteVector8 = new org.mockito.asm.ByteVector(2);
org.mockito.asm.ByteVector byteVector10 = byteVector8.putUTF8("L1546925926");
org.mockito.asm.ByteVector byteVector12 = byteVector8.putLong((long)2);
org.mockito.asm.ByteVector byteVector14 = byteVector12.putByte((int)(short)-1);
org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("L1837750981");
org.mockito.asm.ByteVector byteVector18 = byteVector14.putLong((long)(short)256);
org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int)'a');
int int24 = classWriter20.newField("L1738674023", "", "L1472682156");
org.mockito.asm.FieldVisitor fieldVisitor30 = classWriter20.visitField(1, "L203849460", "hi!", "hi!", (java.lang.Object)0.0f);
byte[] byteArray31 = classWriter20.toByteArray();
classWriter20.visitOuterClass("", "L2082529410", "L1054752209");
classWriter20.visitOuterClass("L203849460", "L1700218213", "L1738674023");
int int41 = classWriter20.newConst((java.lang.Object)"L566171816");
byte[] byteArray42 = classWriter20.toByteArray();
org.mockito.asm.ByteVector byteVector45 = byteVector14.putByteArray(byteArray42, 22, (int)(short)1);
org.mockito.asm.ByteVector byteVector48 = byteVector4.putByteArray(byteArray42, 2309, (int)(short)100);

Long generation time 1312 msec (= 1312 + 0) for
org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
org.mockito.asm.ByteVector byteVector2 = byteVector0.putUTF8("hi!");
org.mockito.asm.ByteVector byteVector4 = byteVector2.putShort(0);
org.mockito.asm.ByteVector byteVector6 = byteVector4.putShort((int)(short)-1);
byte[] byteArray7 = null;
org.mockito.asm.ByteVector byteVector10 = byteVector4.putByteArray(byteArray7, (int)(byte)-1, 18);
org.mockito.asm.ClassWriter classWriter12 = new org.mockito.asm.ClassWriter((int)'a');
byte[] byteArray13 = classWriter12.toByteArray();
org.mockito.asm.ClassReader classReader14 = new org.mockito.asm.ClassReader(byteArray13);
int int16 = classReader14.readByte(6);
java.lang.String str17 = classReader14.getSuperName();
short short19 = classReader14.readShort(11);
short short21 = classReader14.readShort((int)(byte)0);
byte[] byteArray22 = classReader14.b;
org.mockito.asm.ByteVector byteVector25 = byteVector4.putByteArray(byteArray22, (int)(short)1, 2);
org.mockito.asm.ClassWriter classWriter27 = new org.mockito.asm.ClassWriter((int)'a');
byte[] byteArray28 = classWriter27.toByteArray();
org.mockito.asm.ClassReader classReader29 = new org.mockito.asm.ClassReader(byteArray28);
int int31 = classReader29.readByte(6);
java.lang.String str32 = classReader29.getSuperName();
short short34 = classReader29.readShort(11);
short short36 = classReader29.readShort((int)(byte)0);
byte[] byteArray37 = classReader29.b;
org.mockito.asm.ByteVector byteVector40 = byteVector25.putByteArray(byteArray37, 14, 3);
org.mockito.asm.ByteVector byteVector42 = byteVector25.putUTF8("L41949445");
org.mockito.asm.ByteVector byteVector44 = byteVector42.putInt((int)(short)100);
org.mockito.asm.ByteVector byteVector46 = byteVector42.putShort(14);
org.mockito.asm.ByteVector byteVector48 = byteVector42.putUTF8("L462639084");
org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter((int)'a');
byte[] byteArray51 = classWriter50.toByteArray();
org.mockito.asm.ClassReader classReader52 = new org.mockito.asm.ClassReader(byteArray51);
org.mockito.asm.ClassReader classReader53 = new org.mockito.asm.ClassReader(byteArray51);
org.mockito.asm.ClassReader classReader56 = new org.mockito.asm.ClassReader(byteArray51, 4, (int)(short)1);
org.mockito.asm.ClassReader classReader57 = new org.mockito.asm.ClassReader(byteArray51);
java.lang.String[] strArray58 = classReader57.getInterfaces();
byte[] byteArray59 = classReader57.b;
org.mockito.asm.ByteVector byteVector62 = byteVector48.putByteArray(byteArray59, (int)(short)13825, 0);


Progress update: steps=18000, test inputs generated=13222, failing inputs=0      (2022-02-22T15:57:25.302Z     3.99G used)
Progress update: steps=19000, test inputs generated=13956, failing inputs=0      (2022-02-22T15:57:46.111Z     3.68G used)
Progress update: steps=20000, test inputs generated=14709, failing inputs=0      (2022-02-22T15:58:04.511Z     3.72G used)
Progress update: steps=20060, test inputs generated=14752, failing inputs=0      (2022-02-22T15:58:05.068Z     3.97G used)
Progress update: steps=21000, test inputs generated=15426, failing inputs=0      (2022-02-22T15:58:20.383Z     3.75G used)
Progress update: steps=22000, test inputs generated=16152, failing inputs=0      (2022-02-22T15:58:42.361Z     3.85G used)
Progress update: steps=23000, test inputs generated=16846, failing inputs=0      (2022-02-22T15:58:57.842Z     3.75G used)
Progress update: steps=23455, test inputs generated=17161, failing inputs=0      (2022-02-22T15:59:05.069Z     3.86G used)
Progress update: steps=24000, test inputs generated=17557, failing inputs=0      (2022-02-22T15:59:15.772Z     3.86G used)
Progress update: steps=25000, test inputs generated=18256, failing inputs=0      (2022-02-22T15:59:41.661Z     3.95G used)
Progress update: steps=25962, test inputs generated=18927, failing inputs=0      (2022-02-22T16:00:06.127Z     4.06G used)Long generation time 1215 msec for null sequence.

Progress update: steps=26000, test inputs generated=18930, failing inputs=0      (2022-02-22T16:00:19.493Z     4.06G used)
Progress update: steps=26125, test inputs generated=18935, failing inputs=0      (2022-02-22T16:01:06.459Z     4.06G used)
Progress update: steps=26280, test inputs generated=18939, failing inputs=0      (2022-02-22T16:02:06.872Z     4.06G used)
Progress update: steps=26421, test inputs generated=18943, failing inputs=0      (2022-02-22T16:03:07.370Z     4.06G used)
Progress update: steps=26552, test inputs generated=18945, failing inputs=0      (2022-02-22T16:04:05.525Z     4.06G used)
Normal method executions: 6584724
Exceptional method executions: 4904

Average method execution time (normal termination):      0.000397
Average method execution time (exceptional termination): 2.07
Approximate memory usage 4.06G
Explorer = ForwardGenerator(steps: 26552, null steps: 7607, num_sequences_generated: 18945;
    allSequences: 18945, regresson seqs: 16293, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 2652;
    runtimePrimitivesSeen:3877)

No error-revealing tests to output.

About to look for failing assertions in 9582 regression sequences.

Regression test output:
Regression test count: 9582
Writing regression JUnit tests...
                                                                                                                                                                                                       GenTests.writeTestFiles threw an exception
java.lang.OutOfMemoryError: GC overhead limit exceeded

Throwable thrown while handling command: java.lang.OutOfMemoryError: GC overhead limit exceeded
java.lang.OutOfMemoryError: GC overhead limit exceeded

Randoop failed.
Last sequence under execution: 
byte[] byteArray0 = new byte[] {  };
org.mockito.asm.ClassReader classReader3 = new org.mockito.asm.ClassReader(byteArray0, (int)(byte)-1, (int)(byte)1);
