Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".

Will try to generate tests for 31 classes.
PUBLIC MEMBERS=741
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-23T04:25:08.548Z     290M used)
Progress update: steps=1000, test inputs generated=561, failing inputs=0      (2022-02-23T04:25:13.470Z     632M used)
Progress update: steps=2000, test inputs generated=1354, failing inputs=0      (2022-02-23T04:25:19.805Z     107M used)
Progress update: steps=3000, test inputs generated=2244, failing inputs=0      (2022-02-23T04:25:26.673Z     849M used)
Progress update: steps=4000, test inputs generated=3117, failing inputs=1      (2022-02-23T04:25:34.158Z     886M used)
Progress update: steps=5000, test inputs generated=3953, failing inputs=1      (2022-02-23T04:25:42.614Z     735M used)
Progress update: steps=6000, test inputs generated=4805, failing inputs=1      (2022-02-23T04:25:52.323Z     906M used)
Progress update: steps=7000, test inputs generated=5665, failing inputs=2      (2022-02-23T04:26:04.081Z     421M used)
Progress update: steps=7501, test inputs generated=6074, failing inputs=3      (2022-02-23T04:26:08.564Z     1.39G used)
Progress update: steps=8000, test inputs generated=6482, failing inputs=3      (2022-02-23T04:26:13.641Z     1.26G used)
Progress update: steps=9000, test inputs generated=7322, failing inputs=3      (2022-02-23T04:26:22.261Z     863M used)
Progress update: steps=10000, test inputs generated=8141, failing inputs=4      (2022-02-23T04:26:33.643Z     699M used)
Progress update: steps=11000, test inputs generated=8967, failing inputs=4      (2022-02-23T04:26:44.855Z     897M used)
Progress update: steps=12000, test inputs generated=9792, failing inputs=4      (2022-02-23T04:26:57.948Z     1.28G used)
Progress update: steps=12604, test inputs generated=10306, failing inputs=5      (2022-02-23T04:27:08.564Z     179M used)
Progress update: steps=13000, test inputs generated=10634, failing inputs=5      (2022-02-23T04:27:15.806Z     198M used)
Progress update: steps=14000, test inputs generated=11468, failing inputs=7      (2022-02-23T04:27:30.151Z     1.30G used)
Progress update: steps=15000, test inputs generated=12273, failing inputs=9      (2022-02-23T04:27:45.630Z     1.16G used)
Progress update: steps=16000, test inputs generated=13072, failing inputs=9      (2022-02-23T04:27:59.562Z     893M used)
Progress update: steps=16682, test inputs generated=13626, failing inputs=9      (2022-02-23T04:28:08.565Z     1.09G used)
Progress update: steps=17000, test inputs generated=13869, failing inputs=9      (2022-02-23T04:28:14.050Z     841M used)
Progress update: steps=18000, test inputs generated=14673, failing inputs=9      (2022-02-23T04:28:30.983Z     1.33G used)
Progress update: steps=19000, test inputs generated=15468, failing inputs=10      (2022-02-23T04:28:50.308Z     1.07G used)
Progress update: steps=19965, test inputs generated=16245, failing inputs=10      (2022-02-23T04:29:08.565Z     1.08G used)
Progress update: steps=20000, test inputs generated=16267, failing inputs=10      (2022-02-23T04:29:08.878Z     1.21G used)
Progress update: steps=21000, test inputs generated=17077, failing inputs=11      (2022-02-23T04:29:30.153Z     228M used)
Progress update: steps=22000, test inputs generated=17890, failing inputs=11      (2022-02-23T04:29:46.125Z     1.05G used)
Progress update: steps=23000, test inputs generated=18692, failing inputs=12      (2022-02-23T04:30:07.274Z     237M used)
Progress update: steps=23038, test inputs generated=18724, failing inputs=12      (2022-02-23T04:30:08.566Z     761M used)
Progress update: steps=24000, test inputs generated=19487, failing inputs=12      (2022-02-23T04:30:28.830Z     569M used)Long generation time 1189 msec for null sequence.

Progress update: steps=25000, test inputs generated=20270, failing inputs=12      (2022-02-23T04:30:52.427Z     465M used)
Progress update: steps=25702, test inputs generated=20821, failing inputs=12      (2022-02-23T04:31:08.566Z     936M used)
Progress update: steps=26000, test inputs generated=21061, failing inputs=12      (2022-02-23T04:31:15.067Z     550M used)
Progress update: steps=27000, test inputs generated=21841, failing inputs=12      (2022-02-23T04:31:41.640Z     830M used)
Progress update: steps=28000, test inputs generated=22626, failing inputs=12      (2022-02-23T04:32:03.755Z     311M used)
Progress update: steps=28202, test inputs generated=22787, failing inputs=12      (2022-02-23T04:32:08.567Z     863M used)
Progress update: steps=29000, test inputs generated=23431, failing inputs=14      (2022-02-23T04:32:33.699Z     1.09G used)
Progress update: steps=30000, test inputs generated=24245, failing inputs=14      (2022-02-23T04:33:03.813Z     1.09G used)
Progress update: steps=30138, test inputs generated=24358, failing inputs=14      (2022-02-23T04:33:08.567Z     155M used)Long generation time 1156 msec for null sequence.

Progress update: steps=31000, test inputs generated=25048, failing inputs=14      (2022-02-23T04:33:33.125Z     680M used)
Progress update: steps=32000, test inputs generated=25824, failing inputs=14      (2022-02-23T04:34:05.567Z     328M used)
Progress update: steps=32131, test inputs generated=25931, failing inputs=14      (2022-02-23T04:34:08.568Z     1.29G used)Long generation time 2046 msec (= 2046 + 0) for
com.google.javascript.rhino.Node node1 = new com.google.javascript.rhino.Node(51);
int int2 = node1.getType();
boolean boolean3 = node1.hasOneChild();
com.google.javascript.rhino.Node node5 = new com.google.javascript.rhino.Node(51);
int int6 = node5.getType();
com.google.javascript.rhino.Node node7 = node1.useSourceInfoIfMissingFrom(node5);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList11 = com.google.common.collect.ImmutableList.of((java.io.Serializable)node5, (java.io.Serializable)' ', (java.io.Serializable)"hi!", (java.io.Serializable)"hi!");
com.google.javascript.rhino.JSDocInfoBuilder jSDocInfoBuilder13 = new com.google.javascript.rhino.JSDocInfoBuilder(true);
jSDocInfoBuilder13.markText("Node tree inequality:\nTree1:\nIN\n    IN\n\n\nTree2:\nIN\n\n\nSubtree1: IN\n    IN\n\n\nSubtree2: IN\n", (int)(byte)-1, 30, 47, 39);
boolean boolean20 = jSDocInfoBuilder13.isJavaDispatch();
boolean boolean21 = jSDocInfoBuilder13.recordDeprecated();
boolean boolean22 = serializableList11.contains((java.lang.Object)boolean21);
int int24 = serializableList11.lastIndexOf((java.lang.Object)"{proxy:{643473277}}");


Progress update: steps=33000, test inputs generated=26612, failing inputs=14      (2022-02-23T04:34:32.197Z     302M used)Long generation time 1176 msec for null sequence.
Long generation time 1275 msec (= 1275 + 0) for
com.google.javascript.rhino.JSDocInfoBuilder jSDocInfoBuilder1 = new com.google.javascript.rhino.JSDocInfoBuilder(true);
boolean boolean2 = jSDocInfoBuilder1.recordPreserveTry();
com.google.javascript.rhino.JSDocInfoBuilder jSDocInfoBuilder4 = new com.google.javascript.rhino.JSDocInfoBuilder(true);
boolean boolean5 = jSDocInfoBuilder4.recordPreserveTry();
com.google.javascript.rhino.JSTypeExpression jSTypeExpression6 = null;
boolean boolean7 = jSDocInfoBuilder4.recordDefineType(jSTypeExpression6);
boolean boolean9 = jSDocInfoBuilder4.hasParameter("IN\n");
boolean boolean10 = jSDocInfoBuilder4.shouldParseDocumentation();
java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet13, strArray12);
java.util.Spliterator<java.lang.String> strSpliterator15 = strSet13.spliterator();
java.lang.Object obj16 = null;
boolean boolean17 = strSet13.equals(obj16);
boolean boolean18 = jSDocInfoBuilder4.recordSuppressions((java.util.Set<java.lang.String>)strSet13);
boolean boolean19 = jSDocInfoBuilder1.recordSuppressions((java.util.Set<java.lang.String>)strSet13);
com.google.javascript.rhino.Node node21 = new com.google.javascript.rhino.Node(51);
int int22 = node21.getType();
boolean boolean23 = node21.hasOneChild();
com.google.javascript.rhino.Node node25 = new com.google.javascript.rhino.Node(51);
int int26 = node25.getType();
com.google.javascript.rhino.Node node27 = node21.useSourceInfoIfMissingFrom(node25);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList31 = com.google.common.collect.ImmutableList.of((java.io.Serializable)node25, (java.io.Serializable)' ', (java.io.Serializable)"hi!", (java.io.Serializable)"hi!");
com.google.javascript.rhino.Node node33 = new com.google.javascript.rhino.Node(51);
int int34 = node33.getType();
boolean boolean35 = node33.isNE();
com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node(51);
int int38 = node37.getSourcePosition();
com.google.javascript.rhino.Node node39 = node33.useSourceInfoIfMissingFromForTree(node37);
boolean boolean40 = serializableList31.contains((java.lang.Object)node37);
boolean boolean41 = strSet13.contains((java.lang.Object)serializableList31);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList42 = serializableList31.asList();
java.io.Serializable serializable44 = serializableList42.get(0);
com.google.common.collect.UnmodifiableListIterator<java.io.Serializable> serializableItor45 = serializableList42.listIterator();
com.google.javascript.rhino.Node node47 = new com.google.javascript.rhino.Node(51);
int int48 = node47.getType();
boolean boolean49 = node47.hasOneChild();
com.google.javascript.rhino.Node node51 = new com.google.javascript.rhino.Node(51);
int int52 = node51.getType();
com.google.javascript.rhino.Node node53 = node47.useSourceInfoIfMissingFrom(node51);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList57 = com.google.common.collect.ImmutableList.of((java.io.Serializable)node51, (java.io.Serializable)' ', (java.io.Serializable)"hi!", (java.io.Serializable)"hi!");
com.google.javascript.rhino.Node node59 = new com.google.javascript.rhino.Node(51);
int int60 = node59.getSourcePosition();
com.google.javascript.rhino.Node node62 = new com.google.javascript.rhino.Node(51);
int int63 = node62.getType();
boolean boolean64 = node62.hasOneChild();
com.google.javascript.rhino.Node node66 = new com.google.javascript.rhino.Node(51);
int int67 = node66.getType();
com.google.javascript.rhino.Node node68 = node62.useSourceInfoIfMissingFrom(node66);
node59.addChildrenToFront(node66);
boolean boolean70 = serializableList57.contains((java.lang.Object)node59);
boolean boolean71 = serializableList57.isEmpty();
java.lang.Object[] objArray72 = serializableList57.toArray();
java.util.stream.Stream<java.io.Serializable> serializableStream73 = serializableList57.parallelStream();
java.lang.Object[] objArray74 = serializableList57.toArray();
com.google.common.collect.UnmodifiableListIterator<java.io.Serializable> serializableItor75 = serializableList57.listIterator();
com.google.javascript.rhino.Node node77 = new com.google.javascript.rhino.Node(51);
int int78 = node77.getType();
boolean boolean79 = node77.hasOneChild();
com.google.javascript.rhino.Node node81 = new com.google.javascript.rhino.Node(51);
int int82 = node81.getType();
com.google.javascript.rhino.Node node83 = node77.useSourceInfoIfMissingFrom(node81);
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList87 = com.google.common.collect.ImmutableList.of((java.io.Serializable)node81, (java.io.Serializable)' ', (java.io.Serializable)"hi!", (java.io.Serializable)"hi!");
com.google.common.collect.ImmutableList<java.io.Serializable> serializableList88 = serializableList87.asList();
int int89 = serializableList87.size();
boolean boolean90 = serializableList57.containsAll((java.util.Collection<java.io.Serializable>)serializableList87);
boolean boolean91 = serializableList57.isEmpty();
boolean boolean92 = serializableList42.removeAll((java.util.Collection<java.io.Serializable>)serializableList57);


Progress update: steps=34000, test inputs generated=27407, failing inputs=15      (2022-02-23T04:35:06.847Z     1.24G used)
Progress update: steps=34056, test inputs generated=27453, failing inputs=15      (2022-02-23T04:35:08.567Z     252M used)
Normal method executions: 19036175
Exceptional method executions: 3795

Average method execution time (normal termination):      0.000315
Average method execution time (exceptional termination): 0.0710
Approximate memory usage 252M
Explorer = ForwardGenerator(steps: 34056, null steps: 6603, num_sequences_generated: 27453;
    allSequences: 27453, regresson seqs: 9168, error seqs: 15=15=15, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 18270;
    runtimePrimitivesSeen:5236)

Error-revealing test output:
                                                                                                                                                                                                       Error-revealing test count: 15
Writing error-revealing JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/ErrorTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 4821 regression sequences.

Regression test output:
Regression test count: 4821
Writing regression JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest1.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest2.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest3.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest4.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest5.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest6.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest7.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest8.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest9.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest10.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest11.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest12.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest13.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest14.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest15.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest16.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest17.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest18.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest19.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest20.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest21.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest22.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest23.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest24.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.JSDocInfoBuilder-com.google.javascript.rhino.JSDocInfo-17/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Flaky tests were generated. This means that your program contains
methods that are nondeterministic or depend on non-local state.
The following methods, in decreasing order of likelihood,
are the most likely to be the problem.
  Possibly flaky:  java.util.Set.toArray(com.google.javascript.rhino.SourcePosition<com.google.javascript.rhino.Node>[])
  Possibly flaky:  java.util.Collection.toArray(com.google.javascript.rhino.SourcePosition<com.google.javascript.rhino.Node>[])
  Possibly flaky:  com.google.javascript.rhino.jstype.JSTypeRegistry.resolveTypesInScope(com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>)
  Possibly flaky:  com.google.javascript.rhino.jstype.JSTypeRegistry.registerPropertyOnType(java.lang.String,com.google.javascript.rhino.jstype.JSType)
  Possibly flaky:  com.google.javascript.rhino.jstype.JSTypeRegistry.getType(com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>,java.lang.String,java.lang.String,int,int)
  Possibly flaky:  com.google.javascript.rhino.jstype.JSTypeRegistry.getNativeFunctionType(com.google.javascript.rhino.jstype.JSTypeNative)
  Possibly flaky:  com.google.javascript.rhino.jstype.JSTypeRegistry.createUnionType(com.google.javascript.rhino.jstype.JSTypeNative[])
  Possibly flaky:  com.google.javascript.rhino.jstype.JSTypeRegistry.createParametersWithVarArgs(com.google.javascript.rhino.jstype.JSType[])
  Possibly flaky:  com.google.javascript.rhino.jstype.JSTypeRegistry.createParameters(com.google.javascript.rhino.jstype.JSType[])
  Possibly flaky:  com.google.javascript.rhino.jstype.JSTypeRegistry.createOptionalParameters(com.google.javascript.rhino.jstype.JSType[])
To prevent the generation of flaky tests, see section 'Randoop generated flaky tests'
 at https://randoop.github.io/randoop/manual/#flaky-tests .


Invalid tests generated: 0

Uncompilable sequences generated (count: 537).
Please report uncompilable sequences at https://github.com/randoop/randoop/issues ,
providing the information requested at https://randoop.github.io/randoop/manual/index.html#bug-reporting .
