Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".

Will try to generate tests for 7 classes.
PUBLIC MEMBERS=107
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-11T09:22:37.631Z     193M used)
Progress update: steps=1000, test inputs generated=767, failing inputs=0      (2022-02-11T09:22:58.164Z     922M used)
Progress update: steps=1754, test inputs generated=1327, failing inputs=0      (2022-02-11T09:23:37.658Z     193M used)Long execution time 1371 sec for
org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
double[] doubleArray6 = new double[] { 35.0d, 1.0f, '4', (byte)-1 };
double double7 = org.apache.commons.math.stat.StatUtils.product(doubleArray6);
double[] doubleArray12 = new double[] { (byte)-1, 52.00000000000001d, 1.0f, 100.0d };
double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray12);
double double15 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray6, doubleArray12, (double)10.0f);
double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray6);
double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray6, (int)(short)1, (int)(short)0);
double double20 = tTestImpl0.t((double)1, doubleArray6);
org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
double[] doubleArray28 = new double[] { (byte)-1, 52.00000000000001d, 1.0f, 100.0d };
double double29 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
double double30 = tTestImpl22.t((double)1.0f, doubleArray28);
double[] doubleArray35 = new double[] { (byte)-1, 52.00000000000001d, 1.0f, 100.0d };
double double36 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray35);
double double39 = tTestImpl0.pairedT(doubleArray28, doubleArray35);
org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
double[] doubleArray47 = new double[] { (byte)-1, 52.00000000000001d, 1.0f, 100.0d };
double double48 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray47);
double double49 = tTestImpl41.t((double)1.0f, doubleArray47);
double[] doubleArray54 = new double[] { 35.0d, 1.0f, '4', (byte)-1 };
double double55 = org.apache.commons.math.stat.StatUtils.product(doubleArray54);
double[] doubleArray60 = new double[] { 35.0d, 1.0f, '4', (byte)-1 };
double double61 = org.apache.commons.math.stat.StatUtils.product(doubleArray60);
double[] doubleArray66 = new double[] { (byte)-1, 52.00000000000001d, 1.0f, 100.0d };
double double67 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray66);
double double69 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray60, doubleArray66, (double)10.0f);
double double70 = tTestImpl41.pairedT(doubleArray54, doubleArray60);
org.apache.commons.math.distribution.DistributionFactory distributionFactory71 = org.apache.commons.math.distribution.DistributionFactory.newInstance();
org.apache.commons.math.distribution.NormalDistribution normalDistribution72 = distributionFactory71.createNormalDistribution();
org.apache.commons.math.distribution.TDistribution tDistribution74 = distributionFactory71.createTDistribution(0.8538434429284575d);
double double75 = tDistribution74.getDegreesOfFreedom();
tTestImpl41.setDistribution(tDistribution74);
tDistribution74.setDegreesOfFreedom((double)1L);
tTestImpl0.setDistribution(tDistribution74);
double double81 = tDistribution74.inverseCumulativeProbability(3.585268863716878E-23d);


Progress update: steps=1754, test inputs generated=1328, failing inputs=0      (2022-02-11T09:46:02.498Z     220M used)
Normal method executions: 287496
Exceptional method executions: 694

Average method execution time (normal termination):      4.77
Average method execution time (exceptional termination): 0.0769
Approximate memory usage 220M
Explorer = ForwardGenerator(steps: 1754, null steps: 426, num_sequences_generated: 1328;
    allSequences: 1328, regresson seqs: 1327, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1;
    runtimePrimitivesSeen:116)

No error-revealing tests to output.

About to look for failing assertions in 926 regression sequences.

Regression test output:
Regression test count: 926
Writing regression JUnit tests...
Created file /experiment/results/randoop10/math-org.apache.commons.math.stat.inference.TTestImpl-org.apache.commons.math.stat.StatUtils-1/RegressionTest0.java
                                                                                                                                                                                                       GenTests.writeTestFiles threw an exception
java.lang.Error: runTest timed out for class RegressionTest1: Status 143 (timedOut=true) for command "java -ea -Xmx3000m -XX:+HeapDumpOnOutOfMemoryError -classpath .:/experiment/projects/math/target/classes:/experiment/tools/randoop-all-4.3.0.jar org.junit.runner.JUnitCore RegressionTest1", stdout="JUnit version 4.13.2
.........................................................................................................................................................................................................................................................................................................................................................................................................................................."
, stderr=""

	at randoop.output.FailingAssertionCommentWriter.writeClassCode(FailingAssertionCommentWriter.java:157)
	at randoop.main.GenTests.writeTestFiles(GenTests.java:878)
	at randoop.main.GenTests.handle(GenTests.java:575)
	at randoop.main.Main.nonStaticMain(Main.java:71)
	at randoop.main.Main.main(Main.java:31)

Throwable thrown while handling command: java.lang.Error: runTest timed out for class RegressionTest1: Status 143 (timedOut=true) for command "java -ea -Xmx3000m -XX:+HeapDumpOnOutOfMemoryError -classpath .:/experiment/projects/math/target/classes:/experiment/tools/randoop-all-4.3.0.jar org.junit.runner.JUnitCore RegressionTest1", stdout="JUnit version 4.13.2
.........................................................................................................................................................................................................................................................................................................................................................................................................................................."
, stderr=""

java.lang.Error: runTest timed out for class RegressionTest1: Status 143 (timedOut=true) for command "java -ea -Xmx3000m -XX:+HeapDumpOnOutOfMemoryError -classpath .:/experiment/projects/math/target/classes:/experiment/tools/randoop-all-4.3.0.jar org.junit.runner.JUnitCore RegressionTest1", stdout="JUnit version 4.13.2
.........................................................................................................................................................................................................................................................................................................................................................................................................................................."
, stderr=""

	at randoop.output.FailingAssertionCommentWriter.writeClassCode(FailingAssertionCommentWriter.java:157)
	at randoop.main.GenTests.writeTestFiles(GenTests.java:878)
	at randoop.main.GenTests.handle(GenTests.java:575)
	at randoop.main.Main.nonStaticMain(Main.java:71)
	at randoop.main.Main.main(Main.java:31)

Randoop failed.
Last sequence under execution: 
org.apache.commons.math.stat.inference.TTestImpl tTestImpl0 = new org.apache.commons.math.stat.inference.TTestImpl();
double[] doubleArray6 = new double[] { 35.0d, 1.0f, '4', (byte)-1 };
double double7 = org.apache.commons.math.stat.StatUtils.product(doubleArray6);
double[] doubleArray12 = new double[] { (byte)-1, 52.00000000000001d, 1.0f, 100.0d };
double double13 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray12);
double double15 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray6, doubleArray12, (double)10.0f);
double double16 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray6);
double double19 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray6, (int)(short)1, (int)(short)0);
double double20 = tTestImpl0.t((double)1, doubleArray6);
org.apache.commons.math.distribution.TDistribution tDistribution21 = null;
org.apache.commons.math.stat.inference.TTestImpl tTestImpl22 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution21);
double[] doubleArray28 = new double[] { (byte)-1, 52.00000000000001d, 1.0f, 100.0d };
double double29 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray28);
double double30 = tTestImpl22.t((double)1.0f, doubleArray28);
double[] doubleArray35 = new double[] { (byte)-1, 52.00000000000001d, 1.0f, 100.0d };
double double36 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray35);
double double37 = org.apache.commons.math.stat.StatUtils.max(doubleArray35);
double double38 = org.apache.commons.math.stat.StatUtils.sumSq(doubleArray35);
double double39 = tTestImpl0.pairedT(doubleArray28, doubleArray35);
org.apache.commons.math.distribution.TDistribution tDistribution40 = null;
org.apache.commons.math.stat.inference.TTestImpl tTestImpl41 = new org.apache.commons.math.stat.inference.TTestImpl(tDistribution40);
double[] doubleArray47 = new double[] { (byte)-1, 52.00000000000001d, 1.0f, 100.0d };
double double48 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray47);
double double49 = tTestImpl41.t((double)1.0f, doubleArray47);
double[] doubleArray54 = new double[] { 35.0d, 1.0f, '4', (byte)-1 };
double double55 = org.apache.commons.math.stat.StatUtils.product(doubleArray54);
double[] doubleArray60 = new double[] { 35.0d, 1.0f, '4', (byte)-1 };
double double61 = org.apache.commons.math.stat.StatUtils.product(doubleArray60);
double[] doubleArray66 = new double[] { (byte)-1, 52.00000000000001d, 1.0f, 100.0d };
double double67 = org.apache.commons.math.stat.StatUtils.sumLog(doubleArray66);
double double69 = org.apache.commons.math.stat.StatUtils.varianceDifference(doubleArray60, doubleArray66, (double)10.0f);
double double70 = tTestImpl41.pairedT(doubleArray54, doubleArray60);
org.apache.commons.math.distribution.DistributionFactory distributionFactory71 = org.apache.commons.math.distribution.DistributionFactory.newInstance();
org.apache.commons.math.distribution.NormalDistribution normalDistribution72 = distributionFactory71.createNormalDistribution();
org.apache.commons.math.distribution.TDistribution tDistribution74 = distributionFactory71.createTDistribution(0.8538434429284575d);
double double75 = tDistribution74.getDegreesOfFreedom();
tTestImpl41.setDistribution(tDistribution74);
tDistribution74.setDegreesOfFreedom((double)1L);
tTestImpl0.setDistribution(tDistribution74);
double double81 = tDistribution74.inverseCumulativeProbability(3.585268863716878E-23d);
