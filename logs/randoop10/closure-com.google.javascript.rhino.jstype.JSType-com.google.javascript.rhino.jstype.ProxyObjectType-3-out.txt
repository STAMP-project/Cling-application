Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".
Cannot instantiate non-accessible class com.google.javascript.rhino.jstype.PrototypeObjectType specified via --testclass or --classlist; will use its static methods.
Cannot instantiate non-accessible class com.google.javascript.rhino.jstype.ProxyObjectType specified via --testclass or --classlist; will use its static methods.

Will try to generate tests for 37 classes.
PUBLIC MEMBERS=958
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-23T03:36:36.188Z     355M used)
Progress update: steps=1000, test inputs generated=368, failing inputs=1      (2022-02-23T03:36:38.315Z     454M used)
Progress update: steps=2000, test inputs generated=826, failing inputs=1      (2022-02-23T03:36:39.629Z     724M used)
Progress update: steps=3000, test inputs generated=1280, failing inputs=1      (2022-02-23T03:36:40.596Z     752M used)
Progress update: steps=4000, test inputs generated=1709, failing inputs=1      (2022-02-23T03:36:41.643Z     656M used)
Progress update: steps=5000, test inputs generated=2142, failing inputs=1      (2022-02-23T03:36:42.944Z     467M used)
Progress update: steps=6000, test inputs generated=2571, failing inputs=1      (2022-02-23T03:36:44.203Z     196M used)
Progress update: steps=7000, test inputs generated=2987, failing inputs=1      (2022-02-23T03:36:45.323Z     1.12G used)
Progress update: steps=8000, test inputs generated=3434, failing inputs=1      (2022-02-23T03:36:46.770Z     943M used)
Progress update: steps=9000, test inputs generated=3854, failing inputs=1      (2022-02-23T03:36:48.445Z     723M used)
Progress update: steps=10000, test inputs generated=4265, failing inputs=1      (2022-02-23T03:36:50.116Z     349M used)
Progress update: steps=11000, test inputs generated=4715, failing inputs=1      (2022-02-23T03:36:51.565Z     1.16G used)
Progress update: steps=12000, test inputs generated=5126, failing inputs=1      (2022-02-23T03:36:53.100Z     783M used)
Progress update: steps=13000, test inputs generated=5555, failing inputs=1      (2022-02-23T03:36:55.299Z     678M used)
Progress update: steps=14000, test inputs generated=5972, failing inputs=1      (2022-02-23T03:36:57.200Z     273M used)
Progress update: steps=15000, test inputs generated=6387, failing inputs=1      (2022-02-23T03:36:59.359Z     139M used)
Progress update: steps=16000, test inputs generated=6817, failing inputs=1      (2022-02-23T03:37:01.570Z     1.09G used)
Progress update: steps=17000, test inputs generated=7254, failing inputs=1      (2022-02-23T03:37:04.013Z     764M used)
Progress update: steps=18000, test inputs generated=7685, failing inputs=2      (2022-02-23T03:37:06.769Z     409M used)
Progress update: steps=19000, test inputs generated=8112, failing inputs=2      (2022-02-23T03:37:09.485Z     221M used)
Progress update: steps=20000, test inputs generated=8543, failing inputs=2      (2022-02-23T03:37:12.611Z     1.30G used)
Progress update: steps=21000, test inputs generated=8955, failing inputs=2      (2022-02-23T03:37:15.881Z     1.07G used)
Progress update: steps=22000, test inputs generated=9390, failing inputs=2      (2022-02-23T03:37:19.061Z     1.00G used)
Progress update: steps=23000, test inputs generated=9813, failing inputs=2      (2022-02-23T03:37:22.171Z     926M used)
Progress update: steps=24000, test inputs generated=10232, failing inputs=2      (2022-02-23T03:37:25.590Z     906M used)
Progress update: steps=25000, test inputs generated=10654, failing inputs=2      (2022-02-23T03:37:29.426Z     790M used)
Progress update: steps=26000, test inputs generated=11058, failing inputs=2      (2022-02-23T03:37:32.911Z     522M used)
Progress update: steps=27000, test inputs generated=11506, failing inputs=2      (2022-02-23T03:37:36.028Z     442M used)
Progress update: steps=27095, test inputs generated=11552, failing inputs=2      (2022-02-23T03:37:36.206Z     564M used)
Progress update: steps=28000, test inputs generated=11915, failing inputs=2      (2022-02-23T03:37:39.683Z     226M used)
Progress update: steps=29000, test inputs generated=12317, failing inputs=2      (2022-02-23T03:37:44.677Z     92.5M used)
Progress update: steps=30000, test inputs generated=12749, failing inputs=2      (2022-02-23T03:37:48.299Z     1.31G used)
Progress update: steps=31000, test inputs generated=13159, failing inputs=2      (2022-02-23T03:37:52.429Z     1.00G used)
Progress update: steps=32000, test inputs generated=13584, failing inputs=2      (2022-02-23T03:37:57.887Z     1.01G used)
Progress update: steps=33000, test inputs generated=13995, failing inputs=2      (2022-02-23T03:38:03.824Z     1.18G used)
Progress update: steps=34000, test inputs generated=14395, failing inputs=2      (2022-02-23T03:38:08.724Z     1.02G used)
Progress update: steps=35000, test inputs generated=14811, failing inputs=2      (2022-02-23T03:38:13.977Z     856M used)
Progress update: steps=36000, test inputs generated=15230, failing inputs=2      (2022-02-23T03:38:19.632Z     862M used)
Progress update: steps=37000, test inputs generated=15660, failing inputs=2      (2022-02-23T03:38:25.936Z     722M used)
Progress update: steps=38000, test inputs generated=16087, failing inputs=2      (2022-02-23T03:38:30.980Z     505M used)
Progress update: steps=38809, test inputs generated=16432, failing inputs=2      (2022-02-23T03:38:36.206Z     79.6M used)
Progress update: steps=39000, test inputs generated=16522, failing inputs=2      (2022-02-23T03:38:37.487Z     317M used)
Progress update: steps=40000, test inputs generated=16938, failing inputs=2      (2022-02-23T03:38:43.132Z     300M used)
Progress update: steps=41000, test inputs generated=17353, failing inputs=2      (2022-02-23T03:38:50.268Z     218M used)
Progress update: steps=42000, test inputs generated=17782, failing inputs=2      (2022-02-23T03:38:58.769Z     238M used)
Progress update: steps=43000, test inputs generated=18194, failing inputs=2      (2022-02-23T03:39:06.897Z     186M used)
Progress update: steps=44000, test inputs generated=18603, failing inputs=2      (2022-02-23T03:39:15.254Z     409M used)
Progress update: steps=45000, test inputs generated=19014, failing inputs=2      (2022-02-23T03:39:23.515Z     773M used)
Progress update: steps=46000, test inputs generated=19435, failing inputs=2      (2022-02-23T03:39:31.908Z     902M used)
Progress update: steps=46621, test inputs generated=19698, failing inputs=2      (2022-02-23T03:39:36.207Z     613M used)
Progress update: steps=47000, test inputs generated=19859, failing inputs=2      (2022-02-23T03:39:39.840Z     1.05G used)
Progress update: steps=48000, test inputs generated=20257, failing inputs=2      (2022-02-23T03:39:50.248Z     422M used)
Progress update: steps=49000, test inputs generated=20678, failing inputs=2      (2022-02-23T03:39:59.879Z     928M used)
Progress update: steps=50000, test inputs generated=21088, failing inputs=2      (2022-02-23T03:40:11.194Z     538M used)
Progress update: steps=51000, test inputs generated=21492, failing inputs=2      (2022-02-23T03:40:21.363Z     103M used)
Progress update: steps=52000, test inputs generated=21908, failing inputs=2      (2022-02-23T03:40:32.475Z     770M used)
Progress update: steps=52301, test inputs generated=22028, failing inputs=2      (2022-02-23T03:40:36.207Z     394M used)
Progress update: steps=53000, test inputs generated=22338, failing inputs=2      (2022-02-23T03:40:43.124Z     649M used)
Progress update: steps=54000, test inputs generated=22739, failing inputs=2      (2022-02-23T03:40:55.305Z     579M used)
Progress update: steps=55000, test inputs generated=23143, failing inputs=2      (2022-02-23T03:41:08.227Z     384M used)Long generation time 1297 msec for null sequence.

Progress update: steps=56000, test inputs generated=23538, failing inputs=2      (2022-02-23T03:41:22.446Z     426M used)
Progress update: steps=57000, test inputs generated=23966, failing inputs=2      (2022-02-23T03:41:34.909Z     568M used)
Progress update: steps=57103, test inputs generated=24008, failing inputs=2      (2022-02-23T03:41:36.208Z     700M used)
Progress update: steps=58000, test inputs generated=24387, failing inputs=2      (2022-02-23T03:41:49.306Z     265M used)
Progress update: steps=59000, test inputs generated=24804, failing inputs=2      (2022-02-23T03:42:03.244Z     219M used)
Progress update: steps=60000, test inputs generated=25218, failing inputs=2      (2022-02-23T03:42:17.589Z     123M used)
Progress update: steps=61000, test inputs generated=25621, failing inputs=2      (2022-02-23T03:42:31.754Z     222M used)
Progress update: steps=61394, test inputs generated=25782, failing inputs=2      (2022-02-23T03:42:36.209Z     251M used)Long generation time 2457 msec for null sequence.

Progress update: steps=62000, test inputs generated=26040, failing inputs=2      (2022-02-23T03:42:47.528Z     243M used)
Progress update: steps=63000, test inputs generated=26439, failing inputs=2      (2022-02-23T03:43:00.768Z     399M used)
Progress update: steps=64000, test inputs generated=26806, failing inputs=2      (2022-02-23T03:43:16.212Z     427M used)
Progress update: steps=65000, test inputs generated=27205, failing inputs=2      (2022-02-23T03:43:28.233Z     277M used)
Progress update: steps=65579, test inputs generated=27440, failing inputs=2      (2022-02-23T03:43:36.209Z     245M used)
Progress update: steps=66000, test inputs generated=27608, failing inputs=2      (2022-02-23T03:43:42.101Z     439M used)
Progress update: steps=67000, test inputs generated=28004, failing inputs=2      (2022-02-23T03:43:55.467Z     370M used)
Progress update: steps=68000, test inputs generated=28415, failing inputs=2      (2022-02-23T03:44:11.129Z     260M used)
Progress update: steps=69000, test inputs generated=28816, failing inputs=2      (2022-02-23T03:44:21.258Z     317M used)Long generation time 1061 msec (= 1061 + 0) for
com.google.common.collect.ImmutableList<java.lang.Object> objList2 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.common.collect.ImmutableList<java.lang.Object> objList5 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.javascript.rhino.Node node8 = com.google.javascript.rhino.Node.newString(32, "(hi!)");
boolean boolean9 = node8.isOnlyModifiesThisCall();
boolean boolean10 = node8.isDebugger();
com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString(32, "(hi!)");
com.google.javascript.rhino.jstype.JSType jSType14 = node13.getJSType();
com.google.javascript.rhino.Node node15 = node8.srcrefTree(node13);
boolean boolean16 = node15.isUnscopedQualifiedName();
boolean boolean17 = objList5.equals((java.lang.Object)node15);
java.util.Iterator<java.lang.Object> objItor18 = objList5.iterator();
com.google.common.collect.ImmutableList<java.lang.Throwable> throwableList19 = com.google.common.collect.ImmutableList.copyOf(objItor18);
com.google.common.collect.ImmutableList<java.lang.Object> objList22 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray23 = objList22.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList26 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray27 = objList26.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList30 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray31 = objList30.toArray();
java.lang.Object[] objArray32 = objList30.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList35 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray36 = objList35.toArray();
int int38 = objList35.indexOf((java.lang.Object)100L);
com.google.common.collect.ImmutableList<java.lang.Object> objList41 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableCollection<java.lang.Object>> objCollectionList42 = com.google.common.collect.ImmutableList.of((com.google.common.collect.ImmutableCollection<java.lang.Object>)objList22, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList26, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList30, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList35, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList41);
com.google.common.collect.ImmutableList<com.google.javascript.rhino.SourcePosition<com.google.javascript.rhino.Node>> nodeSourcePositionList43 = com.google.common.collect.ImmutableList.copyOf((java.lang.Iterable<java.lang.Object>)objList22);
com.google.common.collect.ImmutableList<java.util.RandomAccess> randomAccessList44 = com.google.common.collect.ImmutableList.of((java.util.RandomAccess)objList2, (java.util.RandomAccess)throwableList19, (java.util.RandomAccess)objList22);
java.util.stream.Stream<java.lang.Object> objStream45 = objList22.stream();
com.google.common.collect.ImmutableList<java.lang.Object> objList48 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray49 = objList48.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList52 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray53 = objList52.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList56 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray57 = objList56.toArray();
java.lang.Object[] objArray58 = objList56.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList61 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray62 = objList61.toArray();
int int64 = objList61.indexOf((java.lang.Object)100L);
com.google.common.collect.ImmutableList<java.lang.Object> objList67 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableCollection<java.lang.Object>> objCollectionList68 = com.google.common.collect.ImmutableList.of((com.google.common.collect.ImmutableCollection<java.lang.Object>)objList48, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList52, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList56, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList61, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList67);
boolean boolean69 = objList48.isEmpty();
com.google.common.collect.ImmutableList<java.lang.Object> objList72 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray73 = objList72.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList76 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray77 = objList76.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList80 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray81 = objList80.toArray();
java.lang.Object[] objArray82 = objList80.toArray();
com.google.common.collect.ImmutableList<java.lang.Object> objList85 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
java.lang.Object[] objArray86 = objList85.toArray();
int int88 = objList85.indexOf((java.lang.Object)100L);
com.google.common.collect.ImmutableList<java.lang.Object> objList91 = com.google.common.collect.ImmutableList.of((java.lang.Object)0.0d, (java.lang.Object)(byte)100);
com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableCollection<java.lang.Object>> objCollectionList92 = com.google.common.collect.ImmutableList.of((com.google.common.collect.ImmutableCollection<java.lang.Object>)objList72, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList76, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList80, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList85, (com.google.common.collect.ImmutableCollection<java.lang.Object>)objList91);
java.util.stream.Stream<java.lang.Object> objStream93 = objList72.parallelStream();
boolean boolean94 = objList48.containsAll((java.util.Collection<java.lang.Object>)objList72);
boolean boolean95 = objList22.addAll((java.util.Collection<java.lang.Object>)objList48);


Progress update: steps=69994, test inputs generated=29235, failing inputs=2      (2022-02-23T03:44:36.209Z     340M used)
Progress update: steps=70000, test inputs generated=29237, failing inputs=2      (2022-02-23T03:44:36.281Z     340M used)
Progress update: steps=71000, test inputs generated=29655, failing inputs=3      (2022-02-23T03:44:51.476Z     220M used)Long generation time 1017 msec for null sequence.

Progress update: steps=72000, test inputs generated=30051, failing inputs=3      (2022-02-23T03:45:09.025Z     182M used)
Progress update: steps=73000, test inputs generated=30442, failing inputs=3      (2022-02-23T03:45:32.132Z     347M used)
Progress update: steps=73244, test inputs generated=30535, failing inputs=3      (2022-02-23T03:45:36.210Z     172M used)
Progress update: steps=74000, test inputs generated=30845, failing inputs=3      (2022-02-23T03:45:46.248Z     162M used)Long generation time 1012 msec for null sequence.

Progress update: steps=75000, test inputs generated=31238, failing inputs=3      (2022-02-23T03:46:04.484Z     277M used)
Progress update: steps=76000, test inputs generated=31640, failing inputs=3      (2022-02-23T03:46:21.191Z     76.6M used)Long generation time 1646 msec for null sequence.
Long generation time 1083 msec for null sequence.

Progress update: steps=76811, test inputs generated=31983, failing inputs=3      (2022-02-23T03:46:36.211Z     311M used)
Progress update: steps=76811, test inputs generated=31983, failing inputs=3      (2022-02-23T03:46:36.241Z     311M used)
Normal method executions: 22667563
Exceptional method executions: 4150

Average method execution time (normal termination):      0.000183
Average method execution time (exceptional termination): 0.0462
Approximate memory usage 311M
Explorer = ForwardGenerator(steps: 76811, null steps: 44828, num_sequences_generated: 31983;
    allSequences: 31983, regresson seqs: 667, error seqs: 3=3=3, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 31313;
    runtimePrimitivesSeen:327)

Error-revealing test output:
Error-revealing test count: 3
Writing error-revealing JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-3/ErrorTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-3/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 369 regression sequences.

Regression test output:
Regression test count: 369
Writing regression JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-3/RegressionTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-3/RegressionTest1.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.JSType-com.google.javascript.rhino.jstype.ProxyObjectType-3/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Invalid tests generated: 0

Uncompilable sequences generated (count: 11).
Please report uncompilable sequences at https://github.com/randoop/randoop/issues ,
providing the information requested at https://randoop.github.io/randoop/manual/index.html#bug-reporting .
