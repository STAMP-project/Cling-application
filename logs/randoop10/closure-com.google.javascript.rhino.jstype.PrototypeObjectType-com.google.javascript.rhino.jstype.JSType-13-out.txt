Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".
Cannot instantiate non-accessible class com.google.javascript.rhino.jstype.PrototypeObjectType specified via --testclass or --classlist; will use its static methods.
Cannot instantiate non-accessible class com.google.javascript.rhino.jstype.ProxyObjectType specified via --testclass or --classlist; will use its static methods.

Will try to generate tests for 37 classes.
PUBLIC MEMBERS=958
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-23T03:47:49.413Z     355M used)
Progress update: steps=1000, test inputs generated=353, failing inputs=0      (2022-02-23T03:47:51.617Z     378M used)
Progress update: steps=2000, test inputs generated=800, failing inputs=0      (2022-02-23T03:47:53.050Z     181M used)
Progress update: steps=3000, test inputs generated=1237, failing inputs=0      (2022-02-23T03:47:54.108Z     265M used)
Progress update: steps=4000, test inputs generated=1673, failing inputs=0      (2022-02-23T03:47:55.316Z     225M used)
Progress update: steps=5000, test inputs generated=2085, failing inputs=0      (2022-02-23T03:47:56.583Z     94.3M used)
Progress update: steps=6000, test inputs generated=2512, failing inputs=0      (2022-02-23T03:47:57.657Z     46.9M used)
Progress update: steps=7000, test inputs generated=2928, failing inputs=0      (2022-02-23T03:47:58.689Z     1.17G used)
Progress update: steps=8000, test inputs generated=3352, failing inputs=0      (2022-02-23T03:48:00.491Z     1.33G used)
Progress update: steps=9000, test inputs generated=3752, failing inputs=0      (2022-02-23T03:48:01.475Z     926M used)
Progress update: steps=10000, test inputs generated=4169, failing inputs=0      (2022-02-23T03:48:02.535Z     611M used)
Progress update: steps=11000, test inputs generated=4600, failing inputs=0      (2022-02-23T03:48:03.727Z     320M used)
Progress update: steps=12000, test inputs generated=5010, failing inputs=0      (2022-02-23T03:48:04.647Z     77.8M used)
Progress update: steps=13000, test inputs generated=5421, failing inputs=0      (2022-02-23T03:48:05.602Z     1.21G used)
Progress update: steps=14000, test inputs generated=5852, failing inputs=0      (2022-02-23T03:48:06.501Z     892M used)
Progress update: steps=15000, test inputs generated=6258, failing inputs=0      (2022-02-23T03:48:07.462Z     676M used)
Progress update: steps=16000, test inputs generated=6676, failing inputs=0      (2022-02-23T03:48:08.445Z     485M used)
Progress update: steps=17000, test inputs generated=7058, failing inputs=0      (2022-02-23T03:48:09.506Z     216M used)
Progress update: steps=18000, test inputs generated=7475, failing inputs=0      (2022-02-23T03:48:10.740Z     271M used)
Progress update: steps=19000, test inputs generated=7886, failing inputs=0      (2022-02-23T03:48:11.952Z     216M used)
Progress update: steps=20000, test inputs generated=8293, failing inputs=0      (2022-02-23T03:48:13.151Z     80.1M used)
Progress update: steps=21000, test inputs generated=8695, failing inputs=0      (2022-02-23T03:48:14.647Z     80.4M used)
Progress update: steps=22000, test inputs generated=9122, failing inputs=0      (2022-02-23T03:48:15.996Z     191M used)
Progress update: steps=23000, test inputs generated=9515, failing inputs=0      (2022-02-23T03:48:17.469Z     53.9M used)
Progress update: steps=24000, test inputs generated=9918, failing inputs=0      (2022-02-23T03:48:18.568Z     1.25G used)
Progress update: steps=25000, test inputs generated=10328, failing inputs=0      (2022-02-23T03:48:19.793Z     1.28G used)
Progress update: steps=26000, test inputs generated=10736, failing inputs=0      (2022-02-23T03:48:21.446Z     1.36G used)
Progress update: steps=27000, test inputs generated=11140, failing inputs=0      (2022-02-23T03:48:22.807Z     1.28G used)
Progress update: steps=28000, test inputs generated=11554, failing inputs=0      (2022-02-23T03:48:24.043Z     1.25G used)
Progress update: steps=29000, test inputs generated=11965, failing inputs=0      (2022-02-23T03:48:25.491Z     1.12G used)
Progress update: steps=30000, test inputs generated=12362, failing inputs=0      (2022-02-23T03:48:27.031Z     1.31G used)
Progress update: steps=31000, test inputs generated=12783, failing inputs=0      (2022-02-23T03:48:29.038Z     250M used)
Progress update: steps=32000, test inputs generated=13202, failing inputs=0      (2022-02-23T03:48:30.498Z     358M used)
Progress update: steps=33000, test inputs generated=13594, failing inputs=0      (2022-02-23T03:48:32.208Z     632M used)
Progress update: steps=34000, test inputs generated=13980, failing inputs=1      (2022-02-23T03:48:33.623Z     743M used)
Progress update: steps=35000, test inputs generated=14349, failing inputs=1      (2022-02-23T03:48:34.733Z     608M used)
Progress update: steps=36000, test inputs generated=14758, failing inputs=1      (2022-02-23T03:48:36.589Z     964M used)
Progress update: steps=37000, test inputs generated=15173, failing inputs=1      (2022-02-23T03:48:38.435Z     1.25G used)
Progress update: steps=38000, test inputs generated=15580, failing inputs=1      (2022-02-23T03:48:40.183Z     1.40G used)
Progress update: steps=39000, test inputs generated=15972, failing inputs=1      (2022-02-23T03:48:41.565Z     62.9M used)
Progress update: steps=40000, test inputs generated=16363, failing inputs=1      (2022-02-23T03:48:43.296Z     393M used)
Progress update: steps=41000, test inputs generated=16784, failing inputs=1      (2022-02-23T03:48:44.908Z     558M used)
Progress update: steps=42000, test inputs generated=17190, failing inputs=1      (2022-02-23T03:48:46.659Z     916M used)
Progress update: steps=43000, test inputs generated=17589, failing inputs=1      (2022-02-23T03:48:48.775Z     121M used)
Progress update: steps=43214, test inputs generated=17674, failing inputs=1      (2022-02-23T03:48:49.428Z     630M used)
Progress update: steps=44000, test inputs generated=17997, failing inputs=1      (2022-02-23T03:48:50.966Z     476M used)
Progress update: steps=45000, test inputs generated=18399, failing inputs=1      (2022-02-23T03:48:52.793Z     862M used)
Progress update: steps=46000, test inputs generated=18776, failing inputs=1      (2022-02-23T03:48:54.330Z     863M used)
Progress update: steps=47000, test inputs generated=19150, failing inputs=1      (2022-02-23T03:48:55.988Z     1.01G used)
Progress update: steps=48000, test inputs generated=19550, failing inputs=1      (2022-02-23T03:48:58.490Z     233M used)
Progress update: steps=49000, test inputs generated=19955, failing inputs=1      (2022-02-23T03:49:00.116Z     343M used)
Progress update: steps=50000, test inputs generated=20361, failing inputs=1      (2022-02-23T03:49:01.956Z     674M used)
Progress update: steps=51000, test inputs generated=20761, failing inputs=1      (2022-02-23T03:49:03.699Z     978M used)
Progress update: steps=52000, test inputs generated=21163, failing inputs=1      (2022-02-23T03:49:05.640Z     69.3M used)
Progress update: steps=53000, test inputs generated=21573, failing inputs=1      (2022-02-23T03:49:07.617Z     429M used)
Progress update: steps=54000, test inputs generated=21973, failing inputs=1      (2022-02-23T03:49:09.662Z     816M used)
Progress update: steps=55000, test inputs generated=22353, failing inputs=1      (2022-02-23T03:49:11.611Z     1.18G used)
Progress update: steps=56000, test inputs generated=22753, failing inputs=1      (2022-02-23T03:49:13.648Z     237M used)
Progress update: steps=57000, test inputs generated=23123, failing inputs=1      (2022-02-23T03:49:15.215Z     431M used)
Progress update: steps=58000, test inputs generated=23499, failing inputs=1      (2022-02-23T03:49:17.176Z     820M used)
Progress update: steps=59000, test inputs generated=23906, failing inputs=1      (2022-02-23T03:49:19.347Z     1.40G used)
Progress update: steps=60000, test inputs generated=24311, failing inputs=1      (2022-02-23T03:49:21.189Z     406M used)
Progress update: steps=61000, test inputs generated=24714, failing inputs=1      (2022-02-23T03:49:23.563Z     1.01G used)
Progress update: steps=62000, test inputs generated=25106, failing inputs=1      (2022-02-23T03:49:26.675Z     461M used)
Progress update: steps=63000, test inputs generated=25515, failing inputs=1      (2022-02-23T03:49:29.529Z     1.30G used)
Progress update: steps=64000, test inputs generated=25924, failing inputs=1      (2022-02-23T03:49:32.391Z     877M used)
Progress update: steps=65000, test inputs generated=26309, failing inputs=1      (2022-02-23T03:49:35.003Z     1.40G used)
Progress update: steps=66000, test inputs generated=26711, failing inputs=1      (2022-02-23T03:49:37.198Z     604M used)
Progress update: steps=67000, test inputs generated=27094, failing inputs=1      (2022-02-23T03:49:39.711Z     1.13G used)
Progress update: steps=68000, test inputs generated=27498, failing inputs=1      (2022-02-23T03:49:41.953Z     1.41G used)
Progress update: steps=69000, test inputs generated=27878, failing inputs=1      (2022-02-23T03:49:44.834Z     743M used)
Progress update: steps=70000, test inputs generated=28272, failing inputs=1      (2022-02-23T03:49:47.111Z     1.16G used)
Progress update: steps=70849, test inputs generated=28594, failing inputs=1      (2022-02-23T03:49:49.429Z     255M used)
Progress update: steps=71000, test inputs generated=28666, failing inputs=1      (2022-02-23T03:49:50.015Z     698M used)
Progress update: steps=72000, test inputs generated=29066, failing inputs=1      (2022-02-23T03:49:53.067Z     467M used)
Progress update: steps=73000, test inputs generated=29482, failing inputs=1      (2022-02-23T03:49:55.220Z     1.05G used)
Progress update: steps=74000, test inputs generated=29900, failing inputs=1      (2022-02-23T03:49:58.696Z     469M used)
Progress update: steps=75000, test inputs generated=30300, failing inputs=1      (2022-02-23T03:50:01.193Z     967M used)
Progress update: steps=76000, test inputs generated=30702, failing inputs=1      (2022-02-23T03:50:04.242Z     471M used)
Progress update: steps=77000, test inputs generated=31099, failing inputs=1      (2022-02-23T03:50:06.678Z     1.16G used)
Progress update: steps=78000, test inputs generated=31466, failing inputs=1      (2022-02-23T03:50:09.559Z     416M used)
Progress update: steps=79000, test inputs generated=31865, failing inputs=1      (2022-02-23T03:50:12.080Z     1.16G used)Long generation time 1082 msec for null sequence.

Progress update: steps=80000, test inputs generated=32281, failing inputs=1      (2022-02-23T03:50:15.881Z     916M used)
Progress update: steps=81000, test inputs generated=32670, failing inputs=1      (2022-02-23T03:50:18.701Z     142M used)
Progress update: steps=82000, test inputs generated=33071, failing inputs=1      (2022-02-23T03:50:21.642Z     946M used)
Progress update: steps=83000, test inputs generated=33465, failing inputs=1      (2022-02-23T03:50:24.331Z     308M used)
Progress update: steps=84000, test inputs generated=33850, failing inputs=1      (2022-02-23T03:50:27.699Z     1.22G used)
Progress update: steps=85000, test inputs generated=34242, failing inputs=1      (2022-02-23T03:50:32.120Z     1.08G used)
Progress update: steps=86000, test inputs generated=34637, failing inputs=1      (2022-02-23T03:50:36.316Z     614M used)
Progress update: steps=87000, test inputs generated=35072, failing inputs=1      (2022-02-23T03:50:40.342Z     365M used)
Progress update: steps=88000, test inputs generated=35515, failing inputs=1      (2022-02-23T03:50:44.723Z     256M used)
Progress update: steps=89000, test inputs generated=35871, failing inputs=1      (2022-02-23T03:50:47.634Z     781M used)
Progress update: steps=89420, test inputs generated=36051, failing inputs=1      (2022-02-23T03:50:49.429Z     566M used)
Progress update: steps=90000, test inputs generated=36293, failing inputs=1      (2022-02-23T03:50:51.387Z     643M used)
Progress update: steps=91000, test inputs generated=36672, failing inputs=1      (2022-02-23T03:50:56.028Z     810M used)
Progress update: steps=92000, test inputs generated=37063, failing inputs=1      (2022-02-23T03:51:01.497Z     1.06G used)
Progress update: steps=93000, test inputs generated=37465, failing inputs=1      (2022-02-23T03:51:05.378Z     619M used)
Progress update: steps=94000, test inputs generated=37865, failing inputs=1      (2022-02-23T03:51:09.401Z     370M used)
Progress update: steps=95000, test inputs generated=38252, failing inputs=1      (2022-02-23T03:51:14.204Z     481M used)
Progress update: steps=96000, test inputs generated=38650, failing inputs=1      (2022-02-23T03:51:17.752Z     1.26G used)
Progress update: steps=97000, test inputs generated=39070, failing inputs=1      (2022-02-23T03:51:22.905Z     1.45G used)
Progress update: steps=98000, test inputs generated=39463, failing inputs=1      (2022-02-23T03:51:26.729Z     1.20G used)
Progress update: steps=99000, test inputs generated=39834, failing inputs=1      (2022-02-23T03:51:30.703Z     649M used)
Progress update: steps=100000, test inputs generated=40244, failing inputs=1      (2022-02-23T03:51:36.246Z     512M used)
Progress update: steps=101000, test inputs generated=40657, failing inputs=1      (2022-02-23T03:51:40.845Z     364M used)
Progress update: steps=102000, test inputs generated=41032, failing inputs=1      (2022-02-23T03:51:45.494Z     207M used)
Progress update: steps=102468, test inputs generated=41226, failing inputs=1      (2022-02-23T03:51:49.430Z     655M used)
Progress update: steps=103000, test inputs generated=41434, failing inputs=1      (2022-02-23T03:51:52.408Z     929M used)
Progress update: steps=104000, test inputs generated=41845, failing inputs=2      (2022-02-23T03:51:57.089Z     848M used)
Progress update: steps=105000, test inputs generated=42221, failing inputs=2      (2022-02-23T03:52:03.935Z     1.26G used)
Progress update: steps=106000, test inputs generated=42638, failing inputs=2      (2022-02-23T03:52:08.181Z     1.20G used)
Progress update: steps=107000, test inputs generated=43034, failing inputs=2      (2022-02-23T03:52:13.273Z     1.32G used)
Progress update: steps=108000, test inputs generated=43434, failing inputs=3      (2022-02-23T03:52:19.935Z     552M used)
Progress update: steps=109000, test inputs generated=43861, failing inputs=3      (2022-02-23T03:52:26.854Z     146M used)
Progress update: steps=110000, test inputs generated=44265, failing inputs=3      (2022-02-23T03:52:33.532Z     183M used)
Progress update: steps=111000, test inputs generated=44678, failing inputs=4      (2022-02-23T03:52:37.319Z     311M used)
Progress update: steps=112000, test inputs generated=45054, failing inputs=4      (2022-02-23T03:52:42.747Z     792M used)
Progress update: steps=113000, test inputs generated=45463, failing inputs=4      (2022-02-23T03:52:48.197Z     996M used)
Progress update: steps=113210, test inputs generated=45550, failing inputs=4      (2022-02-23T03:52:49.430Z     224M used)
Progress update: steps=114000, test inputs generated=45904, failing inputs=4      (2022-02-23T03:52:54.582Z     139M used)
Progress update: steps=115000, test inputs generated=46311, failing inputs=4      (2022-02-23T03:53:00.540Z     565M used)
Progress update: steps=116000, test inputs generated=46729, failing inputs=4      (2022-02-23T03:53:06.650Z     1.12G used)
Progress update: steps=117000, test inputs generated=47131, failing inputs=4      (2022-02-23T03:53:11.923Z     1.27G used)
Progress update: steps=118000, test inputs generated=47519, failing inputs=4      (2022-02-23T03:53:20.329Z     557M used)
Progress update: steps=119000, test inputs generated=47955, failing inputs=4      (2022-02-23T03:53:24.781Z     421M used)
Progress update: steps=120000, test inputs generated=48343, failing inputs=4      (2022-02-23T03:53:33.589Z     291M used)
Progress update: steps=121000, test inputs generated=48762, failing inputs=4      (2022-02-23T03:53:41.283Z     181M used)
Progress update: steps=121965, test inputs generated=49152, failing inputs=4      (2022-02-23T03:53:49.431Z     430M used)
Progress update: steps=122000, test inputs generated=49167, failing inputs=4      (2022-02-23T03:53:50.050Z     703M used)
Progress update: steps=123000, test inputs generated=49586, failing inputs=5      (2022-02-23T03:53:55.964Z     496M used)
Progress update: steps=124000, test inputs generated=49962, failing inputs=5      (2022-02-23T03:54:00.680Z     732M used)
Progress update: steps=125000, test inputs generated=50371, failing inputs=5      (2022-02-23T03:54:07.379Z     319M used)
Progress update: steps=126000, test inputs generated=50759, failing inputs=5      (2022-02-23T03:54:15.948Z     858M used)
Progress update: steps=127000, test inputs generated=51131, failing inputs=5      (2022-02-23T03:54:22.631Z     144M used)
Progress update: steps=128000, test inputs generated=51521, failing inputs=5      (2022-02-23T03:54:30.094Z     1.37G used)
Progress update: steps=129000, test inputs generated=51919, failing inputs=5      (2022-02-23T03:54:37.345Z     924M used)
Progress update: steps=130000, test inputs generated=52304, failing inputs=5      (2022-02-23T03:54:45.343Z     380M used)
Progress update: steps=130524, test inputs generated=52515, failing inputs=5      (2022-02-23T03:54:49.431Z     1.10G used)
Progress update: steps=131000, test inputs generated=52681, failing inputs=5      (2022-02-23T03:54:52.726Z     381M used)
Progress update: steps=132000, test inputs generated=53084, failing inputs=5      (2022-02-23T03:55:01.085Z     862M used)
Progress update: steps=133000, test inputs generated=53457, failing inputs=5      (2022-02-23T03:55:10.740Z     988M used)
Progress update: steps=134000, test inputs generated=53845, failing inputs=5      (2022-02-23T03:55:19.069Z     999M used)
Progress update: steps=135000, test inputs generated=54249, failing inputs=6      (2022-02-23T03:55:29.054Z     213M used)
Progress update: steps=136000, test inputs generated=54657, failing inputs=6      (2022-02-23T03:55:41.353Z     1.13G used)
Progress update: steps=137000, test inputs generated=55029, failing inputs=6      (2022-02-23T03:55:48.576Z     374M used)
Progress update: steps=137067, test inputs generated=55056, failing inputs=6      (2022-02-23T03:55:49.432Z     713M used)
Progress update: steps=138000, test inputs generated=55395, failing inputs=6      (2022-02-23T03:55:56.719Z     438M used)Long generation time 1372 msec for null sequence.
Long generation time 1029 msec (= 1029 + 0) for
com.google.javascript.rhino.Node[] nodeArray1 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node2 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray1);
boolean boolean3 = node2.isGetterDef();
java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet8, strArray7);
node2.setDirectives((java.util.Set<java.lang.String>)strSet8);
com.google.javascript.rhino.Node[] nodeArray12 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node13 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray12);
boolean boolean14 = node13.isGetterDef();
java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet19, strArray18);
node13.setDirectives((java.util.Set<java.lang.String>)strSet19);
com.google.javascript.rhino.Node[] nodeArray23 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node24 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray23);
boolean boolean25 = node24.isGetterDef();
java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet30, strArray29);
node24.setDirectives((java.util.Set<java.lang.String>)strSet30);
java.lang.String[] strArray35 = new java.lang.String[] { "", "hi!" };
java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList36, strArray35);
com.google.javascript.rhino.Node[] nodeArray39 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node40 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray39);
boolean boolean41 = node40.isGetterDef();
java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet46, strArray45);
node40.setDirectives((java.util.Set<java.lang.String>)strSet46);
java.lang.String[] strArray50 = new java.lang.String[] { "Not declared as a constructor" };
java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList51, strArray50);
com.google.javascript.rhino.Node[] nodeArray54 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node55 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray54);
boolean boolean56 = node55.isGetterDef();
java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet61, strArray60);
node55.setDirectives((java.util.Set<java.lang.String>)strSet61);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList64 = com.google.common.collect.ImmutableList.of((java.util.Collection<java.lang.String>)strSet8, (java.util.Collection<java.lang.String>)strSet19, (java.util.Collection<java.lang.String>)strSet30, (java.util.Collection<java.lang.String>)strList36, (java.util.Collection<java.lang.String>)strSet46, (java.util.Collection<java.lang.String>)strList51, (java.util.Collection<java.lang.String>)strSet61);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList65 = strCollectionList64.reverse();
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList66 = strCollectionList64.reverse();
java.lang.String str67 = strCollectionList64.toString();
com.google.common.collect.UnmodifiableListIterator<java.util.Collection<java.lang.String>> strCollectionItor68 = strCollectionList64.listIterator();
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList69 = strCollectionList64.asList();
java.util.Spliterator<java.util.Collection<java.lang.String>> strCollectionSpliterator70 = strCollectionList64.spliterator();

Long generation time 1064 msec for null sequence.

Progress update: steps=139000, test inputs generated=55791, failing inputs=6      (2022-02-23T03:56:07.624Z     215M used)
Progress update: steps=140000, test inputs generated=56168, failing inputs=6      (2022-02-23T03:56:15.039Z     386M used)Long generation time 1078 msec (= 1078 + 0) for
com.google.javascript.rhino.Node[] nodeArray1 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node2 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray1);
boolean boolean3 = node2.isGetterDef();
java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet8, strArray7);
node2.setDirectives((java.util.Set<java.lang.String>)strSet8);
com.google.javascript.rhino.Node[] nodeArray12 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node13 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray12);
boolean boolean14 = node13.isGetterDef();
java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet19, strArray18);
node13.setDirectives((java.util.Set<java.lang.String>)strSet19);
com.google.javascript.rhino.Node[] nodeArray23 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node24 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray23);
boolean boolean25 = node24.isGetterDef();
java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet30, strArray29);
node24.setDirectives((java.util.Set<java.lang.String>)strSet30);
java.lang.String[] strArray35 = new java.lang.String[] { "", "hi!" };
java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList36, strArray35);
com.google.javascript.rhino.Node[] nodeArray39 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node40 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray39);
boolean boolean41 = node40.isGetterDef();
java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet46, strArray45);
node40.setDirectives((java.util.Set<java.lang.String>)strSet46);
java.lang.String[] strArray50 = new java.lang.String[] { "Not declared as a constructor" };
java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList51, strArray50);
com.google.javascript.rhino.Node[] nodeArray54 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node55 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray54);
boolean boolean56 = node55.isGetterDef();
java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet61, strArray60);
node55.setDirectives((java.util.Set<java.lang.String>)strSet61);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList64 = com.google.common.collect.ImmutableList.of((java.util.Collection<java.lang.String>)strSet8, (java.util.Collection<java.lang.String>)strSet19, (java.util.Collection<java.lang.String>)strSet30, (java.util.Collection<java.lang.String>)strList36, (java.util.Collection<java.lang.String>)strSet46, (java.util.Collection<java.lang.String>)strList51, (java.util.Collection<java.lang.String>)strSet61);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList65 = strCollectionList64.reverse();
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList66 = strCollectionList64.reverse();
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList67 = strCollectionList66.reverse();
java.lang.String str68 = strCollectionList67.toString();
int int70 = strCollectionList67.lastIndexOf((java.lang.Object)' ');
java.lang.Object obj71 = null;
int int72 = strCollectionList67.indexOf(obj71);
java.util.ListIterator<java.util.Collection<java.lang.String>> strCollectionItor74 = strCollectionList67.listIterator(1);
java.util.function.UnaryOperator<java.util.Collection<java.lang.String>> strCollectionUnaryOperator75 = null;
strCollectionList67.replaceAll(strCollectionUnaryOperator75);


Progress update: steps=141000, test inputs generated=56601, failing inputs=6      (2022-02-23T03:56:26.299Z     868M used)Long generation time 1010 msec for null sequence.
Long generation time 3490 msec for null sequence.

Progress update: steps=142000, test inputs generated=57019, failing inputs=6      (2022-02-23T03:56:37.250Z     1.13G used)Long generation time 1003 msec for null sequence.

Progress update: steps=142948, test inputs generated=57389, failing inputs=6      (2022-02-23T03:56:49.432Z     650M used)Long generation time 1180 msec (= 1180 + 0) for
com.google.javascript.rhino.Node[] nodeArray1 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node2 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray1);
boolean boolean3 = node2.isGetterDef();
java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet8, strArray7);
node2.setDirectives((java.util.Set<java.lang.String>)strSet8);
com.google.javascript.rhino.Node[] nodeArray12 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node13 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray12);
boolean boolean14 = node13.isGetterDef();
java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet19, strArray18);
node13.setDirectives((java.util.Set<java.lang.String>)strSet19);
com.google.javascript.rhino.Node[] nodeArray23 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node24 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray23);
boolean boolean25 = node24.isGetterDef();
java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet30, strArray29);
node24.setDirectives((java.util.Set<java.lang.String>)strSet30);
java.lang.String[] strArray35 = new java.lang.String[] { "", "hi!" };
java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList36, strArray35);
com.google.javascript.rhino.Node[] nodeArray39 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node40 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray39);
boolean boolean41 = node40.isGetterDef();
java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet46, strArray45);
node40.setDirectives((java.util.Set<java.lang.String>)strSet46);
java.lang.String[] strArray50 = new java.lang.String[] { "Not declared as a constructor" };
java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList51, strArray50);
com.google.javascript.rhino.Node[] nodeArray54 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node55 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray54);
boolean boolean56 = node55.isGetterDef();
java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet61, strArray60);
node55.setDirectives((java.util.Set<java.lang.String>)strSet61);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList64 = com.google.common.collect.ImmutableList.of((java.util.Collection<java.lang.String>)strSet8, (java.util.Collection<java.lang.String>)strSet19, (java.util.Collection<java.lang.String>)strSet30, (java.util.Collection<java.lang.String>)strList36, (java.util.Collection<java.lang.String>)strSet46, (java.util.Collection<java.lang.String>)strList51, (java.util.Collection<java.lang.String>)strSet61);
java.util.ListIterator<java.util.Collection<java.lang.String>> strCollectionItor65 = strCollectionList64.listIterator();
java.util.List<java.util.Collection<java.lang.String>> strCollectionList68 = strCollectionList64.subList(0, (int)(short)0);
com.google.javascript.rhino.Node[] nodeArray70 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node71 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray70);
boolean boolean72 = node71.isGetterDef();
boolean boolean73 = node71.isFalse();
boolean boolean74 = node71.isDefaultCase();
boolean boolean75 = node71.isCall();
boolean boolean76 = strCollectionList64.equals((java.lang.Object)node71);
com.google.common.collect.UnmodifiableListIterator<java.util.Collection<java.lang.String>> strCollectionItor77 = strCollectionList64.listIterator();
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList78 = strCollectionList64.reverse();
com.google.javascript.rhino.JSDocInfo jSDocInfo79 = new com.google.javascript.rhino.JSDocInfo();
java.lang.String str80 = jSDocInfo79.getDeprecationReason();
java.util.Set<java.lang.String> strSet81 = jSDocInfo79.getModifies();
com.google.javascript.rhino.JSTypeExpression jSTypeExpression82 = jSDocInfo79.getReturnType();
boolean boolean83 = jSDocInfo79.isIdGenerator();
boolean boolean84 = jSDocInfo79.isNoCompile();
boolean boolean85 = jSDocInfo79.isOverride();
com.google.javascript.rhino.JSTypeExpression jSTypeExpression86 = jSDocInfo79.getEnumParameterType();
java.util.Collection<com.google.javascript.rhino.JSDocInfo.Marker> markerCollection87 = jSDocInfo79.getMarkers();
java.lang.String str88 = jSDocInfo79.getMeaning();
boolean boolean89 = jSDocInfo79.isConstant();
com.google.javascript.rhino.JSTypeExpression jSTypeExpression90 = jSDocInfo79.getTypedefType();
boolean boolean91 = jSDocInfo79.isExpose();
int int92 = strCollectionList64.lastIndexOf((java.lang.Object)boolean91);
java.util.Collection<java.lang.String> strCollection94 = strCollectionList64.get(42);


Progress update: steps=143000, test inputs generated=57406, failing inputs=6      (2022-02-23T03:56:50.519Z     897M used)Long generation time 1150 msec for null sequence.
Long generation time 1052 msec for null sequence.

Progress update: steps=144000, test inputs generated=57786, failing inputs=6      (2022-02-23T03:57:04.499Z     864M used)Long generation time 1143 msec (= 1143 + 0) for
com.google.javascript.rhino.Node[] nodeArray1 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node2 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray1);
boolean boolean3 = node2.isGetterDef();
java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet8, strArray7);
node2.setDirectives((java.util.Set<java.lang.String>)strSet8);
com.google.javascript.rhino.Node[] nodeArray12 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node13 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray12);
boolean boolean14 = node13.isGetterDef();
java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet19, strArray18);
node13.setDirectives((java.util.Set<java.lang.String>)strSet19);
com.google.javascript.rhino.Node[] nodeArray23 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node24 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray23);
boolean boolean25 = node24.isGetterDef();
java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet30, strArray29);
node24.setDirectives((java.util.Set<java.lang.String>)strSet30);
java.lang.String[] strArray35 = new java.lang.String[] { "", "hi!" };
java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList36, strArray35);
com.google.javascript.rhino.Node[] nodeArray39 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node40 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray39);
boolean boolean41 = node40.isGetterDef();
java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet46, strArray45);
node40.setDirectives((java.util.Set<java.lang.String>)strSet46);
java.lang.String[] strArray50 = new java.lang.String[] { "Not declared as a constructor" };
java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList51, strArray50);
com.google.javascript.rhino.Node[] nodeArray54 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node55 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray54);
boolean boolean56 = node55.isGetterDef();
java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet61, strArray60);
node55.setDirectives((java.util.Set<java.lang.String>)strSet61);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList64 = com.google.common.collect.ImmutableList.of((java.util.Collection<java.lang.String>)strSet8, (java.util.Collection<java.lang.String>)strSet19, (java.util.Collection<java.lang.String>)strSet30, (java.util.Collection<java.lang.String>)strList36, (java.util.Collection<java.lang.String>)strSet46, (java.util.Collection<java.lang.String>)strList51, (java.util.Collection<java.lang.String>)strSet61);
java.util.ListIterator<java.util.Collection<java.lang.String>> strCollectionItor65 = strCollectionList64.listIterator();
java.util.List<java.util.Collection<java.lang.String>> strCollectionList68 = strCollectionList64.subList(0, (int)(short)0);
com.google.javascript.rhino.Node[] nodeArray70 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node71 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray70);
boolean boolean72 = node71.isGetterDef();
boolean boolean73 = node71.isFalse();
boolean boolean74 = node71.isDefaultCase();
boolean boolean75 = node71.isCall();
boolean boolean76 = strCollectionList64.equals((java.lang.Object)node71);
boolean boolean77 = strCollectionList64.isEmpty();
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList78 = strCollectionList64.asList();
com.google.javascript.rhino.Node node82 = com.google.javascript.rhino.Node.newNumber((double)10.0f, 1, 38);
com.google.javascript.rhino.JSTypeExpression jSTypeExpression84 = new com.google.javascript.rhino.JSTypeExpression(node82, "hi!");
com.google.javascript.rhino.JSTypeExpression jSTypeExpression85 = com.google.javascript.rhino.JSTypeExpression.makeOptionalArg(jSTypeExpression84);
boolean boolean86 = jSTypeExpression84.isOptionalArg();
boolean boolean87 = jSTypeExpression84.isVarArgs();
int int88 = strCollectionList64.lastIndexOf((java.lang.Object)boolean87);
int int89 = strCollectionList64.size();

Long generation time 1115 msec (= 1115 + 0) for
com.google.javascript.rhino.Node[] nodeArray1 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node2 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray1);
boolean boolean3 = node2.isGetterDef();
java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet8, strArray7);
node2.setDirectives((java.util.Set<java.lang.String>)strSet8);
com.google.javascript.rhino.Node[] nodeArray12 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node13 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray12);
boolean boolean14 = node13.isGetterDef();
java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet19, strArray18);
node13.setDirectives((java.util.Set<java.lang.String>)strSet19);
com.google.javascript.rhino.Node[] nodeArray23 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node24 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray23);
boolean boolean25 = node24.isGetterDef();
java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet30, strArray29);
node24.setDirectives((java.util.Set<java.lang.String>)strSet30);
java.lang.String[] strArray35 = new java.lang.String[] { "", "hi!" };
java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList36, strArray35);
com.google.javascript.rhino.Node[] nodeArray39 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node40 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray39);
boolean boolean41 = node40.isGetterDef();
java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet46, strArray45);
node40.setDirectives((java.util.Set<java.lang.String>)strSet46);
java.lang.String[] strArray50 = new java.lang.String[] { "Not declared as a constructor" };
java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList51, strArray50);
com.google.javascript.rhino.Node[] nodeArray54 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node55 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray54);
boolean boolean56 = node55.isGetterDef();
java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet61, strArray60);
node55.setDirectives((java.util.Set<java.lang.String>)strSet61);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList64 = com.google.common.collect.ImmutableList.of((java.util.Collection<java.lang.String>)strSet8, (java.util.Collection<java.lang.String>)strSet19, (java.util.Collection<java.lang.String>)strSet30, (java.util.Collection<java.lang.String>)strList36, (java.util.Collection<java.lang.String>)strSet46, (java.util.Collection<java.lang.String>)strList51, (java.util.Collection<java.lang.String>)strSet61);
java.util.ListIterator<java.util.Collection<java.lang.String>> strCollectionItor65 = strCollectionList64.listIterator();
java.util.List<java.util.Collection<java.lang.String>> strCollectionList68 = strCollectionList64.subList(0, (int)(short)0);
com.google.javascript.rhino.Node[] nodeArray70 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node71 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray70);
boolean boolean72 = node71.isGetterDef();
boolean boolean73 = node71.isFalse();
boolean boolean74 = node71.isDefaultCase();
boolean boolean75 = node71.isCall();
boolean boolean76 = strCollectionList64.equals((java.lang.Object)node71);
boolean boolean77 = strCollectionList64.isEmpty();
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList78 = strCollectionList64.asList();
com.google.javascript.rhino.Node node82 = com.google.javascript.rhino.Node.newNumber((double)10.0f, 1, 38);
com.google.javascript.rhino.JSTypeExpression jSTypeExpression84 = new com.google.javascript.rhino.JSTypeExpression(node82, "hi!");
com.google.javascript.rhino.JSTypeExpression jSTypeExpression85 = com.google.javascript.rhino.JSTypeExpression.makeOptionalArg(jSTypeExpression84);
boolean boolean86 = jSTypeExpression84.isOptionalArg();
boolean boolean87 = jSTypeExpression84.isVarArgs();
int int88 = strCollectionList64.lastIndexOf((java.lang.Object)boolean87);
int int89 = strCollectionList64.size();
int int90 = strCollectionList64.size();

Long generation time 1012 msec (= 1012 + 0) for
com.google.javascript.rhino.Node[] nodeArray1 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node2 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray1);
boolean boolean3 = node2.isGetterDef();
java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet8, strArray7);
node2.setDirectives((java.util.Set<java.lang.String>)strSet8);
com.google.javascript.rhino.Node[] nodeArray12 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node13 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray12);
boolean boolean14 = node13.isGetterDef();
java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet19, strArray18);
node13.setDirectives((java.util.Set<java.lang.String>)strSet19);
com.google.javascript.rhino.Node[] nodeArray23 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node24 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray23);
boolean boolean25 = node24.isGetterDef();
java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet30, strArray29);
node24.setDirectives((java.util.Set<java.lang.String>)strSet30);
java.lang.String[] strArray35 = new java.lang.String[] { "", "hi!" };
java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList36, strArray35);
com.google.javascript.rhino.Node[] nodeArray39 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node40 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray39);
boolean boolean41 = node40.isGetterDef();
java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet46, strArray45);
node40.setDirectives((java.util.Set<java.lang.String>)strSet46);
java.lang.String[] strArray50 = new java.lang.String[] { "Not declared as a constructor" };
java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList51, strArray50);
com.google.javascript.rhino.Node[] nodeArray54 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node55 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray54);
boolean boolean56 = node55.isGetterDef();
java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet61, strArray60);
node55.setDirectives((java.util.Set<java.lang.String>)strSet61);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList64 = com.google.common.collect.ImmutableList.of((java.util.Collection<java.lang.String>)strSet8, (java.util.Collection<java.lang.String>)strSet19, (java.util.Collection<java.lang.String>)strSet30, (java.util.Collection<java.lang.String>)strList36, (java.util.Collection<java.lang.String>)strSet46, (java.util.Collection<java.lang.String>)strList51, (java.util.Collection<java.lang.String>)strSet61);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList65 = strCollectionList64.reverse();
java.util.ListIterator<java.util.Collection<java.lang.String>> strCollectionItor67 = strCollectionList65.listIterator(2);
boolean boolean69 = strCollectionList65.contains((java.lang.Object)(short)10);
int int71 = strCollectionList65.indexOf((java.lang.Object)10.0f);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList72 = strCollectionList65.reverse();
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList73 = strCollectionList65.asList();
com.google.javascript.rhino.JSDocInfo jSDocInfo74 = new com.google.javascript.rhino.JSDocInfo();
java.lang.String str75 = jSDocInfo74.getDeprecationReason();
boolean boolean76 = jSDocInfo74.isInterface();
boolean boolean77 = jSDocInfo74.isConstructor();
com.google.javascript.rhino.JSTypeExpression jSTypeExpression78 = jSDocInfo74.getBaseType();
boolean boolean79 = jSDocInfo74.isConstructor();
java.lang.String str80 = jSDocInfo74.getReturnDescription();
java.util.Set<java.lang.String> strSet81 = jSDocInfo74.getParameterNames();
boolean boolean82 = strCollectionList65.contains((java.lang.Object)jSDocInfo74);


Progress update: steps=145000, test inputs generated=58201, failing inputs=6      (2022-02-23T03:57:16.804Z     1.17G used)Long generation time 1066 msec (= 1066 + 0) for
com.google.javascript.rhino.Node[] nodeArray1 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node2 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray1);
boolean boolean3 = node2.isGetterDef();
java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet8, strArray7);
node2.setDirectives((java.util.Set<java.lang.String>)strSet8);
com.google.javascript.rhino.Node[] nodeArray12 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node13 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray12);
boolean boolean14 = node13.isGetterDef();
java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet19, strArray18);
node13.setDirectives((java.util.Set<java.lang.String>)strSet19);
com.google.javascript.rhino.Node[] nodeArray23 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node24 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray23);
boolean boolean25 = node24.isGetterDef();
java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet30, strArray29);
node24.setDirectives((java.util.Set<java.lang.String>)strSet30);
java.lang.String[] strArray35 = new java.lang.String[] { "", "hi!" };
java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList36, strArray35);
com.google.javascript.rhino.Node[] nodeArray39 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node40 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray39);
boolean boolean41 = node40.isGetterDef();
java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet46, strArray45);
node40.setDirectives((java.util.Set<java.lang.String>)strSet46);
java.lang.String[] strArray50 = new java.lang.String[] { "Not declared as a constructor" };
java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList51, strArray50);
com.google.javascript.rhino.Node[] nodeArray54 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node55 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray54);
boolean boolean56 = node55.isGetterDef();
java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet61, strArray60);
node55.setDirectives((java.util.Set<java.lang.String>)strSet61);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList64 = com.google.common.collect.ImmutableList.of((java.util.Collection<java.lang.String>)strSet8, (java.util.Collection<java.lang.String>)strSet19, (java.util.Collection<java.lang.String>)strSet30, (java.util.Collection<java.lang.String>)strList36, (java.util.Collection<java.lang.String>)strSet46, (java.util.Collection<java.lang.String>)strList51, (java.util.Collection<java.lang.String>)strSet61);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList65 = strCollectionList64.reverse();
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList66 = strCollectionList64.reverse();
int int67 = strCollectionList64.size();
com.google.javascript.rhino.Node[] nodeArray69 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node70 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray69);
com.google.javascript.rhino.Node node71 = node70.getNext();
boolean boolean72 = node70.isOnlyModifiesThisCall();
boolean boolean73 = node70.isCall();
int int74 = node70.getSideEffectFlags();
com.google.javascript.rhino.Node node78 = com.google.javascript.rhino.Node.newString("", (int)'4', (int)(short)0);
node78.setIsSyntheticBlock(false);
java.util.Set<java.lang.String> strSet81 = node78.getDirectives();
boolean boolean82 = node70.isEquivalentTo(node78);
java.lang.Object obj84 = node70.getProp(12);
boolean boolean85 = node70.isGetElem();
boolean boolean86 = strCollectionList64.equals((java.lang.Object)node70);
java.util.Iterator<java.util.Collection<java.lang.String>> strCollectionItor87 = strCollectionList64.iterator();
com.google.common.collect.UnmodifiableIterator<java.util.Collection<java.lang.String>> strCollectionItor88 = strCollectionList64.iterator();
java.util.Spliterator<java.util.Collection<java.lang.String>> strCollectionSpliterator89 = strCollectionList64.spliterator();
java.util.ListIterator<java.util.Collection<java.lang.String>> strCollectionItor90 = strCollectionList64.listIterator();
java.util.Spliterator<java.util.Collection<java.lang.String>> strCollectionSpliterator91 = strCollectionList64.spliterator();


Progress update: steps=146000, test inputs generated=58591, failing inputs=6      (2022-02-23T03:57:27.775Z     1.35G used)Long generation time 1122 msec for null sequence.
Long generation time 1240 msec (= 1240 + 0) for
com.google.javascript.rhino.Node[] nodeArray1 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node2 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray1);
boolean boolean3 = node2.isGetterDef();
java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet8, strArray7);
node2.setDirectives((java.util.Set<java.lang.String>)strSet8);
com.google.javascript.rhino.Node[] nodeArray12 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node13 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray12);
boolean boolean14 = node13.isGetterDef();
java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet19, strArray18);
node13.setDirectives((java.util.Set<java.lang.String>)strSet19);
com.google.javascript.rhino.Node[] nodeArray23 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node24 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray23);
boolean boolean25 = node24.isGetterDef();
java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet30, strArray29);
node24.setDirectives((java.util.Set<java.lang.String>)strSet30);
java.lang.String[] strArray35 = new java.lang.String[] { "", "hi!" };
java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList36, strArray35);
com.google.javascript.rhino.Node[] nodeArray39 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node40 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray39);
boolean boolean41 = node40.isGetterDef();
java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet46, strArray45);
node40.setDirectives((java.util.Set<java.lang.String>)strSet46);
java.lang.String[] strArray50 = new java.lang.String[] { "Not declared as a constructor" };
java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strList51, strArray50);
com.google.javascript.rhino.Node[] nodeArray54 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node55 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray54);
boolean boolean56 = node55.isGetterDef();
java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>)strSet61, strArray60);
node55.setDirectives((java.util.Set<java.lang.String>)strSet61);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList64 = com.google.common.collect.ImmutableList.of((java.util.Collection<java.lang.String>)strSet8, (java.util.Collection<java.lang.String>)strSet19, (java.util.Collection<java.lang.String>)strSet30, (java.util.Collection<java.lang.String>)strList36, (java.util.Collection<java.lang.String>)strSet46, (java.util.Collection<java.lang.String>)strList51, (java.util.Collection<java.lang.String>)strSet61);
com.google.common.collect.ImmutableList<java.util.Collection<java.lang.String>> strCollectionList65 = strCollectionList64.reverse();
com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString("", (int)'4', (int)(short)0);
com.google.javascript.rhino.Node[] nodeArray71 = new com.google.javascript.rhino.Node[] {  };
com.google.javascript.rhino.Node node72 = new com.google.javascript.rhino.Node((int)(byte)10, nodeArray71);
boolean boolean73 = node72.isGetterDef();
com.google.javascript.rhino.Node node74 = node69.copyInformationFromForTree(node72);
java.lang.Object obj76 = node74.getProp((int)(short)-1);
boolean boolean77 = node74.isParamList();
int int78 = strCollectionList65.indexOf((java.lang.Object)node74);
java.lang.Object obj79 = null;
boolean boolean80 = strCollectionList65.equals(obj79);
com.google.javascript.rhino.JSDocInfo jSDocInfo81 = new com.google.javascript.rhino.JSDocInfo();
java.lang.String str82 = jSDocInfo81.getDeprecationReason();
boolean boolean83 = jSDocInfo81.isInterface();
boolean boolean84 = jSDocInfo81.isConstructor();
boolean boolean85 = jSDocInfo81.isNoAlias();
java.lang.String str86 = jSDocInfo81.getFileOverview();
java.lang.String str87 = jSDocInfo81.getDescription();
boolean boolean88 = jSDocInfo81.isExport();
boolean boolean89 = jSDocInfo81.isExterns();
boolean boolean90 = strCollectionList65.remove((java.lang.Object)jSDocInfo81);


Progress update: steps=147000, test inputs generated=58985, failing inputs=6      (2022-02-23T03:57:38.168Z     248M used)Long generation time 1869 msec for null sequence.

Progress update: steps=148000, test inputs generated=59372, failing inputs=6      (2022-02-23T03:57:47.919Z     809M used)
Progress update: steps=148080, test inputs generated=59408, failing inputs=6      (2022-02-23T03:57:49.433Z     277M used)
Progress update: steps=148080, test inputs generated=59409, failing inputs=6      (2022-02-23T03:57:49.461Z     296M used)
Normal method executions: 69451860
Exceptional method executions: 6679

Average method execution time (normal termination):      9.87e-05
Average method execution time (exceptional termination): 0.0364
Approximate memory usage 296M
Explorer = ForwardGenerator(steps: 148080, null steps: 88671, num_sequences_generated: 59409;
    allSequences: 59409, regresson seqs: 399, error seqs: 6=6=6, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 59004;
    runtimePrimitivesSeen:516)

Error-revealing test output:
Error-revealing test count: 6
Writing error-revealing JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.PrototypeObjectType-com.google.javascript.rhino.jstype.JSType-13/ErrorTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.PrototypeObjectType-com.google.javascript.rhino.jstype.JSType-13/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 221 regression sequences.

Regression test output:
Regression test count: 221
Writing regression JUnit tests...
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.PrototypeObjectType-com.google.javascript.rhino.jstype.JSType-13/RegressionTest0.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.PrototypeObjectType-com.google.javascript.rhino.jstype.JSType-13/RegressionTest1.java
Created file /experiment/results/randoop10/closure-com.google.javascript.rhino.jstype.PrototypeObjectType-com.google.javascript.rhino.jstype.JSType-13/RegressionTest.java
Wrote regression JUnit tests.
About to look for flaky methods.

Invalid tests generated: 0
