Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".
Cannot instantiate non-accessible class org.mockito.asm.MethodWriter specified via --testclass or --classlist; will use its static methods.

Will try to generate tests for 12 classes.
PUBLIC MEMBERS=120
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=16, test inputs generated=0, failing inputs=0      (2022-02-22T16:14:07.259Z     226M used)
Progress update: steps=1000, test inputs generated=717, failing inputs=0      (2022-02-22T16:14:35.277Z     1.27G used)
Progress update: steps=2000, test inputs generated=1493, failing inputs=0      (2022-02-22T16:14:47.533Z     1.11G used)
Progress update: steps=3000, test inputs generated=2271, failing inputs=0      (2022-02-22T16:14:59.443Z     1.98G used)
Progress update: steps=3684, test inputs generated=2764, failing inputs=0      (2022-02-22T16:15:07.389Z     2.09G used)
Progress update: steps=4000, test inputs generated=3005, failing inputs=0      (2022-02-22T16:15:10.735Z     3.18G used)Long execution time 12 sec for
org.mockito.asm.ClassReader classReader1 = new org.mockito.asm.ClassReader("java.io.IOException");
int int3 = classReader1.getItem((int)' ');
char[] charArray9 = new char[] { '#', '4', '#', '4' };
java.lang.Object obj10 = classReader1.readConst(10, charArray9);
org.mockito.asm.ClassWriter classWriter12 = new org.mockito.asm.ClassWriter((int)(byte)100);
int int14 = classWriter12.newUTF8("L1538849750");
classReader1.accept((org.mockito.asm.ClassVisitor)classWriter12, 3);
int int17 = classReader1.getAccess();
char[] charArray20 = new char[] { 'a' };
java.lang.String str21 = classReader1.readClass(11, charArray20);
short short23 = classReader1.readShort(1);
java.lang.String str24 = classReader1.getSuperName();
int int25 = classReader1.header;
java.lang.String str26 = classReader1.getSuperName();


Progress update: steps=5000, test inputs generated=3743, failing inputs=0      (2022-02-22T16:15:39.390Z     2.87G used)
Progress update: steps=6000, test inputs generated=4472, failing inputs=0      (2022-02-22T16:15:53.169Z     3.09G used)Long generation time 2250 msec for null sequence.

Progress update: steps=6763, test inputs generated=5039, failing inputs=0      (2022-02-22T16:16:07.390Z     3.90G used)
Progress update: steps=7000, test inputs generated=5208, failing inputs=0      (2022-02-22T16:16:17.360Z     3.00G used)Long generation time 4558 msec (= 4558 + 0) for
org.mockito.asm.ClassReader classReader1 = new org.mockito.asm.ClassReader("java.io.IOException");
int int3 = classReader1.getItem((int)' ');
char[] charArray9 = new char[] { '#', '4', '#', '4' };
java.lang.Object obj10 = classReader1.readConst(10, charArray9);
org.mockito.asm.ClassWriter classWriter12 = new org.mockito.asm.ClassWriter(classReader1, 6);
java.lang.String str13 = classReader1.getSuperName();
java.lang.String str14 = classReader1.getClassName();
org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int)(byte)100);
classWriter16.visitInnerClass("", "", "hi!", (int)(short)100);
int int25 = classWriter16.newField("hi!", "", "");
java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "java.io.IOException", "java.io.IOException", "java.io.IOException", "hi!" };
classWriter16.visit(1, (int)' ', "", "", "", strArray36);
classWriter16.visitEnd();
classWriter16.visitSource("java.io.IOException", "L353974852");
java.lang.String[] strArray47 = new java.lang.String[] {  };
classWriter16.visit((int)(byte)10, 6, "", "hi!", "java.io.IOException", strArray47);
classReader1.accept((org.mockito.asm.ClassVisitor)classWriter16, 0);
java.lang.String str51 = classReader1.getSuperName();
int int53 = classReader1.readInt(11);
int int54 = classReader1.header;


Progress update: steps=8000, test inputs generated=5939, failing inputs=0      (2022-02-22T16:16:38.782Z     3.73G used)Long generation time 1408 msec (= 1408 + 0) for
org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int)(byte)100);
classWriter1.visitInnerClass("", "hi!", "", 10);
classWriter1.visitEnd();
classWriter1.visitInnerClass("java.io.IOException", "java.io.IOException", "java.io.IOException", (int)(byte)1);
java.lang.String[] strArray17 = null;
org.mockito.asm.MethodVisitor methodVisitor18 = classWriter1.visitMethod((int)(short)6, "L1735395217", "L321429153", "L94782917", strArray17);
byte[] byteArray19 = classWriter1.toByteArray();
org.mockito.asm.ClassReader classReader20 = new org.mockito.asm.ClassReader(byteArray19);

Long generation time 7213 msec (= 7212 + 0) for
org.mockito.asm.ClassReader classReader1 = new org.mockito.asm.ClassReader("java.io.IOException");
int int3 = classReader1.getItem((int)' ');
char[] charArray9 = new char[] { '#', '4', '#', '4' };
java.lang.Object obj10 = classReader1.readConst(10, charArray9);
org.mockito.asm.ClassWriter classWriter12 = new org.mockito.asm.ClassWriter((int)(byte)100);
int int14 = classWriter12.newUTF8("L1538849750");
classReader1.accept((org.mockito.asm.ClassVisitor)classWriter12, 3);
int int17 = classReader1.getAccess();
long long19 = classReader1.readLong((int)'4');
byte[] byteArray20 = classReader1.b;
org.mockito.asm.ClassReader classReader21 = new org.mockito.asm.ClassReader(byteArray20);
byte[] byteArray22 = classReader21.b;


Progress update: steps=9000, test inputs generated=6626, failing inputs=0      (2022-02-22T16:17:04.777Z     3.68G used)
Progress update: steps=9177, test inputs generated=6761, failing inputs=0      (2022-02-22T16:17:07.391Z     3.71G used)Long generation time 1522 msec (= 1522 + 0) for
org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int)(byte)100);
int int4 = classWriter1.newNameType("hi!", "");
int int6 = classWriter1.newClass("");
int int11 = classWriter1.newMethod("", "java.io.IOException", "hi!", false);
org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int)(byte)100);
org.mockito.asm.ClassWriter classWriter24 = new org.mockito.asm.ClassWriter((int)(byte)100);
classWriter24.visitInnerClass("", "hi!", "", 10);
java.lang.String[] strArray34 = new java.lang.String[] {  };
org.mockito.asm.MethodVisitor methodVisitor35 = classWriter24.visitMethod((int)' ', "hi!", "java.io.IOException", "hi!", strArray34);
classWriter17.visit((int)(byte)-1, (int)(byte)10, "", "java.io.IOException", "", strArray34);
org.mockito.asm.MethodVisitor methodVisitor37 = classWriter1.visitMethod((int)(short)10, "java.io.IOException", "java/lang/Exception", "", strArray34);
methodVisitor37.visitIntInsn(5, 0);
methodVisitor37.visitMaxs(0, 0);
org.mockito.asm.AnnotationVisitor annotationVisitor46 = methodVisitor37.visitAnnotation("hi!", false);
methodVisitor37.visitMultiANewArrayInsn("L1783596884", 388);
methodVisitor37.visitFieldInsn(34, "L1667474086", "L856423319", "L1824797508");


Progress update: steps=10000, test inputs generated=7341, failing inputs=0      (2022-02-22T16:17:21.928Z     3.81G used)
Progress update: steps=11000, test inputs generated=8040, failing inputs=0      (2022-02-22T16:17:38.843Z     3.45G used)Long generation time 2502 msec for null sequence.

Progress update: steps=11635, test inputs generated=8491, failing inputs=0      (2022-02-22T16:18:07.551Z     3.94G used)Long generation time 1569 msec (= 1569 + 0) for
org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int)'#');
org.mockito.asm.ClassWriter classWriter8 = new org.mockito.asm.ClassWriter((int)(byte)100);
classWriter8.visitInnerClass("", "", "hi!", (int)(short)100);
int int17 = classWriter8.newField("hi!", "", "");
java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "java.io.IOException", "java.io.IOException", "java.io.IOException", "hi!" };
classWriter8.visit(1, (int)' ', "", "", "", strArray28);
int int33 = classWriter8.newField("L1538849750", "", "L353974852");
org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter((int)(byte)100);
classWriter40.visitInnerClass("", "", "hi!", (int)(short)100);
int int47 = classWriter40.newClass("hi!");
org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter((int)(byte)100);
classWriter54.visitInnerClass("", "", "hi!", (int)(short)100);
int int63 = classWriter54.newField("hi!", "", "");
java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "java.io.IOException", "java.io.IOException", "java.io.IOException", "hi!" };
classWriter54.visit(1, (int)' ', "", "", "", strArray74);
classWriter40.visit(10, (int)(byte)10, "", "", "", strArray74);
classWriter8.visit(13, 4, "L627476715", "L924711546", "L1489959510", strArray74);
classWriter1.visit((int)' ', 16, "L1568394883", "L353974852", "L350528796", strArray74);
classWriter1.visitInnerClass("L1079175072", "L647044365", "L1434480231", 778661678);
classWriter1.visitSource("", "L1378110322");


Progress update: steps=12000, test inputs generated=8746, failing inputs=0      (2022-02-22T16:18:20.462Z     3.97G used)
Progress update: steps=13000, test inputs generated=9433, failing inputs=0      (2022-02-22T16:18:56.979Z     4.00G used)
Progress update: steps=13296, test inputs generated=9637, failing inputs=0      (2022-02-22T16:19:07.986Z     3.95G used)
Progress update: steps=14000, test inputs generated=10144, failing inputs=0      (2022-02-22T16:19:37.451Z     3.98G used)
Progress update: steps=14721, test inputs generated=10669, failing inputs=0      (2022-02-22T16:20:08.124Z     3.96G used)
Progress update: steps=15000, test inputs generated=10876, failing inputs=0      (2022-02-22T16:20:23.154Z     3.97G used)
Progress update: steps=15858, test inputs generated=11483, failing inputs=0      (2022-02-22T16:21:08.386Z     3.98G used)
Progress update: steps=16000, test inputs generated=11593, failing inputs=0      (2022-02-22T16:21:17.608Z     3.98G used)
Progress update: steps=16691, test inputs generated=12100, failing inputs=0      (2022-02-22T16:22:08.688Z     3.98G used)
Progress update: steps=17000, test inputs generated=12316, failing inputs=0      (2022-02-22T16:22:33.368Z     4.00G used)
Progress update: steps=17352, test inputs generated=12567, failing inputs=0      (2022-02-22T16:23:08.851Z     3.99G used)
Progress update: steps=17790, test inputs generated=12867, failing inputs=0      (2022-02-22T16:24:07.387Z     4.00G used)
Normal method executions: 3527919
Exceptional method executions: 2363

Average method execution time (normal termination):      0.00461
Average method execution time (exceptional termination): 8.60
Approximate memory usage 4.00G
Explorer = ForwardGenerator(steps: 17790, null steps: 4923, num_sequences_generated: 12867;
    allSequences: 12867, regresson seqs: 10316, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 2551;
    runtimePrimitivesSeen:1513)

No error-revealing tests to output.

About to look for failing assertions in 5768 regression sequences.

Regression test output:
Regression test count: 5768
Writing regression JUnit tests...
                                                                                                                                                                                                       