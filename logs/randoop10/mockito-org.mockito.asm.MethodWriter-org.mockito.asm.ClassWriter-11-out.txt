Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".
Cannot instantiate non-accessible class org.mockito.asm.MethodWriter specified via --testclass or --classlist; will use its static methods.

Will try to generate tests for 12 classes.
PUBLIC MEMBERS=120
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2022-02-22T16:07:30.122Z     226M used)
Progress update: steps=1000, test inputs generated=527, failing inputs=0      (2022-02-22T16:07:46.668Z     794M used)
Progress update: steps=2000, test inputs generated=1175, failing inputs=0      (2022-02-22T16:07:59.900Z     840M used)
Progress update: steps=3000, test inputs generated=1927, failing inputs=0      (2022-02-22T16:08:20.680Z     1.43G used)
Progress update: steps=3371, test inputs generated=2208, failing inputs=0      (2022-02-22T16:08:30.154Z     309M used)
Progress update: steps=4000, test inputs generated=2679, failing inputs=0      (2022-02-22T16:08:41.775Z     1.58G used)
Progress update: steps=5000, test inputs generated=3410, failing inputs=0      (2022-02-22T16:09:01.189Z     1.54G used)Long execution time 13 sec for
org.mockito.asm.ByteVector byteVector0 = new org.mockito.asm.ByteVector();
org.mockito.asm.ByteVector byteVector2 = byteVector0.putLong((long)4);
org.mockito.asm.ByteVector byteVector4 = byteVector0.putByte((-889275714));
org.mockito.asm.ByteVector byteVector6 = byteVector0.putByte(33);
org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector();
org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("java.io.IOException: hi!");
org.mockito.asm.ByteVector byteVector11 = byteVector7.putShort((int)(short)10);
org.mockito.asm.ByteVector byteVector13 = byteVector11.putShort(6);
org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector();
org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("java.io.IOException: hi!");
org.mockito.asm.ByteVector byteVector18 = byteVector14.putShort((int)(short)10);
org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("L1992676412");
org.mockito.asm.ByteVector byteVector21 = new org.mockito.asm.ByteVector();
org.mockito.asm.ByteVector byteVector23 = byteVector21.putUTF8("java.io.IOException: hi!");
org.mockito.asm.ByteVector byteVector25 = byteVector21.putShort((int)(short)10);
org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("java.io.IOException: hi!");
org.mockito.asm.ClassWriter classWriter29 = new org.mockito.asm.ClassWriter((int)'a');
org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter29.visitAnnotation("hi!", false);
int int36 = classWriter29.newField("hi!", "", "java.io.IOException: hi!");
byte[] byteArray37 = classWriter29.toByteArray();
org.mockito.asm.ByteVector byteVector40 = byteVector25.putByteArray(byteArray37, 1, 7);
org.mockito.asm.ByteVector byteVector43 = byteVector18.putByteArray(byteArray37, 13, (int)(byte)100);
org.mockito.asm.ByteVector byteVector46 = byteVector13.putByteArray(byteArray37, (int)(byte)1, (int)'4');
org.mockito.asm.ByteVector byteVector49 = byteVector0.putByteArray(byteArray37, 6250, 1630431599);


Progress update: steps=5881, test inputs generated=4058, failing inputs=0      (2022-02-22T16:09:30.155Z     3.19G used)
Progress update: steps=6000, test inputs generated=4147, failing inputs=0      (2022-02-22T16:09:32.388Z     3.75G used)
Progress update: steps=7000, test inputs generated=4868, failing inputs=0      (2022-02-22T16:10:00.606Z     3.48G used)
Progress update: steps=8000, test inputs generated=5594, failing inputs=0      (2022-02-22T16:10:26.923Z     3.66G used)
Progress update: steps=8075, test inputs generated=5644, failing inputs=0      (2022-02-22T16:10:30.156Z     3.69G used)
Progress update: steps=9000, test inputs generated=6314, failing inputs=0      (2022-02-22T16:10:51.952Z     3.85G used)
Progress update: steps=10000, test inputs generated=7040, failing inputs=0      (2022-02-22T16:11:17.458Z     3.62G used)
Progress update: steps=10253, test inputs generated=7217, failing inputs=0      (2022-02-22T16:11:30.156Z     3.83G used)
Progress update: steps=11000, test inputs generated=7743, failing inputs=0      (2022-02-22T16:11:54.698Z     3.85G used)
Progress update: steps=12000, test inputs generated=8448, failing inputs=0      (2022-02-22T16:12:24.041Z     3.89G used)
Progress update: steps=12148, test inputs generated=8556, failing inputs=0      (2022-02-22T16:12:30.157Z     3.90G used)
Progress update: steps=13000, test inputs generated=9143, failing inputs=0      (2022-02-22T16:13:12.260Z     3.90G used)
Progress update: steps=13291, test inputs generated=9347, failing inputs=0      (2022-02-22T16:13:30.171Z     3.87G used)
Progress update: steps=14000, test inputs generated=9828, failing inputs=0      (2022-02-22T16:14:28.674Z     3.92G used)
Progress update: steps=14013, test inputs generated=9839, failing inputs=0      (2022-02-22T16:14:30.585Z     3.89G used)
Progress update: steps=14337, test inputs generated=10067, failing inputs=0      (2022-02-22T16:15:31.009Z     3.93G used)
Progress update: steps=14628, test inputs generated=10272, failing inputs=0      (2022-02-22T16:16:31.366Z     3.95G used)
Progress update: steps=14881, test inputs generated=10454, failing inputs=0      (2022-02-22T16:17:30.470Z     3.96G used)
Normal method executions: 3102962
Exceptional method executions: 2395

Average method execution time (normal termination):      0.00326
Average method execution time (exceptional termination): 9.53
Approximate memory usage 3.96G
Explorer = ForwardGenerator(steps: 14881, null steps: 4427, num_sequences_generated: 10454;
    allSequences: 10454, regresson seqs: 8804, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 1650;
    runtimePrimitivesSeen:2945)

No error-revealing tests to output.

About to look for failing assertions in 5082 regression sequences.

Regression test output:
Regression test count: 5082
Writing regression JUnit tests...
                                                                                                                                                                                                       