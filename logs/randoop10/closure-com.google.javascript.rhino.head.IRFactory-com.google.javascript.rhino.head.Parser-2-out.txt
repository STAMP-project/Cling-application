Randoop for Java version "4.3.0, local changes, branch master, commit 7af20ae, 2022-01-31".
Cannot instantiate non-accessible class com.google.javascript.rhino.head.Node$PropListItem specified via --testclass or --classlist.
Cannot instantiate non-accessible class com.google.javascript.rhino.head.ScriptableObject$Slot specified via --testclass or --classlist.

Will try to generate tests for 314 out of 316 classes.
PUBLIC MEMBERS=3687
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    runtimePrimitivesSeen:38)

Progress update: steps=6, test inputs generated=1, failing inputs=0      (2022-02-21T09:53:52.362Z     56.6M used)
Progress update: steps=1000, test inputs generated=416, failing inputs=2      (2022-02-21T09:54:05.730Z     843M used)
Progress update: steps=2000, test inputs generated=1116, failing inputs=5      (2022-02-21T09:54:22.025Z     1.29G used)
Progress update: steps=2609, test inputs generated=1568, failing inputs=9      (2022-02-21T09:54:52.387Z     1.23G used)Long execution time 372 sec for
java.time.temporal.TemporalUnit[] temporalUnitArray1 = new java.time.temporal.TemporalUnit[] {  };
java.util.ArrayList<java.time.temporal.TemporalUnit> temporalUnitList2 = new java.util.ArrayList<java.time.temporal.TemporalUnit>();
boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.time.temporal.TemporalUnit>)temporalUnitList2, temporalUnitArray1);
java.util.function.DoubleUnaryOperator doubleUnaryOperator4 = java.util.function.DoubleUnaryOperator.identity();
java.util.function.DoubleUnaryOperator doubleUnaryOperator5 = java.util.function.DoubleUnaryOperator.identity();
java.util.function.DoubleUnaryOperator doubleUnaryOperator6 = doubleUnaryOperator4.andThen(doubleUnaryOperator5);
double double8 = doubleUnaryOperator4.applyAsDouble((double)10L);
boolean boolean9 = temporalUnitList2.equals((java.lang.Object)doubleUnaryOperator4);
java.util.stream.DoubleStream doubleStream10 = java.util.stream.DoubleStream.iterate(100.0d, doubleUnaryOperator4);
java.util.stream.DoubleStream doubleStream11 = doubleStream10.parallel();
java.util.stream.DoubleStream doubleStream12 = doubleStream11.distinct();
java.util.OptionalDouble optionalDouble13 = doubleStream12.findFirst();


Progress update: steps=3000, test inputs generated=1850, failing inputs=10      (2022-02-21T10:00:53.130Z     2.14G used)