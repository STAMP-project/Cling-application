entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.cglib.core.EmitUtils
* Starting Client-0
* Connecting to master process on port 3327
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.cglib.core.EmitUtils
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 223
* Using seed 1566401951402
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 123 / 223
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.04932735426008968
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.19282511210762332
[MASTER] 17:39:42.616 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class java.lang.reflect.Method canUseFunctionalMocks=true, canBeMocked: false
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.25112107623318386
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.34977578475336324
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.37668161434977576
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.38565022421524664
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3901345291479821
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3901345291479821
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3901345291479821
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3901345291479821
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.39461883408071746
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3991031390134529
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.452914798206278
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5201793721973094
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5381165919282511
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5605381165919282
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5919282511210763
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
* Search finished after 302s and 914 generations, 412148 statements, best individual has fitness: 89.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 223
* Number of covered goals: 134
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
* Generated 58 tests with total length 387
* Resulting test suite's coverage: 60%
* Generating assertions
* Resulting test suite's mutation score: 6%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'EmitUtils_ESTest' to results/evosuite5/mockito-31-org.mockito.cglib.core.EmitUtils-19
* Done!

* Computation finished
