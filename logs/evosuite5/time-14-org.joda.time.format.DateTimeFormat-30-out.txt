entry: sources/time-14/build/classes
entry: defects4j/framework/projects/Time/lib/joda-convert-1.2.jar
** CP: sources/time-14/build/classes:defects4j/framework/projects/Time/lib/joda-convert-1.2.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.joda.time.format.DateTimeFormat
* Starting Client-0
* Connecting to master process on port 16340
* Analyzing classpath: 
  - sources/time-14/build/classes
  - defects4j/framework/projects/Time/lib/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.format.DateTimeFormat
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 434
* Using seed 1566095259851
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 64 / 434
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4216589861751152
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7557603686635944
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.771889400921659
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8179723502304147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.836405529953917
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8548387096774194
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8571428571428571
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8617511520737328
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.868663594470046
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8755760368663594
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8824884792626728
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8824884792626728
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8847926267281107
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8847926267281107
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8847926267281107
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8870967741935484
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8894009216589862
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8894009216589862
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8940092165898618
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8940092165898618
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8963133640552995
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8963133640552995
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8963133640552995
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8963133640552995
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8963133640552995
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8963133640552995
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8963133640552995
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8963133640552995
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8963133640552995
* Search finished after 301s and 2281 generations, 334124 statements, best individual has fitness: 45.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8963133640552995
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 434
* Number of covered goals: 364
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8963133640552995
* Generated 78 tests with total length 93
* Resulting test suite's coverage: 90%
* Generating assertions
[MASTER] 04:33:30.835 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6741% of time used, but only 30/78 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 16%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8963133640552995
* Compiling and checking tests
[MASTER] 04:33:43.634 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: I
[MASTER] 04:33:43.634 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("YYI");

[MASTER] 04:33:45.245 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.ComparisonFailure: expected:<1[2:59:56 AM +01:00]> but was:<1[/1/70 12:59 AM]>
[MASTER] 04:33:45.245 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormatter dateTimeFormatter0 = DateTimeFormat.shortDateTime();
String string0 = dateTimeFormatter0.print((-3979L));
assertEquals("12:59:56 AM +01:00", string0);


[MASTER] 04:33:48.672 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: L
[MASTER] 04:33:48.672 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("dx\"03e+%`:YL(Wdc");

[MASTER] 04:33:49.601 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: i
[MASTER] 04:33:49.601 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("C#Yh4diAEe[*8");

[MASTER] 04:33:50.098 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: b
[MASTER] 04:33:50.098 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("YDb");

[MASTER] 04:33:50.828 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: j
[MASTER] 04:33:50.828 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("E_YHj,&<J.\"\"");

[MASTER] 04:33:51.304 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: F
[MASTER] 04:33:51.304 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("YF");

[MASTER] 04:33:51.778 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: r
[MASTER] 04:33:51.779 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("2GxrYFNqAn373D");

[MASTER] 04:33:52.219 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: J
[MASTER] 04:33:52.220 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("YJi{6R +k=I.MS");

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing tests to file
* Writing JUnit test case 'DateTimeFormat_ESTest' to results/evosuite5/time-14-org.joda.time.format.DateTimeFormat-30
* Done!

* Computation finished
