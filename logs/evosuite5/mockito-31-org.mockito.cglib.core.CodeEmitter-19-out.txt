entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.cglib.core.CodeEmitter
* Starting Client-0
* Connecting to master process on port 21019
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.cglib.core.CodeEmitter
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 298
* Using seed 1565704738926
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 200 / 298
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.003355704697986577
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.006711409395973154
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.07046979865771812
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.32550335570469796
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6241610738255033
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8120805369127517
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.825503355704698
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8523489932885906
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8691275167785235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8791946308724832
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8791946308724832
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8959731543624161
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.912751677852349
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
* Search finished after 302s and 871 generations, 437140 statements, best individual has fitness: 22.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 92%
* Total number of goals: 298
* Number of covered goals: 273
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
* Generated 135 tests with total length 921
* Resulting test suite's coverage: 93%
* Generating assertions
* Resulting test suite's mutation score: 7%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9261744966442953
[MASTER] 16:05:23.004 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'CodeEmitter_ESTest' to results/evosuite5/mockito-31-org.mockito.cglib.core.CodeEmitter-19
* Done!

* Computation finished
