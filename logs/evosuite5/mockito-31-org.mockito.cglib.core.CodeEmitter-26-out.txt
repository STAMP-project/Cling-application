entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.cglib.core.CodeEmitter
* Starting Client-0
* Connecting to master process on port 6996
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.cglib.core.CodeEmitter
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 298
* Using seed 1566035013546
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 200 / 298
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.050335570469798654
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3053691275167785
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6577181208053692
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8557046979865772
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8791946308724832
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9161073825503355
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9328859060402684
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9395973154362416
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9395973154362416
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9395973154362416
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9395973154362416
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9463087248322147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9697986577181208
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9697986577181208
* Search finished after 301s and 1696 generations, 841116 statements, best individual has fitness: 9.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9697986577181208
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 298
* Number of covered goals: 281
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9697986577181208
* Generated 133 tests with total length 892
* Resulting test suite's coverage: 97%
* Generating assertions
* Resulting test suite's mutation score: 8%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9697986577181208
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'CodeEmitter_ESTest' to results/evosuite5/mockito-31-org.mockito.cglib.core.CodeEmitter-26
* Done!

* Computation finished
