entry: sources/closure-16/build/classes
entry: sources/closure-16/lib/args4j.jar
entry: sources/closure-16/lib/guava.jar
entry: sources/closure-16/lib/json.jar
entry: sources/closure-16/lib/jsr305.jar
entry: sources/closure-16/lib/protobuf-java.jar
entry: sources/closure-16/build/lib/rhino.jar
entry: sources/closure-16/lib/ant.jar
** CP: sources/closure-16/build/classes:sources/closure-16/lib/args4j.jar:sources/closure-16/lib/guava.jar:sources/closure-16/lib/json.jar:sources/closure-16/lib/jsr305.jar:sources/closure-16/lib/protobuf-java.jar:sources/closure-16/build/lib/rhino.jar:sources/closure-16/lib/ant.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: com.google.javascript.rhino.head.regexp.NativeRegExp
* Starting Client-0
* Connecting to master process on port 20446
* Analyzing classpath: 
  - sources/closure-16/build/classes
  - sources/closure-16/lib/args4j.jar
  - sources/closure-16/lib/guava.jar
  - sources/closure-16/lib/json.jar
  - sources/closure-16/lib/jsr305.jar
  - sources/closure-16/lib/protobuf-java.jar
  - sources/closure-16/build/lib/rhino.jar
  - sources/closure-16/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.head.regexp.NativeRegExp
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 1450
* Using seed 1566407360790
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 382 / 1450
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.07931034482758621
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.18413793103448275
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.21241379310344827
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.22689655172413792
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.23310344827586207
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2848275862068966
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3020689655172414
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.30689655172413793
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3082758620689655
[MASTER] 19:11:13.096 [logback-1] WARN  TestUsageChecker - class com.google.javascript.rhino.head.ContextFactory$1GlobalSetterImpl looks like an anonymous class, ignoring it (although reflection says false) GlobalSetterImpl
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3082758620689655
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3179310344827586
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3193103448275862
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3275862068965517
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3317241379310345
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3406896551724138
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3406896551724138
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3406896551724138
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3413793103448276
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3413793103448276
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3413793103448276
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.34551724137931034
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.34551724137931034
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35310344827586204
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35724137931034483
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35793103448275865
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35793103448275865
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35793103448275865
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35793103448275865
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35793103448275865
* Search finished after 304s and 351 generations, 100941 statements, best individual has fitness: 931.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35793103448275865
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 33%
* Total number of goals: 1450
* Number of covered goals: 484
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35793103448275865
* Generated 57 tests with total length 162
* Resulting test suite's coverage: 36%
* Generating assertions
[MASTER] 19:16:08.460 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7797% of time used, but only 0/57 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 0%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35793103448275865
* Compiling and checking tests
[MASTER] 19:16:49.211 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.google.javascript.rhino.head.ScriptRuntime but in com.google.javascript.rhino.head.regexp.NativeRegExp.execSub(NativeRegExp.java:260): java.lang.NullPointerException
[MASTER] 19:16:49.216 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NativeRegExp nativeRegExp0 = new NativeRegExp();
assertNotNull(nativeRegExp0);
assertFalse(nativeRegExp0.hasPrototypeMap());
assertEquals("object", nativeRegExp0.getTypeOf());
assertEquals("RegExp", nativeRegExp0.getClassName());
assertFalse(nativeRegExp0.isSealed());
assertTrue(nativeRegExp0.isExtensible());
assertTrue(nativeRegExp0.isEmpty());
assertFalse(nativeRegExp0.avoidObjectDetection());
assertEquals(4, ScriptableObject.PERMANENT);
assertEquals(2, ScriptableObject.DONTENUM);
assertEquals(1, NativeRegExp.MATCH);
assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
assertEquals(0, ScriptableObject.EMPTY);
assertEquals(1, NativeRegExp.JSREG_GLOB);
assertEquals(1, ScriptableObject.READONLY);
assertEquals(4, NativeRegExp.JSREG_MULTILINE);
assertEquals(13, ScriptableObject.CONST);
assertEquals(0, NativeRegExp.TEST);
assertEquals(2, NativeRegExp.PREFIX);
assertEquals(2, NativeRegExp.JSREG_FOLD);

Context context0 = new Context();
assertNotNull(context0);
assertFalse(context0.isGeneratingDebug());
assertEquals(0, context0.getInstructionObserverThreshold());
assertEquals(0, context0.getLanguageVersion());
assertFalse(context0.isSealed());
assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
assertFalse(context0.isGeneratingDebugChanged());
assertTrue(context0.isGeneratingSource());
assertEquals(0, context0.getOptimizationLevel());
assertEquals(170, Context.VERSION_1_7);
assertEquals(5, Context.FEATURE_PARENT_PROTO_PROPERTIES);
assertEquals(13, Context.FEATURE_ENHANCED_JAVA_ACCESS);
assertEquals(130, Context.VERSION_1_3);
assertEquals(2, Context.FEATURE_MEMBER_EXPR_AS_FUNCTION_NAME);
assertEquals(5, Context.FEATURE_PARENT_PROTO_PROPRTIES);
assertEquals(180, Context.VERSION_1_8);
assertEquals(0, Context.VERSION_DEFAULT);
assertEquals(140, Context.VERSION_1_4);
assertEquals(6, Context.FEATURE_E4X);
assertEquals(110, Context.VERSION_1_1);
assertEquals(1, Context.FEATURE_NON_ECMA_GET_YEAR);
assertEquals(160, Context.VERSION_1_6);
assertEquals(7, Context.FEATURE_DYNAMIC_SCOPE);
assertEquals(120, Context.VERSION_1_2);
assertEquals(100, Context.VERSION_1_0);
assertEquals(9, Context.FEATURE_STRICT_EVAL);
assertEquals((-1), Context.VERSION_UNKNOWN);
assertEquals(150, Context.VERSION_1_5);
assertEquals(8, Context.FEATURE_STRICT_VARS);
assertEquals(12, Context.FEATURE_WARNING_AS_ERROR);
assertEquals(4, Context.FEATURE_TO_STRING_AS_SOURCE);
assertEquals(10, Context.FEATURE_LOCATION_INFORMATION_IN_ERROR);
assertEquals(3, Context.FEATURE_RESERVED_KEYWORD_AS_IDENTIFIER);
assertFalse(context0.generateObserverCount);
assertEquals(11, Context.FEATURE_STRICT_MODE);

Object[] objectArray0 = new Object[1];
NativeRegExp nativeRegExp1 = (NativeRegExp)nativeRegExp0.compile(context0, nativeRegExp0, objectArray0);
assertSame(nativeRegExp0, nativeRegExp1);
assertSame(nativeRegExp1, nativeRegExp0);
assertNotNull(nativeRegExp1);
assertFalse(nativeRegExp0.hasPrototypeMap());
assertEquals("object", nativeRegExp0.getTypeOf());
assertEquals("RegExp", nativeRegExp0.getClassName());
assertFalse(nativeRegExp0.isSealed());
assertTrue(nativeRegExp0.isExtensible());
assertTrue(nativeRegExp0.isEmpty());
assertFalse(nativeRegExp0.avoidObjectDetection());
assertFalse(context0.isGeneratingDebug());
assertEquals(0, context0.getInstructionObserverThreshold());
assertEquals(0, context0.getLanguageVersion());
assertFalse(context0.isSealed());
assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
assertFalse(context0.isGeneratingDebugChanged());
assertTrue(context0.isGeneratingSource());
assertEquals(0, context0.getOptimizationLevel());
assertFalse(nativeRegExp1.isSealed());
assertEquals("RegExp", nativeRegExp1.getClassName());
assertTrue(nativeRegExp1.isEmpty());
assertFalse(nativeRegExp1.avoidObjectDetection());
assertEquals("object", nativeRegExp1.getTypeOf());
assertFalse(nativeRegExp1.hasPrototypeMap());
assertTrue(nativeRegExp1.isExtensible());
assertEquals(1, objectArray0.length);
assertEquals(4, ScriptableObject.PERMANENT);
assertEquals(2, ScriptableObject.DONTENUM);
assertEquals(1, NativeRegExp.MATCH);
assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
assertEquals(0, ScriptableObject.EMPTY);
assertEquals(1, NativeRegExp.JSREG_GLOB);
assertEquals(1, ScriptableObject.READONLY);
assertEquals(4, NativeRegExp.JSREG_MULTILINE);
assertEquals(13, ScriptableObject.CONST);
assertEquals(0, NativeRegExp.TEST);
assertEquals(2, NativeRegExp.PREFIX);
assertEquals(2, NativeRegExp.JSREG_FOLD);
assertEquals(170, Context.VERSION_1_7);
assertEquals(5, Context.FEATURE_PARENT_PROTO_PROPERTIES);
assertEquals(13, Context.FEATURE_ENHANCED_JAVA_ACCESS);
assertEquals(130, Context.VERSION_1_3);
assertEquals(2, Context.FEATURE_MEMBER_EXPR_AS_FUNCTION_NAME);
assertEquals(5, Context.FEATURE_PARENT_PROTO_PROPRTIES);
assertEquals(180, Context.VERSION_1_8);
assertEquals(0, Context.VERSION_DEFAULT);
assertEquals(140, Context.VERSION_1_4);
assertEquals(6, Context.FEATURE_E4X);
assertEquals(110, Context.VERSION_1_1);
assertEquals(1, Context.FEATURE_NON_ECMA_GET_YEAR);
assertEquals(160, Context.VERSION_1_6);
assertEquals(7, Context.FEATURE_DYNAMIC_SCOPE);
assertEquals(120, Context.VERSION_1_2);
assertEquals(100, Context.VERSION_1_0);
assertEquals(9, Context.FEATURE_STRICT_EVAL);
assertEquals((-1), Context.VERSION_UNKNOWN);
assertEquals(150, Context.VERSION_1_5);
assertEquals(8, Context.FEATURE_STRICT_VARS);
assertEquals(12, Context.FEATURE_WARNING_AS_ERROR);
assertEquals(4, Context.FEATURE_TO_STRING_AS_SOURCE);
assertEquals(10, Context.FEATURE_LOCATION_INFORMATION_IN_ERROR);
assertEquals(3, Context.FEATURE_RESERVED_KEYWORD_AS_IDENTIFIER);
assertFalse(context0.generateObserverCount);
assertEquals(11, Context.FEATURE_STRICT_MODE);
assertEquals(4, ScriptableObject.PERMANENT);
assertEquals(2, ScriptableObject.DONTENUM);
assertEquals(2, NativeRegExp.JSREG_FOLD);
assertEquals(1, ScriptableObject.READONLY);
assertEquals(1, NativeRegExp.MATCH);
assertEquals(0, NativeRegExp.TEST);
assertEquals(2, NativeRegExp.PREFIX);
assertEquals(1, NativeRegExp.JSREG_GLOB);
assertEquals(0, ScriptableObject.EMPTY);
assertEquals(4, NativeRegExp.JSREG_MULTILINE);
assertEquals(13, ScriptableObject.CONST);
assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);

nativeRegExp0.call(context0, nativeRegExp1, nativeRegExp1, context0.emptyArgs);

[MASTER] 19:17:23.916 [logback-1] WARN  TestSuiteGenerator - JUnit checking timed out
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
[MASTER] 19:17:23.943 [logback-1] WARN  TimeController - Phase JUNIT_CHECK lasted too long, 12 seconds more than allowed.
* Writing JUnit test case 'NativeRegExp_ESTest' to results/evosuite5/closure-16-com.google.javascript.rhino.head.regexp.NativeRegExp-15
* Done!

* Computation finished
