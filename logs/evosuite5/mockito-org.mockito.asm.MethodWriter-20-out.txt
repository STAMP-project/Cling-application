entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.asm.MethodWriter
* Starting Client-0
* Connecting to master process on port 16853
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.asm.MethodWriter
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 838
* Using seed 1566401938093
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 120 / 838
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.032219570405727926
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.21837708830548927
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.24224343675417662
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.32935560859188545
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4045346062052506
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4200477326968974
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.45465393794749404
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4665871121718377
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.46897374701670647
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4797136038186158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4809069212410501
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.48448687350835323
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4904534606205251
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4904534606205251
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4964200477326969
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5286396181384249
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5381861575178998
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5441527446300716
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5441527446300716
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5441527446300716
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5465393794749404
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5501193317422435
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5501193317422435
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5513126491646778
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5513126491646778
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5560859188544153
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5560859188544153
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5560859188544153
* Search finished after 302s and 522 generations, 377779 statements, best individual has fitness: 372.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5560859188544153
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 56%
* Total number of goals: 838
* Number of covered goals: 466
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5560859188544153
* Generated 114 tests with total length 508
* Resulting test suite's coverage: 56%
* Generating assertions
* Resulting test suite's mutation score: 8%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5560859188544153
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing tests to file
* Writing JUnit test case 'MethodWriter_ESTest' to results/evosuite5/mockito-31-org.mockito.asm.MethodWriter-20
* Done!

* Computation finished
