entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.cglib.core.EmitUtils
* Starting Client-0
* Connecting to master process on port 5783
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.cglib.core.EmitUtils
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 223
* Using seed 1566401947274
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 123 / 223
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.026905829596412557
[MASTER] 17:39:24.067 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class java.lang.reflect.Method canUseFunctionalMocks=true, canBeMocked: false
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.17040358744394618
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.25112107623318386
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.25112107623318386
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.29596412556053814
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.336322869955157
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4080717488789238
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4260089686098655
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5515695067264574
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.57847533632287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5964125560538116
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
* Search finished after 302s and 1146 generations, 571555 statements, best individual has fitness: 87.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 61%
* Total number of goals: 223
* Number of covered goals: 136
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
* Generated 59 tests with total length 401
* Resulting test suite's coverage: 61%
* Generating assertions
* Resulting test suite's mutation score: 4%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6098654708520179
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'EmitUtils_ESTest' to results/evosuite5/mockito-31-org.mockito.cglib.core.EmitUtils-11
* Done!

* Computation finished
