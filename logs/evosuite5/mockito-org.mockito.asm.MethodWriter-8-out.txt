entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.asm.MethodWriter
* Starting Client-0
* Connecting to master process on port 10061
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.asm.MethodWriter
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 838
* Using seed 1566334993636
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 120 / 838
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.025059665871121718
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.34725536992840095
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.41646778042959426
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4403341288782816
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4737470167064439
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4916467780429594
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5083532219570406
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5155131264916468
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5167064439140812
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5167064439140812
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5214797136038186
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5262529832935561
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5298329355608592
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5322195704057279
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5322195704057279
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5381861575178998
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5417661097852029
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5441527446300716
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5465393794749404
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5513126491646778
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5525059665871122
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5548926014319809
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5584725536992841
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5727923627684964
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5739856801909308
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5739856801909308
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5739856801909308
* Search finished after 303s and 466 generations, 317739 statements, best individual has fitness: 357.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5739856801909308
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 57%
* Total number of goals: 838
* Number of covered goals: 481
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5739856801909308
* Generated 113 tests with total length 552
* Resulting test suite's coverage: 57%
* Generating assertions
[MASTER] 23:09:21.404 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6724833333333333% of time used, but only 40/113 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 2%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5739856801909308
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'MethodWriter_ESTest' to results/evosuite5/mockito-31-org.mockito.asm.MethodWriter-8
* Done!

* Computation finished
