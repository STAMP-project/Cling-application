entry: sources/closure-16/build/classes
entry: sources/closure-16/lib/args4j.jar
entry: sources/closure-16/lib/guava.jar
entry: sources/closure-16/lib/json.jar
entry: sources/closure-16/lib/jsr305.jar
entry: sources/closure-16/lib/protobuf-java.jar
entry: sources/closure-16/build/lib/rhino.jar
entry: sources/closure-16/lib/ant.jar
** CP: sources/closure-16/build/classes:sources/closure-16/lib/args4j.jar:sources/closure-16/lib/guava.jar:sources/closure-16/lib/json.jar:sources/closure-16/lib/jsr305.jar:sources/closure-16/lib/protobuf-java.jar:sources/closure-16/build/lib/rhino.jar:sources/closure-16/lib/ant.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: com.google.javascript.rhino.head.FunctionObject
* Starting Client-0
* Connecting to master process on port 16506
* Analyzing classpath: 
  - sources/closure-16/build/classes
  - sources/closure-16/lib/args4j.jar
  - sources/closure-16/lib/guava.jar
  - sources/closure-16/lib/json.jar
  - sources/closure-16/lib/jsr305.jar
  - sources/closure-16/lib/protobuf-java.jar
  - sources/closure-16/build/lib/rhino.jar
  - sources/closure-16/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.head.FunctionObject
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 183
* Using seed 1565734997144
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 59 / 183
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.19672131147540983
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.28415300546448086
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.29508196721311475
[MASTER] 00:24:20.521 [logback-1] WARN  TestUsageChecker - class com.google.javascript.rhino.head.ContextFactory$1GlobalSetterImpl looks like an anonymous class, ignoring it (although reflection says false) GlobalSetterImpl
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.32786885245901637
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.33879781420765026
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.34972677595628415
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.453551912568306
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.546448087431694
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6065573770491803
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6065573770491803
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6557377049180327
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6557377049180327
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6557377049180327
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6557377049180327
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6557377049180327
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6557377049180327
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6557377049180327
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6557377049180327
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6557377049180327
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6557377049180327
* Search finished after 312s and 220 generations, 69153 statements, best individual has fitness: 63.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6557377049180327
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 183
* Number of covered goals: 120
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6557377049180327
* Generated 36 tests with total length 167
* Resulting test suite's coverage: 66%
* Generating assertions
[MASTER] 00:29:43.314 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.674% of time used, but only 3/36 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 5%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6557377049180327
* Compiling and checking tests
[MASTER] 00:30:07.029 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 00:30:07.030 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Class<Delegator> class0 = Delegator.class;
Method[] methodArray0 = FunctionObject.getMethodList(class0);
Method method0 = FunctionObject.findSingleMethod(methodArray0, "hashCode");
Context context0 = Context.getContext();
ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
FunctionObject functionObject0 = new FunctionObject("msg.varargs.fun", method0, importerTopLevel0);
functionObject0.getLength();

[MASTER] 00:30:13.059 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 00:30:13.061 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Class<Delegator> class0 = Delegator.class;
Method[] methodArray0 = FunctionObject.getMethodList(class0);
Method method0 = FunctionObject.findSingleMethod(methodArray0, "hashCode");
Context context0 = new Context();
ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
FunctionObject functionObject0 = new FunctionObject("error reporter", method0, importerTopLevel0);
functionObject0.addAsConstructor(importerTopLevel0, importerTopLevel0);

[MASTER] 00:30:17.974 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.google.javascript.rhino.head.DefaultErrorReporter but in com.google.javascript.rhino.head.Context.reportRuntimeError(Context.java:947): org.evosuite.runtime.mock.java.lang.MockThrowable: Unsupported parameter type "com.google.javascript.rhino.head.Context" in method "call".
[MASTER] 00:30:17.975 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Class<Delegator> class0 = Delegator.class;
Method[] methodArray0 = FunctionObject.getMethodList(class0);
Method method0 = FunctionObject.findSingleMethod(methodArray0, "call");
ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
FunctionObject functionObject0 = new FunctionObject("8'8", method0, importerTopLevel0);

[MASTER] 00:30:23.695 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<21> but was:<22>
[MASTER] 00:30:23.695 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Class<Delegator> class0 = Delegator.class;
Method[] methodArray0 = FunctionObject.getMethodList(class0);
assertNotNull(methodArray0);
assertEquals(21, methodArray0.length);

Method method0 = FunctionObject.findSingleMethod(methodArray0, "setPrototype");
assertEquals("public void com.google.javascript.rhino.head.Delegator.setPrototype(com.google.javascript.rhino.head.Scriptable)", method0.toString());
assertFalse(method0.isSynthetic());
assertFalse(method0.isVarArgs());
assertFalse(method0.isBridge());
assertFalse(method0.isAccessible());
assertEquals(1, method0.getModifiers());
assertEquals("setPrototype", method0.getName());
assertNotNull(method0);
assertEquals(21, methodArray0.length);

FunctionObject functionObject0 = new FunctionObject("SHT@2+U", method0, (Scriptable) null);

[MASTER] 00:30:28.039 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 00:30:28.041 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Context context0 = Context.getContext();
ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
Class<String> class0 = String.class;
FunctionObject.convertArg(context0, (Scriptable) importerTopLevel0, (Object) "eo&@]vq%I", (Class<?>) class0);

[MASTER] 00:30:46.781 [logback-1] WARN  TestSuiteGenerator - JUnit checking timed out
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing tests to file
* Writing JUnit test case 'FunctionObject_ESTest' to results/evosuite5/closure-16-com.google.javascript.rhino.head.FunctionObject-19
* Done!

* Computation finished
