entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.cglib.proxy.Enhancer
* Starting Client-0
* Connecting to master process on port 14601
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.cglib.proxy.Enhancer
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 213
* Using seed 1566401487212
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 113 / 213
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.27699530516431925
[MASTER] 17:31:40.920 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$3b looks like an anonymous class, ignoring it (although reflection says false) MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$3b
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4460093896713615
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4694835680751174
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4694835680751174
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4694835680751174
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4694835680751174
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4694835680751174
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4694835680751174
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4788732394366197
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
* Search finished after 301s and 882 generations, 275134 statements, best individual has fitness: 108.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 49%
* Total number of goals: 213
* Number of covered goals: 104
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
* Generated 33 tests with total length 119
* Resulting test suite's coverage: 49%
* Generating assertions
[MASTER] 17:36:37.254 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$10 looks like an anonymous class, ignoring it (although reflection says false) MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$10
* Resulting test suite's mutation score: 4%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
* Compiling and checking tests
[MASTER] 17:36:41.636 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.reflect.InvocationTargetException-->null
org.mockito.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:238)
<evosuite>.<evosuite>(<evosuite>)
<evosuite>.<evosuite>(<evosuite>)

[MASTER] 17:37:12.031 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test11 -> class java.lang.AssertionError: Exception was not thrown in org.mockito.cglib.core.AbstractClassGenerator but in org.mockito.cglib.core.MethodWrapper.create(MethodWrapper.java:34): java.lang.NullPointerException
[MASTER] 17:37:12.032 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Enhancer enhancer0 = new Enhancer();
ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) null);
enhancer0.generateClass(classAdapter0);

[MASTER] 17:37:12.032 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test28 -> class java.lang.AssertionError: Exception was not thrown in org.mockito.cglib.core.AbstractClassGenerator but in org.mockito.cglib.core.MethodWrapper.create(MethodWrapper.java:34): java.lang.NullPointerException
[MASTER] 17:37:12.033 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Enhancer enhancer0 = new Enhancer();
Class<Annotation> class0 = Annotation.class;
enhancer0.setSuperclass(class0);
ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) null);
enhancer0.generateClass(classAdapter0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing tests to file
* Writing JUnit test case 'Enhancer_ESTest' to results/evosuite5/mockito-31-org.mockito.cglib.proxy.Enhancer-11
* Done!

* Computation finished
