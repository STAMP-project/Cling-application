entry: sources/closure-16/build/classes
entry: sources/closure-16/lib/args4j.jar
entry: sources/closure-16/lib/guava.jar
entry: sources/closure-16/lib/json.jar
entry: sources/closure-16/lib/jsr305.jar
entry: sources/closure-16/lib/protobuf-java.jar
entry: sources/closure-16/build/lib/rhino.jar
entry: sources/closure-16/lib/ant.jar
** CP: sources/closure-16/build/classes:sources/closure-16/lib/args4j.jar:sources/closure-16/lib/guava.jar:sources/closure-16/lib/json.jar:sources/closure-16/lib/jsr305.jar:sources/closure-16/lib/protobuf-java.jar:sources/closure-16/build/lib/rhino.jar:sources/closure-16/lib/ant.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: com.google.javascript.rhino.head.ScriptRuntime
* Starting Client-0
* Connecting to master process on port 11310
* Analyzing classpath: 
  - sources/closure-16/build/classes
  - sources/closure-16/lib/args4j.jar
  - sources/closure-16/lib/guava.jar
  - sources/closure-16/lib/json.jar
  - sources/closure-16/lib/jsr305.jar
  - sources/closure-16/lib/protobuf-java.jar
  - sources/closure-16/build/lib/rhino.jar
  - sources/closure-16/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.head.ScriptRuntime
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 1430
* Using seed 1566117072758
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 432 / 1430
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.0965034965034965
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2
[MASTER] 10:31:52.672 [logback-1] WARN  TestUsageChecker - class com.google.javascript.rhino.head.ContextFactory$1GlobalSetterImpl looks like an anonymous class, ignoring it (although reflection says false) GlobalSetterImpl
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2853146853146853
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3678321678321678
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.44475524475524475
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5013986013986014
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5258741258741259
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5531468531468532
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5783216783216784
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6062937062937063
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6160839160839161
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6237762237762238
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.627972027972028
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6342657342657343
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6643356643356644
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.66993006993007
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6783216783216783
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6818181818181818
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6902097902097902
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6916083916083916
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6958041958041958
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7041958041958042
* Search finished after 392s and 222 generations, 86995 statements, best individual has fitness: 423.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7041958041958042
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7041958041958042
[MASTER] 10:38:08.853 [logback-1] WARN  TimeController - Phase SEARCH lasted too long, 94 seconds more than allowed.
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 69%
* Total number of goals: 1430
* Number of covered goals: 983
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7041958041958042
* Generated 326 tests with total length 870
* Resulting test suite's coverage: 70%
* Generating assertions
[MASTER] 10:39:56.618 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 2%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7041958041958042
* Compiling and checking tests
[MASTER] 10:39:57.835 [logback-1] WARN  TimeController - Phase ASSERTION_GENERATION lasted too long, 6 seconds more than allowed.
[MASTER] 10:40:44.712 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 10:40:44.712 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Context.getContext();

[MASTER] 10:40:47.116 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 10:40:47.117 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Context context0 = Context.getCurrentContext();
ClassLoader classLoader0 = context0.getApplicationClassLoader();
NativeJavaTopPackage nativeJavaTopPackage0 = new NativeJavaTopPackage(classLoader0);
NativeBoolean nativeBoolean0 = new NativeBoolean(true);
NativeJavaPackage nativeJavaPackage0 = nativeJavaTopPackage0.forcePackage("language version", nativeBoolean0);
Object object0 = ScriptRuntime.propIncrDecr(nativeJavaPackage0, "language version", context0, 13);
assertEquals(Double.NaN, object0);


[MASTER] 10:40:53.789 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.google.javascript.rhino.head.ScriptRuntime but in com.google.javascript.rhino.head.Context.getContext(Context.java:2332): org.evosuite.runtime.mock.java.lang.MockThrowable: No Context associated with current Thread
[MASTER] 10:40:53.789 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NativeBoolean nativeBoolean0 = new NativeBoolean(true);
ScriptRuntime.nameIncrDecr((Scriptable) nativeBoolean0, "language version", 8233);

[MASTER] 10:40:55.151 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 10:40:55.152 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Context context0 = Context.getContext();
ScriptRuntime.setDefaultNamespace("]c?Cw&Ly", context0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'ScriptRuntime_ESTest' to results/evosuite5/closure-16-com.google.javascript.rhino.head.ScriptRuntime-24
* Done!

* Computation finished
