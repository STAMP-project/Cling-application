entry: sources/closure-16/build/classes
entry: sources/closure-16/lib/args4j.jar
entry: sources/closure-16/lib/guava.jar
entry: sources/closure-16/lib/json.jar
entry: sources/closure-16/lib/jsr305.jar
entry: sources/closure-16/lib/protobuf-java.jar
entry: sources/closure-16/build/lib/rhino.jar
entry: sources/closure-16/lib/ant.jar
** CP: sources/closure-16/build/classes:sources/closure-16/lib/args4j.jar:sources/closure-16/lib/guava.jar:sources/closure-16/lib/json.jar:sources/closure-16/lib/jsr305.jar:sources/closure-16/lib/protobuf-java.jar:sources/closure-16/build/lib/rhino.jar:sources/closure-16/lib/ant.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: com.google.javascript.rhino.head.FunctionObject
* Starting Client-0
* Connecting to master process on port 16707
* Analyzing classpath: 
  - sources/closure-16/build/classes
  - sources/closure-16/lib/args4j.jar
  - sources/closure-16/lib/guava.jar
  - sources/closure-16/lib/json.jar
  - sources/closure-16/lib/jsr305.jar
  - sources/closure-16/lib/protobuf-java.jar
  - sources/closure-16/build/lib/rhino.jar
  - sources/closure-16/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.head.FunctionObject
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 183
* Using seed 1565735042467
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 59 / 183
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.20765027322404372
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2896174863387978
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4262295081967213
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5519125683060109
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6174863387978142
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6338797814207651
[MASTER] 00:25:42.369 [logback-1] WARN  TestUsageChecker - class com.google.javascript.rhino.head.ContextFactory$1GlobalSetterImpl looks like an anonymous class, ignoring it (although reflection says false) GlobalSetterImpl
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6338797814207651
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
* Search finished after 301s and 203 generations, 69986 statements, best individual has fitness: 64.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 183
* Number of covered goals: 118
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
* Generated 28 tests with total length 149
* Resulting test suite's coverage: 65%
* Generating assertions
[MASTER] 00:30:37.494 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.9453166666666667% of time used, but only 9/28 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 20%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6502732240437158
* Compiling and checking tests
[MASTER] 00:31:08.176 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 00:31:08.177 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Class<Method> class0 = Method.class;
Method[] methodArray0 = FunctionObject.getMethodList(class0);
Method method0 = FunctionObject.findSingleMethod(methodArray0, "getGenericParameterTypes");
ContextFactory contextFactory0 = ContextFactory.getGlobal();
Context context0 = contextFactory0.makeContext();
ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
FunctionObject functionObject0 = new FunctionObject("}X@", method0, importerTopLevel0);
Class<NativeObject> class1 = NativeObject.class;
NativeJavaClass nativeJavaClass0 = new NativeJavaClass(functionObject0, class1);
functionObject0.addAsConstructor(nativeJavaClass0, importerTopLevel0);

[MASTER] 00:31:47.821 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.google.javascript.rhino.head.DefaultErrorReporter but in com.google.javascript.rhino.head.Context.reportRuntimeError(Context.java:947): org.evosuite.runtime.mock.java.lang.MockThrowable: Unsupported parameter type "[Ljava.lang.Object;" in method "invoke".
[MASTER] 00:31:47.825 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Class<Method> class0 = Method.class;
Method[] methodArray0 = FunctionObject.getMethodList(class0);
Method method0 = FunctionObject.findSingleMethod(methodArray0, "invoke");
ImporterTopLevel importerTopLevel0 = new ImporterTopLevel();
FunctionObject functionObject0 = new FunctionObject("invoke", method0, importerTopLevel0);

[MASTER] 00:31:47.827 [logback-1] WARN  TestSuiteGenerator - JUnit checking timed out
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
[MASTER] 00:31:47.847 [logback-1] WARN  TimeController - Phase JUNIT_CHECK lasted too long, 8 seconds more than allowed.
* Writing JUnit test case 'FunctionObject_ESTest' to results/evosuite5/closure-16-com.google.javascript.rhino.head.FunctionObject-20
* Done!

* Computation finished
