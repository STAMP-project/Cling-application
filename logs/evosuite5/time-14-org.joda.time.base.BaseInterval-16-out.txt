entry: sources/time-14/build/classes
entry: defects4j/framework/projects/Time/lib/joda-convert-1.2.jar
** CP: sources/time-14/build/classes:defects4j/framework/projects/Time/lib/joda-convert-1.2.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.joda.time.base.BaseInterval
* Starting Client-0
* Connecting to master process on port 6699
* Analyzing classpath: 
  - sources/time-14/build/classes
  - defects4j/framework/projects/Time/lib/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.base.BaseInterval
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 21
* Using seed 1565721425721
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 15 / 21
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7619047619047619
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8095238095238095
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8095238095238095
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9523809523809523
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
* Search finished after 44s and 18 generations, 12507 statements, best individual has fitness: 0.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 21
* Number of covered goals: 21
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
* Generated 13 tests with total length 36
* Resulting test suite's coverage: 100%
* Generating assertions
* Resulting test suite's mutation score: 48%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 1.0
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'BaseInterval_ESTest' to results/evosuite5/time-14-org.joda.time.base.BaseInterval-16
* Done!

* Computation finished
