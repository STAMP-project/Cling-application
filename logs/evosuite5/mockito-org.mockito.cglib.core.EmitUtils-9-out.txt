entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.cglib.core.EmitUtils
* Starting Client-0
* Connecting to master process on port 6587
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.cglib.core.EmitUtils
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 223
* Using seed 1566334711436
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 123 / 223
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.04484304932735426
[MASTER] 22:58:50.723 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.cglib.core.Signature due to org.evosuite.ga.ConstructionFailedException: Have no generator for class java.lang.reflect.Method canUseFunctionalMocks=true, canBeMocked: false
[MASTER] 22:58:52.437 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class java.lang.reflect.Method canUseFunctionalMocks=true, canBeMocked: false
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.30493273542600896
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.48878923766816146
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6278026905829597
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6591928251121076
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6681614349775785
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6681614349775785
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.672645739910314
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.672645739910314
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.672645739910314
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6816143497757847
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6816143497757847
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6816143497757847
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6816143497757847
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6816143497757847
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6816143497757847
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6816143497757847
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6816143497757847
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6860986547085202
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6860986547085202
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6860986547085202
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6860986547085202
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6860986547085202
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6860986547085202
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6905829596412556
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6905829596412556
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6905829596412556
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6905829596412556
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6905829596412556
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6905829596412556
* Search finished after 301s and 1303 generations, 712838 statements, best individual has fitness: 69.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6905829596412556
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 69%
* Total number of goals: 223
* Number of covered goals: 154
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6905829596412556
* Generated 57 tests with total length 445
* Resulting test suite's coverage: 69%
* Generating assertions
* Resulting test suite's mutation score: 7%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6905829596412556
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'EmitUtils_ESTest' to results/evosuite5/mockito-31-org.mockito.cglib.core.EmitUtils-9
* Done!

* Computation finished
