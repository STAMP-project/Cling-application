entry: sources/closure-16/build/classes
entry: sources/closure-16/lib/args4j.jar
entry: sources/closure-16/lib/guava.jar
entry: sources/closure-16/lib/json.jar
entry: sources/closure-16/lib/jsr305.jar
entry: sources/closure-16/lib/protobuf-java.jar
entry: sources/closure-16/build/lib/rhino.jar
entry: sources/closure-16/lib/ant.jar
** CP: sources/closure-16/build/classes:sources/closure-16/lib/args4j.jar:sources/closure-16/lib/guava.jar:sources/closure-16/lib/json.jar:sources/closure-16/lib/jsr305.jar:sources/closure-16/lib/protobuf-java.jar:sources/closure-16/build/lib/rhino.jar:sources/closure-16/lib/ant.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: com.google.javascript.rhino.head.ScriptableObject
* Starting Client-0
* Connecting to master process on port 2579
* Analyzing classpath: 
  - sources/closure-16/build/classes
  - sources/closure-16/lib/args4j.jar
  - sources/closure-16/lib/guava.jar
  - sources/closure-16/lib/json.jar
  - sources/closure-16/lib/jsr305.jar
  - sources/closure-16/lib/protobuf-java.jar
  - sources/closure-16/build/lib/rhino.jar
  - sources/closure-16/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.head.ScriptableObject
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 916
* Using seed 1566111449564
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 254 / 916
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.22489082969432314
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2718340611353712
[MASTER] 08:58:15.773 [logback-1] WARN  TestUsageChecker - class com.google.javascript.rhino.head.ContextFactory$1GlobalSetterImpl looks like an anonymous class, ignoring it (although reflection says false) GlobalSetterImpl
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.34279475982532753
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3875545851528384
[MASTER] 08:58:34.914 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.google.javascript.rhino.head.FunctionObject due to org.evosuite.ga.ConstructionFailedException: Have no generator for class java.lang.reflect.Method canUseFunctionalMocks=true, canBeMocked: false
[MASTER] 08:58:35.741 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.google.javascript.rhino.head.FunctionObject due to org.evosuite.ga.ConstructionFailedException: Have no generator for class com.google.javascript.rhino.head.FunctionObject canUseFunctionalMocks=false, canBeMocked: false
[MASTER] 08:58:36.917 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.google.javascript.rhino.head.FunctionObject due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.google.javascript.rhino.head.MemberBox due to org.evosuite.ga.ConstructionFailedException: Have no generator for class java.lang.reflect.Method canUseFunctionalMocks=true, canBeMocked: false
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.42903930131004364
[MASTER] 08:58:55.854 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class com.google.javascript.rhino.head.FunctionObject canUseFunctionalMocks=true, canBeMocked: false
[MASTER] 08:58:56.497 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.google.javascript.rhino.head.FunctionObject due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.google.javascript.rhino.head.MemberBox due to org.evosuite.ga.ConstructionFailedException: Have no generator for java.lang.reflect.Constructor<com.google.javascript.rhino.head.NativeJavaMethod> canUseFunctionalMocks=true, canBeMocked: false
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.43777292576419213
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4923580786026201
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4923580786026201
[MASTER] 09:00:03.743 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.google.javascript.rhino.head.FieldAndMethods due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for com.google.javascript.rhino.head.MemberBox due to org.evosuite.ga.ConstructionFailedException: Have no generator for class java.lang.reflect.Method canUseFunctionalMocks=true, canBeMocked: false
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5021834061135371
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5283842794759825
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5316593886462883
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5524017467248908
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5665938864628821
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5665938864628821
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5764192139737991
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5818777292576419
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5862445414847162
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5884279475982532
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5927947598253275
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5960698689956332
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6004366812227074
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6026200873362445
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6026200873362445
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6080786026200873
* Search finished after 303s and 150 generations, 60544 statements, best individual has fitness: 359.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6080786026200873
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 59%
* Total number of goals: 916
* Number of covered goals: 543
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6080786026200873
* Generated 102 tests with total length 358
* Resulting test suite's coverage: 61%
* Generating assertions
[MASTER] 09:04:28.763 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.9376833333333333% of time used, but only 9/102 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 3%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6080786026200873
* Compiling and checking tests
[MASTER] 09:05:00.303 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 09:05:00.304 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Context context0 = Context.getContext();
ContextFactory contextFactory0 = ContextFactory.getGlobal();
ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
ScriptableObject.putConstProperty(importerTopLevel0, "error reporter", contextFactory0);

[MASTER] 09:05:13.010 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 09:05:13.010 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ContextFactory contextFactory0 = new ContextFactory();
Context context0 = contextFactory0.makeContext();
ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
importerTopLevel0.delete(1445582840);
assertTrue(importerTopLevel0.hasPrototypeMap());


[MASTER] 09:05:16.641 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.google.javascript.rhino.head.DefaultErrorReporter but in com.google.javascript.rhino.head.Context.reportRuntimeError(Context.java:947): org.evosuite.runtime.mock.java.lang.MockThrowable: Property 8 not found.
[MASTER] 09:05:16.641 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NativeNumber nativeNumber0 = new NativeNumber(587.87234647);
BaseFunction baseFunction0 = new BaseFunction(nativeNumber0, nativeNumber0);
nativeNumber0.getAttributes(8, (Scriptable) baseFunction0);

[MASTER] 09:05:18.113 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 09:05:18.113 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ContextFactory contextFactory0 = new ContextFactory();
Context context0 = contextFactory0.makeContext();
ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
Class<Integer> class0 = Integer.TYPE;
ScriptableObject.getTypedProperty((Scriptable) importerTopLevel0, "toString", class0);

[MASTER] 09:05:26.698 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.google.javascript.rhino.head.DefaultErrorReporter but in com.google.javascript.rhino.head.Context.reportRuntimeError(Context.java:947): org.evosuite.runtime.mock.java.lang.MockThrowable: Property 0 not found.
[MASTER] 09:05:26.699 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NativeCall nativeCall0 = new NativeCall();
assertEquals(4, ScriptableObject.PERMANENT);
assertEquals(2, ScriptableObject.DONTENUM);
assertEquals(1, ScriptableObject.READONLY);
assertEquals(0, ScriptableObject.EMPTY);
assertEquals(13, ScriptableObject.CONST);
assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
assertNotNull(nativeCall0);
assertFalse(nativeCall0.avoidObjectDetection());
assertTrue(nativeCall0.isEmpty());
assertFalse(nativeCall0.hasPrototypeMap());
assertEquals("object", nativeCall0.getTypeOf());
assertTrue(nativeCall0.isExtensible());
assertEquals("Call", nativeCall0.getClassName());
assertFalse(nativeCall0.isSealed());

NativeContinuation nativeContinuation0 = new NativeContinuation();
assertEquals(4, ScriptableObject.PERMANENT);
assertEquals(13, ScriptableObject.CONST);
assertEquals(2, ScriptableObject.DONTENUM);
assertEquals(1, ScriptableObject.READONLY);
assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
assertEquals(0, ScriptableObject.EMPTY);
assertNotNull(nativeContinuation0);
assertTrue(nativeContinuation0.isEmpty());
assertFalse(nativeContinuation0.avoidObjectDetection());
assertEquals("Continuation", nativeContinuation0.getClassName());
assertEquals("object", nativeContinuation0.getTypeOf());
assertFalse(nativeContinuation0.hasPrototypeMap());
assertTrue(nativeContinuation0.isExtensible());
assertFalse(nativeContinuation0.isSealed());

nativeCall0.getAttributes((String) null, (Scriptable) nativeContinuation0);

[MASTER] 09:05:28.007 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 09:05:28.012 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NativeArray nativeArray0 = new NativeArray((-3584L));
assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
assertEquals(2, ScriptableObject.DONTENUM);
assertEquals(0, ScriptableObject.EMPTY);
assertEquals(13, ScriptableObject.CONST);
assertEquals(4, ScriptableObject.PERMANENT);
assertEquals(1, ScriptableObject.READONLY);
assertNotNull(nativeArray0);
assertFalse(nativeArray0.avoidObjectDetection());
assertTrue(nativeArray0.isEmpty());
assertFalse(nativeArray0.isSealed());
assertEquals((-3584L), nativeArray0.getLength());
assertFalse(nativeArray0.hasPrototypeMap());
assertEquals("object", nativeArray0.getTypeOf());
assertEquals("Array", nativeArray0.getClassName());
assertEquals((-3584L), nativeArray0.jsGet_length());
assertTrue(nativeArray0.isExtensible());

ScriptableObject.putProperty((Scriptable) nativeArray0, 2, (Object) nativeArray0);
assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
assertEquals(2, ScriptableObject.DONTENUM);
assertEquals(0, ScriptableObject.EMPTY);
assertEquals(13, ScriptableObject.CONST);
assertEquals(4, ScriptableObject.PERMANENT);
assertEquals(1, ScriptableObject.READONLY);
assertFalse(nativeArray0.avoidObjectDetection());
assertTrue(nativeArray0.isEmpty());
assertEquals(3L, nativeArray0.jsGet_length());
assertFalse(nativeArray0.isSealed());
assertFalse(nativeArray0.hasPrototypeMap());
assertEquals("object", nativeArray0.getTypeOf());
assertEquals("Array", nativeArray0.getClassName());
assertEquals(3L, nativeArray0.getLength());
assertTrue(nativeArray0.isExtensible());

NativeIterator.StopIteration nativeIterator_StopIteration0 = new NativeIterator.StopIteration();
assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
assertEquals(4, ScriptableObject.PERMANENT);
assertEquals(2, ScriptableObject.DONTENUM);
assertEquals(0, ScriptableObject.EMPTY);
assertEquals(13, ScriptableObject.CONST);
assertEquals(1, ScriptableObject.READONLY);
assertNotNull(nativeIterator_StopIteration0);
assertFalse(nativeIterator_StopIteration0.avoidObjectDetection());
assertTrue(nativeIterator_StopIteration0.isExtensible());
assertFalse(nativeIterator_StopIteration0.hasPrototypeMap());
assertEquals("StopIteration", nativeIterator_StopIteration0.getClassName());
assertEquals("object", nativeIterator_StopIteration0.getTypeOf());
assertFalse(nativeIterator_StopIteration0.isSealed());
assertTrue(nativeIterator_StopIteration0.isEmpty());

Context context0 = Context.getCurrentContext();
assertEquals(140, Context.VERSION_1_4);
assertEquals(0, Context.VERSION_DEFAULT);
assertEquals(1, Context.FEATURE_NON_ECMA_GET_YEAR);
assertEquals(180, Context.VERSION_1_8);
assertEquals(11, Context.FEATURE_STRICT_MODE);
assertEquals(4, Context.FEATURE_TO_STRING_AS_SOURCE);
assertEquals(9, Context.FEATURE_STRICT_EVAL);
assertEquals(5, Context.FEATURE_PARENT_PROTO_PROPERTIES);
assertEquals(8, Context.FEATURE_STRICT_VARS);
assertEquals(3, Context.FEATURE_RESERVED_KEYWORD_AS_IDENTIFIER);
assertFalse(context0.generateObserverCount);
assertEquals(100, Context.VERSION_1_0);
assertEquals(10, Context.FEATURE_LOCATION_INFORMATION_IN_ERROR);
assertEquals(7, Context.FEATURE_DYNAMIC_SCOPE);
assertEquals(150, Context.VERSION_1_5);
assertEquals(12, Context.FEATURE_WARNING_AS_ERROR);
assertEquals(6, Context.FEATURE_E4X);
assertEquals(160, Context.VERSION_1_6);
assertEquals(5, Context.FEATURE_PARENT_PROTO_PROPRTIES);
assertEquals(2, Context.FEATURE_MEMBER_EXPR_AS_FUNCTION_NAME);
assertEquals(110, Context.VERSION_1_1);
assertEquals(13, Context.FEATURE_ENHANCED_JAVA_ACCESS);
assertEquals(120, Context.VERSION_1_2);
assertEquals(130, Context.VERSION_1_3);
assertEquals((-1), Context.VERSION_UNKNOWN);
assertEquals(170, Context.VERSION_1_7);
assertNotNull(context0);
assertFalse(context0.isGeneratingDebugChanged());
assertEquals(0, context0.getOptimizationLevel());
assertTrue(context0.isGeneratingSource());
assertFalse(context0.isSealed());
assertEquals(0, context0.getInstructionObserverThreshold());
assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
assertFalse(context0.isGeneratingDebug());
assertEquals(0, context0.getLanguageVersion());

nativeIterator_StopIteration0.defineOwnProperties(context0, nativeArray0);
assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
assertEquals(2, ScriptableObject.DONTENUM);
assertEquals(0, ScriptableObject.EMPTY);
assertEquals(13, ScriptableObject.CONST);
assertEquals(4, ScriptableObject.PERMANENT);
assertEquals(1, ScriptableObject.READONLY);
assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
assertEquals(4, ScriptableObject.PERMANENT);
assertEquals(2, ScriptableObject.DONTENUM);
assertEquals(0, ScriptableObject.EMPTY);
assertEquals(13, ScriptableObject.CONST);
assertEquals(1, ScriptableObject.READONLY);
assertEquals(140, Context.VERSION_1_4);
assertEquals(0, Context.VERSION_DEFAULT);
assertEquals(1, Context.FEATURE_NON_ECMA_GET_YEAR);
assertEquals(180, Context.VERSION_1_8);
assertEquals(11, Context.FEATURE_STRICT_MODE);
assertEquals(4, Context.FEATURE_TO_STRING_AS_SOURCE);
assertEquals(9, Context.FEATURE_STRICT_EVAL);
assertEquals(5, Context.FEATURE_PARENT_PROTO_PROPERTIES);
assertEquals(8, Context.FEATURE_STRICT_VARS);
assertEquals(3, Context.FEATURE_RESERVED_KEYWORD_AS_IDENTIFIER);
assertFalse(context0.generateObserverCount);
assertEquals(100, Context.VERSION_1_0);
assertEquals(10, Context.FEATURE_LOCATION_INFORMATION_IN_ERROR);
assertEquals(7, Context.FEATURE_DYNAMIC_SCOPE);
assertEquals(150, Context.VERSION_1_5);
assertEquals(12, Context.FEATURE_WARNING_AS_ERROR);
assertEquals(6, Context.FEATURE_E4X);
assertEquals(160, Context.VERSION_1_6);
assertEquals(5, Context.FEATURE_PARENT_PROTO_PROPRTIES);
assertEquals(2, Context.FEATURE_MEMBER_EXPR_AS_FUNCTION_NAME);
assertEquals(110, Context.VERSION_1_1);
assertEquals(13, Context.FEATURE_ENHANCED_JAVA_ACCESS);
assertEquals(120, Context.VERSION_1_2);
assertEquals(130, Context.VERSION_1_3);
assertEquals((-1), Context.VERSION_UNKNOWN);
assertEquals(170, Context.VERSION_1_7);
assertFalse(nativeArray0.avoidObjectDetection());
assertTrue(nativeArray0.isEmpty());
assertEquals(3L, nativeArray0.jsGet_length());
assertFalse(nativeArray0.isSealed());
assertFalse(nativeArray0.hasPrototypeMap());
assertEquals("object", nativeArray0.getTypeOf());
assertEquals("Array", nativeArray0.getClassName());
assertEquals(3L, nativeArray0.getLength());
assertTrue(nativeArray0.isExtensible());
assertFalse(nativeIterator_StopIteration0.avoidObjectDetection());
assertFalse(nativeIterator_StopIteration0.isEmpty());
assertTrue(nativeIterator_StopIteration0.isExtensible());
assertFalse(nativeIterator_StopIteration0.hasPrototypeMap());
assertEquals("StopIteration", nativeIterator_StopIteration0.getClassName());
assertEquals("object", nativeIterator_StopIteration0.getTypeOf());
assertFalse(nativeIterator_StopIteration0.isSealed());
assertFalse(context0.isGeneratingDebugChanged());
assertEquals(0, context0.getOptimizationLevel());
assertTrue(context0.isGeneratingSource());
assertFalse(context0.isSealed());
assertEquals(0, context0.getInstructionObserverThreshold());
assertEquals(Integer.MAX_VALUE, context0.getMaximumInterpreterStackDepth());
assertFalse(context0.isGeneratingDebug());
assertEquals(0, context0.getLanguageVersion());


[MASTER] 09:05:29.628 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.google.javascript.rhino.head.DefaultErrorReporter but in com.google.javascript.rhino.head.Context.reportRuntimeError(Context.java:947): org.evosuite.runtime.mock.java.lang.MockThrowable: TypeError: redeclaration of var ms1Ag.modify.sealed.
[MASTER] 09:05:29.630 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NativeContinuation nativeContinuation0 = new NativeContinuation();
assertEquals(0, ScriptableObject.EMPTY);
assertEquals(1, ScriptableObject.READONLY);
assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
assertEquals(4, ScriptableObject.PERMANENT);
assertEquals(2, ScriptableObject.DONTENUM);
assertEquals(13, ScriptableObject.CONST);
assertNotNull(nativeContinuation0);
assertFalse(nativeContinuation0.isSealed());
assertTrue(nativeContinuation0.isEmpty());
assertFalse(nativeContinuation0.avoidObjectDetection());
assertEquals("object", nativeContinuation0.getTypeOf());
assertFalse(nativeContinuation0.hasPrototypeMap());
assertEquals("Continuation", nativeContinuation0.getClassName());
assertTrue(nativeContinuation0.isExtensible());

NativeBoolean nativeBoolean0 = new NativeBoolean(false);
assertEquals(1, ScriptableObject.READONLY);
assertEquals(13, ScriptableObject.CONST);
assertEquals(4, ScriptableObject.PERMANENT);
assertEquals(2, ScriptableObject.DONTENUM);
assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
assertEquals(0, ScriptableObject.EMPTY);
assertNotNull(nativeBoolean0);
assertTrue(nativeBoolean0.isEmpty());
assertFalse(nativeBoolean0.avoidObjectDetection());
assertFalse(nativeBoolean0.isSealed());
assertEquals("Boolean", nativeBoolean0.getClassName());
assertTrue(nativeBoolean0.isExtensible());
assertFalse(nativeBoolean0.hasPrototypeMap());
assertEquals("object", nativeBoolean0.getTypeOf());

nativeBoolean0.setGetterOrSetter("ms1Ag.modify.sealed", 0, nativeContinuation0, false);
assertEquals(0, ScriptableObject.EMPTY);
assertEquals(1, ScriptableObject.READONLY);
assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
assertEquals(4, ScriptableObject.PERMANENT);
assertEquals(2, ScriptableObject.DONTENUM);
assertEquals(13, ScriptableObject.CONST);
assertEquals(1, ScriptableObject.READONLY);
assertEquals(13, ScriptableObject.CONST);
assertEquals(4, ScriptableObject.PERMANENT);
assertEquals(2, ScriptableObject.DONTENUM);
assertEquals(8, ScriptableObject.UNINITIALIZED_CONST);
assertEquals(0, ScriptableObject.EMPTY);
assertFalse(nativeContinuation0.isSealed());
assertTrue(nativeContinuation0.isEmpty());
assertFalse(nativeContinuation0.avoidObjectDetection());
assertEquals("object", nativeContinuation0.getTypeOf());
assertFalse(nativeContinuation0.hasPrototypeMap());
assertEquals("Continuation", nativeContinuation0.getClassName());
assertTrue(nativeContinuation0.isExtensible());
assertFalse(nativeBoolean0.avoidObjectDetection());
assertFalse(nativeBoolean0.isSealed());
assertEquals("Boolean", nativeBoolean0.getClassName());
assertTrue(nativeBoolean0.isExtensible());
assertFalse(nativeBoolean0.isEmpty());
assertFalse(nativeBoolean0.hasPrototypeMap());
assertEquals("object", nativeBoolean0.getTypeOf());

ScriptableObject.defineConstProperty(nativeBoolean0, "ms1Ag.modify.sealed");

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing tests to file
* Writing JUnit test case 'ScriptableObject_ESTest' to results/evosuite5/closure-16-com.google.javascript.rhino.head.ScriptableObject-26
* Done!

* Computation finished
