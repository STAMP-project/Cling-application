entry: sources/closure-16/build/classes
entry: sources/closure-16/lib/args4j.jar
entry: sources/closure-16/lib/guava.jar
entry: sources/closure-16/lib/json.jar
entry: sources/closure-16/lib/jsr305.jar
entry: sources/closure-16/lib/protobuf-java.jar
entry: sources/closure-16/build/lib/rhino.jar
entry: sources/closure-16/lib/ant.jar
** CP: sources/closure-16/build/classes:sources/closure-16/lib/args4j.jar:sources/closure-16/lib/guava.jar:sources/closure-16/lib/json.jar:sources/closure-16/lib/jsr305.jar:sources/closure-16/lib/protobuf-java.jar:sources/closure-16/build/lib/rhino.jar:sources/closure-16/lib/ant.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: com.google.javascript.rhino.head.regexp.NativeRegExp
* Starting Client-0
* Connecting to master process on port 15745
* Analyzing classpath: 
  - sources/closure-16/build/classes
  - sources/closure-16/lib/args4j.jar
  - sources/closure-16/lib/guava.jar
  - sources/closure-16/lib/json.jar
  - sources/closure-16/lib/jsr305.jar
  - sources/closure-16/lib/protobuf-java.jar
  - sources/closure-16/build/lib/rhino.jar
  - sources/closure-16/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.head.regexp.NativeRegExp
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 1450
* Using seed 1566339737590
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 382 / 1450
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.06758620689655172
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.1193103448275862
[MASTER] 00:23:15.401 [logback-1] WARN  TestUsageChecker - class com.google.javascript.rhino.head.ContextFactory$1GlobalSetterImpl looks like an anonymous class, ignoring it (although reflection says false) GlobalSetterImpl
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.21379310344827587
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.21724137931034482
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.22620689655172413
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.22689655172413792
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2289655172413793
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.28620689655172415
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.30551724137931036
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.30689655172413793
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31448275862068964
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3193103448275862
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3193103448275862
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.32
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.323448275862069
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3331034482758621
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.34
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.34
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3503448275862069
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3524137931034483
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3524137931034483
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3524137931034483
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3524137931034483
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35310344827586204
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35379310344827586
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35379310344827586
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35793103448275865
* Search finished after 304s and 413 generations, 127704 statements, best individual has fitness: 931.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35793103448275865
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 29%
* Total number of goals: 1450
* Number of covered goals: 418
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35793103448275865
* Generated 53 tests with total length 197
* Resulting test suite's coverage: 36%
* Generating assertions
[MASTER] 00:29:09.201 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6685666666666666% of time used, but only 11/53 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 4%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35793103448275865
* Compiling and checking tests
[MASTER] 00:30:04.971 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.google.javascript.rhino.head.regexp.NativeRegExp but in com.google.javascript.rhino.head.ScriptRuntime.getRegExpProxy(ScriptRuntime.java:3848): java.lang.NullPointerException
[MASTER] 00:30:04.972 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NativeRegExp nativeRegExp0 = new NativeRegExp();
Context context0 = Context.getCurrentContext();
Delegator delegator0 = new Delegator(nativeRegExp0);
nativeRegExp0.construct(context0, delegator0, context0.emptyArgs);

[MASTER] 00:30:10.811 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 00:30:10.812 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NativeRegExp nativeRegExp0 = new NativeRegExp();
Context context0 = Context.getCurrentContext();
NativeContinuation nativeContinuation0 = new NativeContinuation();
NativeRegExp nativeRegExp1 = (NativeRegExp)nativeRegExp0.compile(context0, nativeContinuation0, context0.emptyArgs);
String string0 = nativeRegExp1.toString();
assertEquals("/(?:)/", string0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing tests to file
* Writing JUnit test case 'NativeRegExp_ESTest' to results/evosuite5/closure-16-com.google.javascript.rhino.head.regexp.NativeRegExp-1
* Done!

* Computation finished
