entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.cglib.core.EmitUtils
* Starting Client-0
* Connecting to master process on port 12471
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.cglib.core.EmitUtils
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 223
* Using seed 1566401951852
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 123 / 223
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.03139013452914798
[MASTER] 17:39:39.269 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.cglib.core.CodeEmitter due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.asm.ClassWriter due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.mockito.asm.ClassReader due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for java.io.BufferedInputStream due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.1210762331838565
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2825112107623318
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3542600896860987
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.38565022421524664
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5246636771300448
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5829596412556054
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5964125560538116
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5964125560538116
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
* Search finished after 301s and 1261 generations, 604451 statements, best individual has fitness: 89.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 223
* Number of covered goals: 134
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
* Generated 57 tests with total length 361
* Resulting test suite's coverage: 60%
* Generating assertions
* Resulting test suite's mutation score: 4%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.600896860986547
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'EmitUtils_ESTest' to results/evosuite5/mockito-31-org.mockito.cglib.core.EmitUtils-20
* Done!

* Computation finished
