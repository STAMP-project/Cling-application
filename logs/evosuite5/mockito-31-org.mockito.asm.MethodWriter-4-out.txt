entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.asm.MethodWriter
* Starting Client-0
* Connecting to master process on port 12095
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.asm.MethodWriter
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 838
* Using seed 1566334672155
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 120 / 838
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.041766109785202864
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2732696897374702
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.32816229116945106
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3639618138424821
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3794749403341289
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.42482100238663484
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.45346062052505964
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4737470167064439
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4809069212410501
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4892601431980907
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49403341288782815
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5107398568019093
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5167064439140812
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5405727923627685
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.545346062052506
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5572792362768496
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5572792362768496
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5572792362768496
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5596658711217184
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5620525059665871
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5656324582338902
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5715990453460621
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5751789976133651
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5751789976133651
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5751789976133651
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5799522673031027
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5799522673031027
* Search finished after 301s and 568 generations, 397704 statements, best individual has fitness: 352.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5799522673031027
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 58%
* Total number of goals: 838
* Number of covered goals: 486
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5799522673031027
* Generated 118 tests with total length 523
* Resulting test suite's coverage: 58%
* Generating assertions
* Resulting test suite's mutation score: 9%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5799522673031027
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing tests to file
* Writing JUnit test case 'MethodWriter_ESTest' to results/evosuite5/mockito-31-org.mockito.asm.MethodWriter-4
* Done!

* Computation finished
