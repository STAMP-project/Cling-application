entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.cglib.util.ParallelSorter
* Starting Client-0
* Connecting to master process on port 8480
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.cglib.util.ParallelSorter
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 63
* Using seed 1565700760999
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 41 / 63
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.36507936507936506
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5238095238095238
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
* Search finished after 301s and 1684 generations, 311850 statements, best individual has fitness: 27.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 57%
* Total number of goals: 63
* Number of covered goals: 36
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
* Generated 18 tests with total length 58
* Resulting test suite's coverage: 57%
* Generating assertions
[MASTER] 14:57:55.536 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.empty.Object$$ParallelSorterByCGLIB$$2 looks like an anonymous class, ignoring it (although reflection says false) Object$$ParallelSorterByCGLIB$$2
* Resulting test suite's mutation score: 27%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5714285714285714
* Compiling and checking tests
[MASTER] 14:58:09.878 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: No arrays specified to sort
[MASTER] 14:58:09.878 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Object[] objectArray0 = new Object[0];
ParallelSorter.create(objectArray0);

[MASTER] 14:58:10.932 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.reflect.InvocationTargetException-->null
org.mockito.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:238)
<evosuite>.<evosuite>(<evosuite>)
<evosuite>.<evosuite>(<evosuite>)

[MASTER] 14:58:11.350 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test16 -> class java.lang.NullPointerException: null
[MASTER] 14:58:11.351 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Object object0 = new Object();
Object[] objectArray0 = new Object[2];
objectArray0[0] = object0;
ParallelSorter.create(objectArray0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing tests to file
* Writing JUnit test case 'ParallelSorter_ESTest' to results/evosuite5/mockito-31-org.mockito.cglib.util.ParallelSorter-16
* Done!

* Computation finished
