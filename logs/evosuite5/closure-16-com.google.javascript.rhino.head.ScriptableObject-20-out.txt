entry: sources/closure-16/build/classes
entry: sources/closure-16/lib/args4j.jar
entry: sources/closure-16/lib/guava.jar
entry: sources/closure-16/lib/json.jar
entry: sources/closure-16/lib/jsr305.jar
entry: sources/closure-16/lib/protobuf-java.jar
entry: sources/closure-16/build/lib/rhino.jar
entry: sources/closure-16/lib/ant.jar
** CP: sources/closure-16/build/classes:sources/closure-16/lib/args4j.jar:sources/closure-16/lib/guava.jar:sources/closure-16/lib/json.jar:sources/closure-16/lib/jsr305.jar:sources/closure-16/lib/protobuf-java.jar:sources/closure-16/build/lib/rhino.jar:sources/closure-16/lib/ant.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: com.google.javascript.rhino.head.ScriptableObject
* Starting Client-0
* Connecting to master process on port 16543
* Analyzing classpath: 
  - sources/closure-16/build/classes
  - sources/closure-16/lib/args4j.jar
  - sources/closure-16/lib/guava.jar
  - sources/closure-16/lib/json.jar
  - sources/closure-16/lib/jsr305.jar
  - sources/closure-16/lib/protobuf-java.jar
  - sources/closure-16/build/lib/rhino.jar
  - sources/closure-16/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.head.ScriptableObject
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 916
* Using seed 1565740079594
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 254 / 916
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.24781659388646288
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2816593886462882
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35262008733624456
[MASTER] 01:49:57.545 [logback-1] WARN  TestUsageChecker - class com.google.javascript.rhino.head.ContextFactory$1GlobalSetterImpl looks like an anonymous class, ignoring it (although reflection says false) GlobalSetterImpl
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.40502183406113534
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4497816593886463
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4596069868995633
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.462882096069869
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4705240174672489
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4759825327510917
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.48799126637554585
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4890829694323144
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5087336244541485
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5087336244541485
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5229257641921398
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5229257641921398
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5327510917030568
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5327510917030568
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5327510917030568
* Search finished after 323s and 55 generations, 27657 statements, best individual has fitness: 428.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5327510917030568
* Minimizing test suite
[MASTER] 01:55:14.055 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
[MASTER] 01:55:14.055 [logback-1] WARN  TimeController - Phase MINIMIZATION lasted too long, 15 seconds more than allowed.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 55%
* Total number of goals: 916
* Number of covered goals: 500
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5327510917030568
* Generated 126 tests with total length 1023
* Resulting test suite's coverage: 53%
* Generating assertions
[MASTER] 01:56:23.242 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.9274333333333333% of time used, but only 13/126 tests minimized), falling back to using all assertions
[MASTER] 01:56:44.114 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 4%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5327510917030568
* Compiling and checking tests
[MASTER] 01:56:45.303 [logback-1] WARN  TimeController - Phase ASSERTION_GENERATION lasted too long, 17 seconds more than allowed.
[MASTER] 01:57:22.341 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 01:57:22.341 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null);
int int0 = FunctionObject.JAVA_STRING_TYPE;
NativeArray nativeArray0 = new NativeArray((-9133518327554766460L));
nativeJavaPackage0.hasInstance(nativeArray0);
nativeArray0.put("jsFunction_getArity", (Scriptable) nativeJavaPackage0, (Object) null);
assertTrue(nativeArray0.isExtensible());
assertTrue(nativeArray0.isEmpty());


* Permissions denied during test execution: 
[MASTER] 01:58:00.366 [logback-1] WARN  TestSuiteGenerator - JUnit checking timed out
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing tests to file
[MASTER] 01:58:00.367 [logback-1] WARN  TimeController - Phase JUNIT_CHECK lasted too long, 15 seconds more than allowed.
* Writing JUnit test case 'ScriptableObject_ESTest' to results/evosuite5/closure-16-com.google.javascript.rhino.head.ScriptableObject-20
* Done!

* Computation finished
chronizer(importerTopLevel0);
NativeObject nativeObject0 = new NativeObject();
Class<FunctionObject> class1 = FunctionObject.class;
nativeObject0.defineProperty("jsSet_", class1, 0);

[MASTER] 01:50:38.554 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 01:50:38.554 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NativeArray nativeArray0 = new NativeArray((-1L));
NativeJavaPackage nativeJavaPackage0 = new NativeJavaPackage((String) null);
nativeJavaPackage0.getGetterOrSetter("R=BNpyGM'~x0|rc!", 0, true);
Class<BoundFunction> class0 = BoundFunction.class;
ScriptableObject.defineClass((Scriptable) nativeJavaPackage0, class0, true, true);

[MASTER] 01:50:38.555 [logback-1] WARN  TestSuiteGenerator - JUnit checking timed out
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
[MASTER] 01:50:38.577 [logback-1] WARN  TimeController - Phase JUNIT_CHECK lasted too long, 21 seconds more than allowed.
* Writing JUnit test case 'ScriptableObject_ESTest' to results/evosuite5/closure-16-com.google.javascript.rhino.head.ScriptableObject-20
* Done!

* Computation finished
