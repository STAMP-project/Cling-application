entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.asm.ClassWriter
* Starting Client-0
* Connecting to master process on port 18236
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.asm.ClassWriter
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 174
* Using seed 1565703779748
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 120 / 174
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5862068965517241
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7298850574712644
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9310344827586207
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9655172413793104
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
* Search finished after 305s and 426 generations, 226152 statements, best individual has fitness: 5.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 174
* Number of covered goals: 169
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
* Generated 49 tests with total length 141
* Resulting test suite's coverage: 97%
* Generating assertions
* Resulting test suite's mutation score: 12%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9712643678160919
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing tests to file
* Writing JUnit test case 'ClassWriter_ESTest' to results/evosuite5/mockito-31-org.mockito.asm.ClassWriter-16
* Done!

* Computation finished
