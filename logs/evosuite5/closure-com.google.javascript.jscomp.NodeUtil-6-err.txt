[MASTER] 00:19:43.031 [logback-2] ERROR TestCluster - Failed to check cache for com.google.javascript.jscomp.ControlFlowGraph<N> : Type points to itself
[MASTER] 00:25:59.280 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_203_1566339958967/com/google/javascript/jscomp/NodeUtil_203_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_203_1566339958967/com/google/javascript/jscomp/NodeUtil_203_tmp__ESTest_scaffolding.java]]
[MASTER] 00:25:59.284 [logback-2] ERROR JUnitAnalyzer - Classpath: sources/closure-16/build/classes:sources/closure-16/lib/args4j.jar:sources/closure-16/lib/guava.jar:sources/closure-16/lib/json.jar:sources/closure-16/lib/jsr305.jar:sources/closure-16/lib/protobuf-java.jar:sources/closure-16/build/lib/rhino.jar:sources/closure-16/lib/ant.jar:/home/pderakhshanfar/rq3/botsing-integration-experiment/tools/evosuite.jar:/home/pderakhshanfar/rq3/botsing-integration-experiment/sources/closure-16/build/classes:/home/pderakhshanfar/rq3/botsing-integration-experiment/sources/closure-16/lib/args4j.jar:/home/pderakhshanfar/rq3/botsing-integration-experiment/sources/closure-16/lib/guava.jar:/home/pderakhshanfar/rq3/botsing-integration-experiment/sources/closure-16/lib/json.jar:/home/pderakhshanfar/rq3/botsing-integration-experiment/sources/closure-16/lib/jsr305.jar:/home/pderakhshanfar/rq3/botsing-integration-experiment/sources/closure-16/lib/protobuf-java.jar:/home/pderakhshanfar/rq3/botsing-integration-experiment/sources/closure-16/build/lib/rhino.jar:/home/pderakhshanfar/rq3/botsing-integration-experiment/sources/closure-16/lib/ant.jar
[MASTER] 00:25:59.284 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/rq3/botsing-integration-experiment/tools/evosuite.jar:/home/pderakhshanfar/rq3/botsing-integration-experiment/sources/closure-16/build/classes:/home/pderakhshanfar/rq3/botsing-integration-experiment/sources/closure-16/lib/args4j.jar:/home/pderakhshanfar/rq3/botsing-integration-experiment/sources/closure-16/lib/guava.jar:/home/pderakhshanfar/rq3/botsing-integration-experiment/sources/closure-16/lib/json.jar:/home/pderakhshanfar/rq3/botsing-integration-experiment/sources/closure-16/lib/jsr305.jar:/home/pderakhshanfar/rq3/botsing-integration-experiment/sources/closure-16/lib/protobuf-java.jar:/home/pderakhshanfar/rq3/botsing-integration-experiment/sources/closure-16/build/lib/rhino.jar:/home/pderakhshanfar/rq3/botsing-integration-experiment/sources/closure-16/lib/ant.jar
[MASTER] 00:25:59.289 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method contains(com.google.javascript.rhino.Node)
  location: variable iterable0 of type java.lang.Iterable<com.google.javascript.rhino.Node>: 239
[MASTER] 00:25:59.328 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_203_1566339958967/com/google/javascript/jscomp/NodeUtil_203_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Aug 20 22:25:58 GMT 2019
4:  */
5: 
6: package com.google.javascript.jscomp;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.javascript.jscomp.NodeUtil;
11: import com.google.javascript.rhino.Node;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
17: public class NodeUtil_203_tmp__ESTest extends NodeUtil_203_tmp__ESTest_scaffolding {
18: 
19:   @Test(timeout = 4000)
20:   public void test0()  throws Throwable  {
21:       Node node0 = Node.newNumber(0.0);
22:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
23:       assertEquals(8, Node.FLAG_NO_THROWS);
24:       assertEquals(39, Node.EMPTY_BLOCK);
25:       assertEquals(48, Node.DIRECTIVES);
26:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
27:       assertEquals(50, Node.FREE_CALL);
28:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
29:       assertEquals(4095, Node.COLUMN_MASK);
30:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
31:       assertEquals(45, Node.IS_VAR_ARGS_PARAM);
32:       assertEquals(54, Node.SLASH_V);
33:       assertEquals(30, Node.VAR_ARGS_NAME);
34:       assertEquals(40, Node.ORIGINALNAME_PROP);
35:       assertEquals(51, Node.STATIC_SOURCE_FILE);
36:       assertEquals(41, Node.BRACELESS_TYPE);
37:       assertEquals(16, Node.SOURCENAME_PROP);
38:       assertEquals(46, Node.IS_NAMESPACE);
39:       assertEquals(43, Node.IS_CONSTANT_NAME);
40:       assertEquals(37, Node.OPT_ARG_NAME);
41:       assertEquals(2, Node.POST_FLAG);
42:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
43:       assertEquals(47, Node.IS_DISPATCHER);
44:       assertEquals(29, Node.JSDOC_INFO_PROP);
45:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
46:       assertEquals(12, Node.COLUMN_BITS);
47:       assertEquals(1, Node.DECR_FLAG);
48:       assertEquals(32, Node.INCRDECR_PROP);
49:       assertEquals(54, Node.LAST_PROP);
50:       assertEquals(15, Node.NO_SIDE_EFFECTS);
51:       assertEquals(36, Node.QUOTED_PROP);
52:       assertEquals(53, Node.INPUT_ID);
53:       assertEquals(35, Node.PARENTHESIZED_PROP);
54:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
55:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
56:       assertEquals(52, Node.LENGTH);
57:       assertEquals(44, Node.IS_OPTIONAL_PARAM);
58:       assertEquals(49, Node.DIRECT_EVAL);
59:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
60:       assertFalse(node0.isGetElem());
61:       assertFalse(node0.hasOneChild());
62:       assertFalse(node0.isLabelName());
63:       assertFalse(node0.isFromExterns());
64:       assertFalse(node0.isScript());
65:       assertEquals((-1), node0.getSourcePosition());
66:       assertFalse(node0.isNot());
67:       assertFalse(node0.isOr());
68:       assertEquals(39, node0.getType());
69:       assertFalse(node0.isWhile());
70:       assertEquals((-1), node0.getLineno());
71:       assertFalse(node0.isThis());
72:       assertFalse(node0.isReturn());
73:       assertFalse(node0.isBlock());
74:       assertFalse(node0.isExprResult());
75:       assertFalse(node0.isInstanceOf());
76:       assertFalse(node0.isDec());
77:       assertFalse(node0.hasChildren());
78:       assertFalse(node0.hasMoreThanOneChild());
79:       assertFalse(node0.isWith());
80:       assertFalse(node0.isComma());
81:       assertFalse(node0.isAssign());
82:       assertFalse(node0.isTypeOf());
83:       assertFalse(node0.isStringKey());
84:       assertFalse(node0.isVar());
85:       assertFalse(node0.isCall());
86:       assertFalse(node0.isBreak());
87:       assertFalse(node0.isName());
88:       assertFalse(node0.isParamList());
89:       assertFalse(node0.isNew());
90:       assertEquals((-1), node0.getCharno());
91:       assertFalse(node0.isAdd());
92:       assertFalse(node0.isNull());
93:       assertNull(node0.getSourceFileName());
94:       assertFalse(node0.isDefaultCase());
95:       assertFalse(node0.isSwitch());
96:       assertFalse(node0.isAssignAdd());
97:       assertFalse(node0.isDo());
98:       assertFalse(node0.isLabel());
99:       assertEquals(0, node0.getChildCount());
100:       assertEquals((-1), node0.getSourceOffset());
101:       assertFalse(node0.isFor());
102:       assertFalse(node0.isEmpty());
103:       assertFalse(node0.isIf());
104:       assertFalse(node0.isArrayLit());
105:       assertFalse(node0.isTry());
106:       assertFalse(node0.isDelProp());
107:       assertFalse(node0.isDebugger());
108:       assertFalse(node0.isNE());
109:       assertFalse(node0.isTrue());
110:       assertFalse(node0.isIn());
111:       assertFalse(node0.isGetterDef());
112:       assertFalse(node0.isCase());
113:       assertFalse(node0.isCatch());
114:       assertTrue(node0.isNumber());
115:       assertFalse(node0.isVoid());
116:       assertFalse(node0.isHook());
117:       assertFalse(node0.isRegExp());
118:       assertFalse(node0.isThrow());
119:       assertFalse(node0.isFalse());
120:       assertFalse(node0.isGetProp());
121:       assertFalse(node0.isSetterDef());
122:       assertFalse(node0.isInc());
123:       assertFalse(node0.isString());
124:       assertFalse(node0.isObjectLit());
125:       assertFalse(node0.isContinue());
126:       assertFalse(node0.isAnd());
127:       assertFalse(node0.isFunction());
128:       assertNotNull(node0);
129:       
130:       node0.setType(41);
131:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
132:       assertEquals(8, Node.FLAG_NO_THROWS);
133:       assertEquals(39, Node.EMPTY_BLOCK);
134:       assertEquals(48, Node.DIRECTIVES);
135:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
136:       assertEquals(50, Node.FREE_CALL);
137:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
138:       assertEquals(4095, Node.COLUMN_MASK);
139:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
140:       assertEquals(45, Node.IS_VAR_ARGS_PARAM);
141:       assertEquals(54, Node.SLASH_V);
142:       assertEquals(30, Node.VAR_ARGS_NAME);
143:       assertEquals(40, Node.ORIGINALNAME_PROP);
144:       assertEquals(51, Node.STATIC_SOURCE_FILE);
145:       assertEquals(41, Node.BRACELESS_TYPE);
146:       assertEquals(16, Node.SOURCENAME_PROP);
147:       assertEquals(46, Node.IS_NAMESPACE);
148:       assertEquals(43, Node.IS_CONSTANT_NAME);
149:       assertEquals(37, Node.OPT_ARG_NAME);
150:       assertEquals(2, Node.POST_FLAG);
151:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
152:       assertEquals(47, Node.IS_DISPATCHER);
153:       assertEquals(29, Node.JSDOC_INFO_PROP);
154:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
155:       assertEquals(12, Node.COLUMN_BITS);
156:       assertEquals(1, Node.DECR_FLAG);
157:       assertEquals(32, Node.INCRDECR_PROP);
158:       assertEquals(54, Node.LAST_PROP);
159:       assertEquals(15, Node.NO_SIDE_EFFECTS);
160:       assertEquals(36, Node.QUOTED_PROP);
161:       assertEquals(53, Node.INPUT_ID);
162:       assertEquals(35, Node.PARENTHESIZED_PROP);
163:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
164:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
165:       assertEquals(52, Node.LENGTH);
166:       assertEquals(44, Node.IS_OPTIONAL_PARAM);
167:       assertEquals(49, Node.DIRECT_EVAL);
168:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
169:       assertFalse(node0.isGetElem());
170:       assertFalse(node0.hasOneChild());
171:       assertFalse(node0.isLabelName());
172:       assertFalse(node0.isFromExterns());
173:       assertFalse(node0.isScript());
174:       assertFalse(node0.isNumber());
175:       assertEquals((-1), node0.getSourcePosition());
176:       assertFalse(node0.isNot());
177:       assertFalse(node0.isOr());
178:       assertFalse(node0.isWhile());
179:       assertEquals((-1), node0.getLineno());
180:       assertFalse(node0.isThis());
181:       assertFalse(node0.isReturn());
182:       assertFalse(node0.isBlock());
183:       assertFalse(node0.isExprResult());
184:       assertFalse(node0.isInstanceOf());
185:       assertFalse(node0.isDec());
186:       assertFalse(node0.hasChildren());
187:       assertFalse(node0.hasMoreThanOneChild());
188:       assertFalse(node0.isWith());
189:       assertFalse(node0.isComma());
190:       assertFalse(node0.isAssign());
191:       assertFalse(node0.isTypeOf());
192:       assertFalse(node0.isStringKey());
193:       assertFalse(node0.isVar());
194:       assertFalse(node0.isCall());
195:       assertFalse(node0.isBreak());
196:       assertFalse(node0.isName());
197:       assertFalse(node0.isParamList());
198:       assertFalse(node0.isNew());
199:       assertEquals((-1), node0.getCharno());
200:       assertFalse(node0.isAdd());
201:       assertNull(node0.getSourceFileName());
202:       assertFalse(node0.isDefaultCase());
203:       assertFalse(node0.isSwitch());
204:       assertFalse(node0.isAssignAdd());
205:       assertFalse(node0.isDo());
206:       assertFalse(node0.isLabel());
207:       assertEquals(0, node0.getChildCount());
208:       assertEquals((-1), node0.getSourceOffset());
209:       assertFalse(node0.isFor());
210:       assertFalse(node0.isEmpty());
211:       assertFalse(node0.isIf());
212:       assertFalse(node0.isArrayLit());
213:       assertFalse(node0.isTry());
214:       assertFalse(node0.isDelProp());
215:       assertFalse(node0.isDebugger());
216:       assertFalse(node0.isNE());
217:       assertFalse(node0.isTrue());
218:       assertFalse(node0.isIn());
219:       assertFalse(node0.isGetterDef());
220:       assertEquals(41, node0.getType());
221:       assertFalse(node0.isCase());
222:       assertFalse(node0.isCatch());
223:       assertFalse(node0.isVoid());
224:       assertFalse(node0.isHook());
225:       assertFalse(node0.isRegExp());
226:       assertFalse(node0.isThrow());
227:       assertFalse(node0.isFalse());
228:       assertFalse(node0.isGetProp());
229:       assertFalse(node0.isSetterDef());
230:       assertFalse(node0.isInc());
231:       assertFalse(node0.isString());
232:       assertTrue(node0.isNull());
233:       assertFalse(node0.isObjectLit());
234:       assertFalse(node0.isContinue());
235:       assertFalse(node0.isAnd());
236:       assertFalse(node0.isFunction());
237:       
238:       Iterable<Node> iterable0 = node0.children();
239:       assertFalse(iterable0.contains(node0));
240:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
241:       assertEquals(8, Node.FLAG_NO_THROWS);
242:       assertEquals(39, Node.EMPTY_BLOCK);
243:       assertEquals(48, Node.DIRECTIVES);
244:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
245:       assertEquals(50, Node.FREE_CALL);
246:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
247:       assertEquals(4095, Node.COLUMN_MASK);
248:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
249:       assertEquals(45, Node.IS_VAR_ARGS_PARAM);
250:       assertEquals(54, Node.SLASH_V);
251:       assertEquals(30, Node.VAR_ARGS_NAME);
252:       assertEquals(40, Node.ORIGINALNAME_PROP);
253:       assertEquals(51, Node.STATIC_SOURCE_FILE);
254:       assertEquals(41, Node.BRACELESS_TYPE);
255:       assertEquals(16, Node.SOURCENAME_PROP);
256:       assertEquals(46, Node.IS_NAMESPACE);
257:       assertEquals(43, Node.IS_CONSTANT_NAME);
258:       assertEquals(37, Node.OPT_ARG_NAME);
259:       assertEquals(2, Node.POST_FLAG);
260:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
261:       assertEquals(47, Node.IS_DISPATCHER);
262:       assertEquals(29, Node.JSDOC_INFO_PROP);
263:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
264:       assertEquals(12, Node.COLUMN_BITS);
265:       assertEquals(1, Node.DECR_FLAG);
266:       assertEquals(32, Node.INCRDECR_PROP);
267:       assertEquals(54, Node.LAST_PROP);
268:       assertEquals(15, Node.NO_SIDE_EFFECTS);
269:       assertEquals(36, Node.QUOTED_PROP);
270:       assertEquals(53, Node.INPUT_ID);
271:       assertEquals(35, Node.PARENTHESIZED_PROP);
272:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
273:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
274:       assertEquals(52, Node.LENGTH);
275:       assertEquals(44, Node.IS_OPTIONAL_PARAM);
276:       assertEquals(49, Node.DIRECT_EVAL);
277:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
278:       assertFalse(node0.isGetElem());
279:       assertFalse(node0.hasOneChild());
280:       assertFalse(node0.isLabelName());
281:       assertFalse(node0.isFromExterns());
282:       assertFalse(node0.isScript());
283:       assertFalse(node0.isNumber());
284:       assertEquals((-1), node0.getSourcePosition());
285:       assertFalse(node0.isNot());
286:       assertFalse(node0.isOr());
287:       assertFalse(node0.isWhile());
288:       assertEquals((-1), node0.getLineno());
289:       assertFalse(node0.isThis());
290:       assertFalse(node0.isReturn());
291:       assertFalse(node0.isBlock());
292:       assertFalse(node0.isExprResult());
293:       assertFalse(node0.isInstanceOf());
294:       assertFalse(node0.isDec());
295:       assertFalse(node0.hasChildren());
296:       assertFalse(node0.hasMoreThanOneChild());
297:       assertFalse(node0.isWith());
298:       assertFalse(node0.isComma());
299:       assertFalse(node0.isAssign());
300:       assertFalse(node0.isTypeOf());
301:       assertFalse(node0.isStringKey());
302:       assertFalse(node0.isVar());
303:       assertFalse(node0.isCall());
304:       assertFalse(node0.isBreak());
305:       assertFalse(node0.isName());
306:       assertFalse(node0.isParamList());
307:       assertFalse(node0.isNew());
308:       assertEquals((-1), node0.getCharno());
309:       assertFalse(node0.isAdd());
310:       assertNull(node0.getSourceFileName());
311:       assertFalse(node0.isDefaultCase());
312:       assertFalse(node0.isSwitch());
313:       assertFalse(node0.isAssignAdd());
314:       assertFalse(node0.isDo());
315:       assertFalse(node0.isLabel());
316:       assertEquals(0, node0.getChildCount());
317:       assertEquals((-1), node0.getSourceOffset());
318:       assertFalse(node0.isFor());
319:       assertFalse(node0.isEmpty());
320:       assertFalse(node0.isIf());
321:       assertFalse(node0.isArrayLit());
322:       assertFalse(node0.isTry());
323:       assertFalse(node0.isDelProp());
324:       assertFalse(node0.isDebugger());
325:       assertFalse(node0.isNE());
326:       assertFalse(node0.isTrue());
327:       assertFalse(node0.isIn());
328:       assertFalse(node0.isGetterDef());
329:       assertEquals(41, node0.getType());
330:       assertFalse(node0.isCase());
331:       assertFalse(node0.isCatch());
332:       assertFalse(node0.isVoid());
333:       assertFalse(node0.isHook());
334:       assertFalse(node0.isRegExp());
335:       assertFalse(node0.isThrow());
336:       assertFalse(node0.isFalse());
337:       assertFalse(node0.isGetProp());
338:       assertFalse(node0.isSetterDef());
339:       assertFalse(node0.isInc());
340:       assertFalse(node0.isString());
341:       assertTrue(node0.isNull());
342:       assertFalse(node0.isObjectLit());
343:       assertFalse(node0.isContinue());
344:       assertFalse(node0.isAnd());
345:       assertFalse(node0.isFunction());
346:       assertNotNull(iterable0);
347:       
348:       Double double0 = NodeUtil.getNumberValue(node0);
349:       assertEquals(0.0, (double)double0, 0.01);
350:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
351:       assertEquals(8, Node.FLAG_NO_THROWS);
352:       assertEquals(39, Node.EMPTY_BLOCK);
353:       assertEquals(48, Node.DIRECTIVES);
354:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
355:       assertEquals(50, Node.FREE_CALL);
356:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
357:       assertEquals(4095, Node.COLUMN_MASK);
358:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
359:       assertEquals(45, Node.IS_VAR_ARGS_PARAM);
360:       assertEquals(54, Node.SLASH_V);
361:       assertEquals(30, Node.VAR_ARGS_NAME);
362:       assertEquals(40, Node.ORIGINALNAME_PROP);
363:       assertEquals(51, Node.STATIC_SOURCE_FILE);
364:       assertEquals(41, Node.BRACELESS_TYPE);
365:       assertEquals(16, Node.SOURCENAME_PROP);
366:       assertEquals(46, Node.IS_NAMESPACE);
367:       assertEquals(43, Node.IS_CONSTANT_NAME);
368:       assertEquals(37, Node.OPT_ARG_NAME);
369:       assertEquals(2, Node.POST_FLAG);
370:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
371:       assertEquals(47, Node.IS_DISPATCHER);
372:       assertEquals(29, Node.JSDOC_INFO_PROP);
373:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
374:       assertEquals(12, Node.COLUMN_BITS);
375:       assertEquals(1, Node.DECR_FLAG);
376:       assertEquals(32, Node.INCRDECR_PROP);
377:       assertEquals(54, Node.LAST_PROP);
378:       assertEquals(15, Node.NO_SIDE_EFFECTS);
379:       assertEquals(36, Node.QUOTED_PROP);
380:       assertEquals(53, Node.INPUT_ID);
381:       assertEquals(35, Node.PARENTHESIZED_PROP);
382:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
383:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
384:       assertEquals(52, Node.LENGTH);
385:       assertEquals(44, Node.IS_OPTIONAL_PARAM);
386:       assertEquals(49, Node.DIRECT_EVAL);
387:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
388:       assertFalse(node0.isGetElem());
389:       assertFalse(node0.hasOneChild());
390:       assertFalse(node0.isLabelName());
391:       assertFalse(node0.isFromExterns());
392:       assertFalse(node0.isScript());
393:       assertFalse(node0.isNumber());
394:       assertEquals((-1), node0.getSourcePosition());
395:       assertFalse(node0.isNot());
396:       assertFalse(node0.isOr());
397:       assertFalse(node0.isWhile());
398:       assertEquals((-1), node0.getLineno());
399:       assertFalse(node0.isThis());
400:       assertFalse(node0.isReturn());
401:       assertFalse(node0.isBlock());
402:       assertFalse(node0.isExprResult());
403:       assertFalse(node0.isInstanceOf());
404:       assertFalse(node0.isDec());
405:       assertFalse(node0.hasChildren());
406:       assertFalse(node0.hasMoreThanOneChild());
407:       assertFalse(node0.isWith());
408:       assertFalse(node0.isComma());
409:       assertFalse(node0.isAssign());
410:       assertFalse(node0.isTypeOf());
411:       assertFalse(node0.isStringKey());
412:       assertFalse(node0.isVar());
413:       assertFalse(node0.isCall());
414:       assertFalse(node0.isBreak());
415:       assertFalse(node0.isName());
416:       assertFalse(node0.isParamList());
417:       assertFalse(node0.isNew());
418:       assertEquals((-1), node0.getCharno());
419:       assertFalse(node0.isAdd());
420:       assertNull(node0.getSourceFileName());
421:       assertFalse(node0.isDefaultCase());
422:       assertFalse(node0.isSwitch());
423:       assertFalse(node0.isAssignAdd());
424:       assertFalse(node0.isDo());
425:       assertFalse(node0.isLabel());
426:       assertEquals(0, node0.getChildCount());
427:       assertEquals((-1), node0.getSourceOffset());
428:       assertFalse(node0.isFor());
429:       assertFalse(node0.isEmpty());
430:       assertFalse(node0.isIf());
431:       assertFalse(node0.isArrayLit());
432:       assertFalse(node0.isTry());
433:       assertFalse(node0.isDelProp());
434:       assertFalse(node0.isDebugger());
435:       assertFalse(node0.isNE());
436:       assertFalse(node0.isTrue());
437:       assertFalse(node0.isIn());
438:       assertFalse(node0.isGetterDef());
439:       assertEquals(41, node0.getType());
440:       assertFalse(node0.isCase());
441:       assertFalse(node0.isCatch());
442:       assertFalse(node0.isVoid());
443:       assertFalse(node0.isHook());
444:       assertFalse(node0.isRegExp());
445:       assertFalse(node0.isThrow());
446:       assertFalse(node0.isFalse());
447:       assertFalse(node0.isGetProp());
448:       assertFalse(node0.isSetterDef());
449:       assertFalse(node0.isInc());
450:       assertFalse(node0.isString());
451:       assertTrue(node0.isNull());
452:       assertFalse(node0.isObjectLit());
453:       assertFalse(node0.isContinue());
454:       assertFalse(node0.isAnd());
455:       assertFalse(node0.isFunction());
456:       assertNotNull(double0);
457:       
458:       boolean boolean0 = NodeUtil.isSimpleOperatorType(24);
459:       assertTrue(boolean0);
460:       
461:       boolean boolean1 = NodeUtil.isCallOrNew(node0);
462:       assertFalse(boolean1);
463:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
464:       assertEquals(8, Node.FLAG_NO_THROWS);
465:       assertEquals(39, Node.EMPTY_BLOCK);
466:       assertEquals(48, Node.DIRECTIVES);
467:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
468:       assertEquals(50, Node.FREE_CALL);
469:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
470:       assertEquals(4095, Node.COLUMN_MASK);
471:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
472:       assertEquals(45, Node.IS_VAR_ARGS_PARAM);
473:       assertEquals(54, Node.SLASH_V);
474:       assertEquals(30, Node.VAR_ARGS_NAME);
475:       assertEquals(40, Node.ORIGINALNAME_PROP);
476:       assertEquals(51, Node.STATIC_SOURCE_FILE);
477:       assertEquals(41, Node.BRACELESS_TYPE);
478:       assertEquals(16, Node.SOURCENAME_PROP);
479:       assertEquals(46, Node.IS_NAMESPACE);
480:       assertEquals(43, Node.IS_CONSTANT_NAME);
481:       assertEquals(37, Node.OPT_ARG_NAME);
482:       assertEquals(2, Node.POST_FLAG);
483:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
484:       assertEquals(47, Node.IS_DISPATCHER);
485:       assertEquals(29, Node.JSDOC_INFO_PROP);
486:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
487:       assertEquals(12, Node.COLUMN_BITS);
488:       assertEquals(1, Node.DECR_FLAG);
489:       assertEquals(32, Node.INCRDECR_PROP);
490:       assertEquals(54, Node.LAST_PROP);
491:       assertEquals(15, Node.NO_SIDE_EFFECTS);
492:       assertEquals(36, Node.QUOTED_PROP);
493:       assertEquals(53, Node.INPUT_ID);
494:       assertEquals(35, Node.PARENTHESIZED_PROP);
495:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
496:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
497:       assertEquals(52, Node.LENGTH);
498:       assertEquals(44, Node.IS_OPTIONAL_PARAM);
499:       assertEquals(49, Node.DIRECT_EVAL);
500:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
501:       assertFalse(node0.isGetElem());
502:       assertFalse(node0.hasOneChild());
503:       assertFalse(node0.isLabelName());
504:       assertFalse(node0.isFromExterns());
505:       assertFalse(node0.isScript());
506:       assertFalse(node0.isNumber());
507:       assertEquals((-1), node0.getSourcePosition());
508:       assertFalse(node0.isNot());
509:       assertFalse(node0.isOr());
510:       assertFalse(node0.isWhile());
511:       assertEquals((-1), node0.getLineno());
512:       assertFalse(node0.isThis());
513:       assertFalse(node0.isReturn());
514:       assertFalse(node0.isBlock());
515:       assertFalse(node0.isExprResult());
516:       assertFalse(node0.isInstanceOf());
517:       assertFalse(node0.isDec());
518:       assertFalse(node0.hasChildren());
519:       assertFalse(node0.hasMoreThanOneChild());
520:       assertFalse(node0.isWith());
521:       assertFalse(node0.isComma());
522:       assertFalse(node0.isAssign());
523:       assertFalse(node0.isTypeOf());
524:       assertFalse(node0.isStringKey());
525:       assertFalse(node0.isVar());
526:       assertFalse(node0.isCall());
527:       assertFalse(node0.isBreak());
528:       assertFalse(node0.isName());
529:       assertFalse(node0.isParamList());
530:       assertFalse(node0.isNew());
531:       assertEquals((-1), node0.getCharno());
532:       assertFalse(node0.isAdd());
533:       assertNull(node0.getSourceFileName());
534:       assertFalse(node0.isDefaultCase());
535:       assertFalse(node0.isSwitch());
536:       assertFalse(node0.isAssignAdd());
537:       assertFalse(node0.isDo());
538:       assertFalse(node0.isLabel());
539:       assertEquals(0, node0.getChildCount());
540:       assertEquals((-1), node0.getSourceOffset());
541:       assertFalse(node0.isFor());
542:       assertFalse(node0.isEmpty());
543:       assertFalse(node0.isIf());
544:       assertFalse(node0.isArrayLit());
545:       assertFalse(node0.isTry());
546:       assertFalse(node0.isDelProp());
547:       assertFalse(node0.isDebugger());
548:       assertFalse(node0.isNE());
549:       assertFalse(node0.isTrue());
550:       assertFalse(node0.isIn());
551:       assertFalse(node0.isGetterDef());
552:       assertEquals(41, node0.getType());
553:       assertFalse(node0.isCase());
554:       assertFalse(node0.isCatch());
555:       assertFalse(node0.isVoid());
556:       assertFalse(node0.isHook());
557:       assertFalse(node0.isRegExp());
558:       assertFalse(node0.isThrow());
559:       assertFalse(node0.isFalse());
560:       assertFalse(node0.isGetProp());
561:       assertFalse(node0.isSetterDef());
562:       assertFalse(node0.isInc());
563:       assertFalse(node0.isString());
564:       assertTrue(node0.isNull());
565:       assertFalse(node0.isObjectLit());
566:       assertFalse(node0.isContinue());
567:       assertFalse(node0.isAnd());
568:       assertFalse(node0.isFunction());
569:       assertFalse(boolean1 == boolean0);
570:   }
571: }
RegularFileObject[/tmp/EvoSuite_203_1566339958967/com/google/javascript/jscomp/NodeUtil_203_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Aug 20 22:25:59 GMT 2019
5:  */
6: 
7: package com.google.javascript.jscomp;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class NodeUtil_203_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "com.google.javascript.jscomp.NodeUtil"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/rq3/botsing-integration-experiment"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NodeUtil_203_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "com.google.common.collect.ArrayListMultimap",
82:       "com.google.javascript.jscomp.Tracer$1",
83:       "com.google.common.collect.Collections2",
84:       "com.google.common.collect.PeekingIterator",
85:       "com.google.javascript.jscomp.NodeTraversal$Callback",
86:       "com.google.javascript.jscomp.CheckSideEffects",
87:       "com.google.javascript.rhino.head.jdk13.VMBridge_jdk13",
88:       "com.google.javascript.rhino.head.ast.Yield",
89:       "com.google.javascript.jscomp.graph.Graph",
90:       "com.google.javascript.rhino.jstype.StaticScope",
91:       "com.google.javascript.rhino.jstype.InstanceObjectType",
92:       "com.google.javascript.jscomp.graph.Annotatable",
93:       "com.google.javascript.jscomp.parsing.IRFactory$TransformDispatcher",
94:       "com.google.common.collect.AbstractMapBasedMultiset$1",
95:       "com.google.javascript.jscomp.parsing.JsDocToken",
96:       "com.google.javascript.jscomp.JSModule",
97:       "com.google.javascript.rhino.jstype.ObjectType",
98:       "com.google.common.collect.ImmutableSet$ArrayImmutableSet",
99:       "com.google.javascript.rhino.JSDocInfo$Marker",
100:       "com.google.common.collect.RegularImmutableMap",
101:       "com.google.javascript.rhino.Node$NodeMismatch",
102:       "com.google.javascript.rhino.jstype.RecordType",
103:       "com.google.javascript.rhino.head.ast.Jump",
104:       "com.google.javascript.jscomp.PeepholeSimplifyRegExp",
105:       "com.google.javascript.jscomp.Tracer",
106:       "com.google.javascript.jscomp.HotSwapCompilerPass",
107:       "com.google.javascript.jscomp.SourceFile$Builder",
108:       "com.google.javascript.jscomp.CodingConvention$SubclassType",
109:       "com.google.javascript.rhino.jstype.JSType$1",
110:       "com.google.javascript.jscomp.CodingConvention",
111:       "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
112:       "com.google.javascript.jscomp.SourceMap$DetailLevel",
113:       "com.google.javascript.jscomp.MemoizedScopeCreator",
114:       "com.google.javascript.rhino.head.ast.EmptyStatement",
115:       "com.google.javascript.jscomp.CompilerOptions$1",
116:       "com.google.common.base.Joiner",
117:       "com.google.javascript.jscomp.CheckAccessControls",
118:       "com.google.javascript.jscomp.CheckDebuggerStatement",
119:       "com.google.common.collect.SingletonImmutableMap",
120:       "com.google.javascript.jscomp.CleanupPasses",
121:       "com.google.javascript.jscomp.MakeDeclaredNamesUnique$BoilerplateRenamer",
122:       "com.google.javascript.rhino.head.ast.XmlFragment",
123:       "com.google.javascript.rhino.jstype.ProxyObjectType",
124:       "com.google.javascript.jscomp.PassConfig$State",
125:       "com.google.javascript.rhino.head.ast.CatchClause",
126:       "com.google.javascript.jscomp.AnonymousFunctionNamingPolicy",
127:       "com.google.javascript.rhino.InputId",
128:       "com.google.common.collect.RegularImmutableMap$LinkedEntry",
129:       "com.google.common.collect.Lists$Partition",
130:       "com.google.javascript.rhino.head.ast.AstRoot",
131:       "com.google.javascript.rhino.head.Token$CommentType",
132:       "com.google.javascript.rhino.head.ast.NewExpression",
133:       "com.google.common.collect.Count",
134:       "com.google.javascript.rhino.ErrorReporter",
135:       "com.google.javascript.rhino.jstype.ValueType",
136:       "com.google.javascript.rhino.head.ast.ParenthesizedExpression",
137:       "com.google.javascript.rhino.Token",
138:       "com.google.javascript.rhino.jstype.BooleanType",
139:       "com.google.javascript.jscomp.CssRenamingMap",
140:       "com.google.javascript.rhino.head.Context$ClassShutterSetter",
141:       "com.google.common.base.CharMatcher$5",
142:       "com.google.common.base.CharMatcher$4",
143:       "com.google.javascript.jscomp.CombinedCompilerPass",
144:       "com.google.common.base.CharMatcher$3",
145:       "com.google.javascript.jscomp.MakeDeclaredNamesUnique$ContextualRenamer",
146:       "com.google.common.base.CharMatcher$2",
147:       "com.google.common.base.CharMatcher$9",
148:       "com.google.common.base.CharMatcher$8",
149:       "com.google.common.base.CharMatcher$7",
150:       "com.google.javascript.rhino.head.ast.Label",
151:       "com.google.common.base.CharMatcher$6",
152:       "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
153:       "com.google.javascript.jscomp.SuppressDocWarningsGuard",
154:       "com.google.javascript.jscomp.MessageFormatter",
155:       "com.google.javascript.rhino.JSDocInfo",
156:       "com.google.javascript.jscomp.SourceExcerptProvider$ExcerptFormatter",
157:       "com.google.common.base.CharMatcher$1",
158:       "com.google.javascript.jscomp.parsing.Config",
159:       "com.google.common.collect.EmptyImmutableList",
160:       "com.google.common.collect.ImmutableEntry",
161:       "com.google.javascript.rhino.head.CompilerEnvirons",
162:       "com.google.common.base.Joiner$1",
163:       "com.google.common.base.Joiner$2",
164:       "com.google.javascript.jscomp.ErrorHandler",
165:       "com.google.javascript.rhino.head.Callable",
166:       "com.google.javascript.jscomp.GoogleCodingConvention",
167:       "com.google.javascript.jscomp.SourceFile$Preloaded",
168:       "com.google.common.collect.ImmutableCollection",
169:       "com.google.javascript.jscomp.parsing.JsDocInfoParser$State",
170:       "com.google.javascript.rhino.ScriptRuntime",
171:       "com.google.javascript.rhino.head.ast.ScriptNode",
172:       "com.google.javascript.rhino.head.ast.XmlString",
173:       "com.google.javascript.jscomp.StrictModeCheck",
174:       "com.google.javascript.rhino.head.ast.WhileLoop",
175:       "com.google.javascript.jscomp.CodingConventions$1",
176:       "com.google.javascript.jscomp.Result",
177:       "com.google.javascript.jscomp.CodingConvention$ObjectLiteralCast",
178:       "com.google.javascript.jscomp.CodingConvention$SubclassRelationship",
179:       "com.google.javascript.jscomp.CompilerPass",
180:       "com.google.javascript.rhino.jstype.EnumElementType",
181:       "com.google.javascript.rhino.head.ast.AstNode$PositionComparator",
182:       "com.google.javascript.jscomp.NodeUtil$MatchDeclaration",
183:       "com.google.javascript.jscomp.NodeUtil$VarCollector",
184:       "com.google.javascript.jscomp.VariableRenamingPolicy",
185:       "com.google.javascript.rhino.head.ast.IfStatement",
186:       "com.google.javascript.jscomp.parsing.JsDocInfoParser$ErrorReporterParser",
187:       "com.google.javascript.jscomp.CodeChangeHandler",
188:       "com.google.common.collect.Lists$AbstractListWrapper",
189:       "com.google.javascript.jscomp.MakeDeclaredNamesUnique$Renamer",
190:       "com.google.javascript.jscomp.FunctionTypeBuilder",
191:       "com.google.javascript.jscomp.FunctionInformationMap",
192:       "com.google.common.collect.AbstractMapBasedMultiset",
193:       "com.google.javascript.jscomp.NodeUtil$MayBeStringResultPredicate",
194:       "com.google.javascript.rhino.jstype.EnumType",
195:       "com.google.javascript.jscomp.JsMessageVisitor$MalformedException",
196:       "com.google.javascript.rhino.head.Evaluator",
197:       "com.google.javascript.jscomp.CodingConventions$DefaultCodingConvention",
198:       "com.google.common.base.CharMatcher$LookupTable",
199:       "com.google.javascript.rhino.head.ast.XmlElemRef",
200:       "com.google.javascript.rhino.head.ast.VariableDeclaration",
201:       "com.google.javascript.rhino.head.TokenStream",
202:       "com.google.common.collect.RegularImmutableList$1",
203:       "com.google.javascript.rhino.head.ast.ObjectLiteral",
204:       "com.google.common.collect.Lists$2",
205:       "com.google.javascript.jscomp.JSSourceFile",
206:       "com.google.javascript.jscomp.CodingConventions",
207:       "com.google.common.collect.Lists$1",
208:       "com.google.javascript.rhino.jstype.StaticReference",
209:       "com.google.javascript.rhino.head.ast.InfixExpression",
210:       "com.google.common.collect.Multiset",
211:       "com.google.javascript.rhino.head.BaseFunction",
212:       "com.google.common.base.Supplier",
213:       "com.google.javascript.jscomp.parsing.JsDocTokenStream",
214:       "com.google.protobuf.MessageOrBuilder",
215:       "com.google.javascript.jscomp.graph.LinkedDirectedGraph",
216:       "com.google.javascript.jscomp.GlobalVarReferenceMap",
217:       "com.google.javascript.rhino.head.ast.XmlPropRef",
218:       "com.google.javascript.rhino.JSDocInfo$NamePosition",
219:       "com.google.javascript.jscomp.TypeValidator",
220:       "com.google.common.collect.ImmutableList",
221:       "com.google.protobuf.GeneratedMessage",
222:       "com.google.javascript.rhino.Node$AbstractPropListItem",
223:       "com.google.javascript.rhino.jstype.ObjectType$Property",
224:       "com.google.javascript.jscomp.Tracer$InternalClock",
225:       "com.google.common.collect.AbstractMultimap$KeySet",
226:       "com.google.javascript.jscomp.SourceMap$LocationMapping",
227:       "com.google.javascript.rhino.head.ast.VariableInitializer",
228:       "com.google.javascript.rhino.jstype.NoResolvedType",
229:       "com.google.javascript.rhino.head.ast.ThrowStatement",
230:       "com.google.protobuf.MessageLiteOrBuilder",
231:       "com.google.javascript.jscomp.NodeTraversal$AbstractNodeTypePruningCallback",
232:       "com.google.javascript.jscomp.DefaultPassConfig$99",
233:       "com.google.protobuf.MessageLite",
234:       "com.google.javascript.jscomp.DefaultPassConfig$98",
235:       "com.google.common.collect.Maps$EntryTransformer",
236:       "com.google.javascript.jscomp.DefaultPassConfig$95",
237:       "com.google.javascript.jscomp.DefaultPassConfig$94",
238:       "com.google.javascript.jscomp.DefaultPassConfig$96",
239:       "com.google.javascript.jscomp.CustomPassExecutionTime",
240:       "com.google.javascript.jscomp.DefaultPassConfig$91",
241:       "com.google.javascript.jscomp.SyntacticScopeCreator",
242:       "com.google.javascript.jscomp.DefaultPassConfig$90",
243:       "com.google.javascript.jscomp.DefaultPassConfig$93",
244:       "com.google.javascript.jscomp.DefaultPassConfig$92",
245:       "com.google.javascript.rhino.head.debug.DebuggableScript",
246:       "com.google.javascript.jscomp.CompilerOptions$TweakProcessing",
247:       "com.google.common.collect.Hashing",
248:       "com.google.javascript.rhino.head.DefaultErrorReporter",
249:       "com.google.javascript.rhino.jstype.NoType",
250:       "com.google.javascript.jscomp.SourceMap$Format",
251:       "com.google.javascript.rhino.head.Script",
252:       "com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider",
253:       "com.google.common.collect.AbstractMultimap$WrappedCollection",
254:       "com.google.javascript.rhino.TokenStream",
255:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
256:       "com.google.javascript.jscomp.DefaultPassConfig$88",
257:       "com.google.javascript.jscomp.DefaultPassConfig$87",
258:       "com.google.javascript.jscomp.DefaultPassConfig$89",
259:       "com.google.javascript.jscomp.PeepholeCollectPropertyAssignments",
260:       "com.google.javascript.rhino.head.ast.Comment",
261:       "com.google.javascript.jscomp.DefaultPassConfig$84",
262:       "com.google.javascript.jscomp.DefaultPassConfig$83",
263:       "com.google.javascript.jscomp.DefaultPassConfig$86",
264:       "com.google.javascript.jscomp.DefaultPassConfig$85",
265:       "com.google.javascript.jscomp.CodingConventions$Proxy",
266:       "com.google.javascript.jscomp.SourceExcerptProvider$SourceExcerpt",
267:       "com.google.javascript.jscomp.DefaultPassConfig$80",
268:       "com.google.javascript.jscomp.DefaultPassConfig$82",
269:       "com.google.javascript.jscomp.DefaultPassConfig$81",
270:       "com.google.common.collect.LinkedHashMultimap",
271:       "com.google.javascript.jscomp.InferJSDocInfo",
272:       "com.google.javascript.rhino.head.optimizer.Codegen",
273:       "com.google.javascript.rhino.head.ast.FunctionCall",
274:       "com.google.javascript.jscomp.RhinoErrorReporter$NewRhinoErrorReporter",
275:       "com.google.javascript.jscomp.NodeUtil",
276:       "com.google.common.collect.RegularImmutableSet",
277:       "com.google.javascript.jscomp.JsMessageVisitor",
278:       "com.google.javascript.jscomp.DefaultPassConfig$77",
279:       "com.google.javascript.jscomp.DefaultPassConfig$76",
280:       "com.google.javascript.jscomp.DefaultPassConfig$79",
281:       "com.google.javascript.jscomp.DefaultPassConfig$78",
282:       "com.google.javascript.jscomp.DefaultPassConfig$73",
283:       "com.google.javascript.jscomp.DefaultPassConfig$72",
284:       "com.google.javascript.rhino.head.EcmaError",
285:       "com.google.javascript.rhino.head.FunctionObject",
286:       "com.google.javascript.jscomp.DefaultPassConfig$75",
287:       "com.google.javascript.jscomp.DefaultPassConfig$74",
288:       "com.google.javascript.jscomp.DefaultPassConfig$71",
289:       "com.google.javascript.jscomp.DefaultPassConfig$70",
290:       "com.google.javascript.rhino.head.NativeContinuation",
291:       "com.google.javascript.rhino.head.xml.XMLObject",
292:       "com.google.javascript.rhino.head.Node$NodeIterator",
293:       "com.google.common.collect.ImmutableAsList",
294:       "com.google.javascript.jscomp.PassConfig",
295:       "com.google.javascript.jscomp.ConcreteType$ConcreteInstanceType",
296:       "com.google.common.collect.SingletonImmutableSet",
297:       "com.google.javascript.jscomp.AbstractMessageFormatter$Color",
298:       "com.google.javascript.jscomp.Normalize$NormalizeStatements",
299:       "com.google.javascript.jscomp.DefaultPassConfig$69",
300:       "com.google.javascript.rhino.head.InterpretedFunction",
301:       "com.google.javascript.jscomp.DefaultPassConfig$66",
302:       "com.google.javascript.jscomp.DefaultPassConfig$65",
303:       "com.google.javascript.jscomp.DefaultPassConfig$68",
304:       "com.google.javascript.jscomp.DefaultPassConfig$67",
305:       "com.google.javascript.rhino.jstype.ParameterizedType",
306:       "com.google.javascript.jscomp.DefaultPassConfig$62",
307:       "com.google.javascript.jscomp.DefaultPassConfig$61",
308:       "com.google.javascript.rhino.Node$SideEffectFlags",
309:       "com.google.javascript.jscomp.DefaultPassConfig$64",
310:       "com.google.javascript.jscomp.DefaultPassConfig$63",
311:       "com.google.javascript.jscomp.CheckSideEffects$StripProtection",
312:       "com.google.javascript.jscomp.DefaultPassConfig$60",
313:       "com.google.javascript.jscomp.ReferenceCollectingCallback$ReferenceMap",
314:       "com.google.javascript.rhino.jstype.NullType",
315:       "com.google.javascript.jscomp.LightweightMessageFormatter",
316:       "com.google.common.collect.EmptyImmutableList$1",
317:       "com.google.javascript.jscomp.Compiler$CodeBuilder",
318:       "com.google.javascript.jscomp.FunctionInformationMapOrBuilder",
319:       "com.google.javascript.jscomp.DefaultPassConfig$HotSwapPassFactory",
320:       "com.google.javascript.rhino.jstype.NoObjectType",
321:       "com.google.javascript.jscomp.CleanupPasses$1",
322:       "com.google.common.collect.AbstractIterator",
323:       "com.google.javascript.rhino.head.ScriptableObject$GetterSlot",
324:       "com.google.javascript.jscomp.BasicErrorManager$ErrorWithLevel",
325:       "com.google.common.base.CharMatcher$And",
326:       "com.google.javascript.jscomp.DiagnosticType",
327:       "com.google.javascript.jscomp.DefaultPassConfig$59",
328:       "com.google.javascript.jscomp.CompilerOptions$NullAliasTransformationHandler$NullAliasTransformation",
329:       "com.google.javascript.jscomp.DefaultPassConfig$58",
330:       "com.google.javascript.jscomp.graph.DiGraph$DiGraphNode",
331:       "com.google.javascript.jscomp.CleanupPasses$3",
332:       "com.google.javascript.jscomp.CleanupPasses$2",
333:       "com.google.javascript.jscomp.PrepareAst",
334:       "com.google.javascript.rhino.head.ast.ForLoop",
335:       "com.google.javascript.jscomp.DefaultPassConfig$55",
336:       "com.google.javascript.jscomp.DefaultPassConfig$54",
337:       "com.google.javascript.jscomp.DefaultPassConfig$57",
338:       "com.google.common.io.OutputSupplier",
339:       "com.google.javascript.jscomp.DefaultPassConfig$56",
340:       "com.google.javascript.jscomp.DefaultPassConfig$51",
341:       "com.google.javascript.jscomp.DefaultPassConfig$50",
342:       "com.google.javascript.jscomp.CompilerInput",
343:       "com.google.javascript.jscomp.DefaultPassConfig$53",
344:       "com.google.javascript.rhino.head.ast.FunctionNode",
345:       "com.google.javascript.jscomp.DefaultPassConfig$52",
346:       "com.google.javascript.jscomp.AbstractCompiler",
347:       "com.google.common.collect.UnmodifiableIterator",
348:       "com.google.javascript.jscomp.ExploitAssigns",
349:       "com.google.javascript.rhino.head.Context",
350:       "com.google.common.io.InputSupplier",
351:       "com.google.common.collect.ImmutableSet$TransformedImmutableSet",
352:       "com.google.javascript.jscomp.DiagnosticGroup",
353:       "com.google.common.collect.AbstractMultimap$WrappedList",
354:       "com.google.javascript.jscomp.CodeChangeHandler$RecentChange",
355:       "com.google.javascript.jscomp.NodeUtil$Visitor",
356:       "com.google.javascript.jscomp.SyntacticScopeCreator$RedeclarationHandler",
357:       "com.google.javascript.rhino.head.NativeBoolean",
358:       "com.google.common.io.AppendableWriter",
359:       "com.google.javascript.jscomp.DefaultPassConfig$48",
360:       "com.google.javascript.rhino.Node$AncestorIterable",
361:       "com.google.javascript.rhino.head.ast.Name",
362:       "com.google.common.collect.AbstractMultimap$RandomAccessWrappedList",
363:       "com.google.javascript.jscomp.DefaultPassConfig$47",
364:       "com.google.common.collect.ImmutableEnumSet",
365:       "com.google.javascript.jscomp.DefaultPassConfig$49",
366:       "com.google.javascript.jscomp.DefaultPassConfig$44",
367:       "com.google.javascript.jscomp.DefaultPassConfig$43",
368:       "com.google.javascript.jscomp.DefaultPassConfig$46",
369:       "com.google.javascript.jscomp.DefaultPassConfig$45",
370:       "com.google.javascript.jscomp.DefaultPassConfig$40",
371:       "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax$1",
372:       "com.google.common.collect.HashMultiset",
373:       "com.google.javascript.rhino.jstype.UnresolvedTypeExpression",
374:       "com.google.javascript.jscomp.DefaultPassConfig$42",
375:       "com.google.javascript.jscomp.DefaultPassConfig$41",
376:       "com.google.protobuf.AbstractMessageLite",
377:       "com.google.javascript.jscomp.ErrorManager",
378:       "com.google.javascript.jscomp.NodeUtil$NumbericResultPredicate",
379:       "com.google.common.collect.SingletonImmutableList",
380:       "com.google.javascript.rhino.head.ast.ConditionalExpression",
381:       "com.google.javascript.jscomp.CheckLevel",
382:       "com.google.javascript.rhino.jstype.StaticSlot",
383:       "com.google.javascript.rhino.head.ast.PropertyGet",
384:       "com.google.javascript.rhino.head.ContextFactory",
385:       "com.google.common.collect.AbstractSetMultimap",
386:       "com.google.common.base.Function",
387:       "com.google.javascript.rhino.head.VMBridge",
388:       "com.google.common.collect.ImmutableMap",
389:       "com.google.common.collect.Multiset$Entry",
390:       "com.google.javascript.jscomp.DefaultPassConfig$37",
391:       "com.google.javascript.jscomp.DefaultPassConfig$36",
392:       "com.google.javascript.jscomp.DefaultPassConfig$39",
393:       "com.google.javascript.jscomp.DefaultPassConfig$38",
394:       "com.google.javascript.jscomp.DefaultPassConfig$33",
395:       "com.google.javascript.jscomp.DefaultPassConfig$32",
396:       "com.google.javascript.jscomp.DefaultPassConfig$35",
397:       "com.google.javascript.jscomp.DefaultPassConfig$34",
398:       "com.google.javascript.rhino.head.ast.Loop",
399:       "com.google.javascript.jscomp.DefaultPassConfig$31",
400:       "com.google.javascript.jscomp.CrossModuleMethodMotion$IdGenerator",
401:       "com.google.javascript.jscomp.Region",
402:       "com.google.javascript.jscomp.DefaultPassConfig$30",
403:       "com.google.javascript.rhino.head.ast.GeneratorExpressionLoop",
404:       "com.google.javascript.rhino.IR",
405:       "com.google.javascript.jscomp.NodeTraversal$AbstractPostOrderCallback",
406:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
407:       "com.google.javascript.jscomp.DefaultPassConfig",
408:       "com.google.javascript.jscomp.Normalize",
409:       "com.google.javascript.jscomp.CompilerOptions$TracerMode",
410:       "com.google.javascript.jscomp.RhinoErrorReporter$OldRhinoErrorReporter",
411:       "com.google.common.collect.AbstractMultiset",
412:       "com.google.javascript.jscomp.DefaultPassConfig$29",
413:       "com.google.javascript.rhino.JSDocInfoBuilder",
414:       "com.google.javascript.jscomp.DefaultPassConfig$26",
415:       "com.google.javascript.jscomp.DefaultPassConfig$25",
416:       "com.google.common.collect.Iterators",
417:       "com.google.javascript.jscomp.DefaultPassConfig$28",
418:       "com.google.javascript.rhino.head.IdFunctionCall",
419:       "com.google.javascript.jscomp.DefaultPassConfig$27",
420:       "com.google.javascript.jscomp.DefaultPassConfig$22",
421:       "com.google.javascript.jscomp.DefaultPassConfig$21",
422:       "com.google.javascript.jscomp.DefaultPassConfig$24",
423:       "com.google.javascript.jscomp.DefaultPassConfig$23",
424:       "com.google.javascript.jscomp.ProcessTweaks$TweakFunction",
425:       "com.google.javascript.rhino.head.ast.SwitchStatement",
426:       "com.google.javascript.jscomp.DependencyOptions",
427:       "com.google.common.collect.Multisets$EntrySet",
428:       "com.google.javascript.jscomp.DefaultPassConfig$20",
429:       "com.google.javascript.rhino.head.ast.DoLoop",
430:       "com.google.javascript.jscomp.SourceFile$OnDisk",
431:       "com.google.javascript.rhino.head.ScriptRuntime",
432:       "com.google.javascript.jscomp.DefaultPassConfig$19",
433:       "com.google.javascript.jscomp.DefaultPassConfig$18",
434:       "com.google.javascript.rhino.jstype.JSTypeNative",
435:       "com.google.javascript.rhino.jstype.AllType",
436:       "com.google.javascript.jscomp.DefaultPassConfig$15",
437:       "com.google.common.collect.Maps",
438:       "com.google.common.primitives.Ints",
439:       "com.google.javascript.jscomp.DefaultPassConfig$14",
440:       "com.google.javascript.jscomp.NodeTraversal$AbstractShallowStatementCallback",
441:       "com.google.javascript.rhino.head.ast.ExpressionStatement",
442:       "com.google.common.collect.SetMultimap",
443:       "com.google.javascript.jscomp.DefaultPassConfig$17",
444:       "com.google.javascript.jscomp.DefaultPassConfig$16",
445:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
446:       "com.google.javascript.jscomp.DefaultPassConfig$7",
447:       "com.google.javascript.jscomp.DefaultPassConfig$11",
448:       "com.google.javascript.jscomp.DefaultPassConfig$8",
449:       "com.google.javascript.jscomp.DefaultPassConfig$10",
450:       "com.google.javascript.jscomp.DefaultPassConfig$5",
451:       "com.google.javascript.jscomp.DefaultPassConfig$13",
452:       "com.google.javascript.jscomp.DefaultPassConfig$6",
453:       "com.google.javascript.jscomp.DefaultPassConfig$12",
454:       "com.google.javascript.rhino.JSTypeExpression",
455:       "com.google.javascript.jscomp.DefaultPassConfig$9",
456:       "com.google.javascript.jscomp.PrintStreamErrorManager",
457:       "com.google.javascript.jscomp.Tracer$Stat",
458:       "com.google.javascript.rhino.head.ScriptableObject",
459:       "com.google.javascript.rhino.head.IdScriptableObject",
460:       "com.google.javascript.rhino.head.NativeFunction",
461:       "com.google.common.collect.RegularImmutableMap$Values",
462:       "com.google.javascript.jscomp.DefaultPassConfig$3",
463:       "com.google.javascript.jscomp.DefaultPassConfig$4",
464:       "com.google.javascript.jscomp.DefaultPassConfig$1",
465:       "com.google.javascript.jscomp.DefaultPassConfig$2",
466:       "com.google.javascript.rhino.head.ast.ObjectProperty",
467:       "com.google.javascript.rhino.head.Icode",
468:       "com.google.javascript.jscomp.MakeDeclaredNamesUnique",
469:       "com.google.javascript.jscomp.type.ReverseAbstractInterpreter",
470:       "com.google.javascript.jscomp.CompilerOptions$LanguageMode",
471:       "com.google.javascript.rhino.head.ast.UnaryExpression",
472:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
473:       "com.google.javascript.rhino.jstype.ArrowType",
474:       "com.google.javascript.rhino.SimpleErrorReporter",
475:       "com.google.common.collect.Lists$RandomAccessPartition",
476:       "com.google.javascript.rhino.head.WrappedException",
477:       "com.google.javascript.jscomp.graph.GraphNode",
478:       "com.google.javascript.jscomp.TightenTypes$ConcreteScope",
479:       "com.google.javascript.rhino.jstype.NumberType",
480:       "com.google.javascript.rhino.head.debug.DebuggableObject",
481:       "com.google.javascript.jscomp.parsing.JsDocInfoParser",
482:       "com.google.javascript.rhino.head.Function",
483:       "com.google.javascript.jscomp.PassFactory",
484:       "com.google.javascript.rhino.Node$IntPropListItem",
485:       "com.google.common.collect.Sets$2",
486:       "com.google.common.collect.Sets$3",
487:       "com.google.javascript.rhino.head.ast.LetNode",
488:       "com.google.common.collect.Sets$1",
489:       "com.google.javascript.jscomp.parsing.IRFactory$1",
490:       "com.google.javascript.jscomp.TypeInferencePass",
491:       "com.google.javascript.jscomp.ControlFlowGraph",
492:       "com.google.javascript.jscomp.graph.GraphvizGraph",
493:       "com.google.javascript.rhino.head.ContextFactory$Listener",
494:       "com.google.javascript.rhino.head.NativeCall",
495:       "com.google.javascript.jscomp.parsing.JsDocInfoParser$1",
496:       "com.google.javascript.rhino.jstype.ModificationVisitor",
497:       "com.google.common.collect.AbstractMapEntry",
498:       "com.google.javascript.rhino.Node$AncestorIterable$1",
499:       "com.google.common.collect.Iterators$12",
500:       "com.google.common.collect.Iterators$11",
501:       "com.google.javascript.jscomp.ClosureCodingConvention",
502:       "com.google.common.base.Predicate",
503:       "com.google.common.collect.AbstractMultimap$AsMap",
504:       "com.google.javascript.jscomp.ControlStructureCheck",
505:       "com.google.javascript.jscomp.VariableReferenceCheck",
506:       "com.google.javascript.jscomp.WarningsGuard",
507:       "com.google.javascript.jscomp.SourceMap",
508:       "com.google.javascript.rhino.head.ast.ForInLoop",
509:       "com.google.javascript.jscomp.Tracer$AtomicTracerStatMap",
510:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
511:       "com.google.javascript.jscomp.parsing.TypeSafeDispatcher",
512:       "com.google.javascript.jscomp.LightweightMessageFormatter$LineNumberingFormatter",
513:       "com.google.common.collect.AbstractListMultimap",
514:       "com.google.javascript.jscomp.CompilerOptions",
515:       "com.google.javascript.rhino.Node$StringNode",
516:       "com.google.javascript.rhino.jstype.TemplateType",
517:       "com.google.javascript.rhino.jstype.NamedType",
518:       "com.google.common.collect.Iterators$14",
519:       "com.google.common.collect.Iterators$13",
520:       "com.google.common.collect.Lists",
521:       "com.google.javascript.jscomp.CheckProvides",
522:       "com.google.javascript.rhino.head.ast.Block",
523:       "com.google.common.collect.UnmodifiableListIterator",
524:       "com.google.javascript.rhino.head.ast.SwitchCase",
525:       "com.google.javascript.jscomp.RhinoErrorReporter",
526:       "com.google.javascript.jscomp.CompilerOptions$AliasTransformation",
527:       "com.google.javascript.rhino.jstype.UnknownType",
528:       "com.google.common.base.Charsets",
529:       "com.google.javascript.rhino.head.ast.StringLiteral",
530:       "com.google.javascript.jscomp.CheckGlobalNames",
531:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
532:       "com.google.javascript.rhino.jstype.StaticSourceFile",
533:       "org.mozilla.classfile.ClassFileWriter$ClassFileFormatException",
534:       "com.google.javascript.rhino.head.ScriptableObject$Slot",
535:       "com.google.javascript.rhino.head.ast.ReturnStatement",
536:       "com.google.javascript.jscomp.ConcreteType$ConcreteFunctionType",
537:       "com.google.common.base.CharMatcher",
538:       "com.google.common.base.Joiner$MapJoiner",
539:       "com.google.javascript.rhino.jstype.JSType$TypePair",
540:       "com.google.javascript.jscomp.CheckRegExp",
541:       "com.google.javascript.jscomp.CheckGlobalThis",
542:       "com.google.common.collect.RegularImmutableMap$NonTerminalEntry",
543:       "com.google.common.collect.AbstractMultiset$EntrySet",
544:       "com.google.javascript.jscomp.ConcreteType$Factory",
545:       "com.google.javascript.jscomp.SourceExcerptProvider$SourceExcerpt$2",
546:       "com.google.javascript.jscomp.DiagnosticGroupWarningsGuard",
547:       "com.google.common.base.Preconditions",
548:       "com.google.javascript.jscomp.SourceExcerptProvider$SourceExcerpt$1",
549:       "com.google.javascript.rhino.head.ast.ArrayLiteral",
550:       "com.google.javascript.rhino.head.ast.RegExpLiteral",
551:       "com.google.javascript.jscomp.BasicErrorManager",
552:       "com.google.javascript.jscomp.SourceFile$Generator",
553:       "com.google.javascript.jscomp.PerformanceTracker",
554:       "com.google.javascript.rhino.jstype.IndexedType",
555:       "com.google.javascript.jscomp.NodeUtil$MatchNodeType",
556:       "com.google.javascript.jscomp.ComposeWarningsGuard$GuardComparator",
557:       "com.google.javascript.jscomp.ProcessDefines",
558:       "com.google.javascript.jscomp.ControlFlowAnalysis$AstControlFlowGraph",
559:       "com.google.javascript.rhino.head.NativeArray",
560:       "com.google.javascript.jscomp.PeepholeFoldConstants",
561:       "com.google.javascript.rhino.Node$NumberNode",
562:       "com.google.javascript.jscomp.Scope",
563:       "com.google.javascript.rhino.head.Parser",
564:       "com.google.common.collect.Iterators$6",
565:       "com.google.javascript.jscomp.ErrorFormat$2",
566:       "com.google.common.collect.BiMap",
567:       "com.google.common.collect.Iterators$7",
568:       "com.google.javascript.rhino.head.NativeString",
569:       "com.google.javascript.jscomp.ErrorFormat$3",
570:       "com.google.javascript.jscomp.ErrorFormat$4",
571:       "com.google.javascript.rhino.head.ast.XmlRef",
572:       "com.google.common.collect.ImmutableSet",
573:       "com.google.javascript.jscomp.PeepholeReplaceKnownMethods",
574:       "com.google.javascript.jscomp.AbstractPeepholeOptimization",
575:       "com.google.javascript.rhino.jstype.JSTypeRegistry$ResolveMode",
576:       "com.google.javascript.rhino.head.ast.ElementGet",
577:       "com.google.common.collect.Iterators$1",
578:       "com.google.javascript.jscomp.DisambiguateProperties$Warnings",
579:       "com.google.common.collect.Iterators$2",
580:       "com.google.common.collect.Iterators$3",
581:       "com.google.javascript.jscomp.parsing.Annotation",
582:       "com.google.javascript.jscomp.AbstractMessageFormatter",
583:       "com.google.common.collect.Lists$StringAsImmutableList",
584:       "com.google.javascript.rhino.head.JavaScriptException",
585:       "com.google.javascript.rhino.head.ast.IdeErrorReporter",
586:       "com.google.javascript.jscomp.ProcessTweaks",
587:       "com.google.javascript.jscomp.NodeUtil$1",
588:       "com.google.javascript.rhino.head.ast.TryStatement",
589:       "com.google.javascript.jscomp.parsing.IRFactory",
590:       "com.google.javascript.rhino.head.TopLevel",
591:       "com.google.javascript.jscomp.ErrorFormat$1",
592:       "com.google.javascript.jscomp.Compiler$3",
593:       "com.google.javascript.jscomp.PrepareAst$PrepareAnnotations",
594:       "com.google.common.collect.AbstractMultimap",
595:       "com.google.javascript.jscomp.Compiler$4",
596:       "com.google.common.base.Predicates$ObjectPredicate$1",
597:       "com.google.common.collect.EmptyImmutableSet",
598:       "com.google.javascript.jscomp.NodeUtil$MatchNotFunction",
599:       "com.google.javascript.jscomp.parsing.Config$LanguageMode",
600:       "com.google.javascript.rhino.head.ast.ArrayComprehension",
601:       "com.google.javascript.jscomp.OptimizeCalls$CallGraphCompilerPass",
602:       "com.google.javascript.jscomp.CodingConvention$Bind",
603:       "com.google.protobuf.AbstractMessage",
604:       "com.google.javascript.rhino.head.ScriptRuntime$1",
605:       "com.google.javascript.jscomp.PassFactory$1",
606:       "com.google.javascript.rhino.head.ObjToIntMap",
607:       "com.google.javascript.jscomp.PeepholeRemoveDeadCode",
608:       "com.google.javascript.rhino.head.Node$PropListItem",
609:       "com.google.common.collect.ImmutableMap$Builder",
610:       "com.google.javascript.rhino.head.ConstProperties",
611:       "com.google.javascript.jscomp.deps.SortedDependencies$MissingProvideException",
612:       "com.google.common.base.Predicates$ObjectPredicate$4",
613:       "com.google.javascript.jscomp.ReorderConstantExpression",
614:       "com.google.common.base.Predicates$ObjectPredicate$3",
615:       "com.google.common.base.Predicates$ObjectPredicate$2",
616:       "com.google.javascript.jscomp.NodeUtil$MatchNameNode",
617:       "com.google.javascript.rhino.JSDocInfo$Visibility",
618:       "com.google.common.collect.ListMultimap",
619:       "com.google.javascript.rhino.head.ast.DestructuringForm",
620:       "com.google.javascript.jscomp.MinimizeExitPoints",
621:       "com.google.javascript.jscomp.SourceMap$Format$4",
622:       "com.google.javascript.jscomp.SourceMap$Format$3",
623:       "com.google.javascript.jscomp.SourceMap$Format$2",
624:       "com.google.javascript.jscomp.SourceMap$Format$1",
625:       "com.google.javascript.jscomp.SourceAst",
626:       "com.google.javascript.rhino.jstype.TernaryValue$1",
627:       "com.google.common.base.Predicates$ObjectPredicate",
628:       "com.google.common.collect.RegularImmutableList",
629:       "com.google.javascript.rhino.jstype.TernaryValue$3",
630:       "com.google.javascript.rhino.jstype.TernaryValue$2",
631:       "com.google.javascript.jscomp.CheckUnreachableCode",
632:       "com.google.javascript.jscomp.SourceExcerptProvider",
633:       "com.google.javascript.rhino.head.ScriptableObject$RelinkedSlot",
634:       "com.google.common.collect.Lists$TransformingRandomAccessList",
635:       "com.google.javascript.jscomp.ReferenceCollectingCallback$Behavior",
636:       "com.google.javascript.rhino.Node$PropListItem",
637:       "com.google.common.collect.RegularImmutableMap$KeySet",
638:       "com.google.common.collect.Maps$KeySet",
639:       "com.google.javascript.rhino.Node",
640:       "com.google.javascript.rhino.head.RhinoException",
641:       "com.google.javascript.rhino.head.ast.EmptyExpression",
642:       "com.google.javascript.rhino.SourcePosition",
643:       "com.google.javascript.rhino.head.ast.XmlLiteral",
644:       "com.google.javascript.rhino.head.ast.ContinueStatement",
645:       "com.google.javascript.jscomp.LoggerErrorManager",
646:       "com.google.javascript.jscomp.ComposeWarningsGuard",
647:       "com.google.javascript.jscomp.NodeTraversal",
648:       "com.google.javascript.jscomp.ExternExportsPass",
649:       "com.google.javascript.rhino.head.ErrorReporter",
650:       "com.google.javascript.jscomp.NodeTraversal$AbstractScopedCallback",
651:       "com.google.common.collect.Multisets",
652:       "com.google.javascript.jscomp.VariableMap",
653:       "com.google.javascript.jscomp.JsAst",
654:       "com.google.javascript.rhino.head.ast.XmlMemberGet",
655:       "com.google.javascript.jscomp.ErrorFormat",
656:       "com.google.javascript.rhino.head.ast.Scope",
657:       "com.google.javascript.jscomp.AbstractCompiler$LifeCycleStage",
658:       "com.google.javascript.jscomp.ConcreteType",
659:       "com.google.javascript.rhino.head.Scriptable",
660:       "com.google.javascript.jscomp.JqueryCodingConvention",
661:       "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
662:       "com.google.javascript.jscomp.NodeUtil$BooleanResultPredicate",
663:       "com.google.javascript.jscomp.SourceMap$1",
664:       "com.google.javascript.jscomp.TightenTypes",
665:       "com.google.javascript.rhino.jstype.VoidType",
666:       "com.google.javascript.jscomp.CompilerOptions$NullAliasTransformationHandler",
667:       "com.google.javascript.rhino.jstype.JSType",
668:       "com.google.javascript.jscomp.ControlFlowGraph$Branch",
669:       "com.google.common.collect.Sets$SetView",
670:       "com.google.javascript.jscomp.SyntheticAst",
671:       "com.google.javascript.jscomp.DiagnosticGroups",
672:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
673:       "com.google.javascript.jscomp.ScopeCreator",
674:       "com.google.common.collect.RegularImmutableMap$TerminalEntry",
675:       "com.google.common.base.Predicates",
676:       "com.google.javascript.jscomp.graph.AdjacencyGraph",
677:       "com.google.javascript.jscomp.deps.SortedDependencies$CircularDependencyException",
678:       "com.google.javascript.rhino.head.NativeNumber",
679:       "com.google.common.collect.Lists$TransformingSequentialList",
680:       "com.google.javascript.jscomp.SourceFile",
681:       "com.google.javascript.rhino.head.ast.BreakStatement",
682:       "com.google.javascript.jscomp.PropertyRenamingPolicy",
683:       "com.google.javascript.rhino.jstype.FunctionBuilder",
684:       "com.google.javascript.jscomp.CodingConvention$DelegateRelationship",
685:       "com.google.javascript.rhino.head.ast.WithStatement",
686:       "com.google.javascript.rhino.head.ScriptRuntime$MessageProvider",
687:       "com.google.common.collect.MapDifference",
688:       "com.google.javascript.jscomp.CompilerOptions$AliasTransformationHandler",
689:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
690:       "com.google.javascript.jscomp.SourceFile$Generated",
691:       "com.google.javascript.rhino.jstype.FunctionType",
692:       "com.google.javascript.rhino.head.ast.AstNode",
693:       "com.google.javascript.jscomp.Compiler",
694:       "com.google.javascript.jscomp.NodeTraversal$ScopedCallback",
695:       "com.google.javascript.jscomp.TypedScopeCreator",
696:       "com.google.common.base.CharMatcher$12",
697:       "com.google.common.base.CharMatcher$11",
698:       "com.google.javascript.rhino.head.Node",
699:       "com.google.common.base.CharMatcher$10",
700:       "com.google.javascript.rhino.jstype.TernaryValue",
701:       "com.google.javascript.jscomp.JSError",
702:       "com.google.common.base.CharMatcher$15",
703:       "com.google.common.base.CharMatcher$14",
704:       "com.google.common.collect.Lists$RandomAccessListWrapper",
705:       "com.google.common.base.CharMatcher$13",
706:       "com.google.common.base.Platform",
707:       "com.google.javascript.jscomp.TypedScopeCreator$GlobalScopeBuilder",
708:       "com.google.javascript.jscomp.PeepholeFoldWithTypes",
709:       "com.google.javascript.rhino.head.ast.KeywordLiteral",
710:       "com.google.javascript.jscomp.NodeTraversal$AbstractShallowCallback",
711:       "com.google.common.io.CharStreams",
712:       "com.google.javascript.rhino.head.ast.Assignment",
713:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
714:       "com.google.javascript.rhino.jstype.UnionType",
715:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
716:       "com.google.javascript.rhino.head.ast.LabeledStatement",
717:       "com.google.javascript.jscomp.ControlFlowAnalysis",
718:       "com.google.javascript.jscomp.graph.LatticeElement",
719:       "com.google.common.collect.AbstractIndexedListIterator",
720:       "com.google.javascript.rhino.head.ast.XmlExpression",
721:       "com.google.javascript.jscomp.JSModuleGraph",
722:       "com.google.common.collect.AbstractMultimap$SortedKeySet",
723:       "com.google.javascript.jscomp.SyntacticScopeCreator$DefaultRedeclarationHandler",
724:       "com.google.common.collect.Sets",
725:       "com.google.common.collect.ImmutableCollection$EmptyImmutableCollection",
726:       "com.google.javascript.jscomp.TypedScopeCreator$LocalScopeBuilder",
727:       "com.google.javascript.rhino.head.Kit",
728:       "com.google.javascript.jscomp.BasicErrorManager$LeveledJSErrorComparator",
729:       "com.google.javascript.rhino.Node$ObjectPropListItem",
730:       "com.google.javascript.rhino.head.jdk15.VMBridge_jdk15",
731:       "com.google.javascript.rhino.head.ContextAction",
732:       "com.google.javascript.rhino.head.EvaluatorException",
733:       "com.google.javascript.jscomp.ProcessCommonJSModules",
734:       "com.google.javascript.rhino.head.ast.NumberLiteral",
735:       "com.google.common.collect.AbstractMultimap$SortedAsMap",
736:       "com.google.javascript.jscomp.Compiler$IntermediateState",
737:       "com.google.javascript.rhino.head.ast.ErrorNode",
738:       "com.google.common.collect.EmptyImmutableMap",
739:       "com.google.common.collect.Multimap",
740:       "com.google.javascript.jscomp.SourceMap$DetailLevel$2",
741:       "com.google.javascript.jscomp.SourceMap$DetailLevel$1",
742:       "com.google.javascript.jscomp.VarCheck",
743:       "com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder",
744:       "com.google.javascript.jscomp.CompilerOptions$DevMode",
745:       "com.google.javascript.rhino.head.Interpreter",
746:       "com.google.javascript.rhino.jstype.StringType",
747:       "com.google.javascript.rhino.head.ImporterTopLevel",
748:       "com.google.javascript.rhino.jstype.StaticSymbolTable",
749:       "com.google.javascript.jscomp.JSModuleGraph$ModuleDependenceException",
750:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
751:       "com.google.javascript.jscomp.graph.DiGraph",
752:       "com.google.javascript.rhino.head.ast.Symbol",
753:       "com.google.common.base.Platform$1",
754:       "com.google.javascript.jscomp.parsing.ParserRunner",
755:       "com.google.common.collect.RegularImmutableMap$EntrySet",
756:       "com.google.javascript.rhino.head.ast.GeneratorExpression",
757:       "com.google.javascript.rhino.head.ast.XmlDotQuery",
758:       "com.google.javascript.jscomp.NodeUtil$MatchShallowStatement",
759:       "com.google.javascript.jscomp.ConstCheck",
760:       "com.google.javascript.rhino.jstype.Visitor",
761:       "com.google.javascript.jscomp.TypeCheck",
762:       "com.google.javascript.jscomp.SymbolTable",
763:       "com.google.javascript.jscomp.deps.DependencyInfo",
764:       "com.google.javascript.jscomp.Compiler$10",
765:       "com.google.javascript.jscomp.WarningsGuard$Priority",
766:       "com.google.javascript.rhino.head.ContextFactory$GlobalSetter",
767:       "com.google.common.base.CharMatcher$Or",
768:       "com.google.javascript.rhino.head.ast.NodeVisitor",
769:       "com.google.protobuf.Message",
770:       "com.google.javascript.rhino.head.ast.ArrayComprehensionLoop",
771:       "com.google.javascript.rhino.head.Parser$ParserException",
772:       "com.google.javascript.rhino.head.NativeObject"
773:     );
774:   } 
775: 
776:   private static void resetClasses() {
777:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NodeUtil_203_tmp__ESTest_scaffolding.class.getClassLoader()); 
778: 
779:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
780:       "com.google.common.collect.ImmutableCollection$EmptyImmutableCollection",
781:       "com.google.common.collect.ImmutableCollection",
782:       "com.google.common.collect.ImmutableSet",
783:       "com.google.common.collect.Hashing",
784:       "com.google.common.collect.ImmutableSet$ArrayImmutableSet",
785:       "com.google.common.collect.RegularImmutableSet",
786:       "com.google.javascript.jscomp.NodeUtil$NumbericResultPredicate",
787:       "com.google.javascript.jscomp.NodeUtil$BooleanResultPredicate",
788:       "com.google.javascript.jscomp.NodeUtil$MayBeStringResultPredicate",
789:       "com.google.javascript.jscomp.NodeUtil$MatchNotFunction",
790:       "com.google.javascript.jscomp.NodeUtil",
791:       "com.google.javascript.jscomp.NodeUtil$MatchNodeType",
792:       "com.google.javascript.jscomp.NodeUtil$MatchNameNode",
793:       "com.google.javascript.jscomp.NodeUtil$VarCollector",
794:       "com.google.javascript.rhino.jstype.TernaryValue",
795:       "com.google.common.base.Predicates$ObjectPredicate",
796:       "com.google.javascript.jscomp.BasicErrorManager",
797:       "com.google.javascript.jscomp.LoggerErrorManager",
798:       "com.google.javascript.jscomp.ErrorFormat",
799:       "com.google.javascript.jscomp.AbstractMessageFormatter",
800:       "com.google.javascript.jscomp.LightweightMessageFormatter$LineNumberingFormatter",
801:       "com.google.javascript.jscomp.LightweightMessageFormatter",
802:       "com.google.javascript.jscomp.BasicErrorManager$LeveledJSErrorComparator",
803:       "com.google.common.collect.Sets",
804:       "com.google.common.base.Preconditions",
805:       "com.google.javascript.jscomp.DiagnosticType",
806:       "com.google.javascript.jscomp.AbstractCompiler",
807:       "com.google.javascript.jscomp.Compiler",
808:       "com.google.javascript.jscomp.AbstractCompiler$LifeCycleStage",
809:       "com.google.common.base.Joiner",
810:       "com.google.common.collect.Collections2",
811:       "com.google.common.base.Joiner$MapJoiner",
812:       "com.google.common.collect.Maps",
813:       "com.google.javascript.jscomp.CodingConventions$Proxy",
814:       "com.google.javascript.jscomp.ClosureCodingConvention",
815:       "com.google.javascript.jscomp.CodingConventions",
816:       "com.google.javascript.jscomp.CodingConventions$DefaultCodingConvention",
817:       "com.google.common.collect.ImmutableList",
818:       "com.google.common.collect.UnmodifiableIterator",
819:       "com.google.common.collect.UnmodifiableListIterator",
820:       "com.google.common.collect.EmptyImmutableList$1",
821:       "com.google.common.collect.EmptyImmutableList",
822:       "com.google.common.collect.Iterators$1",
823:       "com.google.common.collect.Iterators$2",
824:       "com.google.common.collect.Iterators",
825:       "com.google.javascript.jscomp.RhinoErrorReporter",
826:       "com.google.javascript.jscomp.RhinoErrorReporter$OldRhinoErrorReporter",
827:       "com.google.javascript.rhino.head.Kit",
828:       "com.google.javascript.rhino.head.optimizer.Codegen",
829:       "com.google.javascript.rhino.head.Icode",
830:       "com.google.javascript.rhino.head.Interpreter",
831:       "com.google.javascript.rhino.head.Context",
832:       "com.google.javascript.rhino.head.ContextFactory",
833:       "com.google.javascript.rhino.head.ScriptableObject",
834:       "com.google.javascript.rhino.head.ScriptRuntime$DefaultMessageProvider",
835:       "com.google.javascript.rhino.head.ScriptRuntime",
836:       "com.google.javascript.rhino.head.jdk13.VMBridge_jdk13",
837:       "com.google.javascript.rhino.head.jdk15.VMBridge_jdk15",
838:       "com.google.javascript.rhino.head.VMBridge",
839:       "com.google.javascript.rhino.ScriptRuntime",
840:       "com.google.common.collect.ImmutableMap",
841:       "com.google.common.collect.RegularImmutableMap",
842:       "com.google.common.collect.AbstractMapEntry",
843:       "com.google.common.collect.ImmutableEntry",
844:       "com.google.common.collect.RegularImmutableMap$TerminalEntry",
845:       "com.google.javascript.jscomp.RhinoErrorReporter$NewRhinoErrorReporter",
846:       "com.google.javascript.jscomp.PassFactory",
847:       "com.google.javascript.jscomp.Compiler$3",
848:       "com.google.javascript.jscomp.CodeChangeHandler$RecentChange",
849:       "com.google.common.collect.Lists",
850:       "com.google.javascript.jscomp.Normalize",
851:       "com.google.javascript.jscomp.CompilerOptions$NullAliasTransformationHandler$NullAliasTransformation",
852:       "com.google.javascript.jscomp.CompilerOptions$NullAliasTransformationHandler",
853:       "com.google.javascript.jscomp.CompilerOptions",
854:       "com.google.javascript.jscomp.DependencyOptions",
855:       "com.google.javascript.jscomp.ProcessCommonJSModules",
856:       "com.google.javascript.jscomp.WarningsGuard",
857:       "com.google.javascript.jscomp.ComposeWarningsGuard",
858:       "com.google.common.primitives.Ints",
859:       "com.google.javascript.jscomp.ComposeWarningsGuard$GuardComparator",
860:       "com.google.javascript.jscomp.SourceMap$DetailLevel",
861:       "com.google.javascript.jscomp.SourceMap$Format",
862:       "com.google.javascript.jscomp.CompilerOptions$LanguageMode",
863:       "com.google.javascript.jscomp.CompilerOptions$DevMode",
864:       "com.google.javascript.jscomp.VariableRenamingPolicy",
865:       "com.google.javascript.jscomp.PropertyRenamingPolicy",
866:       "com.google.javascript.jscomp.CompilerOptions$TweakProcessing",
867:       "com.google.javascript.jscomp.CompilerOptions$TracerMode",
868:       "com.google.javascript.jscomp.CheckGlobalThis",
869:       "com.google.javascript.jscomp.DiagnosticGroup",
870:       "com.google.common.collect.SingletonImmutableSet",
871:       "com.google.javascript.jscomp.CheckAccessControls",
872:       "com.google.common.collect.AbstractIndexedListIterator",
873:       "com.google.common.collect.Iterators$11",
874:       "com.google.javascript.jscomp.TypeValidator",
875:       "com.google.javascript.jscomp.NodeTraversal$AbstractPostOrderCallback",
876:       "com.google.javascript.jscomp.VarCheck",
877:       "com.google.javascript.jscomp.CheckGlobalNames",
878:       "com.google.javascript.jscomp.VariableReferenceCheck",
879:       "com.google.javascript.jscomp.ProcessDefines",
880:       "com.google.common.base.CharMatcher$11",
881:       "com.google.common.base.CharMatcher$12",
882:       "com.google.common.base.CharMatcher$Or",
883:       "com.google.common.base.Platform$1",
884:       "com.google.common.base.Platform",
885:       "com.google.common.base.CharMatcher$LookupTable",
886:       "com.google.common.base.CharMatcher$15",
887:       "com.google.common.base.CharMatcher$8",
888:       "com.google.common.base.CharMatcher$1",
889:       "com.google.common.base.CharMatcher$2",
890:       "com.google.common.base.CharMatcher$3",
891:       "com.google.common.base.CharMatcher$4",
892:       "com.google.common.base.CharMatcher$5",
893:       "com.google.common.base.CharMatcher$6",
894:       "com.google.common.base.CharMatcher$7",
895:       "com.google.common.base.CharMatcher",
896:       "com.google.javascript.jscomp.ProcessTweaks$TweakFunction",
897:       "com.google.javascript.jscomp.ProcessTweaks",
898:       "com.google.javascript.rhino.jstype.JSType$1",
899:       "com.google.javascript.rhino.jstype.JSType",
900:       "com.google.javascript.rhino.jstype.ObjectType",
901:       "com.google.javascript.jscomp.TypedScopeCreator",
902:       "com.google.javascript.jscomp.FunctionTypeBuilder",
903:       "com.google.javascript.jscomp.TypeCheck",
904:       "com.google.javascript.jscomp.CheckDebuggerStatement",
905:       "com.google.javascript.jscomp.CheckRegExp",
906:       "com.google.javascript.jscomp.SyntacticScopeCreator",
907:       "com.google.javascript.jscomp.CheckSideEffects",
908:       "com.google.javascript.jscomp.CheckUnreachableCode",
909:       "com.google.javascript.jscomp.ConstCheck",
910:       "com.google.javascript.jscomp.DisambiguateProperties$Warnings",
911:       "com.google.javascript.jscomp.ControlStructureCheck",
912:       "com.google.javascript.jscomp.StrictModeCheck",
913:       "com.google.javascript.jscomp.CheckProvides",
914:       "com.google.javascript.jscomp.JsMessageVisitor",
915:       "com.google.javascript.jscomp.DiagnosticGroups",
916:       "com.google.javascript.jscomp.DiagnosticGroupWarningsGuard",
917:       "com.google.javascript.jscomp.WarningsGuard$Priority",
918:       "com.google.javascript.jscomp.SuppressDocWarningsGuard",
919:       "com.google.common.collect.RegularImmutableMap$NonTerminalEntry",
920:       "com.google.common.collect.RegularImmutableMap$EntrySet",
921:       "com.google.javascript.jscomp.CompilerInput",
922:       "com.google.javascript.jscomp.SourceFile",
923:       "com.google.javascript.jscomp.SourceFile$Builder",
924:       "com.google.common.base.Charsets",
925:       "com.google.javascript.jscomp.SourceFile$Preloaded",
926:       "com.google.javascript.jscomp.JsAst",
927:       "com.google.javascript.rhino.InputId",
928:       "com.google.javascript.jscomp.Compiler$10",
929:       "com.google.javascript.jscomp.parsing.Config$LanguageMode",
930:       "com.google.javascript.jscomp.parsing.ParserRunner",
931:       "com.google.javascript.jscomp.parsing.Config",
932:       "com.google.common.collect.ImmutableMap$Builder",
933:       "com.google.javascript.jscomp.parsing.Annotation",
934:       "com.google.javascript.rhino.head.DefaultErrorReporter",
935:       "com.google.javascript.rhino.head.CompilerEnvirons",
936:       "com.google.javascript.rhino.head.Parser",
937:       "com.google.javascript.rhino.head.TokenStream",
938:       "com.google.javascript.rhino.head.ObjToIntMap",
939:       "com.google.javascript.rhino.head.Node",
940:       "com.google.javascript.rhino.head.ast.AstNode",
941:       "com.google.javascript.rhino.head.ast.Jump",
942:       "com.google.javascript.rhino.head.ast.Scope",
943:       "com.google.javascript.rhino.head.ast.ScriptNode",
944:       "com.google.javascript.rhino.head.ast.AstRoot",
945:       "com.google.javascript.rhino.head.ast.Name",
946:       "com.google.javascript.rhino.head.ast.InfixExpression",
947:       "com.google.javascript.rhino.head.ast.PropertyGet",
948:       "com.google.javascript.rhino.head.ast.ExpressionStatement",
949:       "com.google.javascript.jscomp.parsing.IRFactory",
950:       "com.google.javascript.rhino.Node",
951:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
952:       "com.google.javascript.jscomp.parsing.TypeSafeDispatcher",
953:       "com.google.javascript.jscomp.parsing.IRFactory$TransformDispatcher",
954:       "com.google.javascript.rhino.Node$AbstractPropListItem",
955:       "com.google.javascript.rhino.Node$ObjectPropListItem",
956:       "com.google.javascript.jscomp.parsing.IRFactory$1",
957:       "com.google.javascript.rhino.head.Node$NodeIterator",
958:       "com.google.javascript.rhino.Node$StringNode",
959:       "com.google.javascript.rhino.Node$IntPropListItem",
960:       "com.google.javascript.jscomp.PrepareAst",
961:       "com.google.javascript.jscomp.PrepareAst$PrepareAnnotations",
962:       "com.google.javascript.jscomp.NodeTraversal",
963:       "com.google.javascript.jscomp.SyntacticScopeCreator$DefaultRedeclarationHandler",
964:       "com.google.javascript.jscomp.Normalize$NormalizeStatements",
965:       "com.google.javascript.jscomp.MakeDeclaredNamesUnique",
966:       "com.google.javascript.jscomp.MakeDeclaredNamesUnique$ContextualRenamer",
967:       "com.google.common.collect.AbstractMultiset",
968:       "com.google.common.collect.AbstractMapBasedMultiset",
969:       "com.google.common.collect.HashMultiset",
970:       "com.google.common.collect.Multisets",
971:       "com.google.common.collect.Multisets$EntrySet",
972:       "com.google.common.collect.AbstractMultiset$EntrySet",
973:       "com.google.common.collect.AbstractMapBasedMultiset$1",
974:       "com.google.javascript.jscomp.AbstractPeepholeOptimization",
975:       "com.google.javascript.jscomp.PeepholeRemoveDeadCode",
976:       "com.google.javascript.jscomp.ReferenceCollectingCallback$1",
977:       "com.google.javascript.jscomp.ReferenceCollectingCallback",
978:       "com.google.javascript.jscomp.PeepholeCollectPropertyAssignments",
979:       "com.google.javascript.rhino.TokenStream",
980:       "com.google.javascript.rhino.SimpleErrorReporter",
981:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
982:       "com.google.common.collect.AbstractMultimap",
983:       "com.google.common.collect.AbstractSetMultimap",
984:       "com.google.common.collect.LinkedHashMultimap",
985:       "com.google.common.collect.AbstractListMultimap",
986:       "com.google.common.collect.ArrayListMultimap",
987:       "com.google.javascript.rhino.jstype.JSTypeRegistry$ResolveMode",
988:       "com.google.javascript.rhino.jstype.ValueType",
989:       "com.google.javascript.rhino.jstype.BooleanType",
990:       "com.google.javascript.rhino.jstype.NullType",
991:       "com.google.javascript.rhino.jstype.NumberType",
992:       "com.google.javascript.rhino.jstype.StringType",
993:       "com.google.javascript.rhino.jstype.UnknownType",
994:       "com.google.javascript.rhino.jstype.VoidType",
995:       "com.google.javascript.rhino.jstype.AllType",
996:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
997:       "com.google.javascript.rhino.jstype.FunctionType",
998:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
999:       "com.google.javascript.rhino.jstype.ArrowType",
1000:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
1001:       "com.google.javascript.rhino.jstype.InstanceObjectType",
1002:       "com.google.javascript.rhino.jstype.ObjectType$Property",
1003:       "com.google.javascript.rhino.jstype.NoObjectType",
1004:       "com.google.javascript.rhino.jstype.NoType",
1005:       "com.google.javascript.rhino.jstype.NoResolvedType",
1006:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
1007:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
1008:       "com.google.javascript.rhino.jstype.UnionType",
1009:       "com.google.common.collect.RegularImmutableList",
1010:       "com.google.javascript.rhino.jstype.FunctionBuilder",
1011:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
1012:       "com.google.common.collect.Iterators$12",
1013:       "com.google.javascript.jscomp.JSError",
1014:       "com.google.javascript.jscomp.BasicErrorManager$ErrorWithLevel",
1015:       "com.google.javascript.rhino.head.Parser$ParserException",
1016:       "com.google.javascript.rhino.head.ast.EmptyStatement",
1017:       "com.google.javascript.rhino.head.ast.NumberLiteral",
1018:       "com.google.javascript.rhino.head.RhinoException",
1019:       "com.google.javascript.rhino.head.EvaluatorException",
1020:       "com.google.javascript.rhino.IR",
1021:       "com.google.javascript.jscomp.GlobalNamespace$Ref",
1022:       "com.google.javascript.rhino.Node$AncestorIterable",
1023:       "com.google.javascript.rhino.Node$AncestorIterable$1",
1024:       "com.google.javascript.rhino.Node$NumberNode",
1025:       "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax$1",
1026:       "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
1027:       "com.google.javascript.jscomp.ControlFlowAnalysis",
1028:       "com.google.javascript.jscomp.PeepholeFoldWithTypes",
1029:       "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
1030:       "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter$1",
1031:       "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter$2",
1032:       "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter$3",
1033:       "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter$4",
1034:       "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
1035:       "com.google.javascript.rhino.Token",
1036:       "com.google.javascript.jscomp.JSSourceFile",
1037:       "com.google.javascript.jscomp.SourceFile$OnDisk",
1038:       "com.google.common.io.CharStreams",
1039:       "com.google.javascript.jscomp.SourceFile$Generated",
1040:       "com.google.javascript.rhino.jstype.EnumType",
1041:       "com.google.javascript.rhino.jstype.EnumElementType",
1042:       "com.google.javascript.jscomp.GoogleCodingConvention",
1043:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
1044:       "com.google.javascript.jscomp.PeepholeSimplifyRegExp",
1045:       "com.google.javascript.jscomp.NodeUtil$MatchDeclaration",
1046:       "com.google.javascript.jscomp.Tracer$1",
1047:       "com.google.javascript.jscomp.Tracer$Stat",
1048:       "com.google.javascript.jscomp.Tracer",
1049:       "com.google.javascript.jscomp.ReorderConstantExpression",
1050:       "com.google.javascript.jscomp.NodeUtil$MatchShallowStatement",
1051:       "com.google.javascript.jscomp.JSModule",
1052:       "com.google.javascript.rhino.JSDocInfo",
1053:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
1054:       "com.google.common.base.Predicates",
1055:       "com.google.javascript.jscomp.TightenTypes",
1056:       "com.google.javascript.jscomp.Scope$1",
1057:       "com.google.javascript.jscomp.Scope",
1058:       "com.google.javascript.jscomp.JqueryCodingConvention",
1059:       "com.google.javascript.jscomp.LinkedFlowScope",
1060:       "com.google.javascript.jscomp.ExploitAssigns",
1061:       "com.google.javascript.jscomp.ControlFlowAnalysis$1",
1062:       "com.google.common.collect.HashMultimap",
1063:       "com.google.javascript.jscomp.Normalize$PropagateConstantAnnotationsOverVars",
1064:       "com.google.javascript.jscomp.Normalize$VerifyConstants",
1065:       "com.google.javascript.jscomp.PeepholeReplaceKnownMethods",
1066:       "com.google.javascript.jscomp.CheckSideEffects$StripProtection",
1067:       "com.google.javascript.rhino.Node$SideEffectFlags",
1068:       "com.google.common.io.Files",
1069:       "com.google.common.io.Files$1",
1070:       "com.google.common.io.ByteStreams",
1071:       "com.google.javascript.jscomp.RenameLabels",
1072:       "com.google.javascript.jscomp.RenameLabels$ProcessLabels",
1073:       "com.google.javascript.jscomp.RenameLabels$LabelNamespace",
1074:       "com.google.javascript.jscomp.SyntheticAst",
1075:       "com.google.javascript.jscomp.PeepholeFoldConstants",
1076:       "com.google.javascript.jscomp.StatementFusion",
1077:       "com.google.javascript.jscomp.PassConfig",
1078:       "com.google.javascript.jscomp.DefaultPassConfig",
1079:       "com.google.javascript.jscomp.CrossModuleMethodMotion$IdGenerator",
1080:       "com.google.javascript.jscomp.DefaultPassConfig$HotSwapPassFactory",
1081:       "com.google.javascript.jscomp.DefaultPassConfig$1",
1082:       "com.google.javascript.jscomp.DefaultPassConfig$2",
1083:       "com.google.javascript.jscomp.DefaultPassConfig$3",
1084:       "com.google.javascript.jscomp.DefaultPassConfig$4",
1085:       "com.google.javascript.jscomp.DefaultPassConfig$5",
1086:       "com.google.javascript.jscomp.DefaultPassConfig$6",
1087:       "com.google.javascript.jscomp.DefaultPassConfig$7",
1088:       "com.google.javascript.jscomp.DefaultPassConfig$8",
1089:       "com.google.javascript.jscomp.DefaultPassConfig$9",
1090:       "com.google.javascript.jscomp.DefaultPassConfig$10",
1091:       "com.google.javascript.jscomp.DefaultPassConfig$11",
1092:       "com.google.javascript.jscomp.DefaultPassConfig$12",
1093:       "com.google.javascript.jscomp.DefaultPassConfig$13",
1094:       "com.google.javascript.jscomp.DefaultPassConfig$14",
1095:       "com.google.javascript.jscomp.DefaultPassConfig$15",
1096:       "com.google.javascript.jscomp.DefaultPassConfig$16",
1097:       "com.google.javascript.jscomp.DefaultPassConfig$17",
1098:       "com.google.javascript.jscomp.DefaultPassConfig$18",
1099:       "com.google.javascript.jscomp.DefaultPassConfig$19",
1100:       "com.google.javascript.jscomp.DefaultPassConfig$20",
1101:       "com.google.javascript.jscomp.DefaultPassConfig$21",
1102:       "com.google.javascript.jscomp.DefaultPassConfig$22",
1103:       "com.google.javascript.jscomp.DefaultPassConfig$23",
1104:       "com.google.javascript.jscomp.DefaultPassConfig$24",
1105:       "com.google.javascript.jscomp.DefaultPassConfig$25",
1106:       "com.google.javascript.jscomp.DefaultPassConfig$26",
1107:       "com.google.javascript.jscomp.DefaultPassConfig$27",
1108:       "com.google.javascript.jscomp.DefaultPassConfig$28",
1109:       "com.google.javascript.jscomp.DefaultPassConfig$29",
1110:       "com.google.javascript.jscomp.DefaultPassConfig$30",
1111:       "com.google.javascript.jscomp.DefaultPassConfig$31",
1112:       "com.google.javascript.jscomp.DefaultPassConfig$32",
1113:       "com.google.javascript.jscomp.DefaultPassConfig$33",
1114:       "com.google.javascript.jscomp.DefaultPassConfig$34",
1115:       "com.google.javascript.jscomp.DefaultPassConfig$35",
1116:       "com.google.javascript.jscomp.DefaultPassConfig$36",
1117:       "com.google.javascript.jscomp.DefaultPassConfig$37",
1118:       "com.google.javascript.jscomp.DefaultPassConfig$38",
1119:       "com.google.javascript.jscomp.DefaultPassConfig$39",
1120:       "com.google.javascript.jscomp.DefaultPassConfig$40",
1121:       "com.google.javascript.jscomp.DefaultPassConfig$41",
1122:       "com.google.javascript.jscomp.DefaultPassConfig$42",
1123:       "com.google.javascript.jscomp.DefaultPassConfig$43",
1124:       "com.google.javascript.jscomp.DefaultPassConfig$44",
1125:       "com.google.javascript.jscomp.DefaultPassConfig$45",
1126:       "com.google.javascript.jscomp.DefaultPassConfig$46",
1127:       "com.google.javascript.jscomp.DefaultPassConfig$47",
1128:       "com.google.javascript.jscomp.DefaultPassConfig$48",
1129:       "com.google.javascript.jscomp.DefaultPassConfig$49",
1130:       "com.google.javascript.jscomp.DefaultPassConfig$50",
1131:       "com.google.javascript.jscomp.DefaultPassConfig$51",
1132:       "com.google.javascript.jscomp.DefaultPassConfig$52",
1133:       "com.google.javascript.jscomp.DefaultPassConfig$53",
1134:       "com.google.javascript.jscomp.DefaultPassConfig$54",
1135:       "com.google.javascript.jscomp.DefaultPassConfig$55",
1136:       "com.google.javascript.jscomp.DefaultPassConfig$56",
1137:       "com.google.javascript.jscomp.DefaultPassConfig$57",
1138:       "com.google.javascript.jscomp.DefaultPassConfig$58",
1139:       "com.google.javascript.jscomp.DefaultPassConfig$59",
1140:       "com.google.javascript.jscomp.DefaultPassConfig$60",
1141:       "com.google.javascript.jscomp.DefaultPassConfig$61",
1142:       "com.google.javascript.jscomp.DefaultPassConfig$62",
1143:       "com.google.javascript.jscomp.DefaultPassConfig$63",
1144:       "com.google.javascript.jscomp.DefaultPassConfig$64",
1145:       "com.google.javascript.jscomp.DefaultPassConfig$65",
1146:       "com.google.javascript.jscomp.DefaultPassConfig$66",
1147:       "com.google.javascript.jscomp.DefaultPassConfig$67",
1148:       "com.google.javascript.jscomp.DefaultPassConfig$68",
1149:       "com.google.javascript.jscomp.DefaultPassConfig$69",
1150:       "com.google.javascript.jscomp.DefaultPassConfig$70",
1151:       "com.google.javascript.jscomp.DefaultPassConfig$71",
1152:       "com.google.javascript.jscomp.DefaultPassConfig$72",
1153:       "com.google.javascript.jscomp.DefaultPassConfig$73",
1154:       "com.google.javascript.jscomp.DefaultPassConfig$74",
1155:       "com.google.javascript.jscomp.DefaultPassConfig$75",
1156:       "com.google.javascript.jscomp.DefaultPassConfig$76",
1157:       "com.google.javascript.jscomp.DefaultPassConfig$77",
1158:       "com.google.javascript.jscomp.DefaultPassConfig$78",
1159:       "com.google.javascript.jscomp.DefaultPassConfig$79",
1160:       "com.google.javascript.jscomp.DefaultPassConfig$80",
1161:       "com.google.javascript.jscomp.DefaultPassConfig$81",
1162:       "com.google.javascript.jscomp.DefaultPassConfig$82",
1163:       "com.google.javascript.jscomp.DefaultPassConfig$83",
1164:       "com.google.javascript.jscomp.DefaultPassConfig$84",
1165:       "com.google.javascript.jscomp.DefaultPassConfig$85",
1166:       "com.google.javascript.jscomp.DefaultPassConfig$86",
1167:       "com.google.javascript.jscomp.DefaultPassConfig$87",
1168:       "com.google.javascript.jscomp.DefaultPassConfig$88",
1169:       "com.google.javascript.jscomp.DefaultPassConfig$89",
1170:       "com.google.javascript.jscomp.DefaultPassConfig$90",
1171:       "com.google.javascript.jscomp.DefaultPassConfig$91",
1172:       "com.google.javascript.jscomp.DefaultPassConfig$92",
1173:       "com.google.javascript.jscomp.DefaultPassConfig$93",
1174:       "com.google.javascript.jscomp.DefaultPassConfig$94",
1175:       "com.google.javascript.jscomp.DefaultPassConfig$98",
1176:       "com.google.javascript.jscomp.DefaultPassConfig$99",
1177:       "com.google.javascript.jscomp.DeadAssignmentsElimination$1",
1178:       "com.google.javascript.jscomp.DeadAssignmentsElimination",
1179:       "com.google.javascript.jscomp.MakeDeclaredNamesUnique$BoilerplateRenamer",
1180:       "com.google.javascript.jscomp.Compiler$4",
1181:       "com.google.javascript.jscomp.PrintStreamErrorManager",
1182:       "com.google.javascript.rhino.jstype.ProxyObjectType",
1183:       "com.google.javascript.rhino.jstype.ParameterizedType",
1184:       "com.google.javascript.rhino.Node$NodeMismatch",
1185:       "com.google.javascript.jscomp.SimpleDefinitionFinder",
1186:       "com.google.javascript.jscomp.TightenTypes$ConcreteScope",
1187:       "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter",
1188:       "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter$1",
1189:       "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter$2",
1190:       "com.google.javascript.rhino.head.ast.Assignment",
1191:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
1192:       "com.google.javascript.jscomp.GlobalNamespace",
1193:       "com.google.javascript.jscomp.GlobalNamespace$BuildGlobalNamespace",
1194:       "com.google.javascript.jscomp.GlobalNamespace$Name$Type",
1195:       "com.google.javascript.jscomp.GlobalNamespace$Name",
1196:       "com.google.javascript.rhino.jstype.ModificationVisitor",
1197:       "com.google.javascript.jscomp.PreprocessorSymbolTable",
1198:       "com.google.javascript.jscomp.VerboseMessageFormatter",
1199:       "com.google.javascript.rhino.head.ast.Label",
1200:       "com.google.javascript.rhino.head.ast.LabeledStatement",
1201:       "com.google.javascript.jscomp.Compiler$IntermediateState",
1202:       "com.google.javascript.jscomp.PassConfig$State",
1203:       "com.google.javascript.jscomp.CleanupPasses",
1204:       "com.google.javascript.jscomp.CleanupPasses$1",
1205:       "com.google.javascript.jscomp.CleanupPasses$2",
1206:       "com.google.javascript.jscomp.CleanupPasses$3",
1207:       "com.google.javascript.rhino.head.ast.ElementGet",
1208:       "com.google.common.collect.Multimaps$Values",
1209:       "com.google.common.collect.AbstractMultimap$2",
1210:       "com.google.common.collect.Multimaps$Entries",
1211:       "com.google.common.collect.AbstractMultimap$4",
1212:       "com.google.common.collect.AbstractMultimap$EntryIterator",
1213:       "com.google.common.collect.Multimaps$Values$1",
1214:       "com.google.javascript.jscomp.JSModuleGraph",
1215:       "com.google.javascript.jscomp.AbstractMessageFormatter$1",
1216:       "com.google.javascript.jscomp.AbstractMessageFormatter$Color",
1217:       "com.google.javascript.rhino.head.ast.FunctionCall",
1218:       "com.google.common.collect.Iterators$13",
1219:       "com.google.javascript.jscomp.LoggerErrorManager$1",
1220:       "com.google.javascript.rhino.head.ast.ArrayLiteral",
1221:       "com.google.common.base.Predicates$OrPredicate",
1222:       "com.google.javascript.jscomp.FunctionNames",
1223:       "com.google.javascript.jscomp.FunctionNames$FunctionListExtractor",
1224:       "com.google.javascript.jscomp.RecordFunctionInformation",
1225:       "com.google.protobuf.AbstractMessageLite",
1226:       "com.google.protobuf.AbstractMessage",
1227:       "com.google.protobuf.GeneratedMessage",
1228:       "com.google.protobuf.UnknownFieldSet",
1229:       "com.google.javascript.jscomp.FunctionInformationMap",
1230:       "com.google.protobuf.AbstractMessageLite$Builder",
1231:       "com.google.protobuf.AbstractMessage$Builder",
1232:       "com.google.protobuf.GeneratedMessage$Builder",
1233:       "com.google.javascript.jscomp.FunctionInformationMap$Builder",
1234:       "com.google.javascript.jscomp.CrossModuleCodeMotion",
1235:       "com.google.javascript.jscomp.NodeTraversal$AbstractShallowCallback",
1236:       "com.google.javascript.jscomp.FieldCleanupPass$QualifiedNameSearchTraversal",
1237:       "com.google.javascript.jscomp.JSError$1",
1238:       "com.google.javascript.rhino.head.ast.UnaryExpression",
1239:       "com.google.javascript.jscomp.LinkedFlowScope$FlatFlowScopeCache",
1240:       "com.google.common.collect.EmptyImmutableMap",
1241:       "com.google.javascript.jscomp.MinimizeExitPoints",
1242:       "com.google.javascript.jscomp.RemoveUnusedClassProperties",
1243:       "com.google.javascript.jscomp.Tracer$ThreadTrace",
1244:       "com.google.javascript.jscomp.CheckAccidentalSemicolon",
1245:       "com.google.javascript.jscomp.MemoizedScopeCreator",
1246:       "com.google.javascript.jscomp.OptimizeArgumentsArray",
1247:       "com.google.javascript.jscomp.PassConfig$PassConfigDelegate",
1248:       "com.google.javascript.rhino.head.ast.ErrorNode",
1249:       "com.google.javascript.rhino.head.ast.ParenthesizedExpression",
1250:       "com.google.javascript.jscomp.ExpandJqueryAliases",
1251:       "com.google.javascript.rhino.head.Token",
1252:       "com.google.javascript.jscomp.MoveFunctionDeclarations",
1253:       "com.google.javascript.jscomp.InlineProperties$PropertyInfo",
1254:       "com.google.javascript.jscomp.InlineProperties",
1255:       "com.google.javascript.jscomp.ReplaceCssNames",
1256:       "com.google.javascript.jscomp.NameReferenceGraph$Reference",
1257:       "com.google.javascript.jscomp.Result",
1258:       "com.google.javascript.jscomp.Compiler$2",
1259:       "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter$RestrictByTypeOfResultVisitor",
1260:       "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter$RestrictByTrueTypeOfResultVisitor",
1261:       "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter$1",
1262:       "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter$RestrictByFalseTypeOfResultVisitor",
1263:       "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter$2",
1264:       "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter$3",
1265:       "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter$4",
1266:       "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter$13",
1267:       "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter$12",
1268:       "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter$11",
1269:       "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter$10",
1270:       "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter$9",
1271:       "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter$8",
1272:       "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter$7",
1273:       "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter$6",
1274:       "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter$5",
1275:       "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter$5",
1276:       "com.google.javascript.jscomp.CodingConvention$AssertionFunctionSpec",
1277:       "com.google.javascript.jscomp.ClosureCodingConvention$AssertInstanceofSpec",
1278:       "com.google.javascript.jscomp.SourceInformationAnnotator",
1279:       "com.google.javascript.jscomp.EmptyMessageBundle",
1280:       "com.google.javascript.jscomp.FlowSensitiveInlineVariables$1",
1281:       "com.google.javascript.jscomp.FlowSensitiveInlineVariables",
1282:       "com.google.javascript.jscomp.XtbMessageBundle$SecureEntityResolver",
1283:       "com.google.javascript.jscomp.XtbMessageBundle",
1284:       "com.google.javascript.jscomp.GoogleJsMessageIdGenerator",
1285:       "com.google.javascript.jscomp.XtbMessageBundle$Handler",
1286:       "com.google.javascript.jscomp.ProcessClosurePrimitives",
1287:       "com.google.javascript.jscomp.ReplaceStrings",
1288:       "com.google.javascript.jscomp.ExternExportsPass",
1289:       "com.google.javascript.jscomp.RenameLabels$DefaultNameSupplier",
1290:       "com.google.javascript.jscomp.NameGenerator",
1291:       "com.google.javascript.jscomp.RemoveTryCatch",
1292:       "com.google.javascript.jscomp.RemoveTryCatch$RemoveTryCatchCode",
1293:       "com.google.javascript.jscomp.CodeGenerator",
1294:       "com.google.javascript.jscomp.GroupVariableDeclarations",
1295:       "com.google.javascript.jscomp.CombinedCompilerPass",
1296:       "com.google.javascript.jscomp.Denormalize$StripConstantAnnotations",
1297:       "com.google.javascript.jscomp.Denormalize",
1298:       "com.google.javascript.jscomp.ConvertToDottedProperties",
1299:       "com.google.javascript.jscomp.UnreachableCodeElimination",
1300:       "com.google.javascript.jscomp.ReplaceMessages",
1301:       "com.google.common.collect.ImmutableMultimap",
1302:       "com.google.common.collect.ImmutableListMultimap",
1303:       "com.google.common.collect.ImmutableMultimap$Builder",
1304:       "com.google.common.collect.ImmutableListMultimap$Builder",
1305:       "com.google.common.collect.ImmutableMultimap$BuilderMultimap",
1306:       "com.google.common.collect.AbstractMultimap$AsMap",
1307:       "com.google.common.collect.Maps$EntrySet",
1308:       "com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries",
1309:       "com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator",
1310:       "com.google.common.collect.AbstractMultimap$WrappedCollection",
1311:       "com.google.common.collect.AbstractMultimap$WrappedList",
1312:       "com.google.common.collect.AbstractMultimap$RandomAccessWrappedList",
1313:       "com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator",
1314:       "com.google.common.collect.SingletonImmutableList",
1315:       "com.google.javascript.jscomp.Compiler$5",
1316:       "com.google.javascript.jscomp.FunctionRewriter",
1317:       "com.google.javascript.jscomp.CheckMissingGetCssName",
1318:       "com.google.javascript.jscomp.FindExportableNodes",
1319:       "com.google.javascript.jscomp.SymbolTable",
1320:       "com.google.javascript.jscomp.LineNumberCheck",
1321:       "com.google.javascript.rhino.head.Token$CommentType",
1322:       "com.google.javascript.rhino.head.ast.Comment",
1323:       "com.google.javascript.rhino.head.ast.VariableDeclaration",
1324:       "com.google.javascript.rhino.head.Node$PropListItem",
1325:       "com.google.javascript.rhino.head.ast.Symbol",
1326:       "com.google.javascript.rhino.head.ast.ObjectLiteral",
1327:       "com.google.javascript.rhino.head.ast.VariableInitializer",
1328:       "com.google.javascript.rhino.head.ast.AstNode$PositionComparator",
1329:       "com.google.javascript.jscomp.parsing.JsDocInfoParser",
1330:       "com.google.javascript.jscomp.parsing.JsDocTokenStream",
1331:       "com.google.javascript.jscomp.parsing.JsDocInfoParser$ErrorReporterParser",
1332:       "com.google.javascript.rhino.JSDocInfoBuilder",
1333:       "com.google.javascript.jscomp.parsing.JsDocInfoParser$State",
1334:       "com.google.javascript.jscomp.parsing.JsDocToken",
1335:       "com.google.javascript.jscomp.parsing.JsDocInfoParser$1",
1336:       "com.google.common.collect.Count",
1337:       "com.google.common.collect.LinkedListMultimap",
1338:       "com.google.common.collect.LinkedHashMultiset",
1339:       "com.google.common.collect.LinkedListMultimap$3",
1340:       "com.google.common.collect.LinkedListMultimap$NodeIterator",
1341:       "com.google.common.collect.LinkedListMultimap$3$1",
1342:       "com.google.common.collect.LinkedListMultimap$5",
1343:       "com.google.javascript.jscomp.DevirtualizePrototypeMethods",
1344:       "com.google.javascript.jscomp.SimpleDefinitionFinder$DefinitionGatheringCallback",
1345:       "com.google.common.collect.Maps$KeySet",
1346:       "com.google.common.collect.AbstractMultimap$KeySet",
1347:       "com.google.common.collect.Multimaps$EntrySet",
1348:       "com.google.common.collect.AbstractMultimap$3",
1349:       "com.google.common.collect.LinkedListMultimap$2",
1350:       "com.google.javascript.jscomp.AnalyzeNameReferences",
1351:       "com.google.javascript.jscomp.graph.Graph",
1352:       "com.google.javascript.jscomp.graph.DiGraph",
1353:       "com.google.javascript.jscomp.graph.LinkedDirectedGraph",
1354:       "com.google.javascript.jscomp.ControlFlowGraph",
1355:       "com.google.javascript.jscomp.graph.LinkedDirectedGraph$LinkedDirectedGraphNode",
1356:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
1357:       "com.google.javascript.jscomp.CustomPassExecutionTime",
1358:       "com.google.javascript.jscomp.PhaseOptimizer",
1359:       "com.google.javascript.jscomp.PhaseOptimizer$ProgressRange",
1360:       "com.google.javascript.jscomp.DefaultPassConfig$95",
1361:       "com.google.javascript.jscomp.PhaseOptimizer$Loop",
1362:       "com.google.javascript.jscomp.PhaseOptimizer$LoopInternal",
1363:       "com.google.javascript.jscomp.PhaseOptimizer$NamedPass",
1364:       "com.google.javascript.jscomp.PhaseOptimizer$PassFactoryDelegate",
1365:       "com.google.javascript.jscomp.DefaultPassConfig$97",
1366:       "com.google.javascript.jscomp.InferJSDocInfo",
1367:       "com.google.javascript.jscomp.GatherRawExports",
1368:       "com.google.common.collect.LinkedListMultimap$ValueForKeyIterator",
1369:       "com.google.common.io.Closeables",
1370:       "com.google.javascript.jscomp.CreateSyntheticBlocks",
1371:       "com.google.javascript.jscomp.CodeChangeHandler$ForbiddenChange",
1372:       "com.google.javascript.jscomp.CheckLevel",
1373:       "com.google.javascript.jscomp.AnonymousFunctionNamingPolicy",
1374:       "com.google.javascript.jscomp.SourceExcerptProvider$SourceExcerpt"
1375:     );
1376:   }
1377: }

[MASTER] 00:25:59.364 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Node node0 = Node.newNumber(0.0);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(50, Node.FREE_CALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(45, Node.IS_VAR_ARGS_PARAM);
assertEquals(54, Node.SLASH_V);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(41, Node.BRACELESS_TYPE);
assertEquals(16, Node.SOURCENAME_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(54, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(35, Node.PARENTHESIZED_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(52, Node.LENGTH);
assertEquals(44, Node.IS_OPTIONAL_PARAM);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertFalse(node0.isGetElem());
assertFalse(node0.hasOneChild());
assertFalse(node0.isLabelName());
assertFalse(node0.isFromExterns());
assertFalse(node0.isScript());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isOr());
assertEquals(39, node0.getType());
assertFalse(node0.isWhile());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isThis());
assertFalse(node0.isReturn());
assertFalse(node0.isBlock());
assertFalse(node0.isExprResult());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isDec());
assertFalse(node0.hasChildren());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isStringKey());
assertFalse(node0.isVar());
assertFalse(node0.isCall());
assertFalse(node0.isBreak());
assertFalse(node0.isName());
assertFalse(node0.isParamList());
assertFalse(node0.isNew());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isAdd());
assertFalse(node0.isNull());
assertNull(node0.getSourceFileName());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isSwitch());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isDo());
assertFalse(node0.isLabel());
assertEquals(0, node0.getChildCount());
assertEquals((-1), node0.getSourceOffset());
assertFalse(node0.isFor());
assertFalse(node0.isEmpty());
assertFalse(node0.isIf());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTry());
assertFalse(node0.isDelProp());
assertFalse(node0.isDebugger());
assertFalse(node0.isNE());
assertFalse(node0.isTrue());
assertFalse(node0.isIn());
assertFalse(node0.isGetterDef());
assertFalse(node0.isCase());
assertFalse(node0.isCatch());
assertTrue(node0.isNumber());
assertFalse(node0.isVoid());
assertFalse(node0.isHook());
assertFalse(node0.isRegExp());
assertFalse(node0.isThrow());
assertFalse(node0.isFalse());
assertFalse(node0.isGetProp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isInc());
assertFalse(node0.isString());
assertFalse(node0.isObjectLit());
assertFalse(node0.isContinue());
assertFalse(node0.isAnd());
assertFalse(node0.isFunction());
assertNotNull(node0);

node0.setType(41);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(50, Node.FREE_CALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(45, Node.IS_VAR_ARGS_PARAM);
assertEquals(54, Node.SLASH_V);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(41, Node.BRACELESS_TYPE);
assertEquals(16, Node.SOURCENAME_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(54, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(35, Node.PARENTHESIZED_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(52, Node.LENGTH);
assertEquals(44, Node.IS_OPTIONAL_PARAM);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertFalse(node0.isGetElem());
assertFalse(node0.hasOneChild());
assertFalse(node0.isLabelName());
assertFalse(node0.isFromExterns());
assertFalse(node0.isScript());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isOr());
assertFalse(node0.isWhile());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isThis());
assertFalse(node0.isReturn());
assertFalse(node0.isBlock());
assertFalse(node0.isExprResult());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isDec());
assertFalse(node0.hasChildren());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isStringKey());
assertFalse(node0.isVar());
assertFalse(node0.isCall());
assertFalse(node0.isBreak());
assertFalse(node0.isName());
assertFalse(node0.isParamList());
assertFalse(node0.isNew());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isAdd());
assertNull(node0.getSourceFileName());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isSwitch());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isDo());
assertFalse(node0.isLabel());
assertEquals(0, node0.getChildCount());
assertEquals((-1), node0.getSourceOffset());
assertFalse(node0.isFor());
assertFalse(node0.isEmpty());
assertFalse(node0.isIf());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTry());
assertFalse(node0.isDelProp());
assertFalse(node0.isDebugger());
assertFalse(node0.isNE());
assertFalse(node0.isTrue());
assertFalse(node0.isIn());
assertFalse(node0.isGetterDef());
assertEquals(41, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.isCatch());
assertFalse(node0.isVoid());
assertFalse(node0.isHook());
assertFalse(node0.isRegExp());
assertFalse(node0.isThrow());
assertFalse(node0.isFalse());
assertFalse(node0.isGetProp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isInc());
assertFalse(node0.isString());
assertTrue(node0.isNull());
assertFalse(node0.isObjectLit());
assertFalse(node0.isContinue());
assertFalse(node0.isAnd());
assertFalse(node0.isFunction());

Iterable<Node> iterable0 = node0.children();
assertFalse(iterable0.contains(node0));
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(50, Node.FREE_CALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(45, Node.IS_VAR_ARGS_PARAM);
assertEquals(54, Node.SLASH_V);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(41, Node.BRACELESS_TYPE);
assertEquals(16, Node.SOURCENAME_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(54, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(35, Node.PARENTHESIZED_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(52, Node.LENGTH);
assertEquals(44, Node.IS_OPTIONAL_PARAM);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertFalse(node0.isGetElem());
assertFalse(node0.hasOneChild());
assertFalse(node0.isLabelName());
assertFalse(node0.isFromExterns());
assertFalse(node0.isScript());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isOr());
assertFalse(node0.isWhile());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isThis());
assertFalse(node0.isReturn());
assertFalse(node0.isBlock());
assertFalse(node0.isExprResult());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isDec());
assertFalse(node0.hasChildren());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isStringKey());
assertFalse(node0.isVar());
assertFalse(node0.isCall());
assertFalse(node0.isBreak());
assertFalse(node0.isName());
assertFalse(node0.isParamList());
assertFalse(node0.isNew());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isAdd());
assertNull(node0.getSourceFileName());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isSwitch());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isDo());
assertFalse(node0.isLabel());
assertEquals(0, node0.getChildCount());
assertEquals((-1), node0.getSourceOffset());
assertFalse(node0.isFor());
assertFalse(node0.isEmpty());
assertFalse(node0.isIf());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTry());
assertFalse(node0.isDelProp());
assertFalse(node0.isDebugger());
assertFalse(node0.isNE());
assertFalse(node0.isTrue());
assertFalse(node0.isIn());
assertFalse(node0.isGetterDef());
assertEquals(41, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.isCatch());
assertFalse(node0.isVoid());
assertFalse(node0.isHook());
assertFalse(node0.isRegExp());
assertFalse(node0.isThrow());
assertFalse(node0.isFalse());
assertFalse(node0.isGetProp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isInc());
assertFalse(node0.isString());
assertTrue(node0.isNull());
assertFalse(node0.isObjectLit());
assertFalse(node0.isContinue());
assertFalse(node0.isAnd());
assertFalse(node0.isFunction());
assertNotNull(iterable0);

Double double0 = NodeUtil.getNumberValue(node0);
assertEquals(0.0, (double)double0, 0.01);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(50, Node.FREE_CALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(45, Node.IS_VAR_ARGS_PARAM);
assertEquals(54, Node.SLASH_V);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(41, Node.BRACELESS_TYPE);
assertEquals(16, Node.SOURCENAME_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(54, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(35, Node.PARENTHESIZED_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(52, Node.LENGTH);
assertEquals(44, Node.IS_OPTIONAL_PARAM);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertFalse(node0.isGetElem());
assertFalse(node0.hasOneChild());
assertFalse(node0.isLabelName());
assertFalse(node0.isFromExterns());
assertFalse(node0.isScript());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isOr());
assertFalse(node0.isWhile());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isThis());
assertFalse(node0.isReturn());
assertFalse(node0.isBlock());
assertFalse(node0.isExprResult());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isDec());
assertFalse(node0.hasChildren());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isStringKey());
assertFalse(node0.isVar());
assertFalse(node0.isCall());
assertFalse(node0.isBreak());
assertFalse(node0.isName());
assertFalse(node0.isParamList());
assertFalse(node0.isNew());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isAdd());
assertNull(node0.getSourceFileName());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isSwitch());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isDo());
assertFalse(node0.isLabel());
assertEquals(0, node0.getChildCount());
assertEquals((-1), node0.getSourceOffset());
assertFalse(node0.isFor());
assertFalse(node0.isEmpty());
assertFalse(node0.isIf());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTry());
assertFalse(node0.isDelProp());
assertFalse(node0.isDebugger());
assertFalse(node0.isNE());
assertFalse(node0.isTrue());
assertFalse(node0.isIn());
assertFalse(node0.isGetterDef());
assertEquals(41, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.isCatch());
assertFalse(node0.isVoid());
assertFalse(node0.isHook());
assertFalse(node0.isRegExp());
assertFalse(node0.isThrow());
assertFalse(node0.isFalse());
assertFalse(node0.isGetProp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isInc());
assertFalse(node0.isString());
assertTrue(node0.isNull());
assertFalse(node0.isObjectLit());
assertFalse(node0.isContinue());
assertFalse(node0.isAnd());
assertFalse(node0.isFunction());
assertNotNull(double0);

boolean boolean0 = NodeUtil.isSimpleOperatorType(24);
assertTrue(boolean0);

boolean boolean1 = NodeUtil.isCallOrNew(node0);
assertFalse(boolean1);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(50, Node.FREE_CALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(45, Node.IS_VAR_ARGS_PARAM);
assertEquals(54, Node.SLASH_V);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(41, Node.BRACELESS_TYPE);
assertEquals(16, Node.SOURCENAME_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(54, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(35, Node.PARENTHESIZED_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(52, Node.LENGTH);
assertEquals(44, Node.IS_OPTIONAL_PARAM);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertFalse(node0.isGetElem());
assertFalse(node0.hasOneChild());
assertFalse(node0.isLabelName());
assertFalse(node0.isFromExterns());
assertFalse(node0.isScript());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isOr());
assertFalse(node0.isWhile());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isThis());
assertFalse(node0.isReturn());
assertFalse(node0.isBlock());
assertFalse(node0.isExprResult());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isDec());
assertFalse(node0.hasChildren());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isStringKey());
assertFalse(node0.isVar());
assertFalse(node0.isCall());
assertFalse(node0.isBreak());
assertFalse(node0.isName());
assertFalse(node0.isParamList());
assertFalse(node0.isNew());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isAdd());
assertNull(node0.getSourceFileName());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isSwitch());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isDo());
assertFalse(node0.isLabel());
assertEquals(0, node0.getChildCount());
assertEquals((-1), node0.getSourceOffset());
assertFalse(node0.isFor());
assertFalse(node0.isEmpty());
assertFalse(node0.isIf());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTry());
assertFalse(node0.isDelProp());
assertFalse(node0.isDebugger());
assertFalse(node0.isNE());
assertFalse(node0.isTrue());
assertFalse(node0.isIn());
assertFalse(node0.isGetterDef());
assertEquals(41, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.isCatch());
assertFalse(node0.isVoid());
assertFalse(node0.isHook());
assertFalse(node0.isRegExp());
assertFalse(node0.isThrow());
assertFalse(node0.isFalse());
assertFalse(node0.isGetProp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isInc());
assertFalse(node0.isString());
assertTrue(node0.isNull());
assertFalse(node0.isObjectLit());
assertFalse(node0.isContinue());
assertFalse(node0.isAnd());
assertFalse(node0.isFunction());
assertFalse(boolean1 == boolean0);


[MASTER] 00:26:36.119 [Thread-3] ERROR ExternalProcessGroupHandler - Exception while reading output of client process. Stream closed
