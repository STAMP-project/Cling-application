entry: sources/closure-16/build/classes
entry: sources/closure-16/lib/args4j.jar
entry: sources/closure-16/lib/guava.jar
entry: sources/closure-16/lib/json.jar
entry: sources/closure-16/lib/jsr305.jar
entry: sources/closure-16/lib/protobuf-java.jar
entry: sources/closure-16/build/lib/rhino.jar
entry: sources/closure-16/lib/ant.jar
** CP: sources/closure-16/build/classes:sources/closure-16/lib/args4j.jar:sources/closure-16/lib/guava.jar:sources/closure-16/lib/json.jar:sources/closure-16/lib/jsr305.jar:sources/closure-16/lib/protobuf-java.jar:sources/closure-16/build/lib/rhino.jar:sources/closure-16/lib/ant.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: com.google.javascript.rhino.head.FunctionObject
* Starting Client-0
* Connecting to master process on port 16407
* Analyzing classpath: 
  - sources/closure-16/build/classes
  - sources/closure-16/lib/args4j.jar
  - sources/closure-16/lib/guava.jar
  - sources/closure-16/lib/json.jar
  - sources/closure-16/lib/jsr305.jar
  - sources/closure-16/lib/protobuf-java.jar
  - sources/closure-16/build/lib/rhino.jar
  - sources/closure-16/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.head.FunctionObject
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 183
* Using seed 1564036053289
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 59 / 183
[MASTER] 08:28:05.383 [logback-1] WARN  TestUsageChecker - class com.google.javascript.rhino.head.ContextFactory$1GlobalSetterImpl looks like an anonymous class, ignoring it (although reflection says false) GlobalSetterImpl
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.20218579234972678
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2677595628415301
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.34972677595628415
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5136612021857924
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5737704918032787
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6557377049180327
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6557377049180327
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6557377049180327
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6666666666666666
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6830601092896175
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6830601092896175
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6830601092896175
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6830601092896175
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6830601092896175
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6830601092896175
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6830601092896175
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6885245901639344
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6885245901639344
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6885245901639344
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6885245901639344
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6885245901639344
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6885245901639344
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6885245901639344
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6885245901639344
* Search finished after 326s and 447 generations, 144197 statements, best individual has fitness: 57.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6885245901639344
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 68%
* Total number of goals: 183
* Number of covered goals: 125
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6885245901639344
* Generated 30 tests with total length 147
* Resulting test suite's coverage: 69%
* Generating assertions
* Resulting test suite's mutation score: 35%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6885245901639344
* Compiling and checking tests
[MASTER] 08:34:25.781 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 08:34:25.782 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Class<Method> class0 = Method.class;
Method[] methodArray0 = FunctionObject.getMethodList(class0);
Method method0 = FunctionObject.findSingleMethod(methodArray0, "getAnnotatedReturnType");
NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(method0, "getAnnotatedReturnType");
FunctionObject functionObject0 = new FunctionObject("getAnnotatedReturnType", method0, nativeJavaMethod0);
Context context0 = Context.getContext();
context0.getElements(functionObject0);

[MASTER] 08:34:49.657 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.google.javascript.rhino.head.DefaultErrorReporter but in com.google.javascript.rhino.head.Context.reportRuntimeError(Context.java:947): org.evosuite.runtime.mock.java.lang.MockThrowable: Unsupported parameter type "com.google.javascript.rhino.head.Context" in method "call".
[MASTER] 08:34:49.660 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Class<InterpretedFunction> class0 = InterpretedFunction.class;
Method[] methodArray0 = FunctionObject.getMethodList(class0);
Method method0 = FunctionObject.findSingleMethod(methodArray0, "call");
NativeJavaMethod nativeJavaMethod0 = new NativeJavaMethod(method0, "call");
FunctionObject functionObject0 = new FunctionObject("call", method0, nativeJavaMethod0);

[MASTER] 08:34:54.450 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 08:34:54.452 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Class<Double> class0 = Double.TYPE;
Class<Integer> class1 = Integer.class;
FunctionObject.convertArg((Context) null, (Scriptable) null, (Object) class0, (Class<?>) class1);

[MASTER] 08:35:00.091 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 08:35:00.091 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Class<Double> class0 = Double.class;
FunctionObject.convertArg((Context) null, (Scriptable) null, (Object) class0, (Class<?>) class0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'FunctionObject_ESTest' to results/evosuite5/closure-16-com.google.javascript.rhino.head.FunctionObject-9
* Done!

* Computation finished
