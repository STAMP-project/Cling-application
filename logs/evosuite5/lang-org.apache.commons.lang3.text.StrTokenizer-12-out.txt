entry: sources/lang-22/target/classes
** CP: sources/lang-22/target/classes
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.apache.commons.lang3.text.StrTokenizer
* Starting Client-0
* Connecting to master process on port 13050
* Analyzing classpath: 
  - sources/lang-22/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang3.text.StrTokenizer
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 136
* Using seed 1566404317521
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 88 / 136
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8382352941176471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
* Search finished after 304s and 1714 generations, 456180 statements, best individual has fitness: 1.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 136
* Number of covered goals: 135
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
* Generated 39 tests with total length 90
* Resulting test suite's coverage: 99%
* Generating assertions
[MASTER] 18:24:33.925 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6848833333333333% of time used, but only 16/39 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 18%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9926470588235294
* Compiling and checking tests
[MASTER] 18:24:50.776 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<0>
[MASTER] 18:24:50.777 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
assertNotNull(strTokenizer0);
assertFalse(strTokenizer0.isIgnoreEmptyTokens());
assertEquals((-1), strTokenizer0.previousIndex());
assertFalse(strTokenizer0.isEmptyTokenAsNull());
assertEquals(0, strTokenizer0.nextIndex());

int int0 = strTokenizer0.size();
assertEquals(1, int0);
assertFalse(strTokenizer0.isIgnoreEmptyTokens());
assertEquals((-1), strTokenizer0.previousIndex());
assertFalse(strTokenizer0.isEmptyTokenAsNull());
assertEquals(0, strTokenizer0.nextIndex());


[MASTER] 18:24:54.975 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 18:24:54.975 [logback-1] WARN  JUnitAnalyzer - Failing test:
 StrTokenizer strTokenizer0 = StrTokenizer.getCSVInstance();
assertNotNull(strTokenizer0);
assertFalse(strTokenizer0.isIgnoreEmptyTokens());
assertFalse(strTokenizer0.isEmptyTokenAsNull());
assertEquals(0, strTokenizer0.nextIndex());
assertEquals((-1), strTokenizer0.previousIndex());

String string0 = strTokenizer0.getContent();
assertNotNull(string0);
assertEquals(" \t\n\r\f", string0);
assertFalse(strTokenizer0.isIgnoreEmptyTokens());
assertFalse(strTokenizer0.isEmptyTokenAsNull());
assertEquals(0, strTokenizer0.nextIndex());
assertEquals((-1), strTokenizer0.previousIndex());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing tests to file
* Writing JUnit test case 'StrTokenizer_ESTest' to results/evosuite5/lang-22-org.apache.commons.lang3.text.StrTokenizer-12
* Done!

* Computation finished
