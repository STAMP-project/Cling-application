entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.cglib.proxy.Enhancer
* Starting Client-0
* Connecting to master process on port 18536
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.cglib.proxy.Enhancer
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 213
* Using seed 1566401487907
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 113 / 213
[MASTER] 17:31:42.758 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$3b looks like an anonymous class, ignoring it (although reflection says false) MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$3b
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3615023474178404
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.41784037558685444
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4460093896713615
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4647887323943662
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4647887323943662
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4694835680751174
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.47417840375586856
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
* Search finished after 301s and 784 generations, 262653 statements, best individual has fitness: 108.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 49%
* Total number of goals: 213
* Number of covered goals: 105
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
* Generated 33 tests with total length 123
* Resulting test suite's coverage: 49%
* Generating assertions
[MASTER] 17:36:40.705 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$30 looks like an anonymous class, ignoring it (although reflection says false) MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$30
* Resulting test suite's mutation score: 7%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49295774647887325
* Compiling and checking tests
[MASTER] 17:36:48.811 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.reflect.InvocationTargetException-->null
org.mockito.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:238)
<evosuite>.<evosuite>(<evosuite>)
<evosuite>.<evosuite>(<evosuite>)

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'Enhancer_ESTest' to results/evosuite5/mockito-31-org.mockito.cglib.proxy.Enhancer-14
* Done!

* Computation finished
