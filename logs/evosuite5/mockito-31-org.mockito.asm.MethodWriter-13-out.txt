entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.asm.MethodWriter
* Starting Client-0
* Connecting to master process on port 4112
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.asm.MethodWriter
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 838
* Using seed 1566402204780
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 120 / 838
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.04892601431980907
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.12410501193317422
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.28878281622911695
[MASTER] 17:44:09.993 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.mockito.asm.MethodWriter.visitLdcInsn(Ljava/lang/Object;)V: I60 Branch 121 IF_ICMPLE L1017 - true
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4045346062052506
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4331742243436754
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4522673031026253
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4522673031026253
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.45823389021479716
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4618138424821002
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.46539379474940334
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4797136038186158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4880668257756563
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5011933174224343
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5035799522673031
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5059665871121718
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5059665871121718
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5071599045346062
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5071599045346062
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.513126491646778
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5155131264916468
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5167064439140812
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5167064439140812
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5178997613365155
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5190930787589498
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5202863961813843
* Search finished after 301s and 365 generations, 271275 statements, best individual has fitness: 402.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5202863961813843
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 52%
* Total number of goals: 838
* Number of covered goals: 436
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5202863961813843
* Generated 109 tests with total length 493
* Resulting test suite's coverage: 52%
* Generating assertions
[MASTER] 17:49:35.483 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.66895% of time used, but only 42/109 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 3%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5202863961813843
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing tests to file
* Writing JUnit test case 'MethodWriter_ESTest' to results/evosuite5/mockito-31-org.mockito.asm.MethodWriter-13
* Done!

* Computation finished
