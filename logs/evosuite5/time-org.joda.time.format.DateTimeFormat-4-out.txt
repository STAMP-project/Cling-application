entry: sources/time-14/build/classes
entry: defects4j/framework/projects/Time/lib/joda-convert-1.2.jar
** CP: sources/time-14/build/classes:defects4j/framework/projects/Time/lib/joda-convert-1.2.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.joda.time.format.DateTimeFormat
* Starting Client-0
* Connecting to master process on port 21446
* Analyzing classpath: 
  - sources/time-14/build/classes
  - defects4j/framework/projects/Time/lib/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.format.DateTimeFormat
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 434
* Using seed 1564030846751
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 64 / 434
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.391705069124424
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7211981566820277
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7649769585253456
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8179723502304147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8456221198156681
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8548387096774194
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8640552995391705
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.868663594470046
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8709677419354839
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8709677419354839
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8732718894009217
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8755760368663594
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8778801843317973
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8824884792626728
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8824884792626728
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8824884792626728
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8847926267281107
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8917050691244239
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8917050691244239
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8917050691244239
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8917050691244239
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8917050691244239
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8917050691244239
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8917050691244239
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8917050691244239
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8917050691244239
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8917050691244239
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8917050691244239
* Search finished after 301s and 2313 generations, 351842 statements, best individual has fitness: 47.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8917050691244239
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 434
* Number of covered goals: 369
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8917050691244239
* Generated 77 tests with total length 99
* Resulting test suite's coverage: 89%
* Generating assertions
[MASTER] 07:06:42.349 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7226333333333333% of time used, but only 34/77 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 18%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8917050691244239
* Compiling and checking tests
[MASTER] 07:06:54.912 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<11> but was:<6>
[MASTER] 07:06:54.914 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormatter dateTimeFormatter0 = DateTimeFormat.shortDate();
StringBuffer stringBuffer0 = new StringBuffer();
LocalTime localTime0 = new LocalTime((DateTimeZone) null);
dateTimeFormatter0.printTo(stringBuffer0, (ReadablePartial) localTime0);
assertEquals(11, stringBuffer0.length());
assertEquals("9:21:21 PM ", stringBuffer0.toString());


[MASTER] 07:06:55.430 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: A
[MASTER] 07:06:55.430 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("9CyH,AG;:W,1Rf");

[MASTER] 07:07:00.491 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.ComparisonFailure: expected:<[a h'시' mm'분' ss'초' z]> but was:<[yy. M. d a h'시' mm'분' ss'초']>
[MASTER] 07:07:00.491 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Locale locale0 = Locale.KOREAN;
String string0 = DateTimeFormat.patternForStyle("SL", locale0);
assertEquals("a h'\uC2DC' mm'\uBD84' ss'\uCD08' z", string0);


[MASTER] 07:07:01.571 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: B
[MASTER] 07:07:01.571 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("YmBr/S");

[MASTER] 07:07:02.107 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: c
[MASTER] 07:07:02.108 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("ExD?cg{e3");

[MASTER] 07:07:02.660 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: F
[MASTER] 07:07:02.660 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("Z_xF0r},ks(N*T");

[MASTER] 07:07:03.643 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: T
[MASTER] 07:07:03.643 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("YG.TDkl.=");

[MASTER] 07:07:04.146 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: I
[MASTER] 07:07:04.146 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("4Yd2(|GhILhr");

[MASTER] 07:07:04.632 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: J
[MASTER] 07:07:04.633 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("xJR{Q$#DUNeMLq");

[MASTER] 07:07:05.079 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: W
[MASTER] 07:07:05.079 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("#KW");

[MASTER] 07:07:05.589 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: L
[MASTER] 07:07:05.589 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("xM?''2ZL");

[MASTER] 07:07:06.029 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: N
[MASTER] 07:07:06.029 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("S1YN5YC+zlmi;[&ckq$");

[MASTER] 07:07:06.519 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: O
[MASTER] 07:07:06.520 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("dayOfWeek");

[MASTER] 07:07:07.009 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: P
[MASTER] 07:07:07.009 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("xYx$P;'0xc|omp'8uP2");

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing tests to file
* Writing JUnit test case 'DateTimeFormat_ESTest' to results/evosuite5/time-14-org.joda.time.format.DateTimeFormat-4
* Done!

* Computation finished
