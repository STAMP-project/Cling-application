entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.asm.MethodWriter
* Starting Client-0
* Connecting to master process on port 13314
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.asm.MethodWriter
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 838
* Using seed 1566334671290
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 120 / 838
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.05847255369928401
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.21121718377088305
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3412887828162291
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3997613365155131
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4307875894988067
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.45823389021479716
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.47255369928400953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.47255369928400953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49522673031026254
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5059665871121718
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5059665871121718
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5059665871121718
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5059665871121718
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5095465393794749
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5107398568019093
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5119331742243437
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5155131264916468
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5155131264916468
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5202863961813843
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5214797136038186
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5393794749403341
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5417661097852029
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.548926014319809
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.548926014319809
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5536992840095465
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5632458233890215
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.568019093078759
* Search finished after 301s and 522 generations, 402759 statements, best individual has fitness: 362.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.568019093078759
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 57%
* Total number of goals: 838
* Number of covered goals: 476
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.568019093078759
* Generated 112 tests with total length 719
* Resulting test suite's coverage: 57%
* Generating assertions
* Resulting test suite's mutation score: 8%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.568019093078759
* Compiling and checking tests
[MASTER] 23:04:23.473 [logback-1] WARN  JUnitAnalyzer - Failed to create tmp dir
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing tests to file
* Writing JUnit test case 'MethodWriter_ESTest' to results/evosuite5/mockito-31-org.mockito.asm.MethodWriter-3
* Done!

* Computation finished
