entry: sources/time-14/build/classes
entry: defects4j/framework/projects/Time/lib/joda-convert-1.2.jar
** CP: sources/time-14/build/classes:defects4j/framework/projects/Time/lib/joda-convert-1.2.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.joda.time.format.DateTimeFormat
* Starting Client-0
* Connecting to master process on port 11566
* Analyzing classpath: 
  - sources/time-14/build/classes
  - defects4j/framework/projects/Time/lib/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.format.DateTimeFormat
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 434
* Using seed 1566095215278
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 64 / 434
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.39631336405529954
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7396313364055299
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7672811059907834
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7949308755760369
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.815668202764977
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8225806451612904
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8410138248847926
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8456221198156681
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8525345622119815
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8548387096774194
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8617511520737328
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8663594470046083
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8663594470046083
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8663594470046083
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8709677419354839
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8778801843317973
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8778801843317973
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
* Search finished after 301s and 2246 generations, 311728 statements, best individual has fitness: 52.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 434
* Number of covered goals: 363
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
* Generated 73 tests with total length 89
* Resulting test suite's coverage: 88%
* Generating assertions
[MASTER] 04:32:48.786 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7415833333333334% of time used, but only 25/73 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 10%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.880184331797235
* Compiling and checking tests
[MASTER] 04:33:01.248 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.junit.ComparisonFailure: expected:<[1:00:01 AM]> but was:<[Jan 1, 1970]>
[MASTER] 04:33:01.248 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormatter dateTimeFormatter0 = DateTimeFormat.mediumDate();
String string0 = dateTimeFormatter0.print(1413L);
assertEquals("1:00:01 AM", string0);


[MASTER] 04:33:03.243 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: v
[MASTER] 04:33:03.244 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("1YE0_vYK.!=tdi_jKZ");

[MASTER] 04:33:07.654 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: A
[MASTER] 04:33:07.654 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("America/St_Johns");

[MASTER] 04:33:08.243 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: B
[MASTER] 04:33:08.243 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("^8!xHB`+c&zM");

[MASTER] 04:33:09.182 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: P
[MASTER] 04:33:09.182 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("CyP-.kp?9R-L");

[MASTER] 04:33:09.637 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: q
[MASTER] 04:33:09.637 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("DyqgrE398+Dj");

[MASTER] 04:33:10.234 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: F
[MASTER] 04:33:10.235 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("+k!xFS:(");

[MASTER] 04:33:10.797 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Illegal pattern component: V
[MASTER] 04:33:10.797 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DateTimeFormat.forPattern("KGYV\"!|Apy");

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing tests to file
* Writing JUnit test case 'DateTimeFormat_ESTest' to results/evosuite5/time-14-org.joda.time.format.DateTimeFormat-29
* Done!

* Computation finished
