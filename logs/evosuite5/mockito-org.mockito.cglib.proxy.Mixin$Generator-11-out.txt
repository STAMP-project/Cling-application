entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.cglib.proxy.Mixin$Generator
* Starting Client-0
* Connecting to master process on port 7390
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.cglib.proxy.Mixin$Generator
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 46
* Using seed 1566401495592
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 24 / 46
[MASTER] 17:31:53.859 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.ClassGenerator$$MixinByCGLIB$$5 looks like an anonymous class, ignoring it (although reflection says false) ClassGenerator$$MixinByCGLIB$$5
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5869565217391305
[MASTER] 17:31:56.492 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.proxy.Mixin$Generator$$MixinByCGLIB$$8 looks like an anonymous class, ignoring it (although reflection says false) Mixin$Generator$$MixinByCGLIB$$8
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.717391304347826
[MASTER] 17:32:12.603 [logback-1] WARN  TestUsageChecker - class $java.io.Serializable$$MixinByCGLIB$$5 looks like an anonymous class, ignoring it (although reflection says false) Serializable$$MixinByCGLIB$$5
[MASTER] 17:32:18.800 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.ClassGenerator$$MixinByCGLIB$$3 looks like an anonymous class, ignoring it (although reflection says false) ClassGenerator$$MixinByCGLIB$$3
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
[MASTER] 17:32:23.644 [logback-1] WARN  TestUsageChecker - class $java.lang.Class$$MixinByCGLIB$$3 looks like an anonymous class, ignoring it (although reflection says false) Class$$MixinByCGLIB$$3
[MASTER] 17:32:26.979 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.proxy.Mixin$Generator$$MixinByCGLIB$$3 looks like an anonymous class, ignoring it (although reflection says false) Mixin$Generator$$MixinByCGLIB$$3
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
[MASTER] 17:33:04.865 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.ClassGenerator$$MixinByCGLIB$$6 looks like an anonymous class, ignoring it (although reflection says false) ClassGenerator$$MixinByCGLIB$$6
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
[MASTER] 17:33:21.551 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.empty.Object$$MixinByCGLIB$$0_115 looks like an anonymous class, ignoring it (although reflection says false) Object$$MixinByCGLIB$$0_115
[MASTER] 17:33:24.752 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.empty.Object$$MixinByCGLIB$$0_120 looks like an anonymous class, ignoring it (although reflection says false) Object$$MixinByCGLIB$$0_120
[MASTER] 17:33:26.502 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.ClassGenerator$$MixinByCGLIB$$8 looks like an anonymous class, ignoring it (although reflection says false) ClassGenerator$$MixinByCGLIB$$8
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
[MASTER] 17:33:33.227 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.proxy.Mixin$Generator$$MixinByCGLIB$$3_2 looks like an anonymous class, ignoring it (although reflection says false) Mixin$Generator$$MixinByCGLIB$$3_2
[MASTER] 17:33:35.670 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.proxy.Mixin$Generator$$MixinByCGLIB$$3_3 looks like an anonymous class, ignoring it (although reflection says false) Mixin$Generator$$MixinByCGLIB$$3_3
[MASTER] 17:33:39.842 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.ClassGenerator$$MixinByCGLIB$$8_2 looks like an anonymous class, ignoring it (although reflection says false) ClassGenerator$$MixinByCGLIB$$8_2
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
[MASTER] 17:33:43.622 [logback-1] WARN  TestUsageChecker - class $java.lang.Class$$MixinByCGLIB$$7 looks like an anonymous class, ignoring it (although reflection says false) Class$$MixinByCGLIB$$7
[MASTER] 17:33:44.152 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.ClassGenerator$$MixinByCGLIB$$5$$MixinByCGLIB$$8 looks like an anonymous class, ignoring it (although reflection says false) ClassGenerator$$MixinByCGLIB$$5$$MixinByCGLIB$$8
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
[MASTER] 17:34:06.379 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.ClassGenerator$$MixinByCGLIB$$4 looks like an anonymous class, ignoring it (although reflection says false) ClassGenerator$$MixinByCGLIB$$4
[MASTER] 17:34:15.529 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.ClassGenerator$$MixinByCGLIB$$3_2 looks like an anonymous class, ignoring it (although reflection says false) ClassGenerator$$MixinByCGLIB$$3_2
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
[MASTER] 17:34:42.306 [logback-1] WARN  TestUsageChecker - class $java.lang.Comparable$$MixinByCGLIB$$13a looks like an anonymous class, ignoring it (although reflection says false) Comparable$$MixinByCGLIB$$13a
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
[MASTER] 17:34:56.419 [logback-1] WARN  TestUsageChecker - class $java.lang.Class$$MixinByCGLIB$$8 looks like an anonymous class, ignoring it (although reflection says false) Class$$MixinByCGLIB$$8
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
[MASTER] 17:35:18.266 [logback-1] WARN  TestUsageChecker - class $java.lang.Class$$MixinByCGLIB$$9 looks like an anonymous class, ignoring it (although reflection says false) Class$$MixinByCGLIB$$9
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
[MASTER] 17:35:53.962 [logback-1] WARN  TestUsageChecker - class $java.io.Serializable$$MixinByCGLIB$$8 looks like an anonymous class, ignoring it (although reflection says false) Serializable$$MixinByCGLIB$$8
[MASTER] 17:35:55.871 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.proxy.Mixin$Generator$$MixinByCGLIB$$3_4 looks like an anonymous class, ignoring it (although reflection says false) Mixin$Generator$$MixinByCGLIB$$3_4
[MASTER] 17:35:56.251 [logback-1] WARN  TestUsageChecker - class $java.lang.String$$MixinByCGLIB$$138 looks like an anonymous class, ignoring it (although reflection says false) String$$MixinByCGLIB$$138
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
[MASTER] 17:35:59.907 [logback-1] WARN  TestUsageChecker - class $java.io.Serializable$$MixinByCGLIB$$13a looks like an anonymous class, ignoring it (although reflection says false) Serializable$$MixinByCGLIB$$13a
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
* Search finished after 301s and 1092 generations, 702684 statements, best individual has fitness: 2.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 46
* Number of covered goals: 44
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
* Generated 13 tests with total length 56
* Resulting test suite's coverage: 96%
* Generating assertions
[MASTER] 17:36:53.615 [logback-1] WARN  TestUsageChecker - class $java.io.Serializable$$MixinByCGLIB$$241 looks like an anonymous class, ignoring it (although reflection says false) Serializable$$MixinByCGLIB$$241
[MASTER] 17:36:53.807 [logback-1] WARN  TestUsageChecker - class $java.lang.Class$$MixinByCGLIB$$2_2 looks like an anonymous class, ignoring it (although reflection says false) Class$$MixinByCGLIB$$2_2
[MASTER] 17:36:54.027 [logback-1] WARN  TestUsageChecker - class $java.lang.Class$$MixinByCGLIB$$2_3 looks like an anonymous class, ignoring it (although reflection says false) Class$$MixinByCGLIB$$2_3
[MASTER] 17:36:54.331 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.proxy.Mixin$Generator$$MixinByCGLIB$$2 looks like an anonymous class, ignoring it (although reflection says false) Mixin$Generator$$MixinByCGLIB$$2
* Resulting test suite's mutation score: 46%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
* Compiling and checking tests
[MASTER] 17:36:59.842 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.reflect.InvocationTargetException-->null
org.mockito.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:238)
<evosuite>.<evosuite>(<evosuite>)
<evosuite>.<evosuite>(<evosuite>)

[MASTER] 17:37:10.756 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test00 -> class java.lang.NullPointerException: null
[MASTER] 17:37:10.757 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Mixin.Generator mixin_Generator0 = new Mixin.Generator();
Class<Mixin>[] classArray0 = (Class<Mixin>[]) Array.newInstance(Class.class, 1);
Class<Mixin> class0 = Mixin.class;
classArray0[0] = class0;
mixin_Generator0.setDelegates(classArray0);
mixin_Generator0.create();
Mixin mixin0 = mixin_Generator0.create();
assertEquals(2, Mixin.STYLE_EVERYTHING);


[MASTER] 17:37:10.757 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test07 -> class java.lang.NullPointerException: null
[MASTER] 17:37:10.758 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Mixin.Generator mixin_Generator0 = new Mixin.Generator();
Class<Mixin>[] classArray0 = (Class<Mixin>[]) Array.newInstance(Class.class, 10);
mixin_Generator0.setClasses(classArray0);
mixin_Generator0.setStyle(2);
mixin_Generator0.create();

[MASTER] 17:37:10.758 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test09 -> class java.lang.NullPointerException: null
[MASTER] 17:37:10.758 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Mixin.Generator mixin_Generator0 = new Mixin.Generator();
mixin_Generator0.generateClass((ClassVisitor) null);

* Permissions denied during test execution: 
[MASTER] 17:37:12.287 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test2 -> class java.lang.NullPointerException: null
[MASTER] 17:37:12.287 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Mixin.Generator mixin_Generator0 = new Mixin.Generator();
Object[] objectArray0 = new Object[4];
objectArray0[0] = (Object) mixin_Generator0;
objectArray0[1] = (Object) mixin_Generator0;
objectArray0[2] = (Object) mixin_Generator0;
mixin_Generator0.setDelegates(objectArray0);
objectArray0[3] = (Object) mixin_Generator0;
mixin_Generator0.create();
mixin_Generator0.setStyle(2);
mixin_Generator0.create();

  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'Mixin$Generator_ESTest' to results/evosuite5/mockito-31-org.mockito.cglib.proxy.Mixin$Generator-11
* Done!

* Computation finished
