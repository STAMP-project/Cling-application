entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.cglib.core.EmitUtils
* Starting Client-0
* Connecting to master process on port 2295
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.cglib.core.EmitUtils
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 223
* Using seed 1566335007917
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 123 / 223
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.04484304932735426
[MASTER] 23:03:42.394 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class java.lang.reflect.Method canUseFunctionalMocks=true, canBeMocked: false
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2242152466367713
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3542600896860987
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.36771300448430494
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.37668161434977576
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.37668161434977576
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.38565022421524664
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.39461883408071746
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.39461883408071746
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.39461883408071746
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3991031390134529
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3991031390134529
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3991031390134529
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3991031390134529
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3991031390134529
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3991031390134529
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.48878923766816146
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5336322869955157
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5426008968609866
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5605381165919282
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6053811659192825
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6143497757847534
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6143497757847534
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6233183856502242
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6367713004484304
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6412556053811659
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6412556053811659
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6412556053811659
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6412556053811659
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6412556053811659
* Search finished after 301s and 766 generations, 313946 statements, best individual has fitness: 80.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6412556053811659
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 223
* Number of covered goals: 143
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6412556053811659
* Generated 53 tests with total length 344
* Resulting test suite's coverage: 64%
* Generating assertions
* Resulting test suite's mutation score: 7%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6412556053811659
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'EmitUtils_ESTest' to results/evosuite5/mockito-31-org.mockito.cglib.core.EmitUtils-5
* Done!

* Computation finished
