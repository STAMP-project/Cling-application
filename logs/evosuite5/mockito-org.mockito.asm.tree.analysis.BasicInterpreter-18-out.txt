entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.asm.tree.analysis.BasicInterpreter
* Starting Client-0
* Connecting to master process on port 15184
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.asm.tree.analysis.BasicInterpreter
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 549
* Using seed 1565701082747
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 517 / 549
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4936247723132969
[MASTER] 14:58:24.263 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.mockito.asm.MethodAdapter canUseFunctionalMocks=false, canBeMocked: true
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5664845173041895
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6065573770491803
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6885245901639344
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7504553734061931
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7905282331511839
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8142076502732241
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8542805100182149
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8998178506375227
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9398907103825137
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9562841530054644
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9690346083788707
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9744990892531876
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9836065573770492
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9872495446265938
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9927140255009107
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.994535519125683
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.994535519125683
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.994535519125683
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.994535519125683
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.994535519125683
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.994535519125683
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.994535519125683
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.994535519125683
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.994535519125683
[MASTER] 15:02:32.290 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class java.lang.reflect.Method canUseFunctionalMocks=true, canBeMocked: false
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.994535519125683
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.994535519125683
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9963570127504554
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9963570127504554
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9963570127504554
* Search finished after 302s and 1009 generations, 482572 statements, best individual has fitness: 2.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9963570127504554
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 549
* Number of covered goals: 547
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9963570127504554
* Generated 267 tests with total length 1066
* Resulting test suite's coverage: 100%
* Generating assertions
* Resulting test suite's mutation score: 49%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9963570127504554
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'BasicInterpreter_ESTest' to results/evosuite5/mockito-31-org.mockito.asm.tree.analysis.BasicInterpreter-18
* Done!

* Computation finished
