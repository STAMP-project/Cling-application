entry: sources/closure-16/build/classes
entry: sources/closure-16/lib/args4j.jar
entry: sources/closure-16/lib/guava.jar
entry: sources/closure-16/lib/json.jar
entry: sources/closure-16/lib/jsr305.jar
entry: sources/closure-16/lib/protobuf-java.jar
entry: sources/closure-16/build/lib/rhino.jar
entry: sources/closure-16/lib/ant.jar
** CP: sources/closure-16/build/classes:sources/closure-16/lib/args4j.jar:sources/closure-16/lib/guava.jar:sources/closure-16/lib/json.jar:sources/closure-16/lib/jsr305.jar:sources/closure-16/lib/protobuf-java.jar:sources/closure-16/build/lib/rhino.jar:sources/closure-16/lib/ant.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: com.google.javascript.rhino.head.regexp.NativeRegExp
* Starting Client-0
* Connecting to master process on port 17635
* Analyzing classpath: 
  - sources/closure-16/build/classes
  - sources/closure-16/lib/args4j.jar
  - sources/closure-16/lib/guava.jar
  - sources/closure-16/lib/json.jar
  - sources/closure-16/lib/jsr305.jar
  - sources/closure-16/lib/protobuf-java.jar
  - sources/closure-16/build/lib/rhino.jar
  - sources/closure-16/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.head.regexp.NativeRegExp
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 1450
* Using seed 1566407497293
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 382 / 1450
[MASTER] 19:12:11.898 [logback-1] WARN  TestUsageChecker - class com.google.javascript.rhino.head.ContextFactory$1GlobalSetterImpl looks like an anonymous class, ignoring it (although reflection says false) GlobalSetterImpl
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.09517241379310344
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.11448275862068966
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.1510344827586207
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.15517241379310345
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.15655172413793103
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.15724137931034482
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.21586206896551724
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2206896551724138
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.24206896551724139
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.24758620689655172
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.30137931034482757
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.30137931034482757
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.30137931034482757
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3096551724137931
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3117241379310345
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3117241379310345
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3117241379310345
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3117241379310345
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31448275862068964
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.32827586206896553
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3317241379310345
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3406896551724138
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3406896551724138
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.34413793103448276
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.34413793103448276
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3489655172413793
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3689655172413793
* Search finished after 303s and 271 generations, 91691 statements, best individual has fitness: 915.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3689655172413793
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 31%
* Total number of goals: 1450
* Number of covered goals: 453
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3689655172413793
* Generated 67 tests with total length 193
* Resulting test suite's coverage: 37%
* Generating assertions
[MASTER] 19:18:15.830 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6704833333333333% of time used, but only 24/67 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 5%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3689655172413793
* Compiling and checking tests
[MASTER] 19:18:56.024 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.google.javascript.rhino.head.regexp.NativeRegExp but in com.google.javascript.rhino.head.ScriptRuntime.getRegExpProxy(ScriptRuntime.java:3848): java.lang.NullPointerException
[MASTER] 19:18:56.025 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NativeRegExp nativeRegExp0 = new NativeRegExp();
Context context0 = Context.getCurrentContext();
nativeRegExp0.call(context0, nativeRegExp0, nativeRegExp0, context0.emptyArgs);

[MASTER] 19:19:02.307 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.google.javascript.rhino.head.regexp.NativeRegExp but in com.google.javascript.rhino.head.ScriptRuntime.getRegExpProxy(ScriptRuntime.java:3848): java.lang.NullPointerException
[MASTER] 19:19:02.308 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NativeRegExp nativeRegExp0 = new NativeRegExp();
Context context0 = Context.getCurrentContext();
nativeRegExp0.construct(context0, nativeRegExp0, context0.emptyArgs);

[MASTER] 19:19:03.588 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 19:19:03.588 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Context context0 = new Context();
ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
assertEquals(4, ScriptableObject.PERMANENT);


[MASTER] 19:19:04.832 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 19:19:04.832 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Context context0 = new Context();
ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, true);
assertFalse(importerTopLevel0.isEmpty());


[MASTER] 19:19:06.065 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 19:19:06.065 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NativeRegExp nativeRegExp0 = new NativeRegExp();
Context context0 = new Context();
nativeRegExp0.compile(context0, (Scriptable) null, context0.emptyArgs);
String string0 = nativeRegExp0.toString();
assertEquals("/(?:)/", string0);


[MASTER] 19:19:12.699 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 19:19:12.699 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NativeRegExp nativeRegExp0 = new NativeRegExp();
Context context0 = Context.getCurrentContext();
Object[] objectArray0 = new Object[1];
NativeRegExp nativeRegExp1 = (NativeRegExp)nativeRegExp0.compile(context0, nativeRegExp0, objectArray0);
NativeArray nativeArray0 = (NativeArray)nativeRegExp1.construct(context0, nativeRegExp0, objectArray0);
assertEquals(13, ScriptableObject.CONST);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing tests to file
* Writing JUnit test case 'NativeRegExp_ESTest' to results/evosuite5/closure-16-com.google.javascript.rhino.head.regexp.NativeRegExp-18
* Done!

* Computation finished
