entry: sources/math-100/target/classes
** CP: sources/math-100/target/classes
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.apache.commons.math.ode.SwitchingFunctionsHandler
* Starting Client-0
* Connecting to master process on port 9776
* Analyzing classpath: 
  - sources/math-100/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.ode.SwitchingFunctionsHandler
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 38
* Using seed 1565710748173
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 14 / 38
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7631578947368421
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7631578947368421
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7631578947368421
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7631578947368421
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9210526315789473
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9210526315789473
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9473684210526315
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9473684210526315
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9473684210526315
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9473684210526315
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9473684210526315
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9473684210526315
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9736842105263158
* Search finished after 302s and 411 generations, 423688 statements, best individual has fitness: 1.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9736842105263158
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 38
* Number of covered goals: 37
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9736842105263158
* Generated 12 tests with total length 84
* Resulting test suite's coverage: 97%
* Generating assertions
* Resulting test suite's mutation score: 67%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9736842105263158
* Compiling and checking tests
[MASTER] 17:45:05.829 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<8.0> but was:<10.666666666666666>
[MASTER] 17:45:05.830 [logback-1] WARN  JUnitAnalyzer - Failing test:
 SwitchingFunctionsHandler switchingFunctionsHandler0 = new SwitchingFunctionsHandler();
SwitchingFunction switchingFunction0 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
doReturn(5.333333333333333, 5.333333333333333, 0.0, 0.0).when(switchingFunction0).g(anyDouble() , any(double[].class));
SwitchingFunction switchingFunction1 = mock(SwitchingFunction.class, new ViolatedAssumptionAnswer());
doReturn(5.333333333333333, 3421.676779298536, 0.0, 0.0).when(switchingFunction1).g(anyDouble() , any(double[].class));
switchingFunctionsHandler0.add(switchingFunction1, (-1344.1), (-1344.1), 5);
switchingFunctionsHandler0.add(switchingFunction0, 5.333333333333333, 5.333333333333333, 5);
double[] doubleArray0 = new double[3];
DummyStepInterpolator dummyStepInterpolator0 = new DummyStepInterpolator(doubleArray0, true);
switchingFunctionsHandler0.evaluateStep(dummyStepInterpolator0);
switchingFunctionsHandler0.stepAccepted(0.0, doubleArray0);
dummyStepInterpolator0.storeTime(5.333333333333333);
boolean boolean0 = switchingFunctionsHandler0.evaluateStep(dummyStepInterpolator0);
assertEquals(8.0, dummyStepInterpolator0.getInterpolatedTime(), 0.01);
assertTrue(boolean0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 17
* Writing tests to file
* Writing JUnit test case 'SwitchingFunctionsHandler_ESTest' to results/evosuite5/math-100-org.apache.commons.math.ode.SwitchingFunctionsHandler-14
* Done!

* Computation finished
