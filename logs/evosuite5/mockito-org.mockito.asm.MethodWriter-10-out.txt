entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.asm.MethodWriter
* Starting Client-0
* Connecting to master process on port 4508
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.asm.MethodWriter
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 838
* Using seed 1566334699188
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 120 / 838
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.03818615751789976
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.05847255369928401
[MASTER] 22:58:51.089 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was org.mockito.asm.MethodWriter.visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: I35 Branch 87 IFNE L812 - false
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2458233890214797
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4630071599045346
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4713603818615752
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49761336515513127
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5143198090692124
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5238663484486874
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5262529832935561
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5298329355608592
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5536992840095465
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5536992840095465
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5548926014319809
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5620525059665871
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5644391408114559
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5787589498806682
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5787589498806682
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.581145584725537
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.581145584725537
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5823389021479713
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5823389021479713
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5835322195704057
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5847255369928401
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5871121718377088
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5871121718377088
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5883054892601431
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5883054892601431
* Search finished after 302s and 495 generations, 369253 statements, best individual has fitness: 345.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5883054892601431
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 59%
* Total number of goals: 838
* Number of covered goals: 493
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5883054892601431
* Generated 117 tests with total length 494
* Resulting test suite's coverage: 59%
* Generating assertions
* Resulting test suite's mutation score: 8%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5883054892601431
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing tests to file
* Writing JUnit test case 'MethodWriter_ESTest' to results/evosuite5/mockito-31-org.mockito.asm.MethodWriter-10
* Done!

* Computation finished
