entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.cglib.core.AbstractClassGenerator
* Starting Client-0
* Connecting to master process on port 4826
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.cglib.core.AbstractClassGenerator
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 44
* Using seed 1566029207639
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 32 / 44
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6818181818181818
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8181818181818182
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8181818181818182
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
* Search finished after 304s and 1913 generations, 575695 statements, best individual has fitness: 7.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 75%
* Total number of goals: 44
* Number of covered goals: 33
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
* Generated 13 tests with total length 40
* Resulting test suite's coverage: 84%
* Generating assertions
* Resulting test suite's mutation score: 23%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8409090909090909
* Compiling and checking tests
[MASTER] 10:12:08.411 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.reflect.InvocationTargetException-->null
org.mockito.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:238)
<evosuite>.<evosuite>(<evosuite>)
<evosuite>.<evosuite>(<evosuite>)

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'AbstractClassGenerator_ESTest' to results/evosuite5/mockito-31-org.mockito.cglib.core.AbstractClassGenerator-23
* Done!

* Computation finished
