entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.cglib.proxy.Mixin$Generator
* Starting Client-0
* Connecting to master process on port 18675
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.cglib.proxy.Mixin$Generator
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 46
* Using seed 1566334265528
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 24 / 46
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5217391304347826
[MASTER] 22:51:28.664 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.ClassGenerator$$MixinByCGLIB$$5 looks like an anonymous class, ignoring it (although reflection says false) ClassGenerator$$MixinByCGLIB$$5
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.717391304347826
[MASTER] 22:51:33.658 [logback-1] WARN  TestUsageChecker - class $java.lang.CharSequence$$MixinByCGLIB$$5 looks like an anonymous class, ignoring it (although reflection says false) CharSequence$$MixinByCGLIB$$5
[MASTER] 22:51:35.839 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.DefaultNamingPolicy$$MixinByCGLIB$$3 looks like an anonymous class, ignoring it (although reflection says false) DefaultNamingPolicy$$MixinByCGLIB$$3
[MASTER] 22:51:37.178 [logback-1] WARN  TestUsageChecker - class $java.lang.CharSequence$$MixinByCGLIB$$5_2 looks like an anonymous class, ignoring it (although reflection says false) CharSequence$$MixinByCGLIB$$5_2
[MASTER] 22:51:37.961 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.proxy.Mixin$Generator$$MixinByCGLIB$$14 looks like an anonymous class, ignoring it (although reflection says false) Mixin$Generator$$MixinByCGLIB$$14
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7608695652173914
[MASTER] 22:51:50.432 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.DefaultNamingPolicy$$MixinByCGLIB$$3_2 looks like an anonymous class, ignoring it (although reflection says false) DefaultNamingPolicy$$MixinByCGLIB$$3_2
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7608695652173914
[MASTER] 22:52:03.415 [logback-1] WARN  TestUsageChecker - class $java.lang.Class$$MixinByCGLIB$$4 looks like an anonymous class, ignoring it (although reflection says false) Class$$MixinByCGLIB$$4
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8260869565217391
[MASTER] 22:52:06.354 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.proxy.Mixin$Generator$$MixinByCGLIB$$3_2 looks like an anonymous class, ignoring it (although reflection says false) Mixin$Generator$$MixinByCGLIB$$3_2
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8913043478260869
[MASTER] 22:52:19.414 [logback-1] WARN  TestUsageChecker - class $java.lang.reflect.Type$$MixinByCGLIB$$4 looks like an anonymous class, ignoring it (although reflection says false) Type$$MixinByCGLIB$$4
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8913043478260869
[MASTER] 22:52:30.336 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.proxy.Mixin$Generator$$MixinByCGLIB$$3_3 looks like an anonymous class, ignoring it (although reflection says false) Mixin$Generator$$MixinByCGLIB$$3_3
[MASTER] 22:52:31.284 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.ClassGenerator$$MixinByCGLIB$$3 looks like an anonymous class, ignoring it (although reflection says false) ClassGenerator$$MixinByCGLIB$$3
[MASTER] 22:52:35.096 [logback-1] WARN  TestUsageChecker - class $java.lang.String$$MixinByCGLIB$$14a looks like an anonymous class, ignoring it (although reflection says false) String$$MixinByCGLIB$$14a
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
[MASTER] 22:52:35.771 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.proxy.Mixin$Generator$$MixinByCGLIB$$3_4 looks like an anonymous class, ignoring it (although reflection says false) Mixin$Generator$$MixinByCGLIB$$3_4
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
[MASTER] 22:53:26.739 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.ClassGenerator$$MixinByCGLIB$$4 looks like an anonymous class, ignoring it (although reflection says false) ClassGenerator$$MixinByCGLIB$$4
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
[MASTER] 22:53:47.512 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.DefaultNamingPolicy$$MixinByCGLIB$$4 looks like an anonymous class, ignoring it (although reflection says false) DefaultNamingPolicy$$MixinByCGLIB$$4
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
[MASTER] 22:53:53.749 [logback-1] WARN  TestUsageChecker - class $java.lang.Class$$MixinByCGLIB$$3 looks like an anonymous class, ignoring it (although reflection says false) Class$$MixinByCGLIB$$3
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
[MASTER] 22:54:39.955 [logback-1] WARN  TestUsageChecker - class $java.lang.CharSequence$$MixinByCGLIB$$5_3 looks like an anonymous class, ignoring it (although reflection says false) CharSequence$$MixinByCGLIB$$5_3
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
[MASTER] 22:54:44.393 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.proxy.Mixin$Generator$$MixinByCGLIB$$3_5 looks like an anonymous class, ignoring it (although reflection says false) Mixin$Generator$$MixinByCGLIB$$3_5
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
[MASTER] 22:54:56.781 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.proxy.Mixin$Generator$$MixinByCGLIB$$3_6 looks like an anonymous class, ignoring it (although reflection says false) Mixin$Generator$$MixinByCGLIB$$3_6
[MASTER] 22:54:56.938 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.core.ClassGenerator$$MixinByCGLIB$$5_2 looks like an anonymous class, ignoring it (although reflection says false) ClassGenerator$$MixinByCGLIB$$5_2
[MASTER] 22:55:03.461 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.proxy.Mixin$Generator$$MixinByCGLIB$$4 looks like an anonymous class, ignoring it (although reflection says false) Mixin$Generator$$MixinByCGLIB$$4
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
[MASTER] 22:55:18.820 [logback-1] WARN  TestUsageChecker - class $java.lang.reflect.Type$$MixinByCGLIB$$5 looks like an anonymous class, ignoring it (although reflection says false) Type$$MixinByCGLIB$$5
[MASTER] 22:55:20.207 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.proxy.Mixin$Generator$$MixinByCGLIB$$2 looks like an anonymous class, ignoring it (although reflection says false) Mixin$Generator$$MixinByCGLIB$$2
[MASTER] 22:55:23.091 [logback-1] WARN  TestUsageChecker - class $java.lang.Object$$MixinByCGLIB$$2_13 looks like an anonymous class, ignoring it (although reflection says false) Object$$MixinByCGLIB$$2_13
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9130434782608695
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
* Search finished after 302s and 1177 generations, 799385 statements, best individual has fitness: 2.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 46
* Number of covered goals: 44
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
* Generated 13 tests with total length 62
* Resulting test suite's coverage: 96%
* Generating assertions
[MASTER] 22:56:24.911 [logback-1] WARN  TestUsageChecker - class $java.lang.reflect.Type$$MixinByCGLIB$$241 looks like an anonymous class, ignoring it (although reflection says false) Type$$MixinByCGLIB$$241
[MASTER] 22:56:25.210 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.proxy.Mixin$Generator$$MixinByCGLIB$$2_2 looks like an anonymous class, ignoring it (although reflection says false) Mixin$Generator$$MixinByCGLIB$$2_2
[MASTER] 22:56:25.421 [logback-1] WARN  TestUsageChecker - class org.mockito.cglib.proxy.Mixin$Generator$$MixinByCGLIB$$2_3 looks like an anonymous class, ignoring it (although reflection says false) Mixin$Generator$$MixinByCGLIB$$2_3
* Resulting test suite's mutation score: 43%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9565217391304348
* Compiling and checking tests
[MASTER] 22:56:34.081 [logback-1] WARN  ClassResetter - java.lang.reflect.InvocationTargetException, caused by: org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.reflect.InvocationTargetException-->null
org.mockito.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:238)
<evosuite>.<evosuite>(<evosuite>)
<evosuite>.<evosuite>(<evosuite>)

[MASTER] 22:56:46.643 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test00 -> class java.lang.NullPointerException: null
[MASTER] 22:56:46.644 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Mixin.Generator mixin_Generator0 = new Mixin.Generator();
Class<Integer> class0 = Integer.class;
Object[] objectArray0 = new Object[2];
objectArray0[0] = (Object) mixin_Generator0;
objectArray0[1] = (Object) class0;
mixin_Generator0.setDelegates(objectArray0);
mixin_Generator0.create();
Mixin mixin0 = mixin_Generator0.create();
assertEquals(1, Mixin.STYLE_BEANS);


[MASTER] 22:56:46.644 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test06 -> class java.lang.NullPointerException: null
[MASTER] 22:56:46.644 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Mixin.Generator mixin_Generator0 = new Mixin.Generator();
mixin_Generator0.setStyle(2);
Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 3);
mixin_Generator0.setClasses(classArray0);
mixin_Generator0.create();

[MASTER] 22:56:48.141 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test05 -> class java.lang.NullPointerException: null
[MASTER] 22:56:48.144 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Mixin.Generator mixin_Generator0 = new Mixin.Generator();
mixin_Generator0.setStyle(2);
Class<Integer> class0 = Integer.class;
Object[] objectArray0 = new Object[2];
objectArray0[0] = (Object) mixin_Generator0;
objectArray0[1] = (Object) class0;
mixin_Generator0.setDelegates(objectArray0);
mixin_Generator0.create();
Mixin mixin0 = mixin_Generator0.create();
assertEquals(0, Mixin.STYLE_INTERFACES);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'Mixin$Generator_ESTest' to results/evosuite5/mockito-31-org.mockito.cglib.proxy.Mixin$Generator-6
* Done!

* Computation finished
