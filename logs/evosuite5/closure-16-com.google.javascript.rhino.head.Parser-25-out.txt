entry: sources/closure-16/build/classes
entry: sources/closure-16/lib/args4j.jar
entry: sources/closure-16/lib/guava.jar
entry: sources/closure-16/lib/json.jar
entry: sources/closure-16/lib/jsr305.jar
entry: sources/closure-16/lib/protobuf-java.jar
entry: sources/closure-16/build/lib/rhino.jar
entry: sources/closure-16/lib/ant.jar
** CP: sources/closure-16/build/classes:sources/closure-16/lib/args4j.jar:sources/closure-16/lib/guava.jar:sources/closure-16/lib/json.jar:sources/closure-16/lib/jsr305.jar:sources/closure-16/lib/protobuf-java.jar:sources/closure-16/build/lib/rhino.jar:sources/closure-16/lib/ant.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: com.google.javascript.rhino.head.Parser
* Starting Client-0
* Connecting to master process on port 10047
* Analyzing classpath: 
  - sources/closure-16/build/classes
  - sources/closure-16/lib/args4j.jar
  - sources/closure-16/lib/guava.jar
  - sources/closure-16/lib/json.jar
  - sources/closure-16/lib/jsr305.jar
  - sources/closure-16/lib/protobuf-java.jar
  - sources/closure-16/build/lib/rhino.jar
  - sources/closure-16/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.head.Parser
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 1289
* Using seed 1566104149727
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 597 / 1289
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.17765709852598913
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.22110162916989914
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3048875096974399
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.33747090768037236
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3716058960434445
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.38634600465477115
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.39798293250581845
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4189294026377037
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4367726920093095
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.44608223429014743
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.45228859581070596
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4778898370830101
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4887509697439876
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4895267649340574
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4903025601241272
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4903025601241272
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5003878975950349
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5081458494957332
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5228859581070597
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5252133436772692
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.525989138867339
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5267649340574089
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5329712955779674
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.543832428238945
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5461598138091543
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.547711404189294
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5515903801396431
[MASTER] 07:01:06.888 [logback-1] WARN  ExecutionTrace - Popping method parse(Ljava/lang/String;Ljava/lang/String;I)Lcom/google/javascript/rhino/head/ast/AstRoot; because we were looking for <init>()V
[MASTER] 07:01:06.888 [logback-1] WARN  ExecutionTrace - Current stack: [com.google.javascript.rhino.head.Parser:parse(Ljava/lang/String;Ljava/lang/String;I)Lcom/google/javascript/rhino/head/ast/AstRoot;
Branches:  35 36
True Distances:  0.0 0.0
False Distances:  1.0 1.0
, :
Branches: 
True Distances: 
False Distances: 
]
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5539177657098526
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5632273079906904
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5632273079906904
* Search finished after 303s and 306 generations, 136113 statements, best individual has fitness: 563.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5632273079906904
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 56%
* Total number of goals: 1289
* Number of covered goals: 722
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5632273079906904
* Generated 102 tests with total length 366
* Resulting test suite's coverage: 56%
* Generating assertions
[MASTER] 07:02:32.334 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7007833333333333% of time used, but only 13/102 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 1%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5632273079906904
* Compiling and checking tests
[MASTER] 07:03:11.260 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 07:03:11.261 [logback-1] WARN  JUnitAnalyzer - Failing test:
 CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
assertFalse(compilerEnvirons0.getAllowSharpComments());
assertTrue(compilerEnvirons0.isReservedKeywordAsIdentifier());
assertFalse(compilerEnvirons0.isStrictMode());
assertFalse(compilerEnvirons0.isIdeMode());
assertEquals(0, compilerEnvirons0.getLanguageVersion());
assertTrue(compilerEnvirons0.isXmlAvailable());
assertFalse(compilerEnvirons0.isGenerateObserverCount());
assertTrue(compilerEnvirons0.isGeneratingSource());
assertFalse(compilerEnvirons0.isAllowMemberExprAsFunctionName());
assertFalse(compilerEnvirons0.getWarnTrailingComma());
assertFalse(compilerEnvirons0.reportWarningAsError());
assertEquals(0, compilerEnvirons0.getOptimizationLevel());
assertFalse(compilerEnvirons0.isRecordingLocalJsDocComments());
assertTrue(compilerEnvirons0.isGenerateDebugInfo());
assertFalse(compilerEnvirons0.recoverFromErrors());
assertFalse(compilerEnvirons0.isRecordingComments());
assertNotNull(compilerEnvirons0);

Context context0 = Context.getCurrentContext();
assertNull(context0);

compilerEnvirons0.initFromContext(context0);
Parser parser0 = new Parser(compilerEnvirons0);
parser0.parse("@?hbv~g+ +KEe", "@", 7);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'Parser_ESTest' to results/evosuite5/closure-16-com.google.javascript.rhino.head.Parser-25
* Done!

* Computation finished
