entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.asm.MethodWriter
* Starting Client-0
* Connecting to master process on port 11655
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.asm.MethodWriter
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 838
* Using seed 1566334670346
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 120 / 838
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.027446300715990454
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.06443914081145585
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3353221957040573
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.38663484486873506
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4224343675417661
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4295942720763723
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4403341288782816
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4498806682577566
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.46420047732696895
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.46420047732696895
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4677804295942721
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.47255369928400953
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.48687350835322196
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4880668257756563
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5035799522673031
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5083532219570406
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5346062052505967
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.535799522673031
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5477326968973747
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.548926014319809
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.548926014319809
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5501193317422435
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5513126491646778
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5620525059665871
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5644391408114559
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5644391408114559
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5644391408114559
* Search finished after 302s and 603 generations, 441948 statements, best individual has fitness: 365.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5644391408114559
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 57%
* Total number of goals: 838
* Number of covered goals: 474
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5644391408114559
* Generated 110 tests with total length 560
* Resulting test suite's coverage: 56%
* Generating assertions
* Resulting test suite's mutation score: 9%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5644391408114559
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'MethodWriter_ESTest' to results/evosuite5/mockito-31-org.mockito.asm.MethodWriter-2
* Done!

* Computation finished
