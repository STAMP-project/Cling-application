entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.asm.tree.analysis.BasicVerifier
* Starting Client-0
* Connecting to master process on port 2367
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.asm.tree.analysis.BasicVerifier
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 591
* Using seed 1566334292583
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 569 / 591
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.47377326565143824
[MASTER] 22:51:59.428 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.mockito.asm.MethodAdapter canUseFunctionalMocks=false, canBeMocked: true
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.494077834179357
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5871404399323181
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6835871404399323
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7698815566835872
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8189509306260575
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8544839255499154
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9052453468697124
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.922165820642978
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9390862944162437
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.949238578680203
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9627749576988156
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9729272419627749
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9864636209813875
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9864636209813875
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9915397631133672
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
* Search finished after 302s and 1988 generations, 616606 statements, best individual has fitness: 4.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 591
* Number of covered goals: 587
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9932318104906938
* Generated 284 tests with total length 1146
* Resulting test suite* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing tests to file
* Writing JUnit test case 'BasicVerifier_ESTest' to results/evosuite5/mockito-31-org.mockito.asm.* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'BasicVerifier_ESTest' to results/evosuite5/mockito-31-org.mockito.asm.tree.analysis.BasicVerifier-7
* Done!

* Computation finished
