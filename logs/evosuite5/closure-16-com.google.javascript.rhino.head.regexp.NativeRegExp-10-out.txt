entry: sources/closure-16/build/classes
entry: sources/closure-16/lib/args4j.jar
entry: sources/closure-16/lib/guava.jar
entry: sources/closure-16/lib/json.jar
entry: sources/closure-16/lib/jsr305.jar
entry: sources/closure-16/lib/protobuf-java.jar
entry: sources/closure-16/build/lib/rhino.jar
entry: sources/closure-16/lib/ant.jar
** CP: sources/closure-16/build/classes:sources/closure-16/lib/args4j.jar:sources/closure-16/lib/guava.jar:sources/closure-16/lib/json.jar:sources/closure-16/lib/jsr305.jar:sources/closure-16/lib/protobuf-java.jar:sources/closure-16/build/lib/rhino.jar:sources/closure-16/lib/ant.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: com.google.javascript.rhino.head.regexp.NativeRegExp
* Starting Client-0
* Connecting to master process on port 8420
* Analyzing classpath: 
  - sources/closure-16/build/classes
  - sources/closure-16/lib/args4j.jar
  - sources/closure-16/lib/guava.jar
  - sources/closure-16/lib/json.jar
  - sources/closure-16/lib/jsr305.jar
  - sources/closure-16/lib/protobuf-java.jar
  - sources/closure-16/build/lib/rhino.jar
  - sources/closure-16/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.head.regexp.NativeRegExp
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 1450
* Using seed 1566340007691
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 382 / 1450
[MASTER] 00:27:30.240 [logback-1] WARN  TestUsageChecker - class com.google.javascript.rhino.head.ContextFactory$1GlobalSetterImpl looks like an anonymous class, ignoring it (although reflection says false) GlobalSetterImpl
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.0993103448275862
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.13655172413793104
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.14482758620689656
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.1503448275862069
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.1579310344827586
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.22551724137931034
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.28551724137931034
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.28758620689655173
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2889655172413793
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.29310344827586204
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2986206896551724
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.30344827586206896
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.30344827586206896
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.30344827586206896
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.30344827586206896
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.30551724137931036
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.30689655172413793
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3117241379310345
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3124137931034483
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31655172413793103
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31724137931034485
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31724137931034485
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31724137931034485
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31724137931034485
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31724137931034485
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31724137931034485
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31724137931034485
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31724137931034485
* Search finished after 304s and 248 generations, 79261 statements, best individual has fitness: 990.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31724137931034485
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 26%
* Total number of goals: 1450
* Number of covered goals: 374
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31724137931034485
* Generated 53 tests with total length 153
* Resulting test suite's coverage: 32%
* Generating assertions
[MASTER] 00:33:43.056 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.68855% of time used, but only 15/53 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 1%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31724137931034485
* Compiling and checking tests
[MASTER] 00:34:38.252 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 00:34:38.252 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NativeRegExp nativeRegExp0 = new NativeRegExp();
Context context0 = Context.getCurrentContext();
ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
nativeRegExp0.compile(context0, importerTopLevel0, context0.emptyArgs);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'NativeRegExp_ESTest' to results/evosuite5/closure-16-com.google.javascript.rhino.head.regexp.NativeRegExp-10
* Done!

* Computation finished
