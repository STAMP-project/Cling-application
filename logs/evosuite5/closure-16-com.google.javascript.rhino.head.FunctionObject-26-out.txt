entry: sources/closure-16/build/classes
entry: sources/closure-16/lib/args4j.jar
entry: sources/closure-16/lib/guava.jar
entry: sources/closure-16/lib/json.jar
entry: sources/closure-16/lib/jsr305.jar
entry: sources/closure-16/lib/protobuf-java.jar
entry: sources/closure-16/build/lib/rhino.jar
entry: sources/closure-16/lib/ant.jar
** CP: sources/closure-16/build/classes:sources/closure-16/lib/args4j.jar:sources/closure-16/lib/guava.jar:sources/closure-16/lib/json.jar:sources/closure-16/lib/jsr305.jar:sources/closure-16/lib/protobuf-java.jar:sources/closure-16/build/lib/rhino.jar:sources/closure-16/lib/ant.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: com.google.javascript.rhino.head.FunctionObject
* Starting Client-0
* Connecting to master process on port 20894
* Analyzing classpath: 
  - sources/closure-16/build/classes
  - sources/closure-16/lib/args4j.jar
  - sources/closure-16/lib/guava.jar
  - sources/closure-16/lib/json.jar
  - sources/closure-16/lib/jsr305.jar
  - sources/closure-16/lib/protobuf-java.jar
  - sources/closure-16/build/lib/rhino.jar
  - sources/closure-16/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.head.FunctionObject
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 183
* Using seed 1566102257657
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 59 / 183
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.22404371584699453
[MASTER] 06:24:46.268 [logback-1] WARN  TestUsageChecker - class com.google.javascript.rhino.head.ContextFactory$1GlobalSetterImpl looks like an anonymous class, ignoring it (although reflection says false) GlobalSetterImpl
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31693989071038253
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.47540983606557374
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5901639344262295
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5901639344262295
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6721311475409836
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6775956284153005
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6775956284153005
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6885245901639344
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6885245901639344
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6885245901639344
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
* Search finished after 302s and 611 generations, 197317 statements, best individual has fitness: 56.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 68%
* Total number of goals: 183
* Number of covered goals: 124
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
* Generated 31 tests with total length 142
* Resulting test suite's coverage: 69%
* Generating assertions
* Resulting test suite's mutation score: 34%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6939890710382514
* Compiling and checking tests
[MASTER] 06:30:43.567 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.google.javascript.rhino.head.DefaultErrorReporter but in com.google.javascript.rhino.head.Context.reportRuntimeError(Context.java:947): org.evosuite.runtime.mock.java.lang.MockThrowable: Unsupported parameter type "java.lang.Class" in method "com.google.javascript.rhino.head.NativeJavaClass".
[MASTER] 06:30:43.567 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BaseFunction baseFunction0 = new BaseFunction();
Class<NativeJavaClass> class0 = NativeJavaClass.class;
ScriptableObject.defineClass((Scriptable) baseFunction0, class0);

[MASTER] 06:31:05.744 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 06:31:05.744 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Context context0 = Context.getContext();
ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0, false);
FunctionObject.convertArg(context0, (Scriptable) importerTopLevel0, (Object) context0, 110);

[MASTER] 06:31:09.069 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 06:31:09.070 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Class<Integer> class0 = Integer.class;
Method[] methodArray0 = FunctionObject.getMethodList(class0);
BaseFunction baseFunction0 = new BaseFunction();
Method method0 = FunctionObject.findSingleMethod(methodArray0, "compare");
assertNotNull(method0);

FunctionObject functionObject0 = new FunctionObject("public static int java.lang.Integer.compare(int,int)", method0, baseFunction0);
Context context0 = new Context();
functionObject0.call(context0, baseFunction0, baseFunction0, methodArray0);
assertEquals(48, methodArray0.length);
assertEquals("public static int java.lang.Integer.compare(int,int)", functionObject0.getFunctionName());


[MASTER] 06:31:11.604 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 06:31:11.605 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Context context0 = Context.getCurrentContext();
ImporterTopLevel importerTopLevel0 = new ImporterTopLevel(context0);
Object object0 = FunctionObject.convertArg(context0, (Scriptable) importerTopLevel0, (Object) importerTopLevel0, 3);
assertEquals(true, object0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'FunctionObject_ESTest' to results/evosuite5/closure-16-com.google.javascript.rhino.head.FunctionObject-26
* Done!

* Computation finished
