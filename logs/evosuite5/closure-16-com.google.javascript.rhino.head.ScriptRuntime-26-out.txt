entry: sources/closure-16/build/classes
entry: sources/closure-16/lib/args4j.jar
entry: sources/closure-16/lib/guava.jar
entry: sources/closure-16/lib/json.jar
entry: sources/closure-16/lib/jsr305.jar
entry: sources/closure-16/lib/protobuf-java.jar
entry: sources/closure-16/build/lib/rhino.jar
entry: sources/closure-16/lib/ant.jar
** CP: sources/closure-16/build/classes:sources/closure-16/lib/args4j.jar:sources/closure-16/lib/guava.jar:sources/closure-16/lib/json.jar:sources/closure-16/lib/jsr305.jar:sources/closure-16/lib/protobuf-java.jar:sources/closure-16/build/lib/rhino.jar:sources/closure-16/lib/ant.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: com.google.javascript.rhino.head.ScriptRuntime
* Starting Client-0
* Connecting to master process on port 14050
* Analyzing classpath: 
  - sources/closure-16/build/classes
  - sources/closure-16/lib/args4j.jar
  - sources/closure-16/lib/guava.jar
  - sources/closure-16/lib/json.jar
  - sources/closure-16/lib/jsr305.jar
  - sources/closure-16/lib/protobuf-java.jar
  - sources/closure-16/build/lib/rhino.jar
  - sources/closure-16/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.head.ScriptRuntime
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 1430
* Using seed 1566117225398
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 432 / 1430
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.0937062937062937
[MASTER] 10:34:17.013 [logback-1] WARN  TestUsageChecker - class com.google.javascript.rhino.head.ContextFactory$1GlobalSetterImpl looks like an anonymous class, ignoring it (although reflection says false) GlobalSetterImpl
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.1811188811188811
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.25244755244755246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3090909090909091
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.35664335664335667
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4132867132867133
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4489510489510489
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.45454545454545453
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5083916083916084
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5237762237762238
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5412587412587413
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5594405594405595
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5804195804195804
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5916083916083916
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5944055944055944
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6027972027972028
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6097902097902098
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6153846153846154
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6237762237762238
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6321678321678321
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6559440559440559
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6650349650349651
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6671328671328671
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6741258741258741
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6818181818181818
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6832167832167833
* Search finished after 304s and 254 generations, 90225 statements, best individual has fitness: 453.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6832167832167833
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 1430
* Number of covered goals: 929
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6832167832167833
* Generated 312 tests with total length 880
* Resulting test suite's coverage: 68%
* Generating assertions
[MASTER] 10:40:51.233 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6677666666666666% of time used, but only 99/312 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 12%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6832167832167833
* Compiling and checking tests
[MASTER] 10:41:53.679 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 10:41:53.679 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Context context0 = Context.getContext();
BaseFunction baseFunction0 = ScriptRuntime.typeErrorThrower();
BoundFunction boundFunction0 = new BoundFunction(context0, baseFunction0, baseFunction0, baseFunction0, context0.emptyArgs);

[MASTER] 10:41:57.881 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 10:41:57.881 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Context context0 = Context.getContext();
BaseFunction baseFunction0 = ScriptRuntime.typeErrorThrower();
Class<BaseFunction> class0 = BaseFunction.class;
Scriptable scriptable0 = ScriptRuntime.toObject(context0, (Scriptable) baseFunction0, (Object) context0.generateObserverCount, (Class<?>) class0);
NativeJavaClass nativeJavaClass0 = new NativeJavaClass();
Object object0 = ScriptRuntime.setObjectIndex(scriptable0, 140, (Object) nativeJavaClass0, context0);
assertSame(nativeJavaClass0, object0);


[MASTER] 10:41:59.021 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 10:41:59.022 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Context context0 = Context.getContext();
RegExpProxy regExpProxy0 = ScriptRuntime.checkRegExpProxy(context0);
assertNotNull(regExpProxy0);


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 4
* Writing tests to file
* Writing JUnit test case 'ScriptRuntime_ESTest' to results/evosuite5/closure-16-com.google.javascript.rhino.head.ScriptRuntime-26
* Done!

* Computation finished
