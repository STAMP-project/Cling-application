entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.asm.MethodWriter
* Starting Client-0
* Connecting to master process on port 17482
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.asm.MethodWriter
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 838
* Using seed 1566401905439
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 120 / 838
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.06324582338902147
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.23747016706443913
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2971360381861575
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31145584725536996
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.31861575178997614
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3711217183770883
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4331742243436754
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.46420047732696895
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.47494033412887826
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.48448687350835323
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4892601431980907
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49761336515513127
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5071599045346062
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5202863961813843
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.522673031026253
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5250596658711217
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5250596658711217
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5286396181384249
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5286396181384249
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5286396181384249
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5513126491646778
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5513126491646778
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5525059665871122
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5560859188544153
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5560859188544153
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5572792362768496
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5572792362768496
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5584725536992841
* Search finished after 303s and 580 generations, 423829 statements, best individual has fitness: 370.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5584725536992841
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 56%
* Total number of goals: 838
* Number of covered goals: 468
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5584725536992841
* Generated 105 tests with total length 543
* Resulting test suite's coverage: 56%
* Generating assertions
* Resulting test suite's mutation score: 6%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5584725536992841
* Compiling and checking tests
[MASTER] 17:44:41.915 [logback-1] WARN  JUnitAnalyzer - Failed to create tmp dir
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 6
* Writing tests to file
* Writing JUnit test case 'MethodWriter_ESTest' to results/evosuite5/mockito-31-org.mockito.asm.MethodWriter-11
* Done!

* Computation finished
