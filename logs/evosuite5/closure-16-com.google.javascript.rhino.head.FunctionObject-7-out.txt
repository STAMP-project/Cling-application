entry: sources/closure-16/build/classes
entry: sources/closure-16/lib/args4j.jar
entry: sources/closure-16/lib/guava.jar
entry: sources/closure-16/lib/json.jar
entry: sources/closure-16/lib/jsr305.jar
entry: sources/closure-16/lib/protobuf-java.jar
entry: sources/closure-16/build/lib/rhino.jar
entry: sources/closure-16/lib/ant.jar
** CP: sources/closure-16/build/classes:sources/closure-16/lib/args4j.jar:sources/closure-16/lib/guava.jar:sources/closure-16/lib/json.jar:sources/closure-16/lib/jsr305.jar:sources/closure-16/lib/protobuf-java.jar:sources/closure-16/build/lib/rhino.jar:sources/closure-16/lib/ant.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: com.google.javascript.rhino.head.FunctionObject
* Starting Client-0
* Connecting to master process on port 7506
* Analyzing classpath: 
  - sources/closure-16/build/classes
  - sources/closure-16/lib/args4j.jar
  - sources/closure-16/lib/guava.jar
  - sources/closure-16/lib/json.jar
  - sources/closure-16/lib/jsr305.jar
  - sources/closure-16/lib/protobuf-java.jar
  - sources/closure-16/build/lib/rhino.jar
  - sources/closure-16/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.head.FunctionObject
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 183
* Using seed 1564035964594
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 59 / 183
[MASTER] 08:26:32.920 [logback-1] WARN  TestUsageChecker - class com.google.javascript.rhino.head.ContextFactory$1GlobalSetterImpl looks like an anonymous class, ignoring it (although reflection says false) GlobalSetterImpl
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.20218579234972678
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.41530054644808745
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.44808743169398907
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.453551912568306
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4644808743169399
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.46994535519125685
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.46994535519125685
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.46994535519125685
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.47540983606557374
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.47540983606557374
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.48633879781420764
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.48633879781420764
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.48633879781420764
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.48633879781420764
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.48633879781420764
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.48633879781420764
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6010928961748634
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.639344262295082
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6612021857923497
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6612021857923497
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6612021857923497
* Search finished after 302s and 272 generations, 63737 statements, best individual has fitness: 62.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6612021857923497
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 66%
* Total number of goals: 183
* Number of covered goals: 121
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6612021857923497
* Generated 30 tests with total length 149
* Resulting test suite's coverage: 66%
* Generating assertions
* Resulting test suite's mutation score: 35%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6612021857923497
* Compiling and checking tests
[MASTER] 08:32:23.854 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<13> but was:<14>
[MASTER] 08:32:23.855 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Class<NativeJavaArray> class0 = NativeJavaArray.class;
Method[] methodArray0 = FunctionObject.getMethodList(class0);
Method method0 = FunctionObject.findSingleMethod(methodArray0, "getClassName");
assertNotNull(method0);

NativeError nativeError0 = new NativeError();
FunctionObject functionObject0 = new FunctionObject("getClassName", method0, nativeError0);
int int0 = functionObject0.getLength();
assertEquals(0, int0);
assertEquals(13, methodArray0.length);


[MASTER] 08:32:38.834 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Exception was not thrown in com.google.javascript.rhino.head.DefaultErrorReporter but in com.google.javascript.rhino.head.Context.reportRuntimeError(Context.java:947): org.evosuite.runtime.mock.java.lang.MockThrowable: Unsupported parameter type "com.google.javascript.rhino.head.Context" in method "call".
[MASTER] 08:32:38.834 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BaseFunction baseFunction0 = new BaseFunction();
Class<NativeContinuation> class0 = NativeContinuation.class;
Method[] methodArray0 = FunctionObject.getMethodList(class0);
Method method0 = FunctionObject.findSingleMethod(methodArray0, "call");
FunctionObject functionObject0 = new FunctionObject("", method0, baseFunction0);

[MASTER] 08:32:44.206 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class org.evosuite.runtime.mock.java.lang.MockRuntimeException: No Context associated with current Thread
[MASTER] 08:32:44.207 [logback-1] WARN  JUnitAnalyzer - Failing test:
 NativeCall nativeCall0 = new NativeCall();
Context context0 = Context.getContext();
Class<Double> class0 = Double.class;
FunctionObject.convertArg(context0, (Scriptable) nativeCall0, (Object) nativeCall0, (Class<?>) class0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'FunctionObject_ESTest' to results/evosuite5/closure-16-com.google.javascript.rhino.head.FunctionObject-7
* Done!

* Computation finished
