entry: sources/mockito-31/target/classes
entry: defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
entry: defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
entry: defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
entry: defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
entry: defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
entry: defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
** CP: sources/mockito-31/target/classes:defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.mockito.asm.MethodWriter
* Starting Client-0
* Connecting to master process on port 17111
* Analyzing classpath: 
  - sources/mockito-31/target/classes
  - defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar
  - defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar
  - defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar
  - defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar
  - defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar
  - defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar
  - defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar
  - defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar
* Finished analyzing classpath
* Generating tests for class org.mockito.asm.MethodWriter
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 838
* Using seed 1566402233670
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 120 / 838
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.034606205250596656
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.2840095465393795
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3639618138424821
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4009546539379475
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4331742243436754
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4713603818615752
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4809069212410501
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.49522673031026254
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5047732696897375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5047732696897375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5047732696897375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5071599045346062
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5178997613365155
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5274463007159904
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5286396181384249
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5286396181384249
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5286396181384249
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5298329355608592
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5298329355608592
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.545346062052506
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5477326968973747
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5477326968973747
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5501193317422435
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5560859188544153
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5763723150357996
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5906921241050119
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5918854415274463
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5918854415274463
* Search finished after 306s and 467 generations, 344655 statements, best individual has fitness: 342.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5918854415274463
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 59%
* Total number of goals: 838
* Number of covered goals: 496
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5918854415274463
* Generated 110 tests with total length 495
* Resulting test suite's coverage: 59%
* Generating assertions
[MASTER] 17:50:04.735 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.67065% of time used, but only 38/110 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 3%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5918854415274463
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing tests to file
* Writing JUnit test case 'MethodWriter_ESTest' to results/evosuite5/mockito-31-org.mockito.asm.MethodWriter-19
* Done!

* Computation finished
