entry: sources/closure-16/build/classes
entry: sources/closure-16/lib/args4j.jar
entry: sources/closure-16/lib/guava.jar
entry: sources/closure-16/lib/json.jar
entry: sources/closure-16/lib/jsr305.jar
entry: sources/closure-16/lib/protobuf-java.jar
entry: sources/closure-16/build/lib/rhino.jar
entry: sources/closure-16/lib/ant.jar
** CP: sources/closure-16/build/classes:sources/closure-16/lib/args4j.jar:sources/closure-16/lib/guava.jar:sources/closure-16/lib/json.jar:sources/closure-16/lib/jsr305.jar:sources/closure-16/lib/protobuf-java.jar:sources/closure-16/build/lib/rhino.jar:sources/closure-16/lib/ant.jar
* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: com.google.javascript.rhino.Node
* Starting Client-0
* Connecting to master process on port 2704
* Analyzing classpath: 
  - sources/closure-16/build/classes
  - sources/closure-16/lib/args4j.jar
  - sources/closure-16/lib/guava.jar
  - sources/closure-16/lib/json.jar
  - sources/closure-16/lib/jsr305.jar
  - sources/closure-16/lib/protobuf-java.jar
  - sources/closure-16/build/lib/rhino.jar
  - sources/closure-16/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.Node
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 724
* Using seed 1566106891777
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 570 / 724
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.23204419889502761
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5303867403314917
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6574585635359116
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6961325966850829
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.712707182320442
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7334254143646409
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7458563535911602
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7569060773480663
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7707182320441989
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7817679558011049
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8011049723756906
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8107734806629834
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.819060773480663
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8328729281767956
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8397790055248618
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8466850828729282
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8604972375690608
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8687845303867403
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8743093922651933
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8798342541436464
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8867403314917127
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.888121546961326
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.893646408839779
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8950276243093923
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.899171270718232
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9005524861878453
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9088397790055248
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9102209944751382
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9116022099447514
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.914364640883978
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9157458563535912
* Search finished after 302s and 704 generations, 293658 statements, best individual has fitness: 61.0
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9157458563535912
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 724
* Number of covered goals: 662
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9157458563535912
* Generated 318 tests with total length 851
* Resulting test suite's coverage: 92%
* Generating assertions
[MASTER] 07:47:36.263 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.67725% of time used, but only 50/318 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 11%
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9157458563535912
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 5
* Writing tests to file
* Writing JUnit test case 'Node_ESTest' to results/evosuite5/closure-16-com.google.javascript.rhino.Node-30
* Done!

* Computation finished
